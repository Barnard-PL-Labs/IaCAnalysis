Resources:
  AppVPCB7733741:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/Resource
  AppVPCLoadBalancerSubnet1SubnetF4005469:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/19
      VpcId:
        Ref: AppVPCB7733741
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: LoadBalancer
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1/Subnet
  AppVPCLoadBalancerSubnet1RouteTable064DFCE3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVPCB7733741
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1/RouteTable
  AppVPCLoadBalancerSubnet1RouteTableAssociation5182FB59:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVPCLoadBalancerSubnet1RouteTable064DFCE3
      SubnetId:
        Ref: AppVPCLoadBalancerSubnet1SubnetF4005469
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1/RouteTableAssociation
  AppVPCLoadBalancerSubnet1DefaultRouteB9F6D6FD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVPCLoadBalancerSubnet1RouteTable064DFCE3
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: AppVPCIGW7D765419
    DependsOn:
      - AppVPCVPCGW31CBD692
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1/DefaultRoute
  AppVPCLoadBalancerSubnet1EIPC01DB6D4:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1/EIP
  AppVPCLoadBalancerSubnet1NATGatewayAC9E6E28:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: AppVPCLoadBalancerSubnet1SubnetF4005469
      AllocationId:
        Fn::GetAtt:
          - AppVPCLoadBalancerSubnet1EIPC01DB6D4
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet1/NATGateway
  AppVPCLoadBalancerSubnet2Subnet1A6C83EE:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.32.0/19
      VpcId:
        Ref: AppVPCB7733741
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: LoadBalancer
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2/Subnet
  AppVPCLoadBalancerSubnet2RouteTableF29877E9:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVPCB7733741
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2/RouteTable
  AppVPCLoadBalancerSubnet2RouteTableAssociationD9DC4009:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVPCLoadBalancerSubnet2RouteTableF29877E9
      SubnetId:
        Ref: AppVPCLoadBalancerSubnet2Subnet1A6C83EE
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2/RouteTableAssociation
  AppVPCLoadBalancerSubnet2DefaultRoute7497D1A2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVPCLoadBalancerSubnet2RouteTableF29877E9
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: AppVPCIGW7D765419
    DependsOn:
      - AppVPCVPCGW31CBD692
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2/DefaultRoute
  AppVPCLoadBalancerSubnet2EIP479DBF1E:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2/EIP
  AppVPCLoadBalancerSubnet2NATGatewayBE7B9C76:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: AppVPCLoadBalancerSubnet2Subnet1A6C83EE
      AllocationId:
        Fn::GetAtt:
          - AppVPCLoadBalancerSubnet2EIP479DBF1E
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/LoadBalancerSubnet2/NATGateway
  AppVPCAppSubnet1SubnetBA034869:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/19
      VpcId:
        Ref: AppVPCB7733741
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: App
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/AppSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet1/Subnet
  AppVPCAppSubnet1RouteTable8FE7D223:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVPCB7733741
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/AppSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet1/RouteTable
  AppVPCAppSubnet1RouteTableAssociationC8B3DE2B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVPCAppSubnet1RouteTable8FE7D223
      SubnetId:
        Ref: AppVPCAppSubnet1SubnetBA034869
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet1/RouteTableAssociation
  AppVPCAppSubnet1DefaultRouteFB46754D:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVPCAppSubnet1RouteTable8FE7D223
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: AppVPCLoadBalancerSubnet1NATGatewayAC9E6E28
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet1/DefaultRoute
  AppVPCAppSubnet2Subnet7C2AD507:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.96.0/19
      VpcId:
        Ref: AppVPCB7733741
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: App
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/AppSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet2/Subnet
  AppVPCAppSubnet2RouteTable4328BC0E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVPCB7733741
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/AppSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet2/RouteTable
  AppVPCAppSubnet2RouteTableAssociationD2DBEFE8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVPCAppSubnet2RouteTable4328BC0E
      SubnetId:
        Ref: AppVPCAppSubnet2Subnet7C2AD507
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet2/RouteTableAssociation
  AppVPCAppSubnet2DefaultRoute4031BDB5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppVPCAppSubnet2RouteTable4328BC0E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: AppVPCLoadBalancerSubnet2NATGatewayBE7B9C76
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/AppSubnet2/DefaultRoute
  AppVPCDatabaseSubnet1SubnetEBA5D8AE:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/19
      VpcId:
        Ref: AppVPCB7733741
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Database
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/DatabaseSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/DatabaseSubnet1/Subnet
  AppVPCDatabaseSubnet1RouteTableA3459047:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVPCB7733741
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/DatabaseSubnet1
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/DatabaseSubnet1/RouteTable
  AppVPCDatabaseSubnet1RouteTableAssociationFE55B5E1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVPCDatabaseSubnet1RouteTableA3459047
      SubnetId:
        Ref: AppVPCDatabaseSubnet1SubnetEBA5D8AE
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/DatabaseSubnet1/RouteTableAssociation
  AppVPCDatabaseSubnet2SubnetACB193F8:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.160.0/19
      VpcId:
        Ref: AppVPCB7733741
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Database
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/DatabaseSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/DatabaseSubnet2/Subnet
  AppVPCDatabaseSubnet2RouteTable9D763F0B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: AppVPCB7733741
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC/DatabaseSubnet2
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/DatabaseSubnet2/RouteTable
  AppVPCDatabaseSubnet2RouteTableAssociation68A49EB0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AppVPCDatabaseSubnet2RouteTable9D763F0B
      SubnetId:
        Ref: AppVPCDatabaseSubnet2SubnetACB193F8
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/DatabaseSubnet2/RouteTableAssociation
  AppVPCIGW7D765419:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkThreeTierStack/AppVPC
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/IGW
  AppVPCVPCGW31CBD692:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: AppVPCB7733741
      InternetGatewayId:
        Ref: AppVPCIGW7D765419
    Metadata:
      aws:cdk:path: CdkThreeTierStack/AppVPC/VPCGW
  RDSSecurityGroup6BF2CF10:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkThreeTierStack/RDSSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 10.0.64.0/19
          Description: from 10.0.64.0/19:ALL PORTS
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
        - CidrIp: 10.0.96.0/19
          Description: from 10.0.96.0/19:ALL PORTS
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      SecurityGroupIngress:
        - CidrIp: 10.0.64.0/19
          Description: 10.0.64.0/19:3306
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
        - CidrIp: 10.0.96.0/19
          Description: 10.0.96.0/19:3306
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
      VpcId:
        Ref: AppVPCB7733741
    Metadata:
      aws:cdk:path: CdkThreeTierStack/RDSSecurityGroup/Resource
  EC2SecurityGroup05DEE054:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkThreeTierStack/EC2SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 10.0.0.0/19
          Description: from 10.0.0.0/19:3306
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
        - CidrIp: 10.0.32.0/19
          Description: from 10.0.32.0/19:3306
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/19
          Description: 10.0.0.0/19:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 10.0.32.0/19
          Description: 10.0.32.0/19:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: AppVPCB7733741
    Metadata:
      aws:cdk:path: CdkThreeTierStack/EC2SecurityGroup/Resource
  ALBSecurityGroup29A3BDEF:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkThreeTierStack/ALBSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 10.0.64.0/19
          Description: 10.0.64.0/19:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 10.0.96.0/19
          Description: 10.0.96.0/19:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: to 0.0.0.0/0:443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Ref: AppVPCB7733741
    Metadata:
      aws:cdk:path: CdkThreeTierStack/ALBSecurityGroup/Resource
  MyRDSClusterSubnets5B64FB1B:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for MyRDSCluster database
      SubnetIds:
        - Ref: AppVPCDatabaseSubnet1SubnetEBA5D8AE
        - Ref: AppVPCDatabaseSubnet2SubnetACB193F8
    Metadata:
      aws:cdk:path: CdkThreeTierStack/MyRDSCluster/Subnets/Default
  MyRDSClusterSecret74D97AEA:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    Metadata:
      aws:cdk:path: CdkThreeTierStack/MyRDSCluster/Secret/Resource
  MyRDSClusterSecretAttachment6AF7556A:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: MyRDSClusterSecret74D97AEA
      TargetId:
        Ref: MyRDSClusterDA407818
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: CdkThreeTierStack/MyRDSCluster/Secret/Attachment/Resource
  MyRDSClusterDA407818:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora
      CopyTagsToSnapshot: true
      DatabaseName: MyRDSDb
      DBSubnetGroupName:
        Ref: MyRDSClusterSubnets5B64FB1B
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: MyRDSClusterSecret74D97AEA
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: MyRDSClusterSecret74D97AEA
            - :SecretString:password::}}
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - RDSSecurityGroup6BF2CF10
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: CdkThreeTierStack/MyRDSCluster/Resource
  MyRDSClusterInstance1559A469D:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.small
      DBClusterIdentifier:
        Ref: MyRDSClusterDA407818
      DBSubnetGroupName:
        Ref: MyRDSClusterSubnets5B64FB1B
      Engine: aurora
      PubliclyAccessible: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkThreeTierStack/MyRDSCluster/Instance1
  MyRDSClusterInstance22F9EE2BE:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.small
      DBClusterIdentifier:
        Ref: MyRDSClusterDA407818
      DBSubnetGroupName:
        Ref: MyRDSClusterSubnets5B64FB1B
      Engine: aurora
      PubliclyAccessible: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkThreeTierStack/MyRDSCluster/Instance2
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ALBSecurityGroup29A3BDEF
            - GroupId
      Subnets:
        - Ref: AppVPCLoadBalancerSubnet1SubnetF4005469
        - Ref: AppVPCLoadBalancerSubnet2Subnet1A6C83EE
    Metadata:
      aws:cdk:path: CdkThreeTierStack/LoadBalancer
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11RwW7CMAz9Fu4hrD3tOCgTqjRNFSDubmpYoCTIdkCo6r8vbQdFO9l5fu/5JUl0kqb6bfIBN56a6jRrjCfUzUbAnNQa2QcyqDLvWCgYUdnejejexUFlxXrXqs6hQZPqZncx3WxXZKoIZW3NJpQOe+3YrX0Q3EJZ44iP2JzZGwud85PcNZ950ZVvkBUI3uCuCrLX2I7GuROk2D8IQ5K/01zixX7O6ERt0ASycl+RD5c+wyvQKqpYN0sQKIExqwNHWzWseUqWi1fgQY5GNGRZLh7C/pDHVwRnsFXcU/gMDg5IuhnWd6qhbIEOKC9pn4T/k1ZhDSzW1B6qEurob93hmuqo+IrQooeQ2lY5X6E+8uyavMdv18nkyNZOKTixZ9Trof4Ci98fHxICAAA=
    Metadata:
      aws:cdk:path: CdkThreeTierStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

