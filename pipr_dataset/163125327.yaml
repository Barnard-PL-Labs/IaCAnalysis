Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CheckparamStack/Vpc
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/Resource
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/22
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CheckparamStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CheckparamStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet2Subnet691E08A3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.4.0/22
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CheckparamStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable94F7E489:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CheckparamStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociationDD5762D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRoute97F91067:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/PublicSubnet2/DefaultRoute
  VpcIsolatedSubnet1SubnetE48C5737:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.8.0/22
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Isolated
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: CheckparamStack/Vpc/IsolatedSubnet1
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/IsolatedSubnet1/Subnet
  VpcIsolatedSubnet1RouteTable4771E3E5:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CheckparamStack/Vpc/IsolatedSubnet1
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/IsolatedSubnet1/RouteTable
  VpcIsolatedSubnet1RouteTableAssociationD300FCBB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcIsolatedSubnet1RouteTable4771E3E5
      SubnetId:
        Ref: VpcIsolatedSubnet1SubnetE48C5737
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/IsolatedSubnet1/RouteTableAssociation
  VpcIsolatedSubnet2Subnet16364B91:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.12.0/22
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Isolated
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: CheckparamStack/Vpc/IsolatedSubnet2
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/IsolatedSubnet2/Subnet
  VpcIsolatedSubnet2RouteTable1D30AF7D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CheckparamStack/Vpc/IsolatedSubnet2
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/IsolatedSubnet2/RouteTable
  VpcIsolatedSubnet2RouteTableAssociationF7B18CCA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcIsolatedSubnet2RouteTable1D30AF7D
      SubnetId:
        Ref: VpcIsolatedSubnet2Subnet16364B91
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/IsolatedSubnet2/RouteTableAssociation
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CheckparamStack/Vpc
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: CheckparamStack/Vpc/VPCGW
  ParameterGroup5E32DECB:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: Cluster parameter group for aurora-mysql5.7
      Family: aurora-mysql5.7
      Parameters:
        time_zone: Asia/Tokyo
        character_set_client: utf8mb4
        character_set_connection: utf8mb4
        character_set_database: utf8mb4
        character_set_filesystem: utf8mb4
        character_set_results: utf8mb4
        character_set_server: utf8mb4
        collation_server: utf8mb4_bin
        collation_connection: utf8mb4_bin
    Metadata:
      aws:cdk:path: CheckparamStack/ParameterGroup/Resource
  ServerlessClusterSubnetsEB21A3DA:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for ServerlessCluster database
      SubnetIds:
        - Ref: VpcIsolatedSubnet1SubnetE48C5737
        - Ref: VpcIsolatedSubnet2Subnet16364B91
    Metadata:
      aws:cdk:path: CheckparamStack/ServerlessCluster/Subnets/Default
  ServerlessClusterSecurityGroup24DEA47D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CheckparamStack/ServerlessCluster/SecurityGroup/Resource
  ServerlessClusterSecret9585927A:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CheckparamStack/ServerlessCluster/Secret/Resource
  ServerlessClusterSecretAttachment79618777:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: ServerlessClusterSecret9585927A
      TargetId:
        Ref: ServerlessClusterD09D5D78
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: CheckparamStack/ServerlessCluster/Secret/Attachment/Resource
  ServerlessClusterD09D5D78:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      DatabaseName: checkparam
      DBClusterParameterGroupName:
        Ref: ParameterGroup5E32DECB
      DBSubnetGroupName:
        Ref: ServerlessClusterSubnetsEB21A3DA
      EnableHttpEndpoint: true
      EngineMode: serverless
      EngineVersion: 5.7.mysql_aurora.2.09.1
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: ServerlessClusterSecret9585927A
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: ServerlessClusterSecret9585927A
            - :SecretString:password::}}
      ScalingConfiguration:
        AutoPause: true
        MaxCapacity: 2
        MinCapacity: 1
        SecondsUntilAutoPause: 300
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - ServerlessClusterSecurityGroup24DEA47D
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CheckparamStack/ServerlessCluster/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: aws-cdk:cr-owned:70c1d2dc
          Value: "true"
      WebsiteConfiguration:
        IndexDocument: index.html
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CheckparamStack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              AWS: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - Bucket83908E77
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CheckparamStack/Bucket/Policy/Resource
  BucketDeploymentAwsCliLayerB018DCE1:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket: cdk-hnb659fds-assets-492022549341-ap-northeast-1
        S3Key: f331b32a8ad8983464106a58e420e7bc7e6341ba2ffb8ac9ad350d7e32845d95.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: CheckparamStack/BucketDeployment/AwsCliLayer/Resource
      aws:asset:path: asset.f331b32a8ad8983464106a58e420e7bc7e6341ba2ffb8ac9ad350d7e32845d95.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  BucketDeploymentCustomResourceCB7E2133:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - cdk-hnb659fds-assets-492022549341-ap-northeast-1
      SourceObjectKeys:
        - e7d0ac5ca7592bab52ca9b970c7e3203b0f49271c3e157136ed779882f523271.zip
      DestinationBucketName:
        Ref: Bucket83908E77
      Prune: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CheckparamStack/BucketDeployment/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CheckparamStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::cdk-hnb659fds-assets-492022549341-ap-northeast-1
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::cdk-hnb659fds-assets-492022549341-ap-northeast-1/*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: CheckparamStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-492022549341-ap-northeast-1
        S3Key: f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Handler: index.handler
      Layers:
        - Ref: BucketDeploymentAwsCliLayerB018DCE1
      Runtime: python3.7
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: CheckparamStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da
      aws:asset:is-bundled: false
      aws:asset:property: Code
  HandlerServiceRoleFCDC14AE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CheckparamStack/Handler/ServiceRole/Resource
  HandlerServiceRoleDefaultPolicyCBD0CC91:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - rds-data:BatchExecuteStatement
              - rds-data:BeginTransaction
              - rds-data:CommitTransaction
              - rds-data:ExecuteStatement
              - rds-data:RollbackTransaction
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: ServerlessClusterSecretAttachment79618777
        Version: "2012-10-17"
      PolicyName: HandlerServiceRoleDefaultPolicyCBD0CC91
      Roles:
        - Ref: HandlerServiceRoleFCDC14AE
    Metadata:
      aws:cdk:path: CheckparamStack/Handler/ServiceRole/DefaultPolicy/Resource
  Handler886CB40B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: 492022549341.dkr.ecr.ap-northeast-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-492022549341-ap-northeast-1:4c926e146ce0bd415bd108ae3321345a6de5f0c7b6d5af9523e0ea61ba8c4cc7
      Role:
        Fn::GetAtt:
          - HandlerServiceRoleFCDC14AE
          - Arn
      Environment:
        Variables:
          DB_ARN:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":rds:ap-northeast-1:492022549341:cluster:"
                - Ref: ServerlessClusterD09D5D78
          DB_SECRET_ARN:
            Ref: ServerlessClusterSecretAttachment79618777
      MemorySize: 256
      PackageType: Image
      Timeout: 30
    DependsOn:
      - HandlerServiceRoleDefaultPolicyCBD0CC91
      - HandlerServiceRoleFCDC14AE
    Metadata:
      aws:cdk:path: CheckparamStack/Handler/Resource
      aws:asset:path: asset.4c926e146ce0bd415bd108ae3321345a6de5f0c7b6d5af9523e0ea61ba8c4cc7
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:docker-build-target: handler
      aws:asset:property: Code.ImageUri
  HandlerLogRetention34184093:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: Handler886CB40B
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: CheckparamStack/Handler/LogRetention/Resource
  HandlerEventInvokeConfig16376DFA:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: Handler886CB40B
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: CheckparamStack/Handler/EventInvokeConfig/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CheckparamStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: CheckparamStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: cdk-hnb659fds-assets-492022549341-ap-northeast-1
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: CheckparamStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UpdaterServiceRole325F096F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CheckparamStack/Updater/ServiceRole/Resource
  UpdaterServiceRoleDefaultPolicy797F2EE4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - rds-data:BatchExecuteStatement
              - rds-data:BeginTransaction
              - rds-data:CommitTransaction
              - rds-data:ExecuteStatement
              - rds-data:RollbackTransaction
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: ServerlessClusterSecretAttachment79618777
        Version: "2012-10-17"
      PolicyName: UpdaterServiceRoleDefaultPolicy797F2EE4
      Roles:
        - Ref: UpdaterServiceRole325F096F
    Metadata:
      aws:cdk:path: CheckparamStack/Updater/ServiceRole/DefaultPolicy/Resource
  Updater65AF1523:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: 492022549341.dkr.ecr.ap-northeast-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-492022549341-ap-northeast-1:15a25e9ca6eb42a81f877907edb087e691727324994f09b227b21544e663ffe9
      Role:
        Fn::GetAtt:
          - UpdaterServiceRole325F096F
          - Arn
      Environment:
        Variables:
          DB_ARN:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":rds:ap-northeast-1:492022549341:cluster:"
                - Ref: ServerlessClusterD09D5D78
          DB_SECRET_ARN:
            Ref: ServerlessClusterSecretAttachment79618777
      ImageConfig:
        Command:
          - bin/rails update:items
        EntryPoint:
          - /bin/sh
          - -c
      MemorySize: 256
      PackageType: Image
      ReservedConcurrentExecutions: 1
      Timeout: 900
    DependsOn:
      - UpdaterServiceRoleDefaultPolicy797F2EE4
      - UpdaterServiceRole325F096F
    Metadata:
      aws:cdk:path: CheckparamStack/Updater/Resource
      aws:asset:path: asset.15a25e9ca6eb42a81f877907edb087e691727324994f09b227b21544e663ffe9
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:docker-build-target: updater
      aws:asset:property: Code.ImageUri
  UpdaterEventInvokeConfigEECD427B:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: Updater65AF1523
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: CheckparamStack/Updater/EventInvokeConfig/Resource
  ScheduledEvent2BF45DAA:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 5 ? * WED *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - Updater65AF1523
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: CheckparamStack/ScheduledEvent/Resource
  ScheduledEventAllowEventRuleCheckparamStackUpdater118B67D227F8AA55:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Updater65AF1523
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - ScheduledEvent2BF45DAA
          - Arn
    Metadata:
      aws:cdk:path: CheckparamStack/ScheduledEvent/AllowEventRuleCheckparamStackUpdater118B67D2
  HttpAPI8D545486:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: HttpAPI
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/Resource
  HttpAPIDefaultRouteDefaultHttpIntegration270EFFA7:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - Handler886CB40B
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/DefaultRoute/DefaultHttpIntegration/Resource
  HttpAPIDefaultRouteDefaultHttpIntegrationPermissionEB725138:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Handler886CB40B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-1:492022549341:"
            - Ref: HttpAPI8D545486
            - /*/*
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/DefaultRoute/DefaultHttpIntegration-Permission
  HttpAPIDefaultRouteF9949FE6:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpAPIDefaultRouteDefaultHttpIntegration270EFFA7
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/DefaultRoute/Resource
  HttpAPIDefaultStage1BC7D78F:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/DefaultStage/Resource
  HttpAPIGETfaviconico6573C196:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri:
        Fn::Join:
          - ""
          - - Fn::GetAtt:
                - Bucket83908E77
                - WebsiteURL
            - /favicon.ico
      PayloadFormatVersion: "1.0"
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--favicon.ico/favicon.ico/Resource
  HttpAPIGETfaviconicoB77F98C3:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      RouteKey: GET /favicon.ico
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpAPIGETfaviconico6573C196
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--favicon.ico/Resource
  HttpAPIGETappletouchiconpngB0A5B5B3:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri:
        Fn::Join:
          - ""
          - - Fn::GetAtt:
                - Bucket83908E77
                - WebsiteURL
            - /apple-touch-icon.png
      PayloadFormatVersion: "1.0"
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--apple-touch-icon.png/apple-touch-icon.png/Resource
  HttpAPIGETappletouchiconpng2D996D04:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      RouteKey: GET /apple-touch-icon.png
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpAPIGETappletouchiconpngB0A5B5B3
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--apple-touch-icon.png/Resource
  HttpAPIGETassetsproxyassetsF926F6C5:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri:
        Fn::Join:
          - ""
          - - Fn::GetAtt:
                - Bucket83908E77
                - WebsiteURL
            - /assets/{proxy}
      PayloadFormatVersion: "1.0"
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--assets--{proxy}/assets/Resource
  HttpAPIGETassetsproxyDFD60557:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      RouteKey: GET /assets/{proxy}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpAPIGETassetsproxyassetsF926F6C5
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--assets--{proxy}/Resource
  HttpAPIGETiconsproxyiconsB6375AD2:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri: https://static.ffxiah.com/images/icon/{proxy}
      PayloadFormatVersion: "1.0"
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--icons--{proxy}/icons/Resource
  HttpAPIGETiconsproxy5B1F85DB:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpAPI8D545486
      RouteKey: GET /icons/{proxy}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpAPIGETiconsproxyiconsB6375AD2
    Metadata:
      aws:cdk:path: CheckparamStack/HttpAPI/GET--icons--{proxy}/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21TyW7bMBD9Ft9pxnYO7bFe2sRADoIc+GpQ9ERhTJECFxmCoH/vUGQkwchphm+2Nws3dP2LdqsFu9slv96WUhS0OznGbwShSwd8Q7tzzcn+Q52zPcl8IQU/+UKBC9ik5do7eGeFhAmfsK21mgvmhFajM8mMaJiDKcdROTCovyB6Z20qml5bh7Q+K1COnIB7I1z7YrSvh3JzoCfmammXMcMqwISj12G3l94i8mA6gWnASLA22UmkNAucAwfmWMEsYFETeY+Je2IH0FZMsRIM7SK54BfFOzMluFkvo8OjBXM9027n+S0WSVoUmcY1tBOc3vGxQ3Ih+tJdoZa6DdloNB1GgDBrkSjdBtETyariyga+b6wFcwZjw7JOQpUSnFb/vOLD+kYFXUf9oDG7OVbY9Ij9bbDMUTX6BnutPkQZIn4EMzCVsKFeTwSraJfreEaDnHqNWk9wXpdEf1Z46CTYaA61tsJp04ZREKlLS990mePK1UANAgu8kdynOih7wmpRxltrNsMktrX4PsvSPBxv2JvDqn1PcrDaGw5piBcZBnjB/8OloNs7XpUYZkoGhiEKh0r2eDG6GmND4qT3ZLVksv5kdLX4k37mU5Bzgsmje3WuDjyDjMyCNqcc3t9Ulb4C/bJPzfo3XW/oevFlhVgaj2OpgOZR/geYBjiNFQQAAA==
    Metadata:
      aws:cdk:path: CheckparamStack/CDKMetadata/Default
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

