Resources:
  PawLambdaPawLambdaBucket0EF1C2C2:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: PawStack/PawLambda/PawLambdaBucket/Resource
  PawLambdaPawLambdaHandlerServiceRole45D28A76:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PawStack/PawLambda/PawLambdaHandler/ServiceRole/Resource
  PawLambdaPawLambdaHandlerServiceRoleDefaultPolicy765D05DE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PawLambdaPawLambdaBucket0EF1C2C2
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PawLambdaPawLambdaBucket0EF1C2C2
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: PawLambdaPawLambdaHandlerServiceRoleDefaultPolicy765D05DE
      Roles:
        - Ref: PawLambdaPawLambdaHandlerServiceRole45D28A76
    Metadata:
      aws:cdk:path: PawStack/PawLambda/PawLambdaHandler/ServiceRole/DefaultPolicy/Resource
  PawLambdaPawLambdaHandler2A3B31A0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |-
          def lambda_handler(input, context):
              status_code = 200
              bode = input["body"]

              if (bode == "erro"):
                  status_code = 404

              return {
                  'statusCode': status_code,
                  'body': bode
              }
      Role:
        Fn::GetAtt:
          - PawLambdaPawLambdaHandlerServiceRole45D28A76
          - Arn
      Environment:
        Variables:
          BUCKET:
            Ref: PawLambdaPawLambdaBucket0EF1C2C2
      FunctionName: PawLambda
      Handler: index.lambda_handler
      Runtime: python3.9
    DependsOn:
      - PawLambdaPawLambdaHandlerServiceRoleDefaultPolicy765D05DE
      - PawLambdaPawLambdaHandlerServiceRole45D28A76
    Metadata:
      aws:cdk:path: PawStack/PawLambda/PawLambdaHandler/Resource
  PawStateMachineRole0E45FB0E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::FindInMap:
                  - ServiceprincipalMap
                  - Ref: AWS::Region
                  - states
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PawStack/PawStateMachine/PawStateMachine/Role/Resource
  PawStateMachineRoleDefaultPolicy06AD2171:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PawLambdaPawLambdaHandler2A3B31A0
                - Arn
        Version: "2012-10-17"
      PolicyName: PawStateMachineRoleDefaultPolicy06AD2171
      Roles:
        - Ref: PawStateMachineRole0E45FB0E
    Metadata:
      aws:cdk:path: PawStack/PawStateMachine/PawStateMachine/Role/DefaultPolicy/Resource
  PawStateMachine253B5E7C:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - PawStateMachineRole0E45FB0E
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"Invoke","States":{"Invoke":{"Next":"Processor","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - PawLambdaPawLambdaHandler2A3B31A0
                - Arn
            - '","Payload.$":"$"}},"Processor":{"Type":"Choice","Choices":[{"Variable":"$.statusCode","NumericEquals":200,"Next":"DeuBom"},{"Variable":"$.statusCode","NumericEquals":404,"Next":"DeuRuim"}]},"DeuBom":{"Type":"Succeed"},"DeuRuim":{"Type":"Fail"}}}'
      StateMachineName: PawMachine
    DependsOn:
      - PawStateMachineRoleDefaultPolicy06AD2171
      - PawStateMachineRole0E45FB0E
    Metadata:
      aws:cdk:path: PawStack/PawStateMachine/PawStateMachine/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11Oy24CMQz8Fu5el4VLz10JCQkkRD8ABceASdZZkYSqivbfu48iVT3NjO0ZzwrrNS4X5itWZF3l5YzlMxlyMIxOJa6xfGRynKC56Mx68KY9W4Nlk5WSBB13L96DmBbLMXgexxMeghf6HuXMeoiJu8uvIw4fMxGzhY0RD80tCDEMLRLvDd1Ep6S/+l/AKZnoIu6mWlt9BjdcjM85hvygyd4EtfIquzddJ3rtQYNlvMe3Z/2O9QrrxT2KVI+sSVrG44w/tGkPmyQBAAA=
    Metadata:
      aws:cdk:path: PawStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Mappings:
  ServiceprincipalMap:
    af-south-1:
      states: states.af-south-1.amazonaws.com
    ap-east-1:
      states: states.ap-east-1.amazonaws.com
    ap-northeast-1:
      states: states.ap-northeast-1.amazonaws.com
    ap-northeast-2:
      states: states.ap-northeast-2.amazonaws.com
    ap-northeast-3:
      states: states.ap-northeast-3.amazonaws.com
    ap-south-1:
      states: states.ap-south-1.amazonaws.com
    ap-southeast-1:
      states: states.ap-southeast-1.amazonaws.com
    ap-southeast-2:
      states: states.ap-southeast-2.amazonaws.com
    ap-southeast-3:
      states: states.ap-southeast-3.amazonaws.com
    ca-central-1:
      states: states.ca-central-1.amazonaws.com
    cn-north-1:
      states: states.cn-north-1.amazonaws.com
    cn-northwest-1:
      states: states.cn-northwest-1.amazonaws.com
    eu-central-1:
      states: states.eu-central-1.amazonaws.com
    eu-north-1:
      states: states.eu-north-1.amazonaws.com
    eu-south-1:
      states: states.eu-south-1.amazonaws.com
    eu-south-2:
      states: states.eu-south-2.amazonaws.com
    eu-west-1:
      states: states.eu-west-1.amazonaws.com
    eu-west-2:
      states: states.eu-west-2.amazonaws.com
    eu-west-3:
      states: states.eu-west-3.amazonaws.com
    me-south-1:
      states: states.me-south-1.amazonaws.com
    sa-east-1:
      states: states.sa-east-1.amazonaws.com
    us-east-1:
      states: states.us-east-1.amazonaws.com
    us-east-2:
      states: states.us-east-2.amazonaws.com
    us-gov-east-1:
      states: states.us-gov-east-1.amazonaws.com
    us-gov-west-1:
      states: states.us-gov-west-1.amazonaws.com
    us-iso-east-1:
      states: states.amazonaws.com
    us-iso-west-1:
      states: states.amazonaws.com
    us-isob-east-1:
      states: states.amazonaws.com
    us-west-1:
      states: states.us-west-1.amazonaws.com
    us-west-2:
      states: states.us-west-2.amazonaws.com
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

