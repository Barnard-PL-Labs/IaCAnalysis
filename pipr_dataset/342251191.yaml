Resources:
  thinkAmiCfnPolicy2C215BB8:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:iam::"
                  - Ref: AWS::AccountId
                  - :role/hello-sls-*-
                  - Ref: AWS::Region
                  - -lambdaRole
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::hello-sls-*
              - arn:aws:s3:::hello-sls-*/
          - Action:
              - s3:ListAllMyBuckets
              - s3:CreateBucket
            Effect: Allow
            Resource: "*"
          - Action:
              - apigateway:GET
              - apigateway:PATCH
              - apigateway:POST
              - apigateway:PUT
              - apigateway:DELETE
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:aws:apigateway:"
                    - Ref: AWS::Region
                    - ::/restapis
              - Fn::Join:
                  - ""
                  - - "arn:aws:apigateway:"
                    - Ref: AWS::Region
                    - ::/restapis/*
          - Action: logs:DescribeLogGroups
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:logs:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :log-group::log-stream:*
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DeleteLogGroup
              - logs:DeleteLogStream
              - logs:DescribeLogStreams
              - logs:FilterLogEvents
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:logs:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :log-group:/aws/lambda/hello-sls-*:log-stream:*
          - Action:
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:CreateRole
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:PutRolePolicy
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:iam::"
                  - Ref: AWS::AccountId
                  - :role/hello-sls-*-
                  - Ref: AWS::Region
                  - -lambdaRole
          - Action:
              - lambda:GetFunction
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:UpdateFunctionConfiguration
              - lambda:UpdateFunctionCode
              - lambda:ListVersionsByFunction
              - lambda:PublishVersion
              - lambda:CreateAlias
              - lambda:DeleteAlias
              - lambda:UpdateAlias
              - lambda:GetFunctionConfiguration
              - lambda:AddPermission
              - lambda:RemovePermission
              - lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:lambda:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :function:hello-sls-*
        Version: "2012-10-17"
      Description: ""
      ManagedPolicyName: thinkAmi-Serverless-CFn
      Path: /
    Metadata:
      aws:cdk:path: CdkStack/thinkAmiCfnPolicy/Resource
  thinkAmiCfnRole02A49154:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: thinkAmiCfnPolicy2C215BB8
      RoleName: thinkAmi-Serverless-CFn-Role
    Metadata:
      aws:cdk:path: CdkStack/thinkAmiCfnRole/Resource
  thinkAmiDeployPolicy7FF637D8:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - thinkAmiCfnRole02A49154
                - Arn
          - Action: s3:*
            Effect: Allow
            Resource:
              - arn:aws:s3:::hello-sls-*
              - arn:aws:s3:::hello-sls-*/*
          - Action:
              - s3:ListAllMyBuckets
              - s3:CreateBucket
            Effect: Allow
            Resource: "*"
          - Action:
              - cloudformation:CreateStack
              - cloudformation:UpdateStack
              - cloudformation:DeleteStack
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:cloudformation:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :stack/hello-sls-*/*
          - Action:
              - cloudformation:Describe*
              - cloudformation:List*
              - cloudformation:Get*
              - cloudformation:ValidateTemplate
            Effect: Allow
            Resource: "*"
          - Action: ssm:GetParameter
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/hello-sls/CFn-Role
        Version: "2012-10-17"
      Description: ""
      ManagedPolicyName: thinkAmi-Serverless-Deploy
      Path: /
    Metadata:
      aws:cdk:path: CdkStack/thinkAmiDeployPolicy/Resource
  thinkAmiDeployRole1332E23E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: thinkAmiDeployPolicy7FF637D8
      RoleName: thinkAmi-Serverless-Deploy-Role
    Metadata:
      aws:cdk:path: CdkStack/thinkAmiDeployRole/Resource
  thinkAmiAssumePolicyB65A3D11:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - thinkAmiDeployRole1332E23E
                - Arn
        Version: "2012-10-17"
      Description: ""
      ManagedPolicyName: thinkAmi-Serverless-Assume-By-User
      Path: /
    Metadata:
      aws:cdk:path: CdkStack/thinkAmiAssumePolicy/Resource
  thinkAmiAssumeGroup86D5F34B:
    Type: AWS::IAM::Group
    Properties:
      GroupName: thinkAmi-Serverless-Assume
      ManagedPolicyArns:
        - Ref: thinkAmiAssumePolicyB65A3D11
    Metadata:
      aws:cdk:path: CdkStack/thinkAmiAssumeGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/aws-iam=1.90.1,@aws-cdk/cloud-assembly-schema=1.90.1,@aws-cdk/core=1.90.1,@aws-cdk/cx-api=1.90.1,@aws-cdk/region-info=1.90.1,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: CdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

