Resources:
  Products229621C6:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: Products
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/Products/Resource
  GetProductsFunctionServiceRole75956CC7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductsFunction/ServiceRole/Resource
  GetProductsFunctionServiceRoleDefaultPolicyA81485BC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Products229621C6
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: GetProductsFunctionServiceRoleDefaultPolicyA81485BC
      Roles:
        - Ref: GetProductsFunctionServiceRole75956CC7
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductsFunction/ServiceRole/DefaultPolicy/Resource
  GetProductsFunction60F0D6E5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c6c0c22ac93a1cb58e53e5d5d9db754a9395a9af71235f1af3e63913a999596a.zip
      Role:
        Fn::GetAtt:
          - GetProductsFunctionServiceRole75956CC7
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Products229621C6
          AWS_ACCOUNT_ID:
            Ref: AWS::AccountId
          POWERTOOLS_SERVICE_NAME: serverless-typescript-demo
          POWERTOOLS_LOGGER_LOG_LEVEL: WARN
          POWERTOOLS_LOGGER_SAMPLE_RATE: "0.01"
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_METRICS_NAMESPACE: AwsSamples
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      MemorySize: 256
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - GetProductsFunctionServiceRoleDefaultPolicyA81485BC
      - GetProductsFunctionServiceRole75956CC7
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductsFunction/Resource
      aws:asset:path: asset.c6c0c22ac93a1cb58e53e5d5d9db754a9395a9af71235f1af3e63913a999596a
      aws:asset:is-bundled: true
      aws:asset:property: Code
  GetProductsFunctionLogRetention24E37D92:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: GetProductsFunction60F0D6E5
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductsFunction/LogRetention/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ae967c277459e8936ac565a71d34ea5dcff7b98e556466c36a4d6da023a2d9aa.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.ae967c277459e8936ac565a71d34ea5dcff7b98e556466c36a4d6da023a2d9aa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetProductFunctionServiceRole29A2DC57:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductFunction/ServiceRole/Resource
  GetProductFunctionServiceRoleDefaultPolicy128C2561:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Products229621C6
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: GetProductFunctionServiceRoleDefaultPolicy128C2561
      Roles:
        - Ref: GetProductFunctionServiceRole29A2DC57
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductFunction/ServiceRole/DefaultPolicy/Resource
  GetProductFunction879D9990:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: daa45d7e5e2163b80708e7dffd7019cea709b52c80f4191953ffd223d7b6c2d7.zip
      Role:
        Fn::GetAtt:
          - GetProductFunctionServiceRole29A2DC57
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Products229621C6
          AWS_ACCOUNT_ID:
            Ref: AWS::AccountId
          POWERTOOLS_SERVICE_NAME: serverless-typescript-demo
          POWERTOOLS_LOGGER_LOG_LEVEL: WARN
          POWERTOOLS_LOGGER_SAMPLE_RATE: "0.01"
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_METRICS_NAMESPACE: AwsSamples
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      MemorySize: 256
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - GetProductFunctionServiceRoleDefaultPolicy128C2561
      - GetProductFunctionServiceRole29A2DC57
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductFunction/Resource
      aws:asset:path: asset.daa45d7e5e2163b80708e7dffd7019cea709b52c80f4191953ffd223d7b6c2d7
      aws:asset:is-bundled: true
      aws:asset:property: Code
  GetProductFunctionLogRetention07349A0C:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: GetProductFunction879D9990
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/GetProductFunction/LogRetention/Resource
  PutProductFunctionServiceRole213C5CA6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/PutProductFunction/ServiceRole/Resource
  PutProductFunctionServiceRoleDefaultPolicyA7672A29:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Products229621C6
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: PutProductFunctionServiceRoleDefaultPolicyA7672A29
      Roles:
        - Ref: PutProductFunctionServiceRole213C5CA6
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/PutProductFunction/ServiceRole/DefaultPolicy/Resource
  PutProductFunctionC4AE1EE6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d1938eb3569b73abafd5468987e96370285da448ce9ea49d00121dae3feff804.zip
      Role:
        Fn::GetAtt:
          - PutProductFunctionServiceRole213C5CA6
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Products229621C6
          AWS_ACCOUNT_ID:
            Ref: AWS::AccountId
          POWERTOOLS_SERVICE_NAME: serverless-typescript-demo
          POWERTOOLS_LOGGER_LOG_LEVEL: WARN
          POWERTOOLS_LOGGER_SAMPLE_RATE: "0.01"
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_METRICS_NAMESPACE: AwsSamples
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      MemorySize: 256
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - PutProductFunctionServiceRoleDefaultPolicyA7672A29
      - PutProductFunctionServiceRole213C5CA6
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/PutProductFunction/Resource
      aws:asset:path: asset.d1938eb3569b73abafd5468987e96370285da448ce9ea49d00121dae3feff804
      aws:asset:is-bundled: true
      aws:asset:property: Code
  PutProductFunctionLogRetention11C3A212:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: PutProductFunctionC4AE1EE6
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/PutProductFunction/LogRetention/Resource
  DeleteProductsFunctionServiceRole30456243:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/DeleteProductsFunction/ServiceRole/Resource
  DeleteProductsFunctionServiceRoleDefaultPolicyD0481C18:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Products229621C6
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: DeleteProductsFunctionServiceRoleDefaultPolicyD0481C18
      Roles:
        - Ref: DeleteProductsFunctionServiceRole30456243
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/DeleteProductsFunction/ServiceRole/DefaultPolicy/Resource
  DeleteProductsFunction46223924:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 045ecba99a71ced52ba42be1686da08c03c0dee2b8b24aa8d2712dec54661beb.zip
      Role:
        Fn::GetAtt:
          - DeleteProductsFunctionServiceRole30456243
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: Products229621C6
          AWS_ACCOUNT_ID:
            Ref: AWS::AccountId
          POWERTOOLS_SERVICE_NAME: serverless-typescript-demo
          POWERTOOLS_LOGGER_LOG_LEVEL: WARN
          POWERTOOLS_LOGGER_SAMPLE_RATE: "0.01"
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_METRICS_NAMESPACE: AwsSamples
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      MemorySize: 256
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - DeleteProductsFunctionServiceRoleDefaultPolicyD0481C18
      - DeleteProductsFunctionServiceRole30456243
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/DeleteProductsFunction/Resource
      aws:asset:path: asset.045ecba99a71ced52ba42be1686da08c03c0dee2b8b24aa8d2712dec54661beb
      aws:asset:is-bundled: true
      aws:asset:property: Code
  DeleteProductsFunctionLogRetention1FAC76A0:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: DeleteProductsFunction46223924
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/DeleteProductsFunction/LogRetention/Resource
  ProductsApiEC66475F:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ProductsApi
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Resource
  ProductsApiCloudWatchRole54C7E91A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/CloudWatchRole/Resource
  ProductsApiAccount52E806C7:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - ProductsApiCloudWatchRole54C7E91A
          - Arn
    DependsOn:
      - ProductsApiEC66475F
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Account
  ProductsApiDeployment89EFB16998ea838ab663cf2e2ee1be07ad21f577:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ProductsApiEC66475F
      Description: Automatically created by the RestApi construct
    DependsOn:
      - ProductsApiproductsidDELETE2C7811DA
      - ProductsApiproductsidGETDFC4C50B
      - ProductsApiproductsidPUTC969F689
      - ProductsApiproductsid953328E3
      - ProductsApiproductsGETC33B671E
      - ProductsApiproducts794DC767
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Deployment/Resource
  ProductsApiDeploymentStageprod92B12A34:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: ProductsApiEC66475F
      DeploymentId:
        Ref: ProductsApiDeployment89EFB16998ea838ab663cf2e2ee1be07ad21f577
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
      StageName: prod
      TracingEnabled: true
    DependsOn:
      - ProductsApiAccount52E806C7
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/DeploymentStage.prod/Resource
  ProductsApiproducts794DC767:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ProductsApiEC66475F
          - RootResourceId
      PathPart: products
      RestApiId:
        Ref: ProductsApiEC66475F
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/Resource
  ProductsApiproductsGETApiPermissionServerlessTypescriptDemoStackProductsApi634AC983GETproducts1FE80300:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetProductsFunction60F0D6E5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /
            - Ref: ProductsApiDeploymentStageprod92B12A34
            - /GET/products
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/GET/ApiPermission.ServerlessTypescriptDemoStackProductsApi634AC983.GET..products
  ProductsApiproductsGETApiPermissionTestServerlessTypescriptDemoStackProductsApi634AC983GETproductsCCFD473D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetProductsFunction60F0D6E5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /test-invoke-stage/GET/products
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/GET/ApiPermission.Test.ServerlessTypescriptDemoStackProductsApi634AC983.GET..products
  ProductsApiproductsGETC33B671E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ProductsApiproducts794DC767
      RestApiId:
        Ref: ProductsApiEC66475F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetProductsFunction60F0D6E5
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/GET/Resource
  ProductsApiproductsid953328E3:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ProductsApiproducts794DC767
      PathPart: "{id}"
      RestApiId:
        Ref: ProductsApiEC66475F
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/Resource
  ProductsApiproductsidGETApiPermissionServerlessTypescriptDemoStackProductsApi634AC983GETproductsid101B29E0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetProductFunction879D9990
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /
            - Ref: ProductsApiDeploymentStageprod92B12A34
            - /GET/products/*
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/GET/ApiPermission.ServerlessTypescriptDemoStackProductsApi634AC983.GET..products.{id}
  ProductsApiproductsidGETApiPermissionTestServerlessTypescriptDemoStackProductsApi634AC983GETproductsid7CD96D62:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetProductFunction879D9990
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /test-invoke-stage/GET/products/*
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/GET/ApiPermission.Test.ServerlessTypescriptDemoStackProductsApi634AC983.GET..products.{id}
  ProductsApiproductsidGETDFC4C50B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ProductsApiproductsid953328E3
      RestApiId:
        Ref: ProductsApiEC66475F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetProductFunction879D9990
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/GET/Resource
  ProductsApiproductsidPUTApiPermissionServerlessTypescriptDemoStackProductsApi634AC983PUTproductsidF7607E25:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PutProductFunctionC4AE1EE6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /
            - Ref: ProductsApiDeploymentStageprod92B12A34
            - /PUT/products/*
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/PUT/ApiPermission.ServerlessTypescriptDemoStackProductsApi634AC983.PUT..products.{id}
  ProductsApiproductsidPUTApiPermissionTestServerlessTypescriptDemoStackProductsApi634AC983PUTproductsid787B1298:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PutProductFunctionC4AE1EE6
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /test-invoke-stage/PUT/products/*
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/PUT/ApiPermission.Test.ServerlessTypescriptDemoStackProductsApi634AC983.PUT..products.{id}
  ProductsApiproductsidPUTC969F689:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: ProductsApiproductsid953328E3
      RestApiId:
        Ref: ProductsApiEC66475F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - PutProductFunctionC4AE1EE6
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/PUT/Resource
  ProductsApiproductsidDELETEApiPermissionServerlessTypescriptDemoStackProductsApi634AC983DELETEproductsid12735192:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteProductsFunction46223924
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /
            - Ref: ProductsApiDeploymentStageprod92B12A34
            - /DELETE/products/*
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/DELETE/ApiPermission.ServerlessTypescriptDemoStackProductsApi634AC983.DELETE..products.{id}
  ProductsApiproductsidDELETEApiPermissionTestServerlessTypescriptDemoStackProductsApi634AC983DELETEproductsidA773506E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteProductsFunction46223924
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ProductsApiEC66475F
            - /test-invoke-stage/DELETE/products/*
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/DELETE/ApiPermission.Test.ServerlessTypescriptDemoStackProductsApi634AC983.DELETE..products.{id}
  ProductsApiproductsidDELETE2C7811DA:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: ProductsApiproductsid953328E3
      RestApiId:
        Ref: ProductsApiEC66475F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeleteProductsFunction46223924
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/ProductsApi/Default/products/{id}/DELETE/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VQyU7DMBD9lt6dgTYXrmkRJzYF7pFjD8FJbEcZmyqK8u94KRROb5HfzBsfoCzhdsfPVAg5FKNqYX1zXAwsWM0qF8O1lcF85+2I7PRhEtnYyHUreWOsxJ7gOcGDN8Ipa5jiGtba5kDCVzsqsUSZ2caobDgROoIqQtBw9GJAd+SEl/GwhsDv1BjGWSuioEID2xE82q5GhyY94JPquMMzX8J2JFdNKhW40koI641j9ziNdtEhF90/KtzepdaZhKj1s8DU6UdcZmb+hO7Tymhltm3Xd+mwOEiZ7l8o8BfvJp+2n6yRyqWT4m9CTzdf+zvYH2C/60mpYg6NlUaoM34DHyrhILMBAAA=
    Metadata:
      aws:cdk:path: ServerlessTypescriptDemoStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ProductsApiEndpointD9B1D2AF:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ProductsApiEC66475F
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: ProductsApiDeploymentStageprod92B12A34
          - /
  ApiURL:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ProductsApiEC66475F
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: ProductsApiDeploymentStageprod92B12A34
          - /products
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

