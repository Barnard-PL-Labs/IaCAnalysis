Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WebAppStack/VPC
    Metadata:
      aws:cdk:path: WebAppStack/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet2EIP4947BC00:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet2/EIP
  VPCPublicSubnet2NATGateway3C070193:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet2EIP4947BC00
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PublicSubnet2/NATGateway
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WebAppStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WebAppStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebAppStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet2NATGateway3C070193
    Metadata:
      aws:cdk:path: WebAppStack/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WebAppStack/VPC
    Metadata:
      aws:cdk:path: WebAppStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: WebAppStack/VPC/VPCGW
  webinstanceroleD2301EA3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonEC2RoleforSSM
    Metadata:
      aws:cdk:path: WebAppStack/webinstancerole/Resource
  ASGInstanceSecurityGroup0525485D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WebAppStack/ASG/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: WebAppStack/ASG
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: WebAppStack/ASG/InstanceSecurityGroup/Resource
  ASGInstanceSecurityGroupfromWebAppStackLBSecurityGroup24C1A048804DB5E356:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - ASGInstanceSecurityGroup0525485D
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - LBSecurityGroup8A41EA2B
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: WebAppStack/ASG/InstanceSecurityGroup/from WebAppStackLBSecurityGroup24C1A048:80
  ASGInstanceProfile0A2834D7:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: webinstanceroleD2301EA3
    Metadata:
      aws:cdk:path: WebAppStack/ASG/InstanceProfile
  ASGLaunchConfigC00AF12B:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      IamInstanceProfile:
        Ref: ASGInstanceProfile0A2834D7
      SecurityGroups:
        - Fn::GetAtt:
            - ASGInstanceSecurityGroup0525485D
            - GroupId
      UserData:
        Fn::Base64: |-
          #!/bin/bash
          yum update 
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo '<html>
          <body>
          <p style="font-size:50px;"> Welcome to my AWSome Server  </p>
          <button>Do not click here for info</button>
          <h1 style="background-color:Orange;">1 –  Congratulations on making the start </h1>
          <h1 style="background-color:DodgerBlue;">2</h1>
          <h1 style="background-color:MediumSeaGreen;">3</h1>
          <h1 style="background-color:Violet;">4</h1>
          <h1 style="background-color:LightGray;">5-    Happy Learning</h1>

          </body>
          </html>
          ' > /var/www/html/index.html
    DependsOn:
      - webinstanceroleD2301EA3
    Metadata:
      aws:cdk:path: WebAppStack/ASG/LaunchConfig
  ASG46ED3070:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      LaunchConfigurationName:
        Ref: ASGLaunchConfigC00AF12B
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: WebAppStack/ASG
      TargetGroupARNs:
        - Ref: LBListenerTargetGroupF04FCF6D
      VPCZoneIdentifier:
        - Ref: VPCPrivateSubnet1Subnet8BCA10E0
        - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: WebAppStack/ASG/ASG
  ASGScalingPolicyAModestLoadC5714E5A:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName:
        Ref: ASG46ED3070
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ALBRequestCountPerTarget
          ResourceLabel:
            Fn::Join:
              - ""
              - - Fn::Select:
                    - 1
                    - Fn::Split:
                        - /
                        - Ref: LBListener49E825B4
                - /
                - Fn::Select:
                    - 2
                    - Fn::Split:
                        - /
                        - Ref: LBListener49E825B4
                - /
                - Fn::Select:
                    - 3
                    - Fn::Split:
                        - /
                        - Ref: LBListener49E825B4
                - /
                - Fn::GetAtt:
                    - LBListenerTargetGroupF04FCF6D
                    - TargetGroupFullName
        TargetValue: 1
    DependsOn:
      - LBListener49E825B4
      - LBListenerTargetGroupF04FCF6D
    Metadata:
      aws:cdk:path: WebAppStack/ASG/ScalingPolicyAModestLoad/Resource
  LB8A12904C:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - LBSecurityGroup8A41EA2B
            - GroupId
      Subnets:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
      Type: application
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
    Metadata:
      aws:cdk:path: WebAppStack/LB/Resource
  LBSecurityGroup8A41EA2B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB WebAppStackLB6C4EBCF6
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: WebAppStack/LB/SecurityGroup/Resource
  LBSecurityGrouptoWebAppStackASGInstanceSecurityGroup85EB2896807620A451:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - LBSecurityGroup8A41EA2B
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - ASGInstanceSecurityGroup0525485D
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: WebAppStack/LB/SecurityGroup/to WebAppStackASGInstanceSecurityGroup85EB2896:80
  LBListener49E825B4:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: LBListenerTargetGroupF04FCF6D
          Type: forward
      LoadBalancerArn:
        Ref: LB8A12904C
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: WebAppStack/LB/Listener/Resource
  LBListenerTargetGroupF04FCF6D:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: WebAppStack/LB/Listener/TargetGroup/Resource
  webappBFAFB27E:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value:
        Fn::GetAtt:
          - LB8A12904C
          - DNSName
      Description: URL to test
      Name: /cdk-templates/web_app
    Metadata:
      aws:cdk:path: WebAppStack/web_app/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31STY+CMBD9Ld5LV93LXlljDInZEDBeN0MZsQotaacaQ/jvW0ARY7KnmfeRzpuBJZ/zeWAE/5zB1QYiPwelzHiTEogz89Rvg2LJm30t2Oqg9vGKxS4rpUhdppA67tkl2hHuICvxyT+50FotJJDUajR3zTqKu/IDtAHCK9xYbOTFt8+HI0VofP8wDEnuKCSf9VihIpaicEbSbWO0q/sM/xKRKgxa+8ave7plEireJHpY51EjZQmUwNjogyyxZeBIWwGlVAVvQg/SAYwzt+CUOK60OsjCmfEAb9YdmAJpZ/zlPXeXYu2P3W/8QrQMS7AkRakhz6D0ibx28V8qrGtv6Kdsvfbda2j6IFM89UlLqO6eRz/Rh2DjPhPYMmur7m8xXTIwUCEN74ygbVmCVjsj8IXvbzoR/H1y2U1rmdI58pP9uCy++GLJF7OTlTIwTpGskCdD/QN334V9ugIAAA==
    Metadata:
      aws:cdk:path: WebAppStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store.
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

