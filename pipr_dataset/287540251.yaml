Resources:
  ServicesCluster3103189B:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Resource
  ServicesClusterVpcD435EB34:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/Resource
  ServicesClusterVpcPublicSubnet1SubnetDD6A088E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1/Subnet
  ServicesClusterVpcPublicSubnet1RouteTableBC0D611B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1/RouteTable
  ServicesClusterVpcPublicSubnet1RouteTableAssociationA1728456:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPublicSubnet1RouteTableBC0D611B
      SubnetId:
        Ref: ServicesClusterVpcPublicSubnet1SubnetDD6A088E
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1/RouteTableAssociation
  ServicesClusterVpcPublicSubnet1DefaultRoute259C92BE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPublicSubnet1RouteTableBC0D611B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ServicesClusterVpcIGWA2805266
    DependsOn:
      - ServicesClusterVpcVPCGWE87FA323
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1/DefaultRoute
  ServicesClusterVpcPublicSubnet1EIP32B9BAE3:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1/EIP
  ServicesClusterVpcPublicSubnet1NATGateway4D6CD0D6:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ServicesClusterVpcPublicSubnet1EIP32B9BAE3
          - AllocationId
      SubnetId:
        Ref: ServicesClusterVpcPublicSubnet1SubnetDD6A088E
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet1/NATGateway
  ServicesClusterVpcPublicSubnet2Subnet9AB0F4DF:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2/Subnet
  ServicesClusterVpcPublicSubnet2RouteTable480C1720:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2/RouteTable
  ServicesClusterVpcPublicSubnet2RouteTableAssociation5CE3EB4C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPublicSubnet2RouteTable480C1720
      SubnetId:
        Ref: ServicesClusterVpcPublicSubnet2Subnet9AB0F4DF
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2/RouteTableAssociation
  ServicesClusterVpcPublicSubnet2DefaultRoute1E9C67DA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPublicSubnet2RouteTable480C1720
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ServicesClusterVpcIGWA2805266
    DependsOn:
      - ServicesClusterVpcVPCGWE87FA323
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2/DefaultRoute
  ServicesClusterVpcPublicSubnet2EIPC0251477:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2/EIP
  ServicesClusterVpcPublicSubnet2NATGatewayF3F9B3A9:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ServicesClusterVpcPublicSubnet2EIPC0251477
          - AllocationId
      SubnetId:
        Ref: ServicesClusterVpcPublicSubnet2Subnet9AB0F4DF
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PublicSubnet2/NATGateway
  ServicesClusterVpcPrivateSubnet1SubnetF0CB7544:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet1/Subnet
  ServicesClusterVpcPrivateSubnet1RouteTable45F12337:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet1/RouteTable
  ServicesClusterVpcPrivateSubnet1RouteTableAssociation5160C786:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPrivateSubnet1RouteTable45F12337
      SubnetId:
        Ref: ServicesClusterVpcPrivateSubnet1SubnetF0CB7544
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet1/RouteTableAssociation
  ServicesClusterVpcPrivateSubnet1DefaultRoute01E28D82:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPrivateSubnet1RouteTable45F12337
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ServicesClusterVpcPublicSubnet1NATGateway4D6CD0D6
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet1/DefaultRoute
  ServicesClusterVpcPrivateSubnet2Subnet4A2BA2B2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet2/Subnet
  ServicesClusterVpcPrivateSubnet2RouteTableF9D28EFF:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet2/RouteTable
  ServicesClusterVpcPrivateSubnet2RouteTableAssociation023F8BED:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPrivateSubnet2RouteTableF9D28EFF
      SubnetId:
        Ref: ServicesClusterVpcPrivateSubnet2Subnet4A2BA2B2
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet2/RouteTableAssociation
  ServicesClusterVpcPrivateSubnet2DefaultRoute2F14CE09:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ServicesClusterVpcPrivateSubnet2RouteTableF9D28EFF
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ServicesClusterVpcPublicSubnet2NATGatewayF3F9B3A9
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/PrivateSubnet2/DefaultRoute
  ServicesClusterVpcIGWA2805266:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: LaravelSampleStack/ServicesCluster/Cluster/Vpc
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/IGW
  ServicesClusterVpcVPCGWE87FA323:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: ServicesClusterVpcD435EB34
      InternetGatewayId:
        Ref: ServicesClusterVpcIGWA2805266
    Metadata:
      aws:cdk:path: LaravelSampleStack/ServicesCluster/Cluster/Vpc/VPCGW
  Service1TaskDefinitionTaskRole46CC1D16:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/TaskDefinition/TaskRole/Resource
  Service1TaskDefinitionB67621A8:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:da8bbb21d2a80ec7b101169d75fe9160178726dc24f968da9834d45bc29160da
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: Service1TaskDefinitionnginxLogGroup4D2EF2E6
              awslogs-stream-prefix: Service1_nginx
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: nginx
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:a908da6e13ca0bb551b7a4f2c3b470441f778916c6a535f95feaa382642cb90c
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: Service1TaskDefinitionfpmLogGroup43BEB5F8
              awslogs-stream-prefix: Service1_fpm
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: fpm
          PortMappings:
            - ContainerPort: 9000
              Protocol: tcp
        - Cpu: 32
          Essential: true
          Image: amazon/aws-xray-daemon
          MemoryReservation: 256
          Name: xray-daemon
          PortMappings:
            - ContainerPort: 2000
              Protocol: udp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - Service1TaskDefinitionExecutionRole495FD9F6
          - Arn
      Family: LaravelSampleStackService1TaskDefinitionA509F87C
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - Service1TaskDefinitionTaskRole46CC1D16
          - Arn
      Volumes:
        - Name: task
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/TaskDefinition/Resource
  Service1TaskDefinitionnginxLogGroup4D2EF2E6:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/TaskDefinition/nginx/LogGroup/Resource
  Service1TaskDefinitionExecutionRole495FD9F6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/TaskDefinition/ExecutionRole/Resource
  Service1TaskDefinitionExecutionRoleDefaultPolicyD4C9BCAD:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Service1TaskDefinitionnginxLogGroup4D2EF2E6
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Service1TaskDefinitionfpmLogGroup43BEB5F8
                - Arn
        Version: "2012-10-17"
      PolicyName: Service1TaskDefinitionExecutionRoleDefaultPolicyD4C9BCAD
      Roles:
        - Ref: Service1TaskDefinitionExecutionRole495FD9F6
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  Service1TaskDefinitionfpmLogGroup43BEB5F8:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/TaskDefinition/fpm/LogGroup/Resource
  Service1ServiceLBD6CFCBCE:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - Service1ServiceLBSecurityGroup2DE39FB5
            - GroupId
      Subnets:
        - Ref: ServicesClusterVpcPublicSubnet1SubnetDD6A088E
        - Ref: ServicesClusterVpcPublicSubnet2Subnet9AB0F4DF
      Type: application
    DependsOn:
      - ServicesClusterVpcPublicSubnet1DefaultRoute259C92BE
      - ServicesClusterVpcPublicSubnet2DefaultRoute1E9C67DA
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/LB/Resource
  Service1ServiceLBSecurityGroup2DE39FB5:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB LaravelSampleStackService1ServiceLBED39F2A0
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/LB/SecurityGroup/Resource
  Service1ServiceLBSecurityGrouptoLaravelSampleStackService1ServiceSecurityGroup20988AC180F4763767:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - Service1ServiceLBSecurityGroup2DE39FB5
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - Service1ServiceSecurityGroupA2B1282B
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/LB/SecurityGroup/to LaravelSampleStackService1ServiceSecurityGroup20988AC1:80
  Service1ServiceLBPublicListenerEDFC61C9:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: Service1ServiceLBPublicListenerECSGroup256C05EA
          Type: forward
      LoadBalancerArn:
        Ref: Service1ServiceLBD6CFCBCE
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/LB/PublicListener/Resource
  Service1ServiceLBPublicListenerECSGroup256C05EA:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,301,302
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/LB/PublicListener/ECSGroup/Resource
  Service1Service0F7876EE:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ServicesCluster3103189B
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 4
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 80
          TargetGroupArn:
            Ref: Service1ServiceLBPublicListenerECSGroup256C05EA
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - Service1ServiceSecurityGroupA2B1282B
                - GroupId
          Subnets:
            - Ref: ServicesClusterVpcPrivateSubnet1SubnetF0CB7544
            - Ref: ServicesClusterVpcPrivateSubnet2Subnet4A2BA2B2
      TaskDefinition:
        Ref: Service1TaskDefinitionB67621A8
    DependsOn:
      - Service1ServiceLBPublicListenerECSGroup256C05EA
      - Service1ServiceLBPublicListenerEDFC61C9
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/Service/Service
  Service1ServiceSecurityGroupA2B1282B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: LaravelSampleStack/Service1/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/Service/SecurityGroup/Resource
  Service1ServiceSecurityGroupfromLaravelSampleStackService1ServiceLBSecurityGroup74F45DC1803A02BBBC:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - Service1ServiceSecurityGroupA2B1282B
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - Service1ServiceLBSecurityGroup2DE39FB5
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service1/Service/Service/SecurityGroup/from LaravelSampleStackService1ServiceLBSecurityGroup74F45DC1:80
  Service2TaskDefinitionTaskRole4F0437AC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/TaskDefinition/TaskRole/Resource
  Service2TaskDefinition4C648EA7:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:da8bbb21d2a80ec7b101169d75fe9160178726dc24f968da9834d45bc29160da
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: Service2TaskDefinitionnginxLogGroup2D32CCC1
              awslogs-stream-prefix: Service2_nginx
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: nginx
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:e5c4a734db9f001e0914e092cbb483f38df099f104fab347c6b02822402e7575
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: Service2TaskDefinitionfpmLogGroup543F9ED7
              awslogs-stream-prefix: Service2_fpm
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: fpm
          PortMappings:
            - ContainerPort: 9000
              Protocol: tcp
        - Cpu: 32
          Essential: true
          Image: amazon/aws-xray-daemon
          MemoryReservation: 256
          Name: xray-daemon
          PortMappings:
            - ContainerPort: 2000
              Protocol: udp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - Service2TaskDefinitionExecutionRoleE8AB8E80
          - Arn
      Family: LaravelSampleStackService2TaskDefinition85F71714
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - Service2TaskDefinitionTaskRole4F0437AC
          - Arn
      Volumes:
        - Name: task
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/TaskDefinition/Resource
  Service2TaskDefinitionnginxLogGroup2D32CCC1:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/TaskDefinition/nginx/LogGroup/Resource
  Service2TaskDefinitionExecutionRoleE8AB8E80:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/TaskDefinition/ExecutionRole/Resource
  Service2TaskDefinitionExecutionRoleDefaultPolicy2F812760:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Service2TaskDefinitionnginxLogGroup2D32CCC1
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Service2TaskDefinitionfpmLogGroup543F9ED7
                - Arn
        Version: "2012-10-17"
      PolicyName: Service2TaskDefinitionExecutionRoleDefaultPolicy2F812760
      Roles:
        - Ref: Service2TaskDefinitionExecutionRoleE8AB8E80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  Service2TaskDefinitionfpmLogGroup543F9ED7:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/TaskDefinition/fpm/LogGroup/Resource
  Service2ServiceLB71B8B015:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - Service2ServiceLBSecurityGroupF0B2169A
            - GroupId
      Subnets:
        - Ref: ServicesClusterVpcPublicSubnet1SubnetDD6A088E
        - Ref: ServicesClusterVpcPublicSubnet2Subnet9AB0F4DF
      Type: application
    DependsOn:
      - ServicesClusterVpcPublicSubnet1DefaultRoute259C92BE
      - ServicesClusterVpcPublicSubnet2DefaultRoute1E9C67DA
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/LB/Resource
  Service2ServiceLBSecurityGroupF0B2169A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB LaravelSampleStackService2ServiceLBC77F4BC6
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/LB/SecurityGroup/Resource
  Service2ServiceLBSecurityGrouptoLaravelSampleStackService2ServiceSecurityGroup9770521D80128E7689:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - Service2ServiceLBSecurityGroupF0B2169A
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - Service2ServiceSecurityGroup5FF465DD
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/LB/SecurityGroup/to LaravelSampleStackService2ServiceSecurityGroup9770521D:80
  Service2ServiceLBPublicListenerA043FD7A:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: Service2ServiceLBPublicListenerECSGroupE9CC883E
          Type: forward
      LoadBalancerArn:
        Ref: Service2ServiceLB71B8B015
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/LB/PublicListener/Resource
  Service2ServiceLBPublicListenerECSGroupE9CC883E:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,301,302
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/LB/PublicListener/ECSGroup/Resource
  Service2Service6EA3AEEC:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ServicesCluster3103189B
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 4
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 80
          TargetGroupArn:
            Ref: Service2ServiceLBPublicListenerECSGroupE9CC883E
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - Service2ServiceSecurityGroup5FF465DD
                - GroupId
          Subnets:
            - Ref: ServicesClusterVpcPrivateSubnet1SubnetF0CB7544
            - Ref: ServicesClusterVpcPrivateSubnet2Subnet4A2BA2B2
      TaskDefinition:
        Ref: Service2TaskDefinition4C648EA7
    DependsOn:
      - Service2ServiceLBPublicListenerECSGroupE9CC883E
      - Service2ServiceLBPublicListenerA043FD7A
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/Service/Service
  Service2ServiceSecurityGroup5FF465DD:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: LaravelSampleStack/Service2/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/Service/SecurityGroup/Resource
  Service2ServiceSecurityGroupfromLaravelSampleStackService2ServiceLBSecurityGroup0866117D80B5B5F020:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - Service2ServiceSecurityGroup5FF465DD
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - Service2ServiceLBSecurityGroupF0B2169A
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service2/Service/Service/SecurityGroup/from LaravelSampleStackService2ServiceLBSecurityGroup0866117D:80
  Service3TaskDefinitionTaskRole15577ACE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/TaskDefinition/TaskRole/Resource
  Service3TaskDefinition055A8857:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:da8bbb21d2a80ec7b101169d75fe9160178726dc24f968da9834d45bc29160da
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: Service3TaskDefinitionnginxLogGroupED50D8E6
              awslogs-stream-prefix: Service3_nginx
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: nginx
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:ef9392fe36368fb5fb09b7b5603b467d94942887f8a6dfb4b9bcaf7dd135ada5
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: Service3TaskDefinitionfpmLogGroup598A643E
              awslogs-stream-prefix: Service3_fpm
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: fpm
          PortMappings:
            - ContainerPort: 9000
              Protocol: tcp
        - Cpu: 32
          Essential: true
          Image: amazon/aws-xray-daemon
          MemoryReservation: 256
          Name: xray-daemon
          PortMappings:
            - ContainerPort: 2000
              Protocol: udp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - Service3TaskDefinitionExecutionRoleF3948439
          - Arn
      Family: LaravelSampleStackService3TaskDefinitionD6BC2A58
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - Service3TaskDefinitionTaskRole15577ACE
          - Arn
      Volumes:
        - Name: task
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/TaskDefinition/Resource
  Service3TaskDefinitionnginxLogGroupED50D8E6:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/TaskDefinition/nginx/LogGroup/Resource
  Service3TaskDefinitionExecutionRoleF3948439:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/TaskDefinition/ExecutionRole/Resource
  Service3TaskDefinitionExecutionRoleDefaultPolicy0C2F5666:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Service3TaskDefinitionnginxLogGroupED50D8E6
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Service3TaskDefinitionfpmLogGroup598A643E
                - Arn
        Version: "2012-10-17"
      PolicyName: Service3TaskDefinitionExecutionRoleDefaultPolicy0C2F5666
      Roles:
        - Ref: Service3TaskDefinitionExecutionRoleF3948439
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  Service3TaskDefinitionfpmLogGroup598A643E:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/TaskDefinition/fpm/LogGroup/Resource
  Service3ServiceLB0E9AD891:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - Service3ServiceLBSecurityGroupF582996A
            - GroupId
      Subnets:
        - Ref: ServicesClusterVpcPublicSubnet1SubnetDD6A088E
        - Ref: ServicesClusterVpcPublicSubnet2Subnet9AB0F4DF
      Type: application
    DependsOn:
      - ServicesClusterVpcPublicSubnet1DefaultRoute259C92BE
      - ServicesClusterVpcPublicSubnet2DefaultRoute1E9C67DA
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/LB/Resource
  Service3ServiceLBSecurityGroupF582996A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB LaravelSampleStackService3ServiceLBA69CC0A3
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/LB/SecurityGroup/Resource
  Service3ServiceLBSecurityGrouptoLaravelSampleStackService3ServiceSecurityGroupEA2107F5806FBB73B6:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - Service3ServiceLBSecurityGroupF582996A
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - Service3ServiceSecurityGroupF7CD66D6
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/LB/SecurityGroup/to LaravelSampleStackService3ServiceSecurityGroupEA2107F5:80
  Service3ServiceLBPublicListenerCD6C4C80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: Service3ServiceLBPublicListenerECSGroup5B188C49
          Type: forward
      LoadBalancerArn:
        Ref: Service3ServiceLB0E9AD891
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/LB/PublicListener/Resource
  Service3ServiceLBPublicListenerECSGroup5B188C49:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,301,302
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/LB/PublicListener/ECSGroup/Resource
  Service3Service5C8C2D0C:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ServicesCluster3103189B
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 4
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 80
          TargetGroupArn:
            Ref: Service3ServiceLBPublicListenerECSGroup5B188C49
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - Service3ServiceSecurityGroupF7CD66D6
                - GroupId
          Subnets:
            - Ref: ServicesClusterVpcPrivateSubnet1SubnetF0CB7544
            - Ref: ServicesClusterVpcPrivateSubnet2Subnet4A2BA2B2
      TaskDefinition:
        Ref: Service3TaskDefinition055A8857
    DependsOn:
      - Service3ServiceLBPublicListenerECSGroup5B188C49
      - Service3ServiceLBPublicListenerCD6C4C80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/Service/Service
  Service3ServiceSecurityGroupF7CD66D6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: LaravelSampleStack/Service3/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/Service/SecurityGroup/Resource
  Service3ServiceSecurityGroupfromLaravelSampleStackService3ServiceLBSecurityGroupAB71EFBB8012AE4BC5:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - Service3ServiceSecurityGroupF7CD66D6
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - Service3ServiceLBSecurityGroupF582996A
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Service3/Service/Service/SecurityGroup/from LaravelSampleStackService3ServiceLBSecurityGroupAB71EFBB:80
  FrontendTaskDefinitionTaskRole3973B689:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/TaskDefinition/TaskRole/Resource
  FrontendTaskDefinition423E880D:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: SERVICE1_HOST
              Value:
                Fn::GetAtt:
                  - Service1ServiceLBD6CFCBCE
                  - DNSName
            - Name: SERVICE2_HOST
              Value:
                Fn::GetAtt:
                  - Service2ServiceLB71B8B015
                  - DNSName
            - Name: SERVICE3_HOST
              Value:
                Fn::GetAtt:
                  - Service3ServiceLB0E9AD891
                  - DNSName
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:da8bbb21d2a80ec7b101169d75fe9160178726dc24f968da9834d45bc29160da
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: FrontendTaskDefinitionnginxLogGroupBE0B1672
              awslogs-stream-prefix: Frontend_nginx
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: nginx
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Environment:
            - Name: SERVICE1_HOST
              Value:
                Fn::GetAtt:
                  - Service1ServiceLBD6CFCBCE
                  - DNSName
            - Name: SERVICE2_HOST
              Value:
                Fn::GetAtt:
                  - Service2ServiceLB71B8B015
                  - DNSName
            - Name: SERVICE3_HOST
              Value:
                Fn::GetAtt:
                  - Service3ServiceLB0E9AD891
                  - DNSName
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:6aafaa2020264c41fd6f27d47aa84308f68b72f39098df0244c71e7ed8dbdb2a
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: FrontendTaskDefinitionfpmLogGroup1E328370
              awslogs-stream-prefix: Frontend_fpm
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: fpm
          PortMappings:
            - ContainerPort: 9000
              Protocol: tcp
        - Cpu: 32
          Essential: true
          Image: amazon/aws-xray-daemon
          MemoryReservation: 256
          Name: xray-daemon
          PortMappings:
            - ContainerPort: 2000
              Protocol: udp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - FrontendTaskDefinitionExecutionRoleF1A712DE
          - Arn
      Family: LaravelSampleStackFrontendTaskDefinitionBD6997B6
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - FrontendTaskDefinitionTaskRole3973B689
          - Arn
      Volumes:
        - Name: task
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/TaskDefinition/Resource
  FrontendTaskDefinitionnginxLogGroupBE0B1672:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/TaskDefinition/nginx/LogGroup/Resource
  FrontendTaskDefinitionExecutionRoleF1A712DE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/TaskDefinition/ExecutionRole/Resource
  FrontendTaskDefinitionExecutionRoleDefaultPolicyA240D19B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - FrontendTaskDefinitionnginxLogGroupBE0B1672
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - FrontendTaskDefinitionfpmLogGroup1E328370
                - Arn
        Version: "2012-10-17"
      PolicyName: FrontendTaskDefinitionExecutionRoleDefaultPolicyA240D19B
      Roles:
        - Ref: FrontendTaskDefinitionExecutionRoleF1A712DE
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  FrontendTaskDefinitionfpmLogGroup1E328370:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/TaskDefinition/fpm/LogGroup/Resource
  FrontendServiceLBDEBB78C1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - FrontendServiceLBSecurityGroupB1F70BC4
            - GroupId
      Subnets:
        - Ref: ServicesClusterVpcPublicSubnet1SubnetDD6A088E
        - Ref: ServicesClusterVpcPublicSubnet2Subnet9AB0F4DF
      Type: application
    DependsOn:
      - ServicesClusterVpcPublicSubnet1DefaultRoute259C92BE
      - ServicesClusterVpcPublicSubnet2DefaultRoute1E9C67DA
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/LB/Resource
  FrontendServiceLBSecurityGroupB1F70BC4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB LaravelSampleStackFrontendServiceLB6209F45D
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/LB/SecurityGroup/Resource
  FrontendServiceLBSecurityGrouptoLaravelSampleStackFrontendServiceSecurityGroup23E41871809FE7E49E:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - FrontendServiceLBSecurityGroupB1F70BC4
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - FrontendServiceSecurityGroupAF46CA4B
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/LB/SecurityGroup/to LaravelSampleStackFrontendServiceSecurityGroup23E41871:80
  FrontendServiceLBPublicListenerFE7333CF:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: FrontendServiceLBPublicListenerECSGroup9C873B12
          Type: forward
      LoadBalancerArn:
        Ref: FrontendServiceLBDEBB78C1
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/LB/PublicListener/Resource
  FrontendServiceLBPublicListenerECSGroup9C873B12:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,301,302
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/LB/PublicListener/ECSGroup/Resource
  FrontendService26328E93:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ServicesCluster3103189B
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 2
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 80
          TargetGroupArn:
            Ref: FrontendServiceLBPublicListenerECSGroup9C873B12
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - FrontendServiceSecurityGroupAF46CA4B
                - GroupId
          Subnets:
            - Ref: ServicesClusterVpcPrivateSubnet1SubnetF0CB7544
            - Ref: ServicesClusterVpcPrivateSubnet2Subnet4A2BA2B2
      TaskDefinition:
        Ref: FrontendTaskDefinition423E880D
    DependsOn:
      - FrontendServiceLBPublicListenerECSGroup9C873B12
      - FrontendServiceLBPublicListenerFE7333CF
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/Service/Service
  FrontendServiceSecurityGroupAF46CA4B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: LaravelSampleStack/Frontend/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ServicesClusterVpcD435EB34
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/Service/SecurityGroup/Resource
  FrontendServiceSecurityGroupfromLaravelSampleStackFrontendServiceLBSecurityGroupC5F950D380AF65B3E4:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - FrontendServiceSecurityGroupAF46CA4B
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - FrontendServiceLBSecurityGroupB1F70BC4
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: LaravelSampleStack/Frontend/Service/Service/SecurityGroup/from LaravelSampleStackFrontendServiceLBSecurityGroupC5F950D3:80
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.58.0,@aws-cdk/aws-applicationautoscaling=1.58.0,@aws-cdk/aws-autoscaling=1.58.0,@aws-cdk/aws-autoscaling-common=1.58.0,@aws-cdk/aws-autoscaling-hooktargets=1.58.0,@aws-cdk/aws-certificatemanager=1.58.0,@aws-cdk/aws-cloudwatch=1.58.0,@aws-cdk/aws-codeguruprofiler=1.58.0,@aws-cdk/aws-ec2=1.58.0,@aws-cdk/aws-ecr=1.58.0,@aws-cdk/aws-ecr-assets=1.58.0,@aws-cdk/aws-ecs=1.58.0,@aws-cdk/aws-ecs-patterns=1.58.0,@aws-cdk/aws-elasticloadbalancingv2=1.58.0,@aws-cdk/aws-events=1.58.0,@aws-cdk/aws-events-targets=1.58.0,@aws-cdk/aws-iam=1.58.0,@aws-cdk/aws-kms=1.58.0,@aws-cdk/aws-lambda=1.58.0,@aws-cdk/aws-logs=1.58.0,@aws-cdk/aws-route53=1.58.0,@aws-cdk/aws-route53-targets=1.58.0,@aws-cdk/aws-s3=1.58.0,@aws-cdk/aws-s3-assets=1.58.0,@aws-cdk/aws-servicediscovery=1.58.0,@aws-cdk/aws-sns=1.58.0,@aws-cdk/aws-sns-subscriptions=1.58.0,@aws-cdk/aws-sqs=1.58.0,@aws-cdk/aws-ssm=1.58.0,@aws-cdk/cloud-assembly-schema=1.58.0,@aws-cdk/core=1.58.0,@aws-cdk/custom-resources=1.58.0,@aws-cdk/cx-api=1.58.0,@aws-cdk/region-info=1.58.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Outputs:
  Service1ServiceLoadBalancerDNSAF979258:
    Value:
      Fn::GetAtt:
        - Service1ServiceLBD6CFCBCE
        - DNSName
  Service1ServiceServiceURL36D7481E:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - Service1ServiceLBD6CFCBCE
              - DNSName
  Service2ServiceLoadBalancerDNSE0F882CD:
    Value:
      Fn::GetAtt:
        - Service2ServiceLB71B8B015
        - DNSName
  Service2ServiceServiceURL2DC35245:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - Service2ServiceLB71B8B015
              - DNSName
  Service3ServiceLoadBalancerDNS2844F73F:
    Value:
      Fn::GetAtt:
        - Service3ServiceLB0E9AD891
        - DNSName
  Service3ServiceServiceURL01711549:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - Service3ServiceLB0E9AD891
              - DNSName
  FrontendServiceLoadBalancerDNSC9B1876C:
    Value:
      Fn::GetAtt:
        - FrontendServiceLBDEBB78C1
        - DNSName
  FrontendServiceServiceURLBDE07C4B:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - FrontendServiceLBDEBB78C1
              - DNSName
  FrontendEnvironmentsValuesADE83234:
    Value:
      Fn::Join:
        - ""
        - - '{"SERVICE1_HOST":"'
          - Fn::GetAtt:
              - Service1ServiceLBD6CFCBCE
              - DNSName
          - '","SERVICE2_HOST":"'
          - Fn::GetAtt:
              - Service2ServiceLB71B8B015
              - DNSName
          - '","SERVICE3_HOST":"'
          - Fn::GetAtt:
              - Service3ServiceLB0E9AD891
              - DNSName
          - '"}'
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

