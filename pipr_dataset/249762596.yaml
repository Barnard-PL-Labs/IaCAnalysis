Resources:
  ec2ManagerFunctionServiceRole824CA53B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2ManagerFunction/ServiceRole/Resource
  ec2ManagerFunctionServiceRoleDefaultPolicy142FE8FE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ec2:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ec2ManagerFunctionServiceRoleDefaultPolicy142FE8FE
      Roles:
        - Ref: ec2ManagerFunctionServiceRole824CA53B
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2ManagerFunction/ServiceRole/DefaultPolicy/Resource
  ec2ManagerFunction8F626876:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2S3BucketB3DE601B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2S3VersionKeyCE46E223
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2S3VersionKeyCE46E223
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - ec2ManagerFunctionServiceRole824CA53B
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          INSTANCE_IDS: i-04d505c006501724b
    DependsOn:
      - ec2ManagerFunctionServiceRoleDefaultPolicy142FE8FE
      - ec2ManagerFunctionServiceRole824CA53B
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2ManagerFunction/Resource
      aws:asset:path: asset.a9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2
      aws:asset:property: Code
  ec2ManagerFunctionAllowEventRuleEc2ManagerStackSwitchOnRule578ABF83EA590338:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ec2ManagerFunction8F626876
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - SwitchOnRule25FCFEF0
          - Arn
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2ManagerFunction/AllowEventRuleEc2ManagerStackSwitchOnRule578ABF83
  ec2ManagerFunctionAllowEventRuleEc2ManagerStackSwitchOffRule19C82084F0B946E7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ec2ManagerFunction8F626876
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - SwitchOffRuleBC88F6DF
          - Arn
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2ManagerFunction/AllowEventRuleEc2ManagerStackSwitchOffRule19C82084
  ec2managerapiC0F58083:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ec2 manager
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Resource
  ec2managerapiDeploymentBA91DBF10bf9ac9389433f62158bdda058994748:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ec2managerapiC0F58083
      Description: Automatically created by the RestApi construct
    DependsOn:
      - ec2managerapistatedesiredStateGETECE5B2FC
      - ec2managerapistatedesiredStateF3C96307
      - ec2managerapistate62DD7B3F
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Deployment/Resource
  ec2managerapiDeploymentStageprod76FD0212:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: ec2managerapiC0F58083
      DeploymentId:
        Ref: ec2managerapiDeploymentBA91DBF10bf9ac9389433f62158bdda058994748
      StageName: prod
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/DeploymentStage.prod/Resource
  ec2managerapiCloudWatchRole0376590F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/CloudWatchRole/Resource
  ec2managerapiAccount86937C9B:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - ec2managerapiCloudWatchRole0376590F
          - Arn
    DependsOn:
      - ec2managerapiC0F58083
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Account
  ec2managerapistate62DD7B3F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ec2managerapiC0F58083
          - RootResourceId
      PathPart: state
      RestApiId:
        Ref: ec2managerapiC0F58083
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Default/state/Resource
  ec2managerapistatedesiredStateF3C96307:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ec2managerapistate62DD7B3F
      PathPart: "{desiredState}"
      RestApiId:
        Ref: ec2managerapiC0F58083
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Default/state/{desiredState}/Resource
  ec2managerapistatedesiredStateGETApiPermissionEc2ManagerStackec2managerapiE17B9F40GETstatedesiredStateFB27509F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ec2ManagerFunction8F626876
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ec2managerapiC0F58083
            - /
            - Ref: ec2managerapiDeploymentStageprod76FD0212
            - /GET/state/{desiredState}
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Default/state/{desiredState}/GET/ApiPermission.Ec2ManagerStackec2managerapiE17B9F40.GET..state.{desiredState}
  ec2managerapistatedesiredStateGETApiPermissionTestEc2ManagerStackec2managerapiE17B9F40GETstatedesiredStateA5BC0C7B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ec2ManagerFunction8F626876
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ec2managerapiC0F58083
            - /test-invoke-stage/GET/state/{desiredState}
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Default/state/{desiredState}/GET/ApiPermission.Test.Ec2ManagerStackec2managerapiE17B9F40.GET..state.{desiredState}
  ec2managerapistatedesiredStateGETECE5B2FC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ec2managerapistatedesiredStateF3C96307
      RestApiId:
        Ref: ec2managerapiC0F58083
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ec2ManagerFunction8F626876
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Ec2ManagerStack/ec2manager-api/Default/state/{desiredState}/GET/Resource
  SwitchOnRule25FCFEF0:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(15 6 ? * MON-SAT *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - ec2ManagerFunction8F626876
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: Ec2ManagerStack/SwitchOnRule/Resource
  SwitchOffRuleBC88F6DF:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(15 16 ? * MON-SAT *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - ec2ManagerFunction8F626876
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: Ec2ManagerStack/SwitchOffRule/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.30.0,@aws-cdk/aws-apigateway=1.30.0,@aws-cdk/aws-applicationautoscaling=1.30.0,@aws-cdk/aws-autoscaling=1.30.0,@aws-cdk/aws-autoscaling-common=1.30.0,@aws-cdk/aws-autoscaling-hooktargets=1.30.0,@aws-cdk/aws-cloudwatch=1.30.0,@aws-cdk/aws-ec2=1.30.0,@aws-cdk/aws-ecr=1.30.0,@aws-cdk/aws-ecr-assets=1.30.0,@aws-cdk/aws-ecs=1.30.0,@aws-cdk/aws-elasticloadbalancingv2=1.30.0,@aws-cdk/aws-events=1.30.0,@aws-cdk/aws-events-targets=1.30.0,@aws-cdk/aws-iam=1.30.0,@aws-cdk/aws-kms=1.30.0,@aws-cdk/aws-lambda=1.30.0,@aws-cdk/aws-logs=1.30.0,@aws-cdk/aws-s3=1.30.0,@aws-cdk/aws-s3-assets=1.30.0,@aws-cdk/aws-servicediscovery=1.30.0,@aws-cdk/aws-sns=1.30.0,@aws-cdk/aws-sns-subscriptions=1.30.0,@aws-cdk/aws-sqs=1.30.0,@aws-cdk/aws-ssm=1.30.0,@aws-cdk/core=1.30.0,@aws-cdk/cx-api=1.30.0,@aws-cdk/region-info=1.30.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersa9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2S3BucketB3DE601B:
    Type: String
    Description: S3 bucket for asset "a9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2"
  AssetParametersa9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2S3VersionKeyCE46E223:
    Type: String
    Description: S3 key for asset version "a9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2"
  AssetParametersa9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2ArtifactHashC97AD3DA:
    Type: String
    Description: Artifact hash for asset "a9df6a340d9db96b2afa3f113871a74ae9f489fc9ad60c8aa18b296b9b3c8fb2"
Outputs:
  ec2managerapiEndpoint31094DCC:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ec2managerapiC0F58083
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: ec2managerapiDeploymentStageprod76FD0212
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

