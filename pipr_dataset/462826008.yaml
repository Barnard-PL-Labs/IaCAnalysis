Resources:
  VoteTableC0BC27A7:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: usage-tracker-dev/VoteTable/Resource
  voteapi229EBB9E:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: voteapi
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Resource
  voteapiCloudWatchRole275B17F3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/CloudWatchRole/Resource
  voteapiAccountEE708D77:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - voteapiCloudWatchRole275B17F3
          - Arn
    DependsOn:
      - voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Account
  voteapiDeploymentDFA69E7521f9beb5c04301c48899fb5b6d0cb40b:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: voteapi229EBB9E
      Description: Automatically created by the RestApi construct
    DependsOn:
      - voteapilogGETA177FF84
      - voteapilogOPTIONS8A6CEE46
      - voteapilogFDB24C45
      - voteapiOPTIONS18BF052C
      - voteapiviewGET6AB7228A
      - voteapiviewOPTIONSA5EEC1A7
      - voteapiview994E76F1
      - voteapiviewsGET1869DF74
      - voteapiviewsOPTIONS394E5BF2
      - voteapiviews082934B8
      - voteapivotedownGETC4739EB2
      - voteapivotedownOPTIONSE2716097
      - voteapivotedownPOST60E72129
      - voteapivotedown5C84C681
      - voteapivoteOPTIONS4BD7F7A1
      - voteapivote1B03C419
      - voteapivoteupGET94B1E15F
      - voteapivoteupOPTIONSC3D29766
      - voteapivoteupPOST4998B840
      - voteapivoteup4D09E1BE
      - voteapivotesGETCA9DCE75
      - voteapivotesOPTIONSFFB746AA
      - voteapivotesPOST6FC990E9
      - voteapivotesDA8989BD
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Deployment/Resource
  voteapiDeploymentStageprodD933D816:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: voteapi229EBB9E
      DeploymentId:
        Ref: voteapiDeploymentDFA69E7521f9beb5c04301c48899fb5b6d0cb40b
      StageName: prod
      TracingEnabled: true
    DependsOn:
      - voteapiAccountEE708D77
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/DeploymentStage.prod/Resource
  voteapiOPTIONS18BF052C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - voteapi229EBB9E
          - RootResourceId
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/OPTIONS/Resource
  voteapivotesDA8989BD:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - voteapi229EBB9E
          - RootResourceId
      PathPart: votes
      RestApiId:
        Ref: voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/votes/Resource
  voteapivotesOPTIONSFFB746AA:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: voteapivotesDA8989BD
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/votes/OPTIONS/Resource
  voteapivotesGETCA9DCE75:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: voteapivotesDA8989BD
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                #set($inputRoot = $input.path('$'))
                {
                  "votes": [
                    #foreach($elem in $inputRoot.Items) {
                        "Url": "$elem.SK.S",
                        "Count": "$elem.CountNr.N"
                    }#if($foreach.hasNext),#end
                    #end
                  ]
                }
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "SITE#")
                  #set ($vote_pre = "VOTE#")
                  {
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "KeyConditionExpression": "PK = :pk",
                    "ExpressionAttributeValues": {
                        ":pk": {
                          "S": "$site_pre$input.params('origin')"
                        }
                    }
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/Query
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/votes/GET/Resource
  voteapivotesPOST6FC990E9:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: voteapivotesDA8989BD
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                {
                  "id": "$context.requestId"
                }
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  { 
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "Item": {
                      "Host": {
                        "S": "$context.requestId"
                      },
                      "Page": {
                        "S": "$context.domainName"
                      },
                      "Count": {
                          "N": "1"
                      },
                      "SourceIP": {
                          "S": "$context.identity.sourceIp"
                      },
                      "UserAgent": {
                          "S": "$context.identity.userAgent"
                      },
                      "OriginHost" : {
                          "S": "$input.params('origin')"
                      },
                      "RefererPage" : {
                          "S": "$input.params('x-referer')"
                      }
                    }
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/PutItem
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/votes/POST/Resource
  voteapivote1B03C419:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - voteapi229EBB9E
          - RootResourceId
      PathPart: vote
      RestApiId:
        Ref: voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/Resource
  voteapivoteOPTIONS4BD7F7A1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: voteapivote1B03C419
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/OPTIONS/Resource
  voteapivoteup4D09E1BE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: voteapivote1B03C419
      PathPart: up
      RestApiId:
        Ref: voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/up/Resource
  voteapivoteupOPTIONSC3D29766:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: voteapivoteup4D09E1BE
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/up/OPTIONS/Resource
  voteapivoteupPOST4998B840:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: voteapivoteup4D09E1BE
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                #set($inputRoot = $input.path('$'))
                #if(!$inputRoot.toString().contains("Attributes"))
                #set($context.responseOverride.status = 404)
                #set ($errorMessage = $input.path('$.message')))
                {
                  "message" : "$errorMessage"
                }
                #else
                {
                  "id": "$context.requestId",
                  "PK": "$inputRoot.Attributes.PK.S",
                  "SK": "$inputRoot.Attributes.SK.S",
                  "Count": "$inputRoot.Attributes.CountNr.N"
                }
                #end
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "SITE#")
                  #set ($vote_pre = "VOTE#")
                  { 
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "Key": {
                      "PK": {
                        "S": "$site_pre$input.params('origin')"
                      },
                      "SK": {
                        "S": "$vote_pre$input.params('x-referer')"
                      }
                    },
                    "UpdateExpression": "ADD CountNr :c",
                    "ExpressionAttributeValues": {
                        ":c": {
                          "N": "1"
                        }
                      },
                    "ReturnValues": "ALL_NEW"
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/UpdateItem
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/up/POST/Resource
  voteapivoteupGET94B1E15F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: voteapivoteup4D09E1BE
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                #set($inputRoot = $input.path('$'))
                #if(!$inputRoot.toString().contains("Attributes"))
                #set($context.responseOverride.status = 404)
                #set ($errorMessage = $input.path('$.message')))
                {
                  "message" : "$errorMessage"
                }
                #else
                {
                  "id": "$context.requestId",
                  "PK": "$inputRoot.Attributes.PK.S",
                  "SK": "$inputRoot.Attributes.SK.S",
                  "Count": "$inputRoot.Attributes.CountNr.N"
                }
                #end
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "SITE#")
                  #set ($vote_pre = "VOTE#")
                  { 
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "Key": {
                      "PK": {
                        "S": "$site_pre$input.params('origin')"
                      },
                      "SK": {
                        "S": "$vote_pre$input.params('x-referer')"
                      }
                    },
                    "UpdateExpression": "ADD CountNr :c",
                    "ExpressionAttributeValues": {
                        ":c": {
                          "N": "1"
                        }
                      },
                    "ReturnValues": "ALL_NEW"
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/UpdateItem
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/up/GET/Resource
  voteapivotedown5C84C681:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: voteapivote1B03C419
      PathPart: down
      RestApiId:
        Ref: voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/down/Resource
  voteapivotedownOPTIONSE2716097:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: voteapivotedown5C84C681
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/down/OPTIONS/Resource
  voteapivotedownGETC4739EB2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: voteapivotedown5C84C681
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                #set($inputRoot = $input.path('$'))
                #if(!$inputRoot.toString().contains("Attributes"))
                #set($context.responseOverride.status = 404)
                #set ($errorMessage = $input.path('$.message')))
                {
                  "message" : "$errorMessage"
                }
                #else
                {
                  "id": "$context.requestId",
                  "PK": "$inputRoot.Attributes.PK.S",
                  "SK": "$inputRoot.Attributes.SK.S",
                  "Count": "$inputRoot.Attributes.CountNr.N"
                }
                #end
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "SITE#")
                  #set ($vote_pre = "VOTE#")
                  { 
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "Key": {
                      "PK": {
                        "S": "$site_pre$input.params('origin')"
                      },
                      "SK": {
                        "S": "$vote_pre$input.params('x-referer')"
                      }
                    },
                    "UpdateExpression": "ADD CountNr :c",
                    "ExpressionAttributeValues": {
                        ":c": {
                          "N": "-1"
                        }
                      },
                    "ReturnValues": "ALL_NEW"
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/UpdateItem
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/down/GET/Resource
  voteapivotedownPOST60E72129:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: voteapivotedown5C84C681
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                #set($inputRoot = $input.path('$'))
                #if(!$inputRoot.toString().contains("Attributes"))
                #set($context.responseOverride.status = 404)
                #set ($errorMessage = $input.path('$.message')))
                {
                  "message" : "$errorMessage"
                }
                #else
                {
                  "id": "$context.requestId",
                  "PK": "$inputRoot.Attributes.PK.S",
                  "SK": "$inputRoot.Attributes.SK.S",
                  "Count": "$inputRoot.Attributes.CountNr.N"
                }
                #end
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "SITE#")
                  #set ($vote_pre = "VOTE#")
                  { 
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "Key": {
                      "PK": {
                        "S": "$site_pre$input.params('origin')"
                      },
                      "SK": {
                        "S": "$vote_pre$input.params('x-referer')"
                      }
                    },
                    "UpdateExpression": "ADD CountNr :c",
                    "ExpressionAttributeValues": {
                        ":c": {
                          "N": "-1"
                        }
                      },
                    "ReturnValues": "ALL_NEW"
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/UpdateItem
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/vote/down/POST/Resource
  voteapiviews082934B8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - voteapi229EBB9E
          - RootResourceId
      PathPart: views
      RestApiId:
        Ref: voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/views/Resource
  voteapiviewsOPTIONS394E5BF2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: voteapiviews082934B8
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/views/OPTIONS/Resource
  voteapiviewsGET1869DF74:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: voteapiviews082934B8
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                #set($inputRoot = $input.path('$'))
                {
                  "views": [
                    #foreach($elem in $inputRoot.Items) {
                        "Url": "$elem.SK.S",
                        "Count": "$elem.CountNr.N"
                    }#if($foreach.hasNext),#end
                    #end
                  ]
                }
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "SITE#")
                  #set ($view_pre = "VIEW#")
                  {
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "KeyConditionExpression": "PK = :pk",
                    "ExpressionAttributeValues": {
                        ":pk": {
                          "S": "$site_pre$input.params('origin')"
                        }
                    }
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/Query
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/views/GET/Resource
  voteapiview994E76F1:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - voteapi229EBB9E
          - RootResourceId
      PathPart: view
      RestApiId:
        Ref: voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/view/Resource
  voteapiviewOPTIONSA5EEC1A7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: voteapiview994E76F1
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/view/OPTIONS/Resource
  voteapiviewGET6AB7228A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: voteapiview994E76F1
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                #set($inputRoot = $input.path('$'))
                #if(!$inputRoot.toString().contains("Attributes"))
                #set($context.responseOverride.status = 404)
                #set ($errorMessage = $input.path('$.message')))
                {
                  "message" : "$errorMessage"
                }
                #else
                {
                  "id": "$context.requestId",
                  "PK": "$inputRoot.Attributes.PK.S",
                  "SK": "$inputRoot.Attributes.SK.S",
                  "Count": "$inputRoot.Attributes.CountNr.N"
                }
                #end
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "SITE#")
                  #set ($view_pre = "VIEW#")
                  { 
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "Key": {
                      "PK": {
                        "S": "$site_pre$input.params('origin')"
                      },
                      "SK": {
                        "S": "$view_pre$input.params('x-referer')"
                      }
                    },
                    "UpdateExpression": "ADD CountNr :c",
                    "ExpressionAttributeValues": {
                        ":c": {
                          "N": "1"
                        }
                      },
                    "ReturnValues": "ALL_NEW"
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/UpdateItem
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/view/GET/Resource
  voteapilogFDB24C45:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - voteapi229EBB9E
          - RootResourceId
      PathPart: log
      RestApiId:
        Ref: voteapi229EBB9E
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/log/Resource
  voteapilogOPTIONS8A6CEE46:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: voteapilogFDB24C45
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/log/OPTIONS/Resource
  voteapilogGETA177FF84:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: voteapilogFDB24C45
      RestApiId:
        Ref: voteapi229EBB9E
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - VoteAPIRoleF32CE557
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Referer,X-Dimension,X-Language,sec-ch-ua,sec-ch-ua-mobile,sec-ch-ua-platform'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,POST'"
            ResponseTemplates:
              application/json: |
                
                {
                  "id": "$context.requestId"
                }
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  
                  #set ($site_pre = "LOG#")
                  { 
                    "TableName": "
                - Ref: VoteTableC0BC27A7
                - |
                  ",
                    "Item": {
                      "PK": {
                        "S": "$site_pre$input.params('origin')"
                      },
                      "SK": {
                        "S": "$context.requestTime"
                      },
                      "SourceIP": {
                          "S": "$context.identity.sourceIp"
                      },
                      "UserAgent": {
                          "S": "$context.identity.userAgent"
                      },
                      "Dimension": {
                        "S": "$input.params('x-dimension')"
                      },
                      "OriginHost" : {
                          "S": "$input.params('origin')"
                      },
                      "Language" : {
                        "S": "$input.params('x-language')"
                      },
                      "RefererPage" : {
                        "S": "$input.params('x-referer')"
                      }
                    }
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:dynamodb:action/PutItem
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: usage-tracker-dev/voteapi/Default/log/GET/Resource
  VoteAPIRoleF32CE557:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: usage-tracker-dev/VoteAPIRole/Resource
  VoteAPIRoleDefaultPolicy617E0899:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - VoteTableC0BC27A7
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: VoteAPIRoleDefaultPolicy617E0899
      Roles:
        - Ref: VoteAPIRoleF32CE557
    Metadata:
      aws:cdk:path: usage-tracker-dev/VoteAPIRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WOwQ6CMBBEv4V7qcDJK+rVaNC7WdoVC5QS2koI4d8tBRM47duZ7M4kNI5oFECvQ8arsBY5HR8GWEWc9Br50IBU3IlPyGsk53fjYSLQigIM9jDQMUNt0lbM7gZTxpRtDLlgW6tBokOnbjaXU/iXC7hTZTuGJ9BIrmg+is/mSn93DfE8EQHSxaulmZ93VQs2zOtC07Q7vVnTWrN/0iiOtNSHb3ykcULjoNRChJ3rLiTSbJk/ooYL9SkBAAA=
    Metadata:
      aws:cdk:path: usage-tracker-dev/CDKMetadata/Default
Outputs:
  voteapiEndpointD3B79C94:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: voteapi229EBB9E
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: voteapiDeploymentStageprodD933D816
          - /
  apiUrl:
    Description: api url
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: voteapi229EBB9E
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: voteapiDeploymentStageprodD933D816
          - /
    Export:
      Name: apiUrl
  table:
    Description: table arn
    Value:
      Fn::GetAtt:
        - VoteTableC0BC27A7
        - Arn
    Export:
      Name: tableArn
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

