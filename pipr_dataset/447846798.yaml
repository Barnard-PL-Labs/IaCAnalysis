Resources:
  HealthFunctionServiceRole04552894:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/HealthFunction/ServiceRole/Resource
  HealthFunction19D7724A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - HealthFunctionServiceRole04552894
          - Arn
      Handler: restIndex.healthHandler
      Runtime: nodejs14.x
    DependsOn:
      - HealthFunctionServiceRole04552894
    Metadata:
      aws:cdk:path: RekkoCDKStack/HealthFunction/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  IndexFunctionServiceRole2A41AC78:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/IndexFunction/ServiceRole/Resource
  IndexFunctionAA14D79F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - IndexFunctionServiceRole2A41AC78
          - Arn
      Handler: index.indexHandler
      Runtime: nodejs14.x
    DependsOn:
      - IndexFunctionServiceRole2A41AC78
    Metadata:
      aws:cdk:path: RekkoCDKStack/IndexFunction/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetAllUsersServiceRole8209C00B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllUsers/ServiceRole/Resource
  GetAllUsersServiceRoleDefaultPolicy575CA905:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: GetAllUsersServiceRoleDefaultPolicy575CA905
      Roles:
        - Ref: GetAllUsersServiceRole8209C00B
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllUsers/ServiceRole/DefaultPolicy/Resource
  GetAllUsersB73738E4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - GetAllUsersServiceRole8209C00B
          - Arn
      Handler: userIndex.getAllUsers
      Runtime: nodejs14.x
    DependsOn:
      - GetAllUsersServiceRoleDefaultPolicy575CA905
      - GetAllUsersServiceRole8209C00B
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllUsers/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateNewUserServiceRole822A0516:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/CreateNewUser/ServiceRole/Resource
  CreateNewUserServiceRoleDefaultPolicyD556A8EA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: CreateNewUserServiceRoleDefaultPolicyD556A8EA
      Roles:
        - Ref: CreateNewUserServiceRole822A0516
    Metadata:
      aws:cdk:path: RekkoCDKStack/CreateNewUser/ServiceRole/DefaultPolicy/Resource
  CreateNewUser8293963B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - CreateNewUserServiceRole822A0516
          - Arn
      Handler: userIndex.createNewUser
      Runtime: nodejs14.x
    DependsOn:
      - CreateNewUserServiceRoleDefaultPolicyD556A8EA
      - CreateNewUserServiceRole822A0516
    Metadata:
      aws:cdk:path: RekkoCDKStack/CreateNewUser/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetAllReviewsServiceRole4AAF2483:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllReviews/ServiceRole/Resource
  GetAllReviewsServiceRoleDefaultPolicy2CD5F81E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: GetAllReviewsServiceRoleDefaultPolicy2CD5F81E
      Roles:
        - Ref: GetAllReviewsServiceRole4AAF2483
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllReviews/ServiceRole/DefaultPolicy/Resource
  GetAllReviews260113C2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - GetAllReviewsServiceRole4AAF2483
          - Arn
      Handler: reviewsIndex.getAllReviews
      Runtime: nodejs14.x
    DependsOn:
      - GetAllReviewsServiceRoleDefaultPolicy2CD5F81E
      - GetAllReviewsServiceRole4AAF2483
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllReviews/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetReviewsServiceRole4DEA3A74:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetReviews/ServiceRole/Resource
  GetReviewsServiceRoleDefaultPolicy1BE56634:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: GetReviewsServiceRoleDefaultPolicy1BE56634
      Roles:
        - Ref: GetReviewsServiceRole4DEA3A74
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetReviews/ServiceRole/DefaultPolicy/Resource
  GetReviewsF0F53ABF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - GetReviewsServiceRole4DEA3A74
          - Arn
      Handler: reviewsIndex.getReview
      Runtime: nodejs14.x
    DependsOn:
      - GetReviewsServiceRoleDefaultPolicy1BE56634
      - GetReviewsServiceRole4DEA3A74
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetReviews/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SearchThroughEntireReviewServiceRole30B18DCA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/SearchThroughEntireReview/ServiceRole/Resource
  SearchThroughEntireReviewServiceRoleDefaultPolicyE1927B84:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: SearchThroughEntireReviewServiceRoleDefaultPolicyE1927B84
      Roles:
        - Ref: SearchThroughEntireReviewServiceRole30B18DCA
    Metadata:
      aws:cdk:path: RekkoCDKStack/SearchThroughEntireReview/ServiceRole/DefaultPolicy/Resource
  SearchThroughEntireReviewBE546503:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - SearchThroughEntireReviewServiceRole30B18DCA
          - Arn
      Handler: reviewsIndex.searchThroughEntireReview
      Runtime: nodejs14.x
    DependsOn:
      - SearchThroughEntireReviewServiceRoleDefaultPolicyE1927B84
      - SearchThroughEntireReviewServiceRole30B18DCA
    Metadata:
      aws:cdk:path: RekkoCDKStack/SearchThroughEntireReview/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UpdateReviewLikesServiceRoleF774DAA2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/UpdateReviewLikes/ServiceRole/Resource
  UpdateReviewLikesServiceRoleDefaultPolicy29F588FA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: UpdateReviewLikesServiceRoleDefaultPolicy29F588FA
      Roles:
        - Ref: UpdateReviewLikesServiceRoleF774DAA2
    Metadata:
      aws:cdk:path: RekkoCDKStack/UpdateReviewLikes/ServiceRole/DefaultPolicy/Resource
  UpdateReviewLikes8C999616:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - UpdateReviewLikesServiceRoleF774DAA2
          - Arn
      Handler: likesIndex.updateReviewLikes
      Runtime: nodejs14.x
    DependsOn:
      - UpdateReviewLikesServiceRoleDefaultPolicy29F588FA
      - UpdateReviewLikesServiceRoleF774DAA2
    Metadata:
      aws:cdk:path: RekkoCDKStack/UpdateReviewLikes/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UpdateCommentLikesServiceRole44FD4247:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/UpdateCommentLikes/ServiceRole/Resource
  UpdateCommentLikesServiceRoleDefaultPolicy136A9C59:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: UpdateCommentLikesServiceRoleDefaultPolicy136A9C59
      Roles:
        - Ref: UpdateCommentLikesServiceRole44FD4247
    Metadata:
      aws:cdk:path: RekkoCDKStack/UpdateCommentLikes/ServiceRole/DefaultPolicy/Resource
  UpdateCommentLikesB0BC119B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - UpdateCommentLikesServiceRole44FD4247
          - Arn
      Handler: likesIndex.updateCommentLikes
      Runtime: nodejs14.x
    DependsOn:
      - UpdateCommentLikesServiceRoleDefaultPolicy136A9C59
      - UpdateCommentLikesServiceRole44FD4247
    Metadata:
      aws:cdk:path: RekkoCDKStack/UpdateCommentLikes/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetAllBrandsServiceRoleAF1FA909:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllBrands/ServiceRole/Resource
  GetAllBrandsServiceRoleDefaultPolicyCC4B959A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: GetAllBrandsServiceRoleDefaultPolicyCC4B959A
      Roles:
        - Ref: GetAllBrandsServiceRoleAF1FA909
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllBrands/ServiceRole/DefaultPolicy/Resource
  GetAllBrands9154C8BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - GetAllBrandsServiceRoleAF1FA909
          - Arn
      Handler: brandIndex.getAllBrands
      Runtime: nodejs14.x
    DependsOn:
      - GetAllBrandsServiceRoleDefaultPolicyCC4B959A
      - GetAllBrandsServiceRoleAF1FA909
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllBrands/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  AddNewBrandServiceRoleC291CA1C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/AddNewBrand/ServiceRole/Resource
  AddNewBrandServiceRoleDefaultPolicyDF31705C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: AddNewBrandServiceRoleDefaultPolicyDF31705C
      Roles:
        - Ref: AddNewBrandServiceRoleC291CA1C
    Metadata:
      aws:cdk:path: RekkoCDKStack/AddNewBrand/ServiceRole/DefaultPolicy/Resource
  AddNewBrandDAF00351:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - AddNewBrandServiceRoleC291CA1C
          - Arn
      Handler: brandIndex.addNewBrand
      Runtime: nodejs14.x
    DependsOn:
      - AddNewBrandServiceRoleDefaultPolicyDF31705C
      - AddNewBrandServiceRoleC291CA1C
    Metadata:
      aws:cdk:path: RekkoCDKStack/AddNewBrand/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateNewCommentServiceRole7B29BA44:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/CreateNewComment/ServiceRole/Resource
  CreateNewCommentServiceRoleDefaultPolicy104D3732:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: CreateNewCommentServiceRoleDefaultPolicy104D3732
      Roles:
        - Ref: CreateNewCommentServiceRole7B29BA44
    Metadata:
      aws:cdk:path: RekkoCDKStack/CreateNewComment/ServiceRole/DefaultPolicy/Resource
  CreateNewComment22AF0627:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - CreateNewCommentServiceRole7B29BA44
          - Arn
      Handler: commentIndex.createNewComment
      Runtime: nodejs14.x
    DependsOn:
      - CreateNewCommentServiceRoleDefaultPolicy104D3732
      - CreateNewCommentServiceRole7B29BA44
    Metadata:
      aws:cdk:path: RekkoCDKStack/CreateNewComment/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetCommentForReviewServiceRole410A3CA8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetCommentForReview/ServiceRole/Resource
  GetCommentForReviewServiceRoleDefaultPolicy1A94300E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: GetCommentForReviewServiceRoleDefaultPolicy1A94300E
      Roles:
        - Ref: GetCommentForReviewServiceRole410A3CA8
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetCommentForReview/ServiceRole/DefaultPolicy/Resource
  GetCommentForReviewC2CBBBB5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - GetCommentForReviewServiceRole410A3CA8
          - Arn
      Handler: commentIndex.getCommentsForReview
      Runtime: nodejs14.x
    DependsOn:
      - GetCommentForReviewServiceRoleDefaultPolicy1A94300E
      - GetCommentForReviewServiceRole410A3CA8
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetCommentForReview/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetAllProductsServiceRole1FD49630:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllProducts/ServiceRole/Resource
  GetAllProductsServiceRoleDefaultPolicy1F6262CB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: GetAllProductsServiceRoleDefaultPolicy1F6262CB
      Roles:
        - Ref: GetAllProductsServiceRole1FD49630
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllProducts/ServiceRole/DefaultPolicy/Resource
  GetAllProductsADFB8793:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - GetAllProductsServiceRole1FD49630
          - Arn
      Handler: productIndex.getAllProducts
      Runtime: nodejs14.x
    DependsOn:
      - GetAllProductsServiceRoleDefaultPolicy1F6262CB
      - GetAllProductsServiceRole1FD49630
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetAllProducts/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetProductServiceRole1936696A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetProduct/ServiceRole/Resource
  GetProductServiceRoleDefaultPolicy5CA15324:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: GetProductServiceRoleDefaultPolicy5CA15324
      Roles:
        - Ref: GetProductServiceRole1936696A
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetProduct/ServiceRole/DefaultPolicy/Resource
  GetProductB1843B98:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - GetProductServiceRole1936696A
          - Arn
      Handler: productIndex.getProductsByProductName
      Runtime: nodejs14.x
    DependsOn:
      - GetProductServiceRoleDefaultPolicy5CA15324
      - GetProductServiceRole1936696A
    Metadata:
      aws:cdk:path: RekkoCDKStack/GetProduct/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  AddNewProductReviewServiceRole09BFDB11:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/AddNewProductReview/ServiceRole/Resource
  AddNewProductReviewServiceRoleDefaultPolicyA3C18685:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
              - secretsmanager:TagResource
              - secretsmanager:UntagResource
            Effect: Allow
            Resource:
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBUrl-cfcOhq
              - arn:aws:secretsmanager:us-west-2:032629023661:secret:mongoDBMohaimenSecret-lTg5Jy
        Version: "2012-10-17"
      PolicyName: AddNewProductReviewServiceRoleDefaultPolicyA3C18685
      Roles:
        - Ref: AddNewProductReviewServiceRole09BFDB11
    Metadata:
      aws:cdk:path: RekkoCDKStack/AddNewProductReview/ServiceRole/DefaultPolicy/Resource
  AddNewProductReviewCFFFA146:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - AddNewProductReviewServiceRole09BFDB11
          - Arn
      Handler: productIndex.addNewProductReview
      Runtime: nodejs14.x
    DependsOn:
      - AddNewProductReviewServiceRoleDefaultPolicyA3C18685
      - AddNewProductReviewServiceRole09BFDB11
    Metadata:
      aws:cdk:path: RekkoCDKStack/AddNewProductReview/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RekkoRestAPIB11286BC:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Rest API for Rekko
      Name: RekkoRestAPI
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Resource
  RekkoRestAPICloudWatchRole8CE086DF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/CloudWatchRole/Resource
  RekkoRestAPIAccount75F11757:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - RekkoRestAPICloudWatchRole8CE086DF
          - Arn
    DependsOn:
      - RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Account
  RekkoRestAPIDeploymentC1A789A93d27b9464660569e2271f1ff2c102635:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      Description: Automatically created by the RestApi construct
    DependsOn:
      - RekkoRestAPIbrandaddNewBrandsOPTIONS6B34E359
      - RekkoRestAPIbrandaddNewBrandsPOST6705965B
      - RekkoRestAPIbrandaddNewBrandsFC94A076
      - RekkoRestAPIbrandgetAllBrandsGET3361ABFF
      - RekkoRestAPIbrandgetAllBrandsOPTIONS3C846816
      - RekkoRestAPIbrandgetAllBrands283CD62B
      - RekkoRestAPIbrandOPTIONSBFC87F01
      - RekkoRestAPIbrand230A90DF
      - RekkoRestAPIcommentcreateNewCommentOPTIONS18EC1DEC
      - RekkoRestAPIcommentcreateNewCommentPOST5C122F32
      - RekkoRestAPIcommentcreateNewComment0E858E8D
      - RekkoRestAPIcommentgetCommentsForReviewGETCD3BD4A8
      - RekkoRestAPIcommentgetCommentsForReviewOPTIONS5E8D9F31
      - RekkoRestAPIcommentgetCommentsForReviewD0EB3C00
      - RekkoRestAPIcommentOPTIONSADFDBB57
      - RekkoRestAPIcommentAD3B73BE
      - RekkoRestAPIhealthGET5270D846
      - RekkoRestAPIhealthOPTIONSA4D6E1A8
      - RekkoRestAPIhealthD4A7B55F
      - RekkoRestAPIhomeGETE2D53EB0
      - RekkoRestAPIhomeOPTIONS1F4BF6F5
      - RekkoRestAPIhome5FEF96A3
      - RekkoRestAPIlikesOPTIONS78070083
      - RekkoRestAPIlikesE8C96CCF
      - RekkoRestAPIlikesupdateCommentLikesOPTIONS5C6E82A4
      - RekkoRestAPIlikesupdateCommentLikesPUT7CE87242
      - RekkoRestAPIlikesupdateCommentLikesC445300F
      - RekkoRestAPIlikesupdateReviewLikesOPTIONS1D08177E
      - RekkoRestAPIlikesupdateReviewLikesPUT6C718099
      - RekkoRestAPIlikesupdateReviewLikesC1FC81D6
      - RekkoRestAPIOPTIONS3F5B6913
      - RekkoRestAPIproductaddNewProductReviewOPTIONSA5686605
      - RekkoRestAPIproductaddNewProductReviewPOSTD947782D
      - RekkoRestAPIproductaddNewProductReview73BBF946
      - RekkoRestAPIproductgetAllProductsGET98B808A1
      - RekkoRestAPIproductgetAllProductsOPTIONSA6268BD3
      - RekkoRestAPIproductgetAllProducts989CF40F
      - RekkoRestAPIproductgetProductGET52757AF7
      - RekkoRestAPIproductgetProductOPTIONS25B1ABED
      - RekkoRestAPIproductgetProduct59D73674
      - RekkoRestAPIproductOPTIONS90935B52
      - RekkoRestAPIproduct5C135A2C
      - RekkoRestAPIreviewgetAllReviewsGET8AE76C9A
      - RekkoRestAPIreviewgetAllReviewsOPTIONS8CB1B333
      - RekkoRestAPIreviewgetAllReviews4E81DEC9
      - RekkoRestAPIreviewgetReviewsGET21335D12
      - RekkoRestAPIreviewgetReviewsOPTIONSEBA93B34
      - RekkoRestAPIreviewgetReviewsBEA681A0
      - RekkoRestAPIreviewOPTIONS6E77AB6E
      - RekkoRestAPIreview093E5FC0
      - RekkoRestAPIreviewsearchThroughEntireReviewGETE12A369C
      - RekkoRestAPIreviewsearchThroughEntireReviewOPTIONS266E6A84
      - RekkoRestAPIreviewsearchThroughEntireReviewF68F9390
      - RekkoRestAPIusercreateNewUserOPTIONSFA2A3E83
      - RekkoRestAPIusercreateNewUserPOST9C9CAE2C
      - RekkoRestAPIusercreateNewUser4DCC88E2
      - RekkoRestAPIusergetAllUsersGETDFE501E1
      - RekkoRestAPIusergetAllUsersOPTIONS9E8FEC78
      - RekkoRestAPIusergetAllUsers433C5CE7
      - RekkoRestAPIuserOPTIONS0B2C1E51
      - RekkoRestAPIuser12EA21FF
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Deployment/Resource
  RekkoRestAPIDeploymentStageprod29C103AD:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      DeploymentId:
        Ref: RekkoRestAPIDeploymentC1A789A93d27b9464660569e2271f1ff2c102635
      StageName: prod
    DependsOn:
      - RekkoRestAPIAccount75F11757
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/DeploymentStage.prod/Resource
  RekkoRestAPIOPTIONS3F5B6913:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/OPTIONS/Resource
  RekkoRestAPIhome5FEF96A3:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: home
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/home/Resource
  RekkoRestAPIhomeOPTIONS1F4BF6F5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIhome5FEF96A3
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/home/OPTIONS/Resource
  RekkoRestAPIhomeGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GEThome43492908:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - IndexFunctionAA14D79F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/home
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/home/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..home
  RekkoRestAPIhomeGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GEThome0C126BF5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - IndexFunctionAA14D79F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/home
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/home/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..home
  RekkoRestAPIhomeGETE2D53EB0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIhome5FEF96A3
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - IndexFunctionAA14D79F
                  - Arn
              - /invocations
      OperationName: index
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/home/GET/Resource
  RekkoRestAPIhealthD4A7B55F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: health
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/health/Resource
  RekkoRestAPIhealthOPTIONSA4D6E1A8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIhealthD4A7B55F
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/health/OPTIONS/Resource
  RekkoRestAPIhealthGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GEThealth1480E482:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HealthFunction19D7724A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/health
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/health/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..health
  RekkoRestAPIhealthGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GEThealth332CBA83:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HealthFunction19D7724A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/health
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/health/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..health
  RekkoRestAPIhealthGET5270D846:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIhealthD4A7B55F
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - HealthFunction19D7724A
                  - Arn
              - /invocations
      OperationName: status
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/health/GET/Resource
  RekkoRestAPIuser12EA21FF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: user
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/Resource
  RekkoRestAPIuserOPTIONS0B2C1E51:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIuser12EA21FF
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/OPTIONS/Resource
  RekkoRestAPIusergetAllUsers433C5CE7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIuser12EA21FF
      PathPart: getAllUsers
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/getAllUsers/Resource
  RekkoRestAPIusergetAllUsersOPTIONS9E8FEC78:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIusergetAllUsers433C5CE7
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/getAllUsers/OPTIONS/Resource
  RekkoRestAPIusergetAllUsersGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETusergetAllUsers7FEFBEFD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllUsersB73738E4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/user/getAllUsers
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/getAllUsers/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..user.getAllUsers
  RekkoRestAPIusergetAllUsersGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETusergetAllUsers571CD7AB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllUsersB73738E4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/user/getAllUsers
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/getAllUsers/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..user.getAllUsers
  RekkoRestAPIusergetAllUsersGETDFE501E1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIusergetAllUsers433C5CE7
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetAllUsersB73738E4
                  - Arn
              - /invocations
      OperationName: getAllUsers
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/getAllUsers/GET/Resource
  RekkoRestAPIusercreateNewUser4DCC88E2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIuser12EA21FF
      PathPart: createNewUser
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/createNewUser/Resource
  RekkoRestAPIusercreateNewUserOPTIONSFA2A3E83:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIusercreateNewUser4DCC88E2
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/createNewUser/OPTIONS/Resource
  RekkoRestAPIusercreateNewUserPOSTApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652POSTusercreateNewUserB676C258:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateNewUser8293963B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /POST/user/createNewUser
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/createNewUser/POST/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.POST..user.createNewUser
  RekkoRestAPIusercreateNewUserPOSTApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652POSTusercreateNewUserBEF197AA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateNewUser8293963B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/POST/user/createNewUser
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/createNewUser/POST/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.POST..user.createNewUser
  RekkoRestAPIusercreateNewUserPOST9C9CAE2C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RekkoRestAPIusercreateNewUser4DCC88E2
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CreateNewUser8293963B
                  - Arn
              - /invocations
      OperationName: createNewUser
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/user/createNewUser/POST/Resource
  RekkoRestAPIproduct5C135A2C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: product
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/Resource
  RekkoRestAPIproductOPTIONS90935B52:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIproduct5C135A2C
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/OPTIONS/Resource
  RekkoRestAPIproductgetAllProducts989CF40F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIproduct5C135A2C
      PathPart: getAllProducts
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getAllProducts/Resource
  RekkoRestAPIproductgetAllProductsOPTIONSA6268BD3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIproductgetAllProducts989CF40F
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getAllProducts/OPTIONS/Resource
  RekkoRestAPIproductgetAllProductsGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETproductgetAllProductsE36E0BE6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllProductsADFB8793
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/product/getAllProducts
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getAllProducts/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..product.getAllProducts
  RekkoRestAPIproductgetAllProductsGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETproductgetAllProducts2902B64B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllProductsADFB8793
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/product/getAllProducts
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getAllProducts/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..product.getAllProducts
  RekkoRestAPIproductgetAllProductsGET98B808A1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIproductgetAllProducts989CF40F
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetAllProductsADFB8793
                  - Arn
              - /invocations
      OperationName: getAllProducts
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getAllProducts/GET/Resource
  RekkoRestAPIproductgetProduct59D73674:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIproduct5C135A2C
      PathPart: getProduct
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getProduct/Resource
  RekkoRestAPIproductgetProductOPTIONS25B1ABED:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIproductgetProduct59D73674
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getProduct/OPTIONS/Resource
  RekkoRestAPIproductgetProductGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETproductgetProduct63F94C1C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetProductB1843B98
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/product/getProduct
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getProduct/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..product.getProduct
  RekkoRestAPIproductgetProductGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETproductgetProduct3BB7C749:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetProductB1843B98
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/product/getProduct
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getProduct/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..product.getProduct
  RekkoRestAPIproductgetProductGET52757AF7:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIproductgetProduct59D73674
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetProductB1843B98
                  - Arn
              - /invocations
      OperationName: getProduct
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/getProduct/GET/Resource
  RekkoRestAPIproductaddNewProductReview73BBF946:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIproduct5C135A2C
      PathPart: addNewProductReview
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/addNewProductReview/Resource
  RekkoRestAPIproductaddNewProductReviewOPTIONSA5686605:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIproductaddNewProductReview73BBF946
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/addNewProductReview/OPTIONS/Resource
  RekkoRestAPIproductaddNewProductReviewPOSTApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652POSTproductaddNewProductReviewACF72C3D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AddNewProductReviewCFFFA146
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /POST/product/addNewProductReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/addNewProductReview/POST/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.POST..product.addNewProductReview
  RekkoRestAPIproductaddNewProductReviewPOSTApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652POSTproductaddNewProductReview41311C6E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AddNewProductReviewCFFFA146
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/POST/product/addNewProductReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/addNewProductReview/POST/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.POST..product.addNewProductReview
  RekkoRestAPIproductaddNewProductReviewPOSTD947782D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RekkoRestAPIproductaddNewProductReview73BBF946
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - AddNewProductReviewCFFFA146
                  - Arn
              - /invocations
      OperationName: addNewProductReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/product/addNewProductReview/POST/Resource
  RekkoRestAPIreview093E5FC0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: review
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/Resource
  RekkoRestAPIreviewOPTIONS6E77AB6E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIreview093E5FC0
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/OPTIONS/Resource
  RekkoRestAPIreviewgetAllReviews4E81DEC9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIreview093E5FC0
      PathPart: getAllReviews
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getAllReviews/Resource
  RekkoRestAPIreviewgetAllReviewsOPTIONS8CB1B333:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIreviewgetAllReviews4E81DEC9
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getAllReviews/OPTIONS/Resource
  RekkoRestAPIreviewgetAllReviewsGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETreviewgetAllReviews49B817BC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllReviews260113C2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/review/getAllReviews
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getAllReviews/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..review.getAllReviews
  RekkoRestAPIreviewgetAllReviewsGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETreviewgetAllReviews0AF9EFCF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllReviews260113C2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/review/getAllReviews
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getAllReviews/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..review.getAllReviews
  RekkoRestAPIreviewgetAllReviewsGET8AE76C9A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIreviewgetAllReviews4E81DEC9
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetAllReviews260113C2
                  - Arn
              - /invocations
      OperationName: getAllReviews
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getAllReviews/GET/Resource
  RekkoRestAPIreviewgetReviewsBEA681A0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIreview093E5FC0
      PathPart: getReviews
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getReviews/Resource
  RekkoRestAPIreviewgetReviewsOPTIONSEBA93B34:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIreviewgetReviewsBEA681A0
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getReviews/OPTIONS/Resource
  RekkoRestAPIreviewgetReviewsGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETreviewgetReviewsEC365737:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetReviewsF0F53ABF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/review/getReviews
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getReviews/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..review.getReviews
  RekkoRestAPIreviewgetReviewsGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETreviewgetReviewsC83FDF7C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetReviewsF0F53ABF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/review/getReviews
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getReviews/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..review.getReviews
  RekkoRestAPIreviewgetReviewsGET21335D12:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIreviewgetReviewsBEA681A0
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetReviewsF0F53ABF
                  - Arn
              - /invocations
      OperationName: getReviews
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/getReviews/GET/Resource
  RekkoRestAPIreviewsearchThroughEntireReviewF68F9390:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIreview093E5FC0
      PathPart: searchThroughEntireReview
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/searchThroughEntireReview/Resource
  RekkoRestAPIreviewsearchThroughEntireReviewOPTIONS266E6A84:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIreviewsearchThroughEntireReviewF68F9390
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/searchThroughEntireReview/OPTIONS/Resource
  RekkoRestAPIreviewsearchThroughEntireReviewGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETreviewsearchThroughEntireReview93359B15:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SearchThroughEntireReviewBE546503
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/review/searchThroughEntireReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/searchThroughEntireReview/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..review.searchThroughEntireReview
  RekkoRestAPIreviewsearchThroughEntireReviewGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETreviewsearchThroughEntireReview7236647C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SearchThroughEntireReviewBE546503
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/review/searchThroughEntireReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/searchThroughEntireReview/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..review.searchThroughEntireReview
  RekkoRestAPIreviewsearchThroughEntireReviewGETE12A369C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIreviewsearchThroughEntireReviewF68F9390
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - SearchThroughEntireReviewBE546503
                  - Arn
              - /invocations
      OperationName: searchThroughEntireReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/review/searchThroughEntireReview/GET/Resource
  RekkoRestAPIlikesE8C96CCF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: likes
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/Resource
  RekkoRestAPIlikesOPTIONS78070083:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIlikesE8C96CCF
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/OPTIONS/Resource
  RekkoRestAPIlikesupdateReviewLikesC1FC81D6:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIlikesE8C96CCF
      PathPart: updateReviewLikes
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateReviewLikes/Resource
  RekkoRestAPIlikesupdateReviewLikesOPTIONS1D08177E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIlikesupdateReviewLikesC1FC81D6
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateReviewLikes/OPTIONS/Resource
  RekkoRestAPIlikesupdateReviewLikesPUTApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652PUTlikesupdateReviewLikes72B8701D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateReviewLikes8C999616
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /PUT/likes/updateReviewLikes
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateReviewLikes/PUT/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.PUT..likes.updateReviewLikes
  RekkoRestAPIlikesupdateReviewLikesPUTApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652PUTlikesupdateReviewLikes69F7227C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateReviewLikes8C999616
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/PUT/likes/updateReviewLikes
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateReviewLikes/PUT/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.PUT..likes.updateReviewLikes
  RekkoRestAPIlikesupdateReviewLikesPUT6C718099:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: RekkoRestAPIlikesupdateReviewLikesC1FC81D6
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UpdateReviewLikes8C999616
                  - Arn
              - /invocations
      OperationName: updateReviewLikes
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateReviewLikes/PUT/Resource
  RekkoRestAPIlikesupdateCommentLikesC445300F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIlikesE8C96CCF
      PathPart: updateCommentLikes
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateCommentLikes/Resource
  RekkoRestAPIlikesupdateCommentLikesOPTIONS5C6E82A4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIlikesupdateCommentLikesC445300F
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateCommentLikes/OPTIONS/Resource
  RekkoRestAPIlikesupdateCommentLikesPUTApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652PUTlikesupdateCommentLikes7B6F0CB2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateCommentLikesB0BC119B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /PUT/likes/updateCommentLikes
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateCommentLikes/PUT/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.PUT..likes.updateCommentLikes
  RekkoRestAPIlikesupdateCommentLikesPUTApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652PUTlikesupdateCommentLikes2C25CC81:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateCommentLikesB0BC119B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/PUT/likes/updateCommentLikes
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateCommentLikes/PUT/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.PUT..likes.updateCommentLikes
  RekkoRestAPIlikesupdateCommentLikesPUT7CE87242:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: RekkoRestAPIlikesupdateCommentLikesC445300F
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UpdateCommentLikesB0BC119B
                  - Arn
              - /invocations
      OperationName: updateCommentLikes
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/likes/updateCommentLikes/PUT/Resource
  RekkoRestAPIcommentAD3B73BE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: comment
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/Resource
  RekkoRestAPIcommentOPTIONSADFDBB57:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIcommentAD3B73BE
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/OPTIONS/Resource
  RekkoRestAPIcommentgetCommentsForReviewD0EB3C00:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIcommentAD3B73BE
      PathPart: getCommentsForReview
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/getCommentsForReview/Resource
  RekkoRestAPIcommentgetCommentsForReviewOPTIONS5E8D9F31:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIcommentgetCommentsForReviewD0EB3C00
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/getCommentsForReview/OPTIONS/Resource
  RekkoRestAPIcommentgetCommentsForReviewGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETcommentgetCommentsForReviewFC263D48:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetCommentForReviewC2CBBBB5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/comment/getCommentsForReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/getCommentsForReview/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..comment.getCommentsForReview
  RekkoRestAPIcommentgetCommentsForReviewGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETcommentgetCommentsForReviewDA518BE9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetCommentForReviewC2CBBBB5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/comment/getCommentsForReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/getCommentsForReview/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..comment.getCommentsForReview
  RekkoRestAPIcommentgetCommentsForReviewGETCD3BD4A8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIcommentgetCommentsForReviewD0EB3C00
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetCommentForReviewC2CBBBB5
                  - Arn
              - /invocations
      OperationName: getCommentsForReview
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/getCommentsForReview/GET/Resource
  RekkoRestAPIcommentcreateNewComment0E858E8D:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIcommentAD3B73BE
      PathPart: createNewComment
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/createNewComment/Resource
  RekkoRestAPIcommentcreateNewCommentOPTIONS18EC1DEC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIcommentcreateNewComment0E858E8D
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/createNewComment/OPTIONS/Resource
  RekkoRestAPIcommentcreateNewCommentPOSTApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652POSTcommentcreateNewCommentBB0CF338:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateNewComment22AF0627
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /POST/comment/createNewComment
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/createNewComment/POST/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.POST..comment.createNewComment
  RekkoRestAPIcommentcreateNewCommentPOSTApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652POSTcommentcreateNewCommentB0A9297C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateNewComment22AF0627
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/POST/comment/createNewComment
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/createNewComment/POST/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.POST..comment.createNewComment
  RekkoRestAPIcommentcreateNewCommentPOST5C122F32:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RekkoRestAPIcommentcreateNewComment0E858E8D
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CreateNewComment22AF0627
                  - Arn
              - /invocations
      OperationName: createNewComment
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/comment/createNewComment/POST/Resource
  RekkoRestAPIbrand230A90DF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoRestAPIB11286BC
          - RootResourceId
      PathPart: brand
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/Resource
  RekkoRestAPIbrandOPTIONSBFC87F01:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIbrand230A90DF
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/OPTIONS/Resource
  RekkoRestAPIbrandgetAllBrands283CD62B:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIbrand230A90DF
      PathPart: getAllBrands
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/getAllBrands/Resource
  RekkoRestAPIbrandgetAllBrandsOPTIONS3C846816:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIbrandgetAllBrands283CD62B
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/getAllBrands/OPTIONS/Resource
  RekkoRestAPIbrandgetAllBrandsGETApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652GETbrandgetAllBrandsDD4FDE5E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllBrands9154C8BD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /GET/brand/getAllBrands
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/getAllBrands/GET/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.GET..brand.getAllBrands
  RekkoRestAPIbrandgetAllBrandsGETApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652GETbrandgetAllBrandsC67BEB92:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllBrands9154C8BD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/GET/brand/getAllBrands
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/getAllBrands/GET/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.GET..brand.getAllBrands
  RekkoRestAPIbrandgetAllBrandsGET3361ABFF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RekkoRestAPIbrandgetAllBrands283CD62B
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetAllBrands9154C8BD
                  - Arn
              - /invocations
      OperationName: getAllBrands
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/getAllBrands/GET/Resource
  RekkoRestAPIbrandaddNewBrandsFC94A076:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RekkoRestAPIbrand230A90DF
      PathPart: addNewBrands
      RestApiId:
        Ref: RekkoRestAPIB11286BC
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/addNewBrands/Resource
  RekkoRestAPIbrandaddNewBrandsOPTIONS6B34E359:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoRestAPIbrandaddNewBrandsFC94A076
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/addNewBrands/OPTIONS/Resource
  RekkoRestAPIbrandaddNewBrandsPOSTApiPermissionRekkoCDKStackRekkoRestAPIBE5FB652POSTbrandaddNewBrandsBEFA6969:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AddNewBrandDAF00351
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /
            - Ref: RekkoRestAPIDeploymentStageprod29C103AD
            - /POST/brand/addNewBrands
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/addNewBrands/POST/ApiPermission.RekkoCDKStackRekkoRestAPIBE5FB652.POST..brand.addNewBrands
  RekkoRestAPIbrandaddNewBrandsPOSTApiPermissionTestRekkoCDKStackRekkoRestAPIBE5FB652POSTbrandaddNewBrands1FC35701:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AddNewBrandDAF00351
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoRestAPIB11286BC
            - /test-invoke-stage/POST/brand/addNewBrands
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/addNewBrands/POST/ApiPermission.Test.RekkoCDKStackRekkoRestAPIBE5FB652.POST..brand.addNewBrands
  RekkoRestAPIbrandaddNewBrandsPOST6705965B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RekkoRestAPIbrandaddNewBrandsFC94A076
      RestApiId:
        Ref: RekkoRestAPIB11286BC
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - AddNewBrandDAF00351
                  - Arn
              - /invocations
      OperationName: addNewBrands
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoRestAPI/Default/brand/addNewBrands/POST/Resource
  RekkoImagesBucket39511A0E:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - POST
              - PUT
            AllowedOrigins:
              - "*"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoImagesBucket/Resource
  S3FilesGetLambdaServiceRole18DF8B49:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/S3FilesGetLambda/ServiceRole/Resource
  S3FilesGetLambdaServiceRoleDefaultPolicy25DE6BF0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Get*
              - s3:List*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: S3FilesGetLambdaServiceRoleDefaultPolicy25DE6BF0
      Roles:
        - Ref: S3FilesGetLambdaServiceRole18DF8B49
    Metadata:
      aws:cdk:path: RekkoCDKStack/S3FilesGetLambda/ServiceRole/DefaultPolicy/Resource
  S3FilesGetLambda59DC02D5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - S3FilesGetLambdaServiceRole18DF8B49
          - Arn
      Environment:
        Variables:
          s3Bucket:
            Ref: RekkoImagesBucket39511A0E
      Handler: s3Index.getS3URLHandler
      Runtime: nodejs14.x
    DependsOn:
      - S3FilesGetLambdaServiceRoleDefaultPolicy25DE6BF0
      - S3FilesGetLambdaServiceRole18DF8B49
    Metadata:
      aws:cdk:path: RekkoCDKStack/S3FilesGetLambda/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  S3FilesPutLambdaServiceRole975BEA4F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RekkoCDKStack/S3FilesPutLambda/ServiceRole/Resource
  S3FilesPutLambdaServiceRoleDefaultPolicy3E027B93:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:Put*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: S3FilesPutLambdaServiceRoleDefaultPolicy3E027B93
      Roles:
        - Ref: S3FilesPutLambdaServiceRole975BEA4F
    Metadata:
      aws:cdk:path: RekkoCDKStack/S3FilesPutLambda/ServiceRole/DefaultPolicy/Resource
  S3FilesPutLambda4B50B441:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa.zip
      Role:
        Fn::GetAtt:
          - S3FilesPutLambdaServiceRole975BEA4F
          - Arn
      Environment:
        Variables:
          s3Bucket:
            Ref: RekkoImagesBucket39511A0E
      Handler: s3Index.putS3Handler
      Runtime: nodejs14.x
    DependsOn:
      - S3FilesPutLambdaServiceRoleDefaultPolicy3E027B93
      - S3FilesPutLambdaServiceRole975BEA4F
    Metadata:
      aws:cdk:path: RekkoCDKStack/S3FilesPutLambda/Resource
      aws:asset:path: asset.1332f96df84f339c2747d73c1a09927063f5810997f167030538c8db90f633fa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RekkoPicturesRestAPIEA4E61E4:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Rest API for Rekko Users to upload pictures
      Name: RekkoPicturesRestAPI
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Resource
  RekkoPicturesRestAPICloudWatchRole684BE468:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/CloudWatchRole/Resource
  RekkoPicturesRestAPIAccount3E5193A7:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - RekkoPicturesRestAPICloudWatchRole684BE468
          - Arn
    DependsOn:
      - RekkoPicturesRestAPIEA4E61E4
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Account
  RekkoPicturesRestAPIDeployment53E5CC30f2c97d4ed61c70c26aa64c190fa7c4be:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      Description: Automatically created by the RestApi construct
    DependsOn:
      - RekkoPicturesRestAPIANYE6E5FC8A
      - RekkoPicturesRestAPIgetPictureURLOPTIONS79D6EC73
      - RekkoPicturesRestAPIgetPictureURLPOST37327F40
      - RekkoPicturesRestAPIgetPictureURLAC87336D
      - RekkoPicturesRestAPIOPTIONS6C4780BA
      - RekkoPicturesRestAPIuploadPictureURLOPTIONSF4619DC4
      - RekkoPicturesRestAPIuploadPictureURLPOST83467236
      - RekkoPicturesRestAPIuploadPictureURLFD8B91DB
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Deployment/Resource
  RekkoPicturesRestAPIDeploymentStageprodA272572A:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      DeploymentId:
        Ref: RekkoPicturesRestAPIDeployment53E5CC30f2c97d4ed61c70c26aa64c190fa7c4be
      StageName: prod
    DependsOn:
      - RekkoPicturesRestAPIAccount3E5193A7
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/DeploymentStage.prod/Resource
  RekkoPicturesRestAPIOPTIONS6C4780BA:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - RekkoPicturesRestAPIEA4E61E4
          - RootResourceId
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/OPTIONS/Resource
  RekkoPicturesRestAPIANYE6E5FC8A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - RekkoPicturesRestAPIEA4E61E4
          - RootResourceId
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      AuthorizationType: NONE
      Integration:
        Type: MOCK
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/ANY/Resource
  RekkoPicturesRestAPIgetPictureURLAC87336D:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoPicturesRestAPIEA4E61E4
          - RootResourceId
      PathPart: getPictureURL
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/getPictureURL/Resource
  RekkoPicturesRestAPIgetPictureURLOPTIONS79D6EC73:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoPicturesRestAPIgetPictureURLAC87336D
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/getPictureURL/OPTIONS/Resource
  RekkoPicturesRestAPIgetPictureURLPOSTApiPermissionRekkoCDKStackRekkoPicturesRestAPIACC6E291POSTgetPictureURL60E2C84F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - S3FilesGetLambda59DC02D5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoPicturesRestAPIEA4E61E4
            - /
            - Ref: RekkoPicturesRestAPIDeploymentStageprodA272572A
            - /POST/getPictureURL
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/getPictureURL/POST/ApiPermission.RekkoCDKStackRekkoPicturesRestAPIACC6E291.POST..getPictureURL
  RekkoPicturesRestAPIgetPictureURLPOSTApiPermissionTestRekkoCDKStackRekkoPicturesRestAPIACC6E291POSTgetPictureURL50A77B00:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - S3FilesGetLambda59DC02D5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoPicturesRestAPIEA4E61E4
            - /test-invoke-stage/POST/getPictureURL
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/getPictureURL/POST/ApiPermission.Test.RekkoCDKStackRekkoPicturesRestAPIACC6E291.POST..getPictureURL
  RekkoPicturesRestAPIgetPictureURLPOST37327F40:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RekkoPicturesRestAPIgetPictureURLAC87336D
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - S3FilesGetLambda59DC02D5
                  - Arn
              - /invocations
      OperationName: getPictureURL
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/getPictureURL/POST/Resource
  RekkoPicturesRestAPIuploadPictureURLFD8B91DB:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RekkoPicturesRestAPIEA4E61E4
          - RootResourceId
      PathPart: uploadPictureURL
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/uploadPictureURL/Resource
  RekkoPicturesRestAPIuploadPictureURLOPTIONSF4619DC4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RekkoPicturesRestAPIuploadPictureURLFD8B91DB
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/uploadPictureURL/OPTIONS/Resource
  RekkoPicturesRestAPIuploadPictureURLPOSTApiPermissionRekkoCDKStackRekkoPicturesRestAPIACC6E291POSTuploadPictureURL5DA1EA14:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - S3FilesPutLambda4B50B441
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoPicturesRestAPIEA4E61E4
            - /
            - Ref: RekkoPicturesRestAPIDeploymentStageprodA272572A
            - /POST/uploadPictureURL
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/uploadPictureURL/POST/ApiPermission.RekkoCDKStackRekkoPicturesRestAPIACC6E291.POST..uploadPictureURL
  RekkoPicturesRestAPIuploadPictureURLPOSTApiPermissionTestRekkoCDKStackRekkoPicturesRestAPIACC6E291POSTuploadPictureURLAE968F3D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - S3FilesPutLambda4B50B441
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RekkoPicturesRestAPIEA4E61E4
            - /test-invoke-stage/POST/uploadPictureURL
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/uploadPictureURL/POST/ApiPermission.Test.RekkoCDKStackRekkoPicturesRestAPIACC6E291.POST..uploadPictureURL
  RekkoPicturesRestAPIuploadPictureURLPOST83467236:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RekkoPicturesRestAPIuploadPictureURLFD8B91DB
      RestApiId:
        Ref: RekkoPicturesRestAPIEA4E61E4
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - S3FilesPutLambda4B50B441
                  - Arn
              - /invocations
      OperationName: uploadPictureURL
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoPicturesRestAPI/Default/uploadPictureURL/POST/Resource
  RekkoCognitoUserpool4CEF1431:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
      Schema:
        - Mutable: true
          Name: given_name
          Required: false
        - Mutable: true
          Name: family_name
          Required: false
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      UserPoolName: RekkoCognitoUserpool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoCognitoUserpool/Resource
  RekkoCognitoUserpoolRekkoCognitoUserpoolclientB1EFB505:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: RekkoCognitoUserpool4CEF1431
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
      CallbackURLs:
        - https://www.rekko.co/
        - http://localhost:3000/
      ClientName: RekkoCognitoUserpool-client
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoCognitoUserpool/RekkoCognitoUserpool-client/Resource
  RekkoCognitoUserpoolRekkoCognitoUserpooldomain9C5A23F6:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: rekko
      UserPoolId:
        Ref: RekkoCognitoUserpool4CEF1431
    Metadata:
      aws:cdk:path: RekkoCDKStack/RekkoCognitoUserpool/RekkoCognitoUserpool-domain/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/12QwW6DMAyGn6X3kI1Ok3alVL1NQ512rtLgMZckRiRZhRDvviTAhnby9/u3Y8d7nj/zx52420zWbabwysd3J2TLQuoyKqGvteDjyRvpkAwrP82WK+g1WhvUxFBoPp5JQTRSrEihHFJdoonZp4uwFpzlRQxB8/HgZQvuICywGWPDTBMTHTbCwV0M4W2wrugwPf+HhZTkjWNH6BQNGkzq36jwnSbtNENoJd9LSANfwX1RHc2FVncZknhikhqDjvj4YaGviFS0f3mFUuEy/V9mlUfSAs22YM5ME0vniAuiaWLBm3edd9stIpdkanTp2oZq4Df78J2/8HzP893NImZ9uARq4Oc5/gDEZqoc3gEAAA==
    Metadata:
      aws:cdk:path: RekkoCDKStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  RekkoRestAPIEndpoint58EBAB41:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: RekkoRestAPIB11286BC
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: RekkoRestAPIDeploymentStageprod29C103AD
          - /
  RekkoPicturesRestAPIEndpoint7E8D259B:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: RekkoPicturesRestAPIEA4E61E4
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: RekkoPicturesRestAPIDeploymentStageprodA272572A
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

