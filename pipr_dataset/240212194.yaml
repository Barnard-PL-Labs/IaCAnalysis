Resources:
  RapidsaiNotebookrapidsaiNotebookRoleE1C012CD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSageMakerFullAccess
    Metadata:
      aws:cdk:path: RapidsaiSagemakerNbStack/RapidsaiNotebook/rapidsaiNotebookRole/Resource
  RapidsaiNotebookrapidsaiLifecycleConfigA6C5576C:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      NotebookInstanceLifecycleConfigName: rapidsaiLifecycleConfig
      OnCreate:
        - Content:
            Fn::Base64: |-
              #!/bin/bash

              set -e

              echo "Starting on Create script"

              sudo -i -u ec2-user bash <<EOF
              touch /home/ec2-user/SageMaker/.create-notebook
              EOF

              cat > /home/ec2-user/SageMaker/.rapidsai-install.sh <<\EOF
              #!/bin/bash
              set -e
              echo "Updating conda"
              conda update -n base -c defaults conda -y
              conda update --all -y
              echo "Starting conda create command for rapidsai env"
              conda create -mqyp /home/ec2-user/SageMaker/.env/rapidsai -c rapidsai -c nvidia -c conda-forge -c defaults rapids=0.12 python=3.6 ipykernel matplotlib=3.1.3 statsmodels=0.11.0
              source activate /home/ec2-user/SageMaker/.env/rapidsai
              echo "Installing Jupyter kernel for rapidsai"
              python -m ipykernel install --name 'rapidsai' --user
              echo "Finished installing rapidsai conda env"
              rm /home/ec2-user/SageMaker/.create-notebook
              echo "Exiting install script"
              EOF

              chown ec2-user:ec2-user /home/ec2-user/SageMaker/.rapidsai-install.sh
              chmod 755 /home/ec2-user/SageMaker/.rapidsai-install.sh

              sudo -i -u ec2-user bash <<EOF
              nohup /home/ec2-user/SageMaker/.rapidsai-install.sh &
              EOF

              echo "Finishing on Create script"
      OnStart:
        - Content:
            Fn::Base64: |-
              #!/bin/bash

              set -e

              echo "Starting on Start script"

              sudo -i -u ec2-user bash << EOF
              if [[ -f /home/ec2-user/SageMaker/.create-notebook ]]; then
                  echo "Skipping as currently installing conda env"
              else
                  echo "Installing Jupyter kernel"
                  source activate /home/ec2-user/SageMaker/.env/rapidsai
                  python -m ipykernel install --name 'rapidsai' --user
                  echo "Finished setting up Jupyter kernel"
              fi
              EOF

              echo "Finishing on Start script"
    Metadata:
      aws:cdk:path: RapidsaiSagemakerNbStack/RapidsaiNotebook/rapidsaiLifecycleConfig
  RapidsaiNotebookrapidsaiNotebookInstance0EB7D2BC:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: ml.p3.2xlarge
      RoleArn:
        Fn::GetAtt:
          - RapidsaiNotebookrapidsaiNotebookRoleE1C012CD
          - Arn
      DefaultCodeRepository: https://github.com/rapidsai/notebooks
      LifecycleConfigName: rapidsaiLifecycleConfig
      NotebookInstanceName: rapidsai
      VolumeSizeInGB: 50
    Metadata:
      aws:cdk:path: RapidsaiSagemakerNbStack/RapidsaiNotebook/rapidsaiNotebookInstance
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/aws-iam=1.23.0,@aws-cdk/aws-sagemaker=1.23.0,@aws-cdk/core=1.23.0,@aws-cdk/cx-api=1.23.0,@aws-cdk/region-info=1.23.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

