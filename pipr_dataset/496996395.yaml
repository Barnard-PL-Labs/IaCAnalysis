Resources:
  PostTable197E3F68:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStarterStackStack/PostTable/Resource
  ApiGatewayRoleD2518903:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/ApiGatewayRole/Resource
  ApiGatewayRoleDefaultPolicyC1776BBE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PostTable197E3F68
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: ApiGatewayRoleDefaultPolicyC1776BBE
      Roles:
        - Ref: ApiGatewayRoleD2518903
    Metadata:
      aws:cdk:path: CdkStarterStackStack/ApiGatewayRole/DefaultPolicy/Resource
  apigatewaydynamodb03B64A61:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Demo API Gateway with DynamoDB
      Name: api-gateway-dynamodb
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Resource
  apigatewaydynamodbCloudWatchRole58FD0B95:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/CloudWatchRole/Resource
  apigatewaydynamodbAccount84C6CD86:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - apigatewaydynamodbCloudWatchRole58FD0B95
          - Arn
    DependsOn:
      - apigatewaydynamodb03B64A61
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Account
  apigatewaydynamodbDeployment40493C39fc2c63b3609d6c9a32a2b651de92b03c:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
      Description: Automatically created by the RestApi construct
    DependsOn:
      - apigatewaydynamodbOPTIONS8E2179BC
      - apigatewaydynamodbpostsidGET35EBE8CC
      - apigatewaydynamodbpostsidOPTIONS99932966
      - apigatewaydynamodbpostsidE3951222
      - apigatewaydynamodbpostsOPTIONSBED17627
      - apigatewaydynamodbpostsPOSTC70D672B
      - apigatewaydynamodbpostsBAF78DEC
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Deployment/Resource
  apigatewaydynamodbDeploymentStageprod885BA3BE:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
      DeploymentId:
        Ref: apigatewaydynamodbDeployment40493C39fc2c63b3609d6c9a32a2b651de92b03c
      StageName: prod
    DependsOn:
      - apigatewaydynamodbAccount84C6CD86
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/DeploymentStage.prod/Resource
  apigatewaydynamodbOPTIONS8E2179BC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - apigatewaydynamodb03B64A61
          - RootResourceId
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Default/OPTIONS/Resource
  apigatewaydynamodbpostsBAF78DEC:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - apigatewaydynamodb03B64A61
          - RootResourceId
      PathPart: posts
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Default/posts/Resource
  apigatewaydynamodbpostsOPTIONSBED17627:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: apigatewaydynamodbpostsBAF78DEC
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Default/posts/OPTIONS/Resource
  apigatewaydynamodbpostsidE3951222:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: apigatewaydynamodbpostsBAF78DEC
      PathPart: "{id}"
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Default/posts/{id}/Resource
  apigatewaydynamodbpostsidOPTIONS99932966:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: apigatewaydynamodbpostsidE3951222
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Default/posts/{id}/OPTIONS/Resource
  apigatewaydynamodbpostsidGET35EBE8CC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: apigatewaydynamodbpostsidE3951222
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - ApiGatewayRoleD2518903
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseTemplates:
              application/json: "

                \                #set($inputRoot = $input.path('$.Item'))

                \                {

                \                  \"id\": \"$inputRoot.id.S\",

                \                  \"title\": \"$inputRoot.title.S\",

                \                  \"body\": \"$inputRoot.body.S\",

                \                }

                \                "
            StatusCode: "200"
          - ResponseTemplates:
              application/json: |-
                {
                        "error": "Bad input!"
                      }
            SelectionPattern: "400"
            StatusCode: "400"
          - ResponseTemplates:
              application/json: |-
                {
                        "error": "Internal Service Error!"
                      }
            SelectionPattern: 5\d{2}
            StatusCode: "500"
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  {
                                "TableName": "
                - Ref: PostTable197E3F68
                - |-
                  ",
                                "Key": {
                                  "id": {
                                    "S": "$input.params('id')"
                                  }
                                }
                              }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :dynamodb:action/GetItem
      MethodResponses:
        - StatusCode: "200"
        - StatusCode: "400"
        - StatusCode: "500"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Default/posts/{id}/GET/Resource
  apigatewaydynamodbpostsPOSTC70D672B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: apigatewaydynamodbpostsBAF78DEC
      RestApiId:
        Ref: apigatewaydynamodb03B64A61
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - ApiGatewayRoleD2518903
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseTemplates:
              application/json: |-2
                
                                {
                                  "status": "OK"
                                }
            StatusCode: "200"
          - ResponseTemplates:
              application/json: |-
                {
                        "error": "Bad input!"
                      }
            SelectionPattern: "400"
            StatusCode: "400"
          - ResponseTemplates:
              application/json: |-
                {
                        "error": "Internal Service Error!"
                      }
            SelectionPattern: 5\d{2}
            StatusCode: "500"
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-2
                  
                              #set($inputRoot = $input.path('$'))
                              {
                                "TableName": "
                - Ref: PostTable197E3F68
                - |-
                  ",
                                "Item": {
                                  "id": {
                                    "S": "$inputRoot.id"
                                  },
                                  "title": {
                                    "S": "$inputRoot.title"
                                  },
                                  "body": {
                                    "S": "$inputRoot.body"
                                  }
                                },
                                "ConditionExpression": "attribute_not_exists(id)"
                              }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :dynamodb:action/PutItem
      MethodResponses:
        - StatusCode: "200"
        - StatusCode: "400"
        - StatusCode: "500"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/api-gateway-dynamodb/Default/posts/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WQuw7CMAxFv4U9DWrFwMpjRSBgRyYxYGjjiqSgqsq/46YgYPLx8Y1spdDFROcjePrM2FtW0lF3uwDmpkQdOts6qNiK3MOxRLU4uQRREVS62/LgUt1wSabt24GigprOEPAJrUTRh1lNKf3FmTHcuKCWWJfcVigo9qeTW85pxQDylJu7wTl4VCsMF7b98E2f6XtJ4hj/9LoJdRN+Az0v2FkKxC4qxxb11Y8f+VTnhXzN1RNldzmSKtTbob4A4zdSXDYBAAA=
    Metadata:
      aws:cdk:path: CdkStarterStackStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  apigatewaydynamodbEndpoint7BE02051:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: apigatewaydynamodb03B64A61
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: apigatewaydynamodbDeploymentStageprod885BA3BE
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

