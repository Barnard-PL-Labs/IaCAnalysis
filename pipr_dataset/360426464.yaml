Resources:
  WorkshopVpc225294A4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/Resource
  WorkshopVpcPublicSubnet1SubnetE45D3E70:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: WorkshopVpc225294A4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet1/Subnet
  WorkshopVpcPublicSubnet1RouteTable3FF2F875:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: WorkshopVpc225294A4
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet1/RouteTable
  WorkshopVpcPublicSubnet1RouteTableAssociation7E585217:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPublicSubnet1RouteTable3FF2F875
      SubnetId:
        Ref: WorkshopVpcPublicSubnet1SubnetE45D3E70
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet1/RouteTableAssociation
  WorkshopVpcPublicSubnet1DefaultRoute37DB6426:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPublicSubnet1RouteTable3FF2F875
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: WorkshopVpcIGWAA708C99
    DependsOn:
      - WorkshopVpcVPCGW083D1E14
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet1/DefaultRoute
  WorkshopVpcPublicSubnet1EIP7DE35E5D:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet1/EIP
  WorkshopVpcPublicSubnet1NATGateway7AA9DF7F:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - WorkshopVpcPublicSubnet1EIP7DE35E5D
          - AllocationId
      SubnetId:
        Ref: WorkshopVpcPublicSubnet1SubnetE45D3E70
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet1/NATGateway
  WorkshopVpcPublicSubnet2Subnet4032CE5A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: WorkshopVpc225294A4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet2/Subnet
  WorkshopVpcPublicSubnet2RouteTableB2D1FD20:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: WorkshopVpc225294A4
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet2/RouteTable
  WorkshopVpcPublicSubnet2RouteTableAssociationD7958FEB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPublicSubnet2RouteTableB2D1FD20
      SubnetId:
        Ref: WorkshopVpcPublicSubnet2Subnet4032CE5A
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet2/RouteTableAssociation
  WorkshopVpcPublicSubnet2DefaultRoute8245B093:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPublicSubnet2RouteTableB2D1FD20
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: WorkshopVpcIGWAA708C99
    DependsOn:
      - WorkshopVpcVPCGW083D1E14
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet2/DefaultRoute
  WorkshopVpcPublicSubnet2EIPE1A70A85:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet2/EIP
  WorkshopVpcPublicSubnet2NATGatewayBF5F4BCC:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - WorkshopVpcPublicSubnet2EIPE1A70A85
          - AllocationId
      SubnetId:
        Ref: WorkshopVpcPublicSubnet2Subnet4032CE5A
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PublicSubnet2/NATGateway
  WorkshopVpcPrivateSubnet1SubnetD789DDFF:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: WorkshopVpc225294A4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet1/Subnet
  WorkshopVpcPrivateSubnet1RouteTableE72F3266:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: WorkshopVpc225294A4
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet1/RouteTable
  WorkshopVpcPrivateSubnet1RouteTableAssociationF5756487:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPrivateSubnet1RouteTableE72F3266
      SubnetId:
        Ref: WorkshopVpcPrivateSubnet1SubnetD789DDFF
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet1/RouteTableAssociation
  WorkshopVpcPrivateSubnet1DefaultRouteDFDF3564:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPrivateSubnet1RouteTableE72F3266
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: WorkshopVpcPublicSubnet1NATGateway7AA9DF7F
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet1/DefaultRoute
  WorkshopVpcPrivateSubnet2Subnet4AA82EE9:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: WorkshopVpc225294A4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet2/Subnet
  WorkshopVpcPrivateSubnet2RouteTableF3A3EE9D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: WorkshopVpc225294A4
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet2/RouteTable
  WorkshopVpcPrivateSubnet2RouteTableAssociationA1453584:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPrivateSubnet2RouteTableF3A3EE9D
      SubnetId:
        Ref: WorkshopVpcPrivateSubnet2Subnet4AA82EE9
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet2/RouteTableAssociation
  WorkshopVpcPrivateSubnet2DefaultRoute7C52AD09:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: WorkshopVpcPrivateSubnet2RouteTableF3A3EE9D
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: WorkshopVpcPublicSubnet2NATGatewayBF5F4BCC
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/PrivateSubnet2/DefaultRoute
  WorkshopVpcIGWAA708C99:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WorkshopStack/WorkshopVpc
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/IGW
  WorkshopVpcVPCGW083D1E14:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: WorkshopVpc225294A4
      InternetGatewayId:
        Ref: WorkshopVpcIGWAA708C99
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopVpc/VPCGW
  WorkshopAuroraServerlessSubnets9E6AB010:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for WorkshopAuroraServerless database
      SubnetIds:
        - Ref: WorkshopVpcPrivateSubnet1SubnetD789DDFF
        - Ref: WorkshopVpcPrivateSubnet2Subnet4AA82EE9
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopAuroraServerless/Subnets/Default
  WorkshopAuroraServerlessSecret56B5D5FE:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopAuroraServerless/Secret/Resource
  WorkshopAuroraServerlessSecretAttachmentDF308720:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: WorkshopAuroraServerlessSecret56B5D5FE
      TargetId:
        Ref: WorkshopAuroraServerless63DD7D33
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopAuroraServerless/Secret/Attachment/Resource
  WorkshopAuroraServerlessSecurityGroup02791F1B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: WorkshopVpc225294A4
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopAuroraServerless/SecurityGroup/Resource
  WorkshopAuroraServerless63DD7D33:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      DatabaseName: workshop
      DBClusterParameterGroupName: default.aurora-mysql5.7
      DBSubnetGroupName:
        Ref: WorkshopAuroraServerlessSubnets9E6AB010
      EnableHttpEndpoint: true
      EngineMode: serverless
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: WorkshopAuroraServerlessSecret56B5D5FE
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: WorkshopAuroraServerlessSecret56B5D5FE
            - :SecretString:password::}}
      ScalingConfiguration:
        AutoPause: false
        MaxCapacity: 32
        MinCapacity: 1
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - WorkshopAuroraServerlessSecurityGroup02791F1B
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: WorkshopStack/WorkshopAuroraServerless/Resource
  HelloHandlerServiceRole11EF7C63:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WorkshopStack/HelloHandler/ServiceRole/Resource
  HelloHandlerServiceRoleDefaultPolicyA2A0A4BB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - rds-data:BatchExecuteStatement
              - rds-data:BeginTransaction
              - rds-data:CommitTransaction
              - rds-data:ExecuteStatement
              - rds-data:RollbackTransaction
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: WorkshopAuroraServerlessSecretAttachmentDF308720
        Version: "2012-10-17"
      PolicyName: HelloHandlerServiceRoleDefaultPolicyA2A0A4BB
      Roles:
        - Ref: HelloHandlerServiceRole11EF7C63
    Metadata:
      aws:cdk:path: WorkshopStack/HelloHandler/ServiceRole/DefaultPolicy/Resource
  HelloHandler2E4FBA4D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3Bucket90E120EA
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3VersionKeyF8C01A20
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3VersionKeyF8C01A20
      Role:
        Fn::GetAtt:
          - HelloHandlerServiceRole11EF7C63
          - Arn
      Environment:
        Variables:
          CLUSTER_ARN:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":rds:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":cluster:"
                - Ref: WorkshopAuroraServerless63DD7D33
          SECRET_ARN:
            Ref: WorkshopAuroraServerlessSecretAttachmentDF308720
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: hello.handler
      Runtime: nodejs14.x
    DependsOn:
      - HelloHandlerServiceRoleDefaultPolicyA2A0A4BB
      - HelloHandlerServiceRole11EF7C63
    Metadata:
      aws:cdk:path: WorkshopStack/HelloHandler/Resource
      aws:asset:path: asset.e40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183d
      aws:asset:property: Code
  HelloLoggerLoggerHandlerServiceRole17C806CE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WorkshopStack/HelloLogger/LoggerHandler/ServiceRole/Resource
  HelloLoggerLoggerHandlerServiceRoleDefaultPolicy75607180:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - HelloHandler2E4FBA4D
                - Arn
        Version: "2012-10-17"
      PolicyName: HelloLoggerLoggerHandlerServiceRoleDefaultPolicy75607180
      Roles:
        - Ref: HelloLoggerLoggerHandlerServiceRole17C806CE
    Metadata:
      aws:cdk:path: WorkshopStack/HelloLogger/LoggerHandler/ServiceRole/DefaultPolicy/Resource
  HelloLoggerLoggerHandlerC47768A5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3Bucket90E120EA
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3VersionKeyF8C01A20
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3VersionKeyF8C01A20
      Role:
        Fn::GetAtt:
          - HelloLoggerLoggerHandlerServiceRole17C806CE
          - Arn
      Environment:
        Variables:
          DOWNSTREAM_FUNCTION_NAME:
            Ref: HelloHandler2E4FBA4D
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: logger.handler
      Runtime: nodejs14.x
    DependsOn:
      - HelloLoggerLoggerHandlerServiceRoleDefaultPolicy75607180
      - HelloLoggerLoggerHandlerServiceRole17C806CE
    Metadata:
      aws:cdk:path: WorkshopStack/HelloLogger/LoggerHandler/Resource
      aws:asset:path: asset.e40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183d
      aws:asset:property: Code
  EndpointEEF1FD8F:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Endpoint
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Resource
  EndpointCloudWatchRoleC3C64E0F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/CloudWatchRole/Resource
  EndpointAccountB8304247:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - EndpointCloudWatchRoleC3C64E0F
          - Arn
    DependsOn:
      - EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Account
  EndpointDeployment318525DA7414a1ddc37d5f571fdb220601a9890d:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: EndpointEEF1FD8F
      Description: Automatically created by the RestApi construct
    DependsOn:
      - EndpointproxyANYC09721C5
      - Endpointproxy39E2174E
      - EndpointANY485C938B
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Deployment/Resource
  EndpointDeploymentStageprodB78BEEA0:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: EndpointEEF1FD8F
      DeploymentId:
        Ref: EndpointDeployment318525DA7414a1ddc37d5f571fdb220601a9890d
      StageName: prod
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/DeploymentStage.prod/Resource
  Endpointproxy39E2174E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - EndpointEEF1FD8F
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Default/{proxy+}/Resource
  EndpointproxyANYApiPermissionWorkshopStackEndpoint4AFC1F87ANYproxyDD316608:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloLoggerLoggerHandlerC47768A5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /
            - Ref: EndpointDeploymentStageprodB78BEEA0
            - /*/*
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Default/{proxy+}/ANY/ApiPermission.WorkshopStackEndpoint4AFC1F87.ANY..{proxy+}
  EndpointproxyANYApiPermissionTestWorkshopStackEndpoint4AFC1F87ANYproxyAE814EF3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloLoggerLoggerHandlerC47768A5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /test-invoke-stage/*/*
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Default/{proxy+}/ANY/ApiPermission.Test.WorkshopStackEndpoint4AFC1F87.ANY..{proxy+}
  EndpointproxyANYC09721C5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Ref: Endpointproxy39E2174E
      RestApiId:
        Ref: EndpointEEF1FD8F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - HelloLoggerLoggerHandlerC47768A5
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Default/{proxy+}/ANY/Resource
  EndpointANYApiPermissionWorkshopStackEndpoint4AFC1F87ANY84CB2EBF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloLoggerLoggerHandlerC47768A5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /
            - Ref: EndpointDeploymentStageprodB78BEEA0
            - /*/
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Default/ANY/ApiPermission.WorkshopStackEndpoint4AFC1F87.ANY..
  EndpointANYApiPermissionTestWorkshopStackEndpoint4AFC1F87ANYC69EEBC3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloLoggerLoggerHandlerC47768A5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /test-invoke-stage/*/
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Default/ANY/ApiPermission.Test.WorkshopStackEndpoint4AFC1F87.ANY..
  EndpointANY485C938B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - EndpointEEF1FD8F
          - RootResourceId
      RestApiId:
        Ref: EndpointEEF1FD8F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - HelloLoggerLoggerHandlerC47768A5
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: WorkshopStack/Endpoint/Default/ANY/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE11STW/bMAz9Lb0ratxddmw+tqLAthpJ0Tstc65aWzJEKW1g+L+XkmLH6IlPT6T49MhCFuu1XN/cwwetVP1+OyjrUA5HD+pdHJBscArFhgg9c402jdhZQ94F5cXuvynBQYceXTw8Bd+HRM+VjDm/1l5bM4rYZUB1J4eXXsW7l3InylC1Wh1DZTDVXtHBBo/PULV45a8ci7JKQ3x5To7g12MZwz/wD+DxA86idPrE8Prwo2HFjKeErORy2nj+/GuHxosjquC0Pz84G/qkYUmMwtXEXqE7oWuRaNcGilbkRnPRfrsk9uChAkJ+ymU1++2lcBSUSOrAQINODrllzMvhGVyDfqFwTvh+M4oWuqoGOfwORk0mLXGJrtNEaTAaOjkcbDY6xdLyUJIzGbG2HyuIe0AyrYOAXjfZMTn8Sb146n7T68sCTHCjlA0sdY99a8+T6sUpLlaecALT7mzZJB6d/Twvt2nGf9G/2jpSGY3jKIytUb7R7an4KYs7Wdy8kdYrx911h/KQ4xehZpRj9AIAAA==
    Metadata:
      aws:cdk:path: WorkshopStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3Bucket90E120EA:
    Type: String
    Description: S3 bucket for asset "e40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183d"
  AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dS3VersionKeyF8C01A20:
    Type: String
    Description: S3 key for asset version "e40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183d"
  AssetParameterse40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183dArtifactHash81BAC73A:
    Type: String
    Description: Artifact hash for asset "e40ce922bf957d0c07ec0d1897df20898fcfd89092f97fac04cd61fb8123183d"
Outputs:
  Endpoint8024A810:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: EndpointEEF1FD8F
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: EndpointDeploymentStageprodB78BEEA0
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

