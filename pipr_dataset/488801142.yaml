Resources:
  RecipeApiF5075489:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: RecipeApi
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Resource
  RecipeApiCloudWatchRole9CAFF027:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/CloudWatchRole/Resource
  RecipeApiAccountF940DE7C:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - RecipeApiCloudWatchRole9CAFF027
          - Arn
    DependsOn:
      - RecipeApiF5075489
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Account
  RecipeApiDeploymentE8B8E03E93c6044d285990fbb5fe91d47dcdf2a2:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: RecipeApiF5075489
      Description: Automatically created by the RestApi construct
    DependsOn:
      - RecipeApirecipesDELETE9B14E276
      - RecipeApirecipesGET4CCD6592
      - RecipeApirecipesOPTIONSFA7F5CC0
      - RecipeApirecipesPOST377965ED
      - RecipeApirecipesPUTA8678510
      - RecipeApirecipes063FC306
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Deployment/Resource
  RecipeApiDeploymentStageprod70F54A30:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: RecipeApiF5075489
      DeploymentId:
        Ref: RecipeApiDeploymentE8B8E03E93c6044d285990fbb5fe91d47dcdf2a2
      StageName: prod
    DependsOn:
      - RecipeApiAccountF940DE7C
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/DeploymentStage.prod/Resource
  RecipeApirecipes063FC306:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RecipeApiF5075489
          - RootResourceId
      PathPart: recipes
      RestApiId:
        Ref: RecipeApiF5075489
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/Resource
  RecipeApirecipesOPTIONSFA7F5CC0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RecipeApirecipes063FC306
      RestApiId:
        Ref: RecipeApiF5075489
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/OPTIONS/Resource
  RecipeApirecipesPOSTApiPermissionAndysRecipesRecipeApi2E6B0C12POSTrecipes7780C9CA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableCreateEB8DE4B9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /
            - Ref: RecipeApiDeploymentStageprod70F54A30
            - /POST/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/POST/ApiPermission.AndysRecipesRecipeApi2E6B0C12.POST..recipes
  RecipeApirecipesPOSTApiPermissionTestAndysRecipesRecipeApi2E6B0C12POSTrecipesE6D946DF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableCreateEB8DE4B9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /test-invoke-stage/POST/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/POST/ApiPermission.Test.AndysRecipesRecipeApi2E6B0C12.POST..recipes
  RecipeApirecipesPOST377965ED:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: RecipeApirecipes063FC306
      RestApiId:
        Ref: RecipeApiF5075489
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RecipesTableCreateEB8DE4B9
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/POST/Resource
  RecipeApirecipesGETApiPermissionAndysRecipesRecipeApi2E6B0C12GETrecipesA18398A5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableRead8405ADD5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /
            - Ref: RecipeApiDeploymentStageprod70F54A30
            - /GET/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/GET/ApiPermission.AndysRecipesRecipeApi2E6B0C12.GET..recipes
  RecipeApirecipesGETApiPermissionTestAndysRecipesRecipeApi2E6B0C12GETrecipes358A9EE0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableRead8405ADD5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /test-invoke-stage/GET/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/GET/ApiPermission.Test.AndysRecipesRecipeApi2E6B0C12.GET..recipes
  RecipeApirecipesGET4CCD6592:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RecipeApirecipes063FC306
      RestApiId:
        Ref: RecipeApiF5075489
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RecipesTableRead8405ADD5
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/GET/Resource
  RecipeApirecipesPUTApiPermissionAndysRecipesRecipeApi2E6B0C12PUTrecipes2A1F4CC5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableUpdate879DD4FD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /
            - Ref: RecipeApiDeploymentStageprod70F54A30
            - /PUT/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/PUT/ApiPermission.AndysRecipesRecipeApi2E6B0C12.PUT..recipes
  RecipeApirecipesPUTApiPermissionTestAndysRecipesRecipeApi2E6B0C12PUTrecipesE0B1A6DE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableUpdate879DD4FD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /test-invoke-stage/PUT/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/PUT/ApiPermission.Test.AndysRecipesRecipeApi2E6B0C12.PUT..recipes
  RecipeApirecipesPUTA8678510:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: RecipeApirecipes063FC306
      RestApiId:
        Ref: RecipeApiF5075489
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RecipesTableUpdate879DD4FD
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/PUT/Resource
  RecipeApirecipesDELETEApiPermissionAndysRecipesRecipeApi2E6B0C12DELETErecipes51640D38:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableDelete178749F9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /
            - Ref: RecipeApiDeploymentStageprod70F54A30
            - /DELETE/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/DELETE/ApiPermission.AndysRecipesRecipeApi2E6B0C12.DELETE..recipes
  RecipeApirecipesDELETEApiPermissionTestAndysRecipesRecipeApi2E6B0C12DELETErecipes89F54250:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RecipesTableDelete178749F9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RecipeApiF5075489
            - /test-invoke-stage/DELETE/recipes
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/DELETE/ApiPermission.Test.AndysRecipesRecipeApi2E6B0C12.DELETE..recipes
  RecipeApirecipesDELETE9B14E276:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: RecipeApirecipes063FC306
      RestApiId:
        Ref: RecipeApiF5075489
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RecipesTableDelete178749F9
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeApi/Default/recipes/DELETE/Resource
  RecipesTable058A1F33:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: recipeId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: recipeId
          AttributeType: S
        - AttributeName: cuisine
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: cuisine
          KeySchema:
            - AttributeName: cuisine
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: RecipesTable
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable/Resource
  RecipesTableCreateServiceRoleE2C10F2B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Create/ServiceRole/Resource
  RecipesTableCreateServiceRoleDefaultPolicy01151E43:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RecipesTable058A1F33
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RecipesTable058A1F33
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: RecipesTableCreateServiceRoleDefaultPolicy01151E43
      Roles:
        - Ref: RecipesTableCreateServiceRoleE2C10F2B
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Create/ServiceRole/DefaultPolicy/Resource
  RecipesTableCreateEB8DE4B9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d55c14c0fbe8248990654546cd3d634447923e8c6c7f00cda6f5ff8a8fcf5bca.zip
      Role:
        Fn::GetAtt:
          - RecipesTableCreateServiceRoleE2C10F2B
          - Arn
      Environment:
        Variables:
          TABLE_NAME: RecipesTable
          PRIMARY_KEY: recipeId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: RecipesTable-Create
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - RecipesTableCreateServiceRoleDefaultPolicy01151E43
      - RecipesTableCreateServiceRoleE2C10F2B
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Create/Resource
      aws:asset:path: asset.d55c14c0fbe8248990654546cd3d634447923e8c6c7f00cda6f5ff8a8fcf5bca
      aws:asset:is-bundled: true
      aws:asset:property: Code
  RecipesTableReadServiceRole4A52C867:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Read/ServiceRole/Resource
  RecipesTableReadServiceRoleDefaultPolicyB645B8B3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RecipesTable058A1F33
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RecipesTable058A1F33
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: RecipesTableReadServiceRoleDefaultPolicyB645B8B3
      Roles:
        - Ref: RecipesTableReadServiceRole4A52C867
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Read/ServiceRole/DefaultPolicy/Resource
  RecipesTableRead8405ADD5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 27dbcb22af3fd2aa1a2fe3e14bb03c54bfcb1209a1d3c7713547991a1f30e948.zip
      Role:
        Fn::GetAtt:
          - RecipesTableReadServiceRole4A52C867
          - Arn
      Environment:
        Variables:
          TABLE_NAME: RecipesTable
          PRIMARY_KEY: recipeId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: RecipesTable-Read
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - RecipesTableReadServiceRoleDefaultPolicyB645B8B3
      - RecipesTableReadServiceRole4A52C867
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Read/Resource
      aws:asset:path: asset.27dbcb22af3fd2aa1a2fe3e14bb03c54bfcb1209a1d3c7713547991a1f30e948
      aws:asset:is-bundled: true
      aws:asset:property: Code
  RecipesTableUpdateServiceRole957C2C47:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Update/ServiceRole/Resource
  RecipesTableUpdateServiceRoleDefaultPolicyDF21E521:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RecipesTable058A1F33
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RecipesTable058A1F33
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: RecipesTableUpdateServiceRoleDefaultPolicyDF21E521
      Roles:
        - Ref: RecipesTableUpdateServiceRole957C2C47
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Update/ServiceRole/DefaultPolicy/Resource
  RecipesTableUpdate879DD4FD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: cdc9e7e1a1d25aa1f2a771c2e61f672daef6a43507f29e6eb0a6f7e6d48ce1a9.zip
      Role:
        Fn::GetAtt:
          - RecipesTableUpdateServiceRole957C2C47
          - Arn
      Environment:
        Variables:
          TABLE_NAME: RecipesTable
          PRIMARY_KEY: recipeId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: RecipesTable-Update
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - RecipesTableUpdateServiceRoleDefaultPolicyDF21E521
      - RecipesTableUpdateServiceRole957C2C47
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Update/Resource
      aws:asset:path: asset.cdc9e7e1a1d25aa1f2a771c2e61f672daef6a43507f29e6eb0a6f7e6d48ce1a9
      aws:asset:is-bundled: true
      aws:asset:property: Code
  RecipesTableDeleteServiceRole492239DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Delete/ServiceRole/Resource
  RecipesTableDeleteServiceRoleDefaultPolicyCCFCD68D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RecipesTable058A1F33
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RecipesTable058A1F33
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: RecipesTableDeleteServiceRoleDefaultPolicyCCFCD68D
      Roles:
        - Ref: RecipesTableDeleteServiceRole492239DD
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Delete/ServiceRole/DefaultPolicy/Resource
  RecipesTableDelete178749F9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: b8e16288d75cf661e29ac392eae3f16dc30cad91d8a6adf5e21ed882ff2af1d6.zip
      Role:
        Fn::GetAtt:
          - RecipesTableDeleteServiceRole492239DD
          - Arn
      Environment:
        Variables:
          TABLE_NAME: RecipesTable
          PRIMARY_KEY: recipeId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: RecipesTable-Delete
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - RecipesTableDeleteServiceRoleDefaultPolicyCCFCD68D
      - RecipesTableDeleteServiceRole492239DD
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipesTable-Delete/Resource
      aws:asset:path: asset.b8e16288d75cf661e29ac392eae3f16dc30cad91d8a6adf5e21ed882ff2af1d6
      aws:asset:is-bundled: true
      aws:asset:property: Code
  recipesphotos69457A9D:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - recipes-photos-
            - Fn::Select:
                - 4
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 2
                        - Fn::Split:
                            - /
                            - Ref: AWS::StackId
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - HEAD
              - GET
              - PUT
            AllowedOrigins:
              - "*"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Andys-Recipes/recipes-photos/Resource
  RecipeUserPool41E2C757:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      SmsVerificationMessage: The verification code to your new account is {####}
      UserPoolName: RecipeUserPool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeUserPool/Resource
  RecipeUserPoolRecipeUserPoolclientC091CD81:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: RecipeUserPool41E2C757
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ClientName: RecipeUserPool-client
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeUserPool/RecipeUserPool-client/Resource
  RecipeUserAuthorizer3B53B26D:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: RecipeUserAuthorizer
      RestApiId:
        Ref: RecipeApiF5075489
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - Fn::GetAtt:
            - RecipeUserPool41E2C757
            - Arn
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeUserAuthorizer/Resource
  RecipeIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: RecipeUserPoolRecipeUserPoolclientC091CD81
          ProviderName:
            Fn::GetAtt:
              - RecipeUserPool41E2C757
              - ProviderName
    Metadata:
      aws:cdk:path: Andys-Recipes/RecipeIdentityPool
  CognitoDefaultAuthenticatedRoleC5D5C31E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: RecipeIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Andys-Recipes/CognitoDefaultAuthenticatedRole/Resource
  CognitoDefaultUnAuthenticatedRole6CA311FD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: RecipeIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Andys-Recipes/CognitoDefaultUnAuthenticatedRole/Resource
  CognitoAdminRole4C10FBA4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: RecipeIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Andys-Recipes/CognitoAdminRole/Resource
  CognitoAdminRoleDefaultPolicyBC6192E4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:PutObjectAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - recipesphotos69457A9D
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: CognitoAdminRoleDefaultPolicyBC6192E4
      Roles:
        - Ref: CognitoAdminRole4C10FBA4
    Metadata:
      aws:cdk:path: Andys-Recipes/CognitoAdminRole/DefaultPolicy/Resource
  RolesAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: RecipeIdentityPool
      RoleMappings:
        adminsMapping:
          AmbiguousRoleResolution: AuthenticatedRole
          IdentityProvider:
            Fn::Join:
              - ""
              - - Fn::GetAtt:
                    - RecipeUserPool41E2C757
                    - ProviderName
                - ":"
                - Ref: RecipeUserPoolRecipeUserPoolclientC091CD81
          Type: Token
      Roles:
        authenticated:
          Fn::GetAtt:
            - CognitoDefaultAuthenticatedRoleC5D5C31E
            - Arn
        unauthenticated:
          Fn::GetAtt:
            - CognitoDefaultUnAuthenticatedRole6CA311FD
            - Arn
    Metadata:
      aws:cdk:path: Andys-Recipes/RolesAttachment
  admins:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId:
        Ref: RecipeUserPool41E2C757
      GroupName: admins
      RoleArn:
        Fn::GetAtt:
          - CognitoAdminRole4C10FBA4
          - Arn
    Metadata:
      aws:cdk:path: Andys-Recipes/admins
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2WSTVPCMBCGf4v3EAf04LXg6HhQGdQzE5JYFpJsJx8ytdP/7qahgHra533b3dmPzPjslk+vxCFMpNpPDGx49xaF3DOy1p1ooBZRH0TLu5UOsWqALT7dBVZSYnKR3evGYGs1IbkXiqrVOnsFKBWTl3ouwlkcaxZ+1nGLKlsjYe0g4kfQfoloQpXI9vCt/dDASfUMhKU+0ZSCOS7RgGyzLNQzI+xGCd5lS3sLIQC6/MNDcjIS90y1TlhUtIp3sSnFBhiT1w6V3gX+MoQxj4WbtQhBx8CrHEjzbp7kXsdh2IK5WKGeyTIY78bR8scTj7AwcNzqf+dJEUBsx+RLneevIt1ya//kP3pMTd9n6zXFJsXzIYbO86XA1b+uQrxAp6BsKC+A78L11/SOT2f0gHYBYOLpIYDVfFXiD8lr4vZcAgAA
    Metadata:
      aws:cdk:path: Andys-Recipes/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  RecipeApiEndpoint80863509:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: RecipeApiF5075489
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: RecipeApiDeploymentStageprod70F54A30
          - /
  recipesphotosbucketname:
    Value:
      Ref: recipesphotos69457A9D
  UserPoolId:
    Value:
      Ref: RecipeUserPool41E2C757
  UserPoolClientId:
    Value:
      Ref: RecipeUserPoolRecipeUserPoolclientC091CD81
  IdentityPoolId:
    Value:
      Ref: RecipeIdentityPool
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

