Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/Resource
  VPCpublicSubnet1Subnet325F50B2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: NexusFargateStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet1/Subnet
  VPCpublicSubnet1RouteTableF591E248:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet1/RouteTable
  VPCpublicSubnet1RouteTableAssociationBFFA43B7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet1RouteTableF591E248
      SubnetId:
        Ref: VPCpublicSubnet1Subnet325F50B2
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet1/RouteTableAssociation
  VPCpublicSubnet1DefaultRoute19059ECD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet1RouteTableF591E248
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet1/DefaultRoute
  VPCpublicSubnet1EIP2D50A06D:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet1/EIP
  VPCpublicSubnet1NATGatewayEEDEB5A1:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCpublicSubnet1Subnet325F50B2
      AllocationId:
        Fn::GetAtt:
          - VPCpublicSubnet1EIP2D50A06D
          - AllocationId
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet1/NATGateway
  VPCpublicSubnet2Subnet2B2DFF71:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: NexusFargateStack/VPC/publicSubnet2
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet2/Subnet
  VPCpublicSubnet2RouteTable55DAB1BB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/publicSubnet2
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet2/RouteTable
  VPCpublicSubnet2RouteTableAssociation0849466B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet2RouteTable55DAB1BB
      SubnetId:
        Ref: VPCpublicSubnet2Subnet2B2DFF71
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet2/RouteTableAssociation
  VPCpublicSubnet2DefaultRoute9ED4D6BC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet2RouteTable55DAB1BB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/publicSubnet2/DefaultRoute
  VPCcontainerSubnet1Subnet818599D9:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: container
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: NexusFargateStack/VPC/containerSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet1/Subnet
  VPCcontainerSubnet1RouteTable8BAE913B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/containerSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet1/RouteTable
  VPCcontainerSubnet1RouteTableAssociation7975448E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCcontainerSubnet1RouteTable8BAE913B
      SubnetId:
        Ref: VPCcontainerSubnet1Subnet818599D9
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet1/RouteTableAssociation
  VPCcontainerSubnet1DefaultRoute85D10040:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCcontainerSubnet1RouteTable8BAE913B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCpublicSubnet1NATGatewayEEDEB5A1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet1/DefaultRoute
  VPCcontainerSubnet2SubnetFE889CC3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: container
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: NexusFargateStack/VPC/containerSubnet2
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet2/Subnet
  VPCcontainerSubnet2RouteTable13EF2BC2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/containerSubnet2
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet2/RouteTable
  VPCcontainerSubnet2RouteTableAssociation86D504DB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCcontainerSubnet2RouteTable13EF2BC2
      SubnetId:
        Ref: VPCcontainerSubnet2SubnetFE889CC3
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet2/RouteTableAssociation
  VPCcontainerSubnet2DefaultRouteCF45EB2F:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCcontainerSubnet2RouteTable13EF2BC2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCpublicSubnet1NATGatewayEEDEB5A1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/containerSubnet2/DefaultRoute
  VPCpersistentSubnet1SubnetEF9DAA32:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.4.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: persistent
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: NexusFargateStack/VPC/persistentSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/persistentSubnet1/Subnet
  VPCpersistentSubnet1RouteTableE3912103:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/persistentSubnet1
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/persistentSubnet1/RouteTable
  VPCpersistentSubnet1RouteTableAssociation7FE53EEE:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCpersistentSubnet1RouteTableE3912103
      SubnetId:
        Ref: VPCpersistentSubnet1SubnetEF9DAA32
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/persistentSubnet1/RouteTableAssociation
  VPCpersistentSubnet2Subnet435B5576:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.5.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: persistent
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: NexusFargateStack/VPC/persistentSubnet2
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/persistentSubnet2/Subnet
  VPCpersistentSubnet2RouteTable3DAA7BCD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC/persistentSubnet2
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/persistentSubnet2/RouteTable
  VPCpersistentSubnet2RouteTableAssociationD976BFE9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCpersistentSubnet2RouteTable3DAA7BCD
      SubnetId:
        Ref: VPCpersistentSubnet2Subnet435B5576
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/persistentSubnet2/RouteTableAssociation
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: NexusFargateStack/VPC
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: NexusFargateStack/VPC/VPCGW
  AlbSecurityGroup86A59E99:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: NexusFargateStack/AlbSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: NexusFargateStack/AlbSecurityGroup/Resource
  NexusServiceSecurityGroup918A1119:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: NexusFargateStack/NexusServiceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: NexusFargateStack/NexusServiceSecurityGroup/Resource
  NexusServiceSecurityGroupfromNexusFargateStackAlbSecurityGroupE8984A0980810323A52A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 8081
      GroupId:
        Fn::GetAtt:
          - NexusServiceSecurityGroup918A1119
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AlbSecurityGroup86A59E99
          - GroupId
      ToPort: 8081
    Metadata:
      aws:cdk:path: NexusFargateStack/NexusServiceSecurityGroup/from NexusFargateStackAlbSecurityGroupE8984A09:8081
  EfsSecurityGroupEC5F36AC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: NexusFargateStack/EfsSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: NexusFargateStack/EfsSecurityGroup/Resource
  EfsSecurityGroupfromNexusFargateStackNexusServiceSecurityGroup9BFB98BC2049B37A1FA7:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from NexusFargateStackNexusServiceSecurityGroup9BFB98BC:2049
      FromPort: 2049
      GroupId:
        Fn::GetAtt:
          - EfsSecurityGroupEC5F36AC
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - NexusServiceSecurityGroup918A1119
          - GroupId
      ToPort: 2049
    Metadata:
      aws:cdk:path: NexusFargateStack/EfsSecurityGroup/from NexusFargateStackNexusServiceSecurityGroup9BFB98BC:2049
  EFSF3301CFD:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: NexusFargateStack/EFS
      LifecyclePolicies:
        - TransitionToIA: AFTER_14_DAYS
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: NexusFargateStack/EFS/Resource
  EFSEfsMountTarget1674E914B:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: EFSF3301CFD
      SecurityGroups:
        - Fn::GetAtt:
            - EfsSecurityGroupEC5F36AC
            - GroupId
      SubnetId:
        Ref: VPCpersistentSubnet1SubnetEF9DAA32
    Metadata:
      aws:cdk:path: NexusFargateStack/EFS/EfsMountTarget1
  EFSEfsMountTarget2A889DFBF:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: EFSF3301CFD
      SecurityGroups:
        - Fn::GetAtt:
            - EfsSecurityGroupEC5F36AC
            - GroupId
      SubnetId:
        Ref: VPCpersistentSubnet2Subnet435B5576
    Metadata:
      aws:cdk:path: NexusFargateStack/EFS/EfsMountTarget2
  AccessPointE936DE82:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId:
        Ref: EFSF3301CFD
      PosixUser:
        Gid: "0"
        Uid: "0"
      RootDirectory:
        Path: /
    Metadata:
      aws:cdk:path: NexusFargateStack/AccessPoint/Resource
  ClusterEB0386A7:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: NexusFargateStack/Cluster/Resource
  Cluster3DA9CCBA:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      Cluster:
        Ref: ClusterEB0386A7
      DefaultCapacityProviderStrategy: []
    Metadata:
      aws:cdk:path: NexusFargateStack/Cluster/Cluster
  NexusTaskDefTaskRole072BC7F5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: NexusFargateStack/NexusTaskDef/TaskRole/Resource
  NexusTaskDefTaskRoleDefaultPolicyDA9784D1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
            Effect: Allow
            Resource: "*"
          - Action: logs:DescribeLogGroups
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: NexusTaskDefTaskRoleDefaultPolicyDA9784D1
      Roles:
        - Ref: NexusTaskDefTaskRole072BC7F5
    Metadata:
      aws:cdk:path: NexusFargateStack/NexusTaskDef/TaskRole/DefaultPolicy/Resource
  NexusTaskDef4F25C036:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: sonatype/nexus3:3.33.1
          LinuxParameters:
            Capabilities: {}
            InitProcessEnabled: true
          MountPoints:
            - ContainerPath: /nexus-data
              ReadOnly: false
              SourceVolume: nexus-data-volume
          Name: nexus
          PortMappings:
            - ContainerPort: 8081
              HostPort: 8081
              Protocol: tcp
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
      Cpu: "1024"
      Family: NexusFargateStackNexusTaskDef9DAA61A8
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - NexusTaskDefTaskRole072BC7F5
          - Arn
      Volumes:
        - Name: nexus-data-volume
          EfsVolumeConfiguration:
            AuthorizationConfig:
              AccessPointId:
                Ref: AccessPointE936DE82
            TransitEncryption: ENABLED
            FileSystemId:
              Ref: EFSF3301CFD
    Metadata:
      aws:cdk:path: NexusFargateStack/NexusTaskDef/Resource
  ServiceD69D759B:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      EnableECSManagedTags: false
      EnableExecuteCommand: true
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: nexus
          ContainerPort: 8081
          TargetGroupArn:
            Ref: ALBHttpListenerNexusTargetGroupGroupFD4E646F
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - NexusServiceSecurityGroup918A1119
                - GroupId
          Subnets:
            - Ref: VPCcontainerSubnet1Subnet818599D9
            - Ref: VPCcontainerSubnet2SubnetFE889CC3
      PlatformVersion: 1.4.0
      TaskDefinition:
        Ref: NexusTaskDef4F25C036
    DependsOn:
      - ALBHttpListenerNexusTargetGroupGroupFD4E646F
      - ALBHttpListener04CE8CD0
    Metadata:
      aws:cdk:path: NexusFargateStack/Service/Service
  ALBAEE750D2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - AlbSecurityGroup86A59E99
            - GroupId
      Subnets:
        - Ref: VPCpublicSubnet1Subnet325F50B2
        - Ref: VPCpublicSubnet2Subnet2B2DFF71
      Type: application
    DependsOn:
      - VPCpublicSubnet1DefaultRoute19059ECD
      - VPCpublicSubnet2DefaultRoute9ED4D6BC
    Metadata:
      aws:cdk:path: NexusFargateStack/ALB/Resource
  ALBHttpListener04CE8CD0:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ALBHttpListenerNexusTargetGroupGroupFD4E646F
          Type: forward
      LoadBalancerArn:
        Ref: ALBAEE750D2
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: NexusFargateStack/ALB/HttpListener/Resource
  ALBHttpListenerNexusTargetGroupGroupFD4E646F:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "30"
      TargetType: ip
      UnhealthyThresholdCount: 10
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: NexusFargateStack/ALB/HttpListener/NexusTargetGroupGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31STW/bMAz9Lb2rat1Td1vqfiBAuxlx0TsjMxkbWzIkyl1g+L+XspPGWYGd9Eg+PpOPznSW/dDXFz/hI1yaanfVG+dR9yWD2akVBhe9QZVv7O/IbWSVOxvYR8MpN69LoSImZweVtHo0N7p/a02qvRW5KuK6JlPGtcWx94RWLjK+wrrGU/6UW4TgDEFS/iIn8LAs0vML+AkYP2CvCk+dwJPw0jJ6wUfCNMkhWrCs+KdBy6pEEz3x/sm72I4z/DextFuPIQwKN0H3j1RjuQ+MTSKeRy8uWn4Fv5V5FsZIU+HIjrPNQhEyIpTXUfr86OU3mEMLRgYovOuoQj9zJahH+QIku8LuHjdk6WjWP5lnsvFvAR4aFMmQbslAFv2Mc9Aq0Xc0HfYAB0XQ6H7lpjONb+HkpKOvE5JNaghMpnZQraEGa8huO/kRFm0rhHHeZ6ndjbVpw7N4ziNZ3B44RzyrT75+nWgWDsOgrKtQv4erLrvV2Y3OLt4D0aWXe1CDejW9nz3Z+i3+AgAA
    Metadata:
      aws:cdk:path: NexusFargateStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  AlbDnsName:
    Value:
      Fn::GetAtt:
        - ALBAEE750D2
        - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

