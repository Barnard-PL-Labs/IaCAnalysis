Resources:
  blitzvpc9E1C4947:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/Resource
  blitzvpcPublicSubnet1Subnet5760D423:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: blitzvpc9E1C4947
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet1/Subnet
  blitzvpcPublicSubnet1RouteTable026E0995:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: blitzvpc9E1C4947
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet1/RouteTable
  blitzvpcPublicSubnet1RouteTableAssociationD6EF96DD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: blitzvpcPublicSubnet1RouteTable026E0995
      SubnetId:
        Ref: blitzvpcPublicSubnet1Subnet5760D423
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet1/RouteTableAssociation
  blitzvpcPublicSubnet1DefaultRoute7A7425BC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: blitzvpcPublicSubnet1RouteTable026E0995
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: blitzvpcIGW76C1DAA0
    DependsOn:
      - blitzvpcVPCGWEE5A367F
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet1/DefaultRoute
  blitzvpcPublicSubnet1EIP7CDCB36E:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet1/EIP
  blitzvpcPublicSubnet1NATGateway7821EC12:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: blitzvpcPublicSubnet1Subnet5760D423
      AllocationId:
        Fn::GetAtt:
          - blitzvpcPublicSubnet1EIP7CDCB36E
          - AllocationId
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet1/NATGateway
  blitzvpcPublicSubnet2Subnet1F0B4B33:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: blitzvpc9E1C4947
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet2/Subnet
  blitzvpcPublicSubnet2RouteTableAB040F0C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: blitzvpc9E1C4947
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet2/RouteTable
  blitzvpcPublicSubnet2RouteTableAssociationE93CB242:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: blitzvpcPublicSubnet2RouteTableAB040F0C
      SubnetId:
        Ref: blitzvpcPublicSubnet2Subnet1F0B4B33
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet2/RouteTableAssociation
  blitzvpcPublicSubnet2DefaultRoute637D5312:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: blitzvpcPublicSubnet2RouteTableAB040F0C
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: blitzvpcIGW76C1DAA0
    DependsOn:
      - blitzvpcVPCGWEE5A367F
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet2/DefaultRoute
  blitzvpcPublicSubnet2EIPDB45D1AA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet2/EIP
  blitzvpcPublicSubnet2NATGateway985D7EC3:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: blitzvpcPublicSubnet2Subnet1F0B4B33
      AllocationId:
        Fn::GetAtt:
          - blitzvpcPublicSubnet2EIPDB45D1AA
          - AllocationId
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PublicSubnet2/NATGateway
  blitzvpcPrivateSubnet1Subnet6406AB08:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: blitzvpc9E1C4947
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsStack/blitz-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet1/Subnet
  blitzvpcPrivateSubnet1RouteTableBF5CD49D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: blitzvpc9E1C4947
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet1/RouteTable
  blitzvpcPrivateSubnet1RouteTableAssociation3749E09F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: blitzvpcPrivateSubnet1RouteTableBF5CD49D
      SubnetId:
        Ref: blitzvpcPrivateSubnet1Subnet6406AB08
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet1/RouteTableAssociation
  blitzvpcPrivateSubnet1DefaultRoute7EB87363:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: blitzvpcPrivateSubnet1RouteTableBF5CD49D
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: blitzvpcPublicSubnet1NATGateway7821EC12
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet1/DefaultRoute
  blitzvpcPrivateSubnet2Subnet837B1B01:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: blitzvpc9E1C4947
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsStack/blitz-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet2/Subnet
  blitzvpcPrivateSubnet2RouteTable1BE6A25B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: blitzvpc9E1C4947
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet2/RouteTable
  blitzvpcPrivateSubnet2RouteTableAssociationFB2C931D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: blitzvpcPrivateSubnet2RouteTable1BE6A25B
      SubnetId:
        Ref: blitzvpcPrivateSubnet2Subnet837B1B01
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet2/RouteTableAssociation
  blitzvpcPrivateSubnet2DefaultRouteD727D2EE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: blitzvpcPrivateSubnet2RouteTable1BE6A25B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: blitzvpcPublicSubnet2NATGateway985D7EC3
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/PrivateSubnet2/DefaultRoute
  blitzvpcIGW76C1DAA0:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AwsStack/blitz-vpc
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/IGW
  blitzvpcVPCGWEE5A367F:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: blitzvpc9E1C4947
      InternetGatewayId:
        Ref: blitzvpcIGW76C1DAA0
    Metadata:
      aws:cdk:path: AwsStack/blitz-vpc/VPCGW
  blitzsubnetgroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: List of subnets used for redis cache blitz
      SubnetIds:
        - Ref: blitzvpcPrivateSubnet1Subnet6406AB08
        - Ref: blitzvpcPrivateSubnet2Subnet837B1B01
    Metadata:
      aws:cdk:path: AwsStack/blitz-subnet-group
  blitzsecuritygroupAFEBBC5E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsStack/blitz-security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Redis from anywhere
          FromPort: 6379
          IpProtocol: tcp
          ToPort: 6379
      VpcId:
        Ref: blitzvpc9E1C4947
    Metadata:
      aws:cdk:path: AwsStack/blitz-security-group/Resource
  blitzcluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: cache.t3.micro
      Engine: redis
      NumCacheNodes: 1
      AutoMinorVersionUpgrade: true
      CacheSubnetGroupName:
        Ref: blitzsubnetgroup
      Port: 6379
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - blitzsecuritygroupAFEBBC5E
            - GroupId
    Metadata:
      aws:cdk:path: AwsStack/blitz-cluster
  blitzebapplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: blitz
    Metadata:
      aws:cdk:path: AwsStack/blitz-eb-application
  blitzawselasticbeanstalkec2roleFEA720AE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSElasticBeanstalkWebTier
    Metadata:
      aws:cdk:path: AwsStack/blitz-aws-elasticbeanstalk-ec2-role/Resource
  blitzelasticbeanstalkinstanceprofile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: blitzawselasticbeanstalkec2roleFEA720AE
      InstanceProfileName: blitz-elasticbeanstalk-instance-profile
    Metadata:
      aws:cdk:path: AwsStack/blitz-elasticbeanstalk-instance-profile
  blitzelasticbeanstalksecuritygroupC32C4E88:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsStack/blitz-elasticbeanstalk-security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Ref: blitzvpc9E1C4947
    Metadata:
      aws:cdk:path: AwsStack/blitz-elasticbeanstalk-security-group/Resource
  blitzebversionprops:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: blitz
      SourceBundle:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 36ba5c82639489b9db3b7e2247dbfb7f5136dd6ece004e123bf9f5a1164b4eb9.zip
    DependsOn:
      - blitzebapplication
    Metadata:
      aws:cdk:path: AwsStack/blitz-eb-version-props
  blitzenvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: blitz
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t3.micro
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: network
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: StreamLogs
          Value: "true"
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value:
            Ref: blitzvpc9E1C4947
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value:
            Fn::Join:
              - ""
              - - Ref: blitzvpcPublicSubnet1Subnet5760D423
                - ","
                - Ref: blitzvpcPublicSubnet2Subnet1F0B4B33
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value:
            Fn::Join:
              - ""
              - - Ref: blitzvpcPrivateSubnet1Subnet6406AB08
                - ","
                - Ref: blitzvpcPrivateSubnet2Subnet837B1B01
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: "1"
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: "3"
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: blitz-elasticbeanstalk-instance-profile
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: REDIS_ENDPOINT_ADDRESS
          Value:
            Fn::GetAtt:
              - blitzcluster
              - RedisEndpoint.Address
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: REDIS_ENDPOINT_PORT
          Value:
            Fn::GetAtt:
              - blitzcluster
              - RedisEndpoint.Port
      SolutionStackName: 64bit Amazon Linux 2 v5.5.0 running Node.js 16
      VersionLabel:
        Ref: blitzebversionprops
    DependsOn:
      - blitzsubnetgroup
    Metadata:
      aws:cdk:path: AwsStack/blitz-environment
  blitzs3website519B5F15:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsStack/blitz-s3-website/Resource
  blitzs3websitePolicy5571050C:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: blitzs3website519B5F15
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - blitzs3website519B5F15
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - blitzs3website519B5F15
                        - Arn
                    - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - blitzoriginaccessidentitywebsite124AE4A2
                  - S3CanonicalUserId
            Resource:
              - Fn::GetAtt:
                  - blitzs3website519B5F15
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - blitzs3website519B5F15
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - blitzoriginaccessidentitywebsite124AE4A2
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - blitzs3website519B5F15
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AwsStack/blitz-s3-website/Policy/Resource
  blitzs3websiteAutoDeleteObjectsCustomResource69806A5A:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: blitzs3website519B5F15
    DependsOn:
      - blitzs3websitePolicy5571050C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsStack/blitz-s3-website/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: blitzs3website519B5F15
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: AwsStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be
      aws:asset:property: Code
  blitzoriginaccessidentitywebsite124AE4A2:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allows CloudFront to reach the bucket
    Metadata:
      aws:cdk:path: AwsStack/blitz-origin-access-identity-website/Resource
  blitzcfwebsiteB097CE3D:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: AwsStackblitzcfwebsiteOrigin1E4E2A2A1
          ViewerProtocolPolicy: allow-all
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::GetAtt:
                - blitzs3website519B5F15
                - RegionalDomainName
            Id: AwsStackblitzcfwebsiteOrigin1E4E2A2A1
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: blitzoriginaccessidentitywebsite124AE4A2
    Metadata:
      aws:cdk:path: AwsStack/blitz-cf-website/Resource
  blitzdashboardE103D147:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody:
        Fn::Join:
          - ""
          - - '{"widgets":[{"type":"metric","width":24,"height":6,"x":0,"y":0,"properties":{"view":"timeSeries","title":"Blitz Dashboard","region":"'
            - Ref: AWS::Region
            - '","metrics":[["AWS/ELB","HTTPCode_Backend_2XX"]],"yAxis":{},"period":30,"stat":"Sum"}}]}'
      DashboardName: Blitz-Dashboard
    Metadata:
      aws:cdk:path: AwsStack/blitz-dashboard/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21SwW7qMBD8lt6N++CpUq9p2ldxaSOouFaOs5QtwY68axCK8u9dJ5DwpJ52djz2zqy80PMH/efOnGhmq/2sxlK3azZ2r4T6bMEudLtprMq3blPkqohljXYdSwecuAmtfGT4MGUNEz9xGZG3aBi9G8UJvCyLVN4MvxqGkzmrIuBR4PTw0jEEwVfB4OTSZSxedwdwrNZgY0A+vwYfm97DLdEpqA0xWpGDbkeLozpPB3kdSaaN4hKMIzb1vr+RNY2EH0PctBsIdGFf3BGDd8lSp+jvpyECJp2lIr1un6LdAz8ZAjXAdOuChlJ4efc80UPfKTQH3a78sOFrXSaDzkIR/BZr6JStfay2YoF1+x7wC11mLRAtK7Ek6+jDJs2/pPlV8YzEAct4TXrbXwacDNudbp8N7UpvQtXLrk3XqRWQj8GC6oPLj5IpXyqX9frDeJZijPi/I0lzxApCkrxHbmK/pdy7CgcTzlegv+n+OH/U84We330T4ixECXAAvRrqD6/egz7dAgAA
    Metadata:
      aws:cdk:path: AwsStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  cloudfrontEndpointUrl:
    Value:
      Fn::GetAtt:
        - blitzcfwebsiteB097CE3D
        - DomainName
  beanstalkEndpointUrl:
    Value:
      Fn::GetAtt:
        - blitzenvironment
        - EndpointURL
  redisEndpointUrl:
    Value:
      Fn::GetAtt:
        - blitzcluster
        - RedisEndpoint.Address
  redisEndpointPort:
    Value:
      Fn::GetAtt:
        - blitzcluster
        - RedisEndpoint.Port
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

