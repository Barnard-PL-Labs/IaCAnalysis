Resources:
  WiremockLambdaServiceRole5ADBA5DC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambda/ServiceRole/Resource
  WiremockLambdaE1C3AEE5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:3286e3a63ced04e3777c06ea97ed03bbaf23fea48172350a7e218ca5ed7e7375
      Role:
        Fn::GetAtt:
          - WiremockLambdaServiceRole5ADBA5DC
          - Arn
      Architectures:
        - x86_64
      MemorySize: 2048
      PackageType: Image
      Timeout: 30
    DependsOn:
      - WiremockLambdaServiceRole5ADBA5DC
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambda/Resource
      aws:asset:path: asset.3286e3a63ced04e3777c06ea97ed03bbaf23fea48172350a7e218ca5ed7e7375
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  WiremockLambdaLogRetentionA3E6CCD8:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: WiremockLambdaE1C3AEE5
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambda/LogRetention/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:DeleteRetentionPolicy
              - logs:PutRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  WiremockLambdaRestAPIBDD5A6AD:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: WiremockLambdaRestAPI
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Resource
  WiremockLambdaRestAPICloudWatchRoleAC103AB3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/CloudWatchRole/Resource
  WiremockLambdaRestAPIAccount50A206E5:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - WiremockLambdaRestAPICloudWatchRoleAC103AB3
          - Arn
    DependsOn:
      - WiremockLambdaRestAPIBDD5A6AD
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Account
  WiremockLambdaRestAPIDeploymentB8EBFD228d33adee1a76beb74a1541c7087345c2:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: WiremockLambdaRestAPIBDD5A6AD
      Description: Automatically created by the RestApi construct
    DependsOn:
      - WiremockLambdaRestAPIproxyANYF6CEC351
      - WiremockLambdaRestAPIproxyCE687AD6
      - WiremockLambdaRestAPIANYBE54C68A
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Deployment/Resource
  WiremockLambdaRestAPIDeploymentStageprod1904D56B:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: WiremockLambdaRestAPIBDD5A6AD
      DeploymentId:
        Ref: WiremockLambdaRestAPIDeploymentB8EBFD228d33adee1a76beb74a1541c7087345c2
      StageName: prod
    DependsOn:
      - WiremockLambdaRestAPIAccount50A206E5
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/DeploymentStage.prod/Resource
  WiremockLambdaRestAPIproxyCE687AD6:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - WiremockLambdaRestAPIBDD5A6AD
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: WiremockLambdaRestAPIBDD5A6AD
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Default/{proxy+}/Resource
  WiremockLambdaRestAPIproxyANYApiPermissionwiremocklambdademoWiremockLambdaRestAPI8014A0A9ANYproxy3CF49E20:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WiremockLambdaE1C3AEE5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WiremockLambdaRestAPIBDD5A6AD
            - /
            - Ref: WiremockLambdaRestAPIDeploymentStageprod1904D56B
            - /*/*
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Default/{proxy+}/ANY/ApiPermission.wiremocklambdademoWiremockLambdaRestAPI8014A0A9.ANY..{proxy+}
  WiremockLambdaRestAPIproxyANYApiPermissionTestwiremocklambdademoWiremockLambdaRestAPI8014A0A9ANYproxyC96F2F62:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - WiremockLambdaE1C3AEE5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: WiremockLambdaRestAPIBDD5A6AD
            - /test-invoke-stage/*/*
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Default/{proxy+}/ANY/ApiPermission.Test.wiremocklambdademoWiremockLambdaRestAPI8014A0A9.ANY..{proxy+}
  WiremockLambdaRestAPIproxyANYF6CEC351:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Ref: WiremockLambdaRestAPIproxyCE687AD6
      RestApiId:
        Ref: WiremockLambdaRestAPIBDD5A6AD
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - WiremockLambdaE1C3AEE5
                  - Arn
              - /invocations
      RequestParameters:
        method.request.path.proxy: true
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Default/{proxy+}/ANY/Resource
  WiremockLambdaRestAPIANYBE54C68A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - WiremockLambdaRestAPIBDD5A6AD
          - RootResourceId
      RestApiId:
        Ref: WiremockLambdaRestAPIBDD5A6AD
      AuthorizationType: NONE
      Integration:
        Type: MOCK
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/WiremockLambdaRestAPI/Default/ANY/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VRwW6DMAz9lt1DJuhlV9pq0qROQ+wDqjR4zAViFCfrEOLfl4RVYyc/P9vPL04hi1zmD+rGmW66rMeLnN+d0p0I1Hnu1XBplJyPpDuwL4Nq4dkb7ZCMOHyYLa7ADsgcskWgGuRcUw+xkGJFPeop9SW0CND2rJjBsdyol5GJNVnDSIyO7LRXDKKnluWJ2hocmLSTd/f5dYh3cu+DkEv9asRWObipKTgBduWIycwfLLUmb5w4wtjTNATVyG6ycIc2vWAFYZS81ZDkK0vf0535FV7xK7hPaiK1omURyV8UQdP+690KvHk3+mThQKZBlw5pqAF55cev/EnmRfioKyNmNtjGAWS9xh8YBcQSxAEAAA==
    Metadata:
      aws:cdk:path: wiremock-lambda-demo/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  WiremockLambdaRestAPIEndpoint21C771BB:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: WiremockLambdaRestAPIBDD5A6AD
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WiremockLambdaRestAPIDeploymentStageprod1904D56B
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

