Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: cdk-eks-playground/Vpc
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/Resource
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet1EIPD7E02669:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet1/EIP
  VpcPublicSubnet1NATGateway4D7517AA:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet1EIPD7E02669
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet1/NATGateway
  VpcPublicSubnet2Subnet691E08A3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable94F7E489:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociationDD5762D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRoute97F91067:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet2/DefaultRoute
  VpcPublicSubnet2EIP3C605A87:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet2/EIP
  VpcPublicSubnet2NATGateway9182C01D:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet2EIP3C605A87
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PublicSubnet2/NATGateway
  VpcPrivateSubnet1Subnet536B997A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet1/Subnet
  VpcPrivateSubnet1RouteTableB2C5B500:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet1/RouteTable
  VpcPrivateSubnet1RouteTableAssociation70C59FA6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet1/RouteTableAssociation
  VpcPrivateSubnet1DefaultRouteBE02A9ED:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet1NATGateway4D7517AA
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet1/DefaultRoute
  VpcPrivateSubnet2Subnet3788AAA1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet2/Subnet
  VpcPrivateSubnet2RouteTableA678073B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: cdk-eks-playground/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet2/RouteTable
  VpcPrivateSubnet2RouteTableAssociationA89CAD56:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet2/RouteTableAssociation
  VpcPrivateSubnet2DefaultRoute060D2087:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet2NATGateway9182C01D
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/PrivateSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: cdk-eks-playground/Vpc
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: cdk-eks-playground/Vpc/VPCGW
  EksClusterRoleC84B376F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/Role/Resource
  EksClusterControlPlaneSecurityGroup9257A6D0:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/ControlPlaneSecurityGroup/Resource
  EksClusterCreationRole75AABE42:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    DependsOn:
      - VpcIGWD7BA715C
      - VpcPrivateSubnet1DefaultRouteBE02A9ED
      - VpcPrivateSubnet1RouteTableB2C5B500
      - VpcPrivateSubnet1RouteTableAssociation70C59FA6
      - VpcPrivateSubnet1Subnet536B997A
      - VpcPrivateSubnet2DefaultRoute060D2087
      - VpcPrivateSubnet2RouteTableA678073B
      - VpcPrivateSubnet2RouteTableAssociationA89CAD56
      - VpcPrivateSubnet2Subnet3788AAA1
      - VpcPublicSubnet1DefaultRoute3DA9E72A
      - VpcPublicSubnet1EIPD7E02669
      - VpcPublicSubnet1NATGateway4D7517AA
      - VpcPublicSubnet1RouteTable6C95E38E
      - VpcPublicSubnet1RouteTableAssociation97140677
      - VpcPublicSubnet1Subnet5C2D37C4
      - VpcPublicSubnet2DefaultRoute97F91067
      - VpcPublicSubnet2EIP3C605A87
      - VpcPublicSubnet2NATGateway9182C01D
      - VpcPublicSubnet2RouteTable94F7E489
      - VpcPublicSubnet2RouteTableAssociationDD5762D8
      - VpcPublicSubnet2Subnet691E08A3
      - Vpc8378EB38
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/Resource/CreationRole/Resource
  EksClusterCreationRoleDefaultPolicy2DFE4D73:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - EksClusterRoleC84B376F
                - Arn
          - Action:
              - eks:CreateCluster
              - eks:DescribeCluster
              - eks:DescribeUpdate
              - eks:DeleteCluster
              - eks:UpdateClusterVersion
              - eks:UpdateClusterConfig
              - eks:CreateFargateProfile
              - eks:TagResource
              - eks:UntagResource
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":eks:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :cluster/eks-playground
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":eks:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :cluster/eks-playground/*
          - Action:
              - eks:DescribeFargateProfile
              - eks:DeleteFargateProfile
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":eks:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :fargateprofile/eks-playground/*
          - Action:
              - iam:GetRole
              - iam:listAttachedRolePolicies
            Effect: Allow
            Resource: "*"
          - Action: iam:CreateServiceLinkedRole
            Effect: Allow
            Resource: "*"
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeRouteTables
              - ec2:DescribeDhcpOptions
              - ec2:DescribeVpcs
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: EksClusterCreationRoleDefaultPolicy2DFE4D73
      Roles:
        - Ref: EksClusterCreationRole75AABE42
    DependsOn:
      - VpcIGWD7BA715C
      - VpcPrivateSubnet1DefaultRouteBE02A9ED
      - VpcPrivateSubnet1RouteTableB2C5B500
      - VpcPrivateSubnet1RouteTableAssociation70C59FA6
      - VpcPrivateSubnet1Subnet536B997A
      - VpcPrivateSubnet2DefaultRoute060D2087
      - VpcPrivateSubnet2RouteTableA678073B
      - VpcPrivateSubnet2RouteTableAssociationA89CAD56
      - VpcPrivateSubnet2Subnet3788AAA1
      - VpcPublicSubnet1DefaultRoute3DA9E72A
      - VpcPublicSubnet1EIPD7E02669
      - VpcPublicSubnet1NATGateway4D7517AA
      - VpcPublicSubnet1RouteTable6C95E38E
      - VpcPublicSubnet1RouteTableAssociation97140677
      - VpcPublicSubnet1Subnet5C2D37C4
      - VpcPublicSubnet2DefaultRoute97F91067
      - VpcPublicSubnet2EIP3C605A87
      - VpcPublicSubnet2NATGateway9182C01D
      - VpcPublicSubnet2RouteTable94F7E489
      - VpcPublicSubnet2RouteTableAssociationDD5762D8
      - VpcPublicSubnet2Subnet691E08A3
      - Vpc8378EB38
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/Resource/CreationRole/DefaultPolicy/Resource
  EksClusterFAB68BDB:
    Type: Custom::AWSCDK-EKS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.cdkeksplaygroundawscdkawseksClusterResourceProviderframeworkonEventC2757F3DArn
      Config:
        name: eks-playground
        version: "1.21"
        roleArn:
          Fn::GetAtt:
            - EksClusterRoleC84B376F
            - Arn
        resourcesVpcConfig:
          subnetIds:
            - Ref: VpcPublicSubnet1Subnet5C2D37C4
            - Ref: VpcPublicSubnet2Subnet691E08A3
            - Ref: VpcPrivateSubnet1Subnet536B997A
            - Ref: VpcPrivateSubnet2Subnet3788AAA1
          securityGroupIds:
            - Fn::GetAtt:
                - EksClusterControlPlaneSecurityGroup9257A6D0
                - GroupId
          endpointPublicAccess: true
          endpointPrivateAccess: true
      AssumeRoleArn:
        Fn::GetAtt:
          - EksClusterCreationRole75AABE42
          - Arn
      AttributesRevision: 2
    DependsOn:
      - EksClusterCreationRoleDefaultPolicy2DFE4D73
      - EksClusterCreationRole75AABE42
      - VpcIGWD7BA715C
      - VpcPrivateSubnet1DefaultRouteBE02A9ED
      - VpcPrivateSubnet1RouteTableB2C5B500
      - VpcPrivateSubnet1RouteTableAssociation70C59FA6
      - VpcPrivateSubnet1Subnet536B997A
      - VpcPrivateSubnet2DefaultRoute060D2087
      - VpcPrivateSubnet2RouteTableA678073B
      - VpcPrivateSubnet2RouteTableAssociationA89CAD56
      - VpcPrivateSubnet2Subnet3788AAA1
      - VpcPublicSubnet1DefaultRoute3DA9E72A
      - VpcPublicSubnet1EIPD7E02669
      - VpcPublicSubnet1NATGateway4D7517AA
      - VpcPublicSubnet1RouteTable6C95E38E
      - VpcPublicSubnet1RouteTableAssociation97140677
      - VpcPublicSubnet1Subnet5C2D37C4
      - VpcPublicSubnet2DefaultRoute97F91067
      - VpcPublicSubnet2EIP3C605A87
      - VpcPublicSubnet2NATGateway9182C01D
      - VpcPublicSubnet2RouteTable94F7E489
      - VpcPublicSubnet2RouteTableAssociationDD5762D8
      - VpcPublicSubnet2Subnet691E08A3
      - Vpc8378EB38
      - VpcVPCGWBF912B6E
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/Resource/Resource/Default
  EksClusterKubectlReadyBarrier502B0E83:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: aws:cdk:eks:kubectl-ready
    DependsOn:
      - EksClusterCreationRoleDefaultPolicy2DFE4D73
      - EksClusterCreationRole75AABE42
      - EksClusterFAB68BDB
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/KubectlReadyBarrier
  EksClusterMastersRole3F49FAC3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/MastersRole/Resource
  EksClusterAwsAuthmanifest4F460A9B:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.cdkeksplaygroundawscdkawseksKubectlProviderframeworkonEvent4D1CA0D2Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-auth","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c85691dc7f0c65fb71dc68b9c0e91b8a461aad137b":""}},"data":{"mapRoles":"[{\"rolearn\":\"'
            - Fn::GetAtt:
                - EksClusterMastersRole3F49FAC3
                - Arn
            - \",\"username\":\"
            - Fn::GetAtt:
                - EksClusterMastersRole3F49FAC3
                - Arn
            - \",\"groups\":[\"system:masters\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - EksClusterNodegroupDefaultCapacityNodeGroupRole70D09CEC
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]}]","mapUsers":"[]","mapAccounts":"[]"}}]
      ClusterName:
        Ref: EksClusterFAB68BDB
      RoleArn:
        Fn::GetAtt:
          - EksClusterCreationRole75AABE42
          - Arn
      PruneLabel: aws.cdk.eks/prune-c85691dc7f0c65fb71dc68b9c0e91b8a461aad137b
      Overwrite: true
    DependsOn:
      - EksClusterKubectlReadyBarrier502B0E83
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/AwsAuth/manifest/Resource/Default
  EksClusterNodegroupDefaultCapacityNodeGroupRole70D09CEC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSWorkerNodePolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKS_CNI_Policy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/NodegroupDefaultCapacity/NodeGroupRole/Resource
  EksClusterNodegroupDefaultCapacityA81E70F9:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: EksClusterFAB68BDB
      NodeRole:
        Fn::GetAtt:
          - EksClusterNodegroupDefaultCapacityNodeGroupRole70D09CEC
          - Arn
      Subnets:
        - Ref: VpcPrivateSubnet1Subnet536B997A
        - Ref: VpcPrivateSubnet2Subnet3788AAA1
      AmiType: AL2_x86_64
      ForceUpdateEnabled: true
      InstanceTypes:
        - m5.large
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 2
        MinSize: 2
    Metadata:
      aws:cdk:path: cdk-eks-playground/EksCluster/NodegroupDefaultCapacity/Resource
  awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /83825e27aa855c02896c5680d6a4a66c315a5967b6b5b289170f9fc6e681304e.json
      Parameters:
        referencetocdkeksplaygroundEksClusterCreationRoleE427DFA4Arn:
          Fn::GetAtt:
            - EksClusterCreationRole75AABE42
            - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: cdk-eks-playground/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource
      aws:asset:path: cdkeksplaygroundawscdkawseksClusterResourceProvider8A7F5E38.nested.template.json
      aws:asset:property: TemplateURL
  awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /c2600003090b1800ecb7654bb5f4870c1b0ff677f166eddde6e85a881fae69df.json
      Parameters:
        referencetocdkeksplaygroundEksClusterD929E25AArn:
          Fn::GetAtt:
            - EksClusterFAB68BDB
            - Arn
        referencetocdkeksplaygroundEksClusterCreationRoleE427DFA4Arn:
          Fn::GetAtt:
            - EksClusterCreationRole75AABE42
            - Arn
        referencetocdkeksplaygroundVpcPrivateSubnet1SubnetEB5C348ARef:
          Ref: VpcPrivateSubnet1Subnet536B997A
        referencetocdkeksplaygroundVpcPrivateSubnet2Subnet982ED003Ref:
          Ref: VpcPrivateSubnet2Subnet3788AAA1
        referencetocdkeksplaygroundEksClusterD929E25AClusterSecurityGroupId:
          Fn::GetAtt:
            - EksClusterFAB68BDB
            - ClusterSecurityGroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: cdk-eks-playground/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource
      aws:asset:path: cdkeksplaygroundawscdkawseksKubectlProviderB1EFFE91.nested.template.json
      aws:asset:property: TemplateURL
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/01Q0W6DMAz8lr6bbDBp2itCU1VN6xBMfZ1CcNcUSBCxiyrEvy/AWvrk8+lyvlwkXl7F80b2LlBlFdS6EENOUlXgqZ8BVSSGQ6sgOZpDmkDKRa1VzoVBmrgVZZYJv2VR48qvXOycVVqStuYunsD7Lp3GXtJWEvbyCmmnLx6uxjtD2Hl8EyxJ/reYfNZTg4YgR8Wdpuu2s9zOGR6JEbByYkhqdt4O4t7FTCf44GI2R/cpjT6iI9jbEn9vHvdlBC0bMWR2+d88U+u7mAMtaBwhQ2e5U17j79hmXf2TB/zF1PJS4Ny1B4k1pZ76GcH4o+Lsni7hmwgjEW7OTuugY0O6QZEt8w90F2kwuQEAAA==
    Metadata:
      aws:cdk:path: cdk-eks-playground/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  EksClusterConfigCommand2AE6ED67:
    Value:
      Fn::Join:
        - ""
        - - "aws eks update-kubeconfig --name "
          - Ref: EksClusterFAB68BDB
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - EksClusterMastersRole3F49FAC3
              - Arn
  EksClusterGetTokenCommandDF0BEDB9:
    Value:
      Fn::Join:
        - ""
        - - "aws eks get-token --cluster-name "
          - Ref: EksClusterFAB68BDB
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - EksClusterMastersRole3F49FAC3
              - Arn
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

