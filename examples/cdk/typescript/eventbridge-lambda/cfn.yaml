Resources:
  TopicBFC7AF6E:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Lambda SNS Topic
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/Topic/Resource
  TopicTokenSubscription178F3F75E:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint:
        Ref: email
      Protocol: email
      TopicArn:
        Ref: TopicBFC7AF6E
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/Topic/TokenSubscription:1/Resource
  SingletonServiceRoleDDD815CD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/Singleton/ServiceRole/Resource
  SingletonServiceRoleDefaultPolicy7525C238:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:publish
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SingletonServiceRoleDefaultPolicy7525C238
      Roles:
        - Ref: SingletonServiceRoleDDD815CD
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/Singleton/ServiceRole/DefaultPolicy/Resource
  Singleton8C7B99F3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |-
          import json
          import boto3
          import os
          client = boto3.client('sns')

          def main(event, context):
              print("I'm running!")
              response = client.publish(TopicArn=os.environ.get('TOPIC_ARN'),Message="Test message")
              print("Message published")
              return(response)
      Environment:
        Variables:
          TOPIC_ARN:
            Ref: TopicBFC7AF6E
      Handler: index.main
      Role:
        Fn::GetAtt:
          - SingletonServiceRoleDDD815CD
          - Arn
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - SingletonServiceRoleDefaultPolicy7525C238
      - SingletonServiceRoleDDD815CD
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/Singleton/Resource
  Rule4C995B7F:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(* * ? * * *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - Singleton8C7B99F3
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/Rule/Resource
  RuleAllowEventRuleEventBridgeLambdaStackSingleton0D05990EAAD8CFB9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Singleton8C7B99F3
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - Rule4C995B7F
          - Arn
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/Rule/AllowEventRuleEventBridgeLambdaStackSingleton0D05990E
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02OsQ7CMAxEv6V7akhZ2Csxo8KO0sRILk1SxQkIRf13SgpSp3u+e4MbkPIA+0q9uNbmUY/UQ75EpR9iqW6ZHUO++om0aO9uhUvqWQeaInn3bbf3LEZle6Mgn5LTf2PLZwyWmItLykLu/IjfoeTZj6TfxSs0C3yii8sTXfppS85zMVRQFiMG0SH7FPS6b7j1ztD6lvMGYeDdUx5BNiCrgYnqkFwki9Ct+QGKWwHJDgEAAA==
    Metadata:
      aws:cdk:path: EventBridgeLambdaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  email:
    Type: String
    Description: The name of the Amazon S3 bucket where uploaded files will be stored.
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

