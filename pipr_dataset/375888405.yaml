Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet2EIP4947BC00:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2/EIP
  VPCPublicSubnet2NATGateway3C070193:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet2EIP4947BC00
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PublicSubnet2/NATGateway
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet2NATGateway3C070193
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AwsAppmeshWeightedRoutingStack/VPC
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/VPC/VPCGW
  Mesh73A573F6:
    Type: AWS::AppMesh::Mesh
    Properties:
      MeshName: AwsAppmeshWeightedRoutingStackMeshDC98B208
      Spec: {}
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/Mesh/Resource
  namespace177341A3:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: cloudmap.local
      Vpc:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/namespace/Resource
  ClusterEB0386A7:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/Cluster/Resource
  PrivateHostedZone6354E1BB:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: appmesh.local.
      VPCs:
        - VPCId:
            Ref: VPCB9E5F0B4
          VPCRegion:
            Ref: AWS::Region
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/PrivateHostedZone/Resource
  AppMeshServiceAEnvoyFargateServiceserviceATaskRoleserviceAEEEF658B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSAppMeshEnvoyAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchLogsFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/TaskRole_serviceA/Resource
  AppMeshServiceAEnvoyFargateServiceserviceATaskExecutionRoleserviceA17C1F480:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/TaskExecutionRole_serviceA/Resource
  AppMeshServiceAEnvoyFargateServiceserviceATaskExecutionRoleserviceADefaultPolicy420DBE1D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAAppContainerserviceALogGroup659ACA8E
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAEnvoyContainerserviceALogGroupE5BFA99B
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAXRayContainerserviceALogGroupE22DD123
                - Arn
        Version: "2012-10-17"
      PolicyName: AppMeshServiceAEnvoyFargateServiceserviceATaskExecutionRoleserviceADefaultPolicy420DBE1D
      Roles:
        - Ref: AppMeshServiceAEnvoyFargateServiceserviceATaskExecutionRoleserviceA17C1F480
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/TaskExecutionRole_serviceA/DefaultPolicy/Resource
  AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAED304639:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:3000/health
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:16dec45f2b7fd4c1294c58c58aa28041842f24f19ebeeba1eeb5faedac6ef468
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAAppContainerserviceALogGroup659ACA8E
              awslogs-stream-prefix: serviceA
              awslogs-region:
                Ref: AWS::Region
          Name: AppContainer_serviceA
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
        - Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/serviceA
            - Name: AWS_REGION
              Value:
                Ref: AWS::Region
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.17.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAEnvoyContainerserviceALogGroupE5BFA99B
              awslogs-stream-prefix: serviceA_envoy
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: envoy
          User: "1337"
        - Essential: true
          Image: amazon/aws-xray-daemon:3.3.2
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAXRayContainerserviceALogGroupE22DD123
              awslogs-stream-prefix: serviceA_xray
              awslogs-region:
                Ref: AWS::Region
          Name: xray
          PortMappings:
            - ContainerPort: 2000
              HostPort: 2000
              Protocol: udp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceATaskExecutionRoleserviceA17C1F480
          - Arn
      Family: AwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceA67CFA4D5
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: AppPorts
            Value: "3000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: IgnoredUID
            Value: "1337"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceATaskRoleserviceAEEEF658B
          - Arn
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/TaskDefinition_serviceA/Resource
  AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAAppContainerserviceALogGroup659ACA8E:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/TaskDefinition_serviceA/AppContainer_serviceA/LogGroup/Resource
  AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAEnvoyContainerserviceALogGroupE5BFA99B:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/TaskDefinition_serviceA/EnvoyContainer_serviceA/LogGroup/Resource
  AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAXRayContainerserviceALogGroupE22DD123:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/TaskDefinition_serviceA/XRayContainer_serviceA/LogGroup/Resource
  AppMeshServiceAEnvoyFargateServiceserviceAService19B461F7:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: AppContainer_serviceA
          ContainerPort: 3000
          TargetGroupArn:
            Ref: AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceAListenerserviceATargetGroupserviceAGroup747F293F
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - AppMeshServiceAEnvoyFargateServiceserviceASecurityGroupAD22D213
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - AppMeshServiceAEnvoyFargateServiceserviceACloudmapService19413C2E
              - Arn
      TaskDefinition:
        Ref: AppMeshServiceAEnvoyFargateServiceserviceATaskDefinitionserviceAED304639
    DependsOn:
      - AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceAListenerserviceA68C32B98
      - AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceAListenerserviceATargetGroupserviceAGroup747F293F
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/FargateService_serviceA/Service
  AppMeshServiceAEnvoyFargateServiceserviceACloudmapService19413C2E:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 0
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - namespace177341A3
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: serviceA
      NamespaceId:
        Fn::GetAtt:
          - namespace177341A3
          - Id
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/FargateService_serviceA/CloudmapService/Resource
  AppMeshServiceAEnvoyFargateServiceserviceASecurityGroupAD22D213:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/FargateService_serviceA/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/FargateService_serviceA/SecurityGroup/Resource
  AppMeshServiceAEnvoyFargateServiceserviceASecurityGroupfromAwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceASecurityGroup894FE2CC300093EB5A37:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceASecurityGroupAD22D213
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceASecurityGroup47DE7F1E
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/FargateService_serviceA/SecurityGroup/from AwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceASecurityGroup894FE2CC:3000
  AppMeshServiceAEnvoyFargateServiceserviceAVirtualNodeserviceA43DA8984:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName:
                Fn::GetAtt:
                  - AppMeshServiceBVirtualServiceserviceB35D211F7
                  - VirtualServiceName
        Listeners:
          - HealthCheck:
              HealthyThreshold: 3
              IntervalMillis: 5000
              Path: /health
              Port: 3000
              Protocol: http
              TimeoutMillis: 2000
              UnhealthyThreshold: 2
            PortMapping:
              Port: 3000
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: cloudmap.local
            ServiceName:
              Fn::GetAtt:
                - AppMeshServiceAEnvoyFargateServiceserviceACloudmapService19413C2E
                - Name
      VirtualNodeName: serviceA
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/VirtualNode_serviceA/Resource
  AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceA90B3303C:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceASecurityGroup47DE7F1E
            - GroupId
      Subnets:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
      Type: application
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/ApplicationLoadBalancer_serviceA/Resource
  AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceASecurityGroup47DE7F1E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB AwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceA4BE78F1F
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/ApplicationLoadBalancer_serviceA/SecurityGroup/Resource
  AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceASecurityGrouptoAwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceASecurityGroupEBA46C583000BE5746A9:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceASecurityGroup47DE7F1E
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceASecurityGroupAD22D213
          - GroupId
      FromPort: 3000
      ToPort: 3000
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/ApplicationLoadBalancer_serviceA/SecurityGroup/to AwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceASecurityGroupEBA46C58:3000
  AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceAListenerserviceA68C32B98:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceAListenerserviceATargetGroupserviceAGroup747F293F
          Type: forward
      LoadBalancerArn:
        Ref: AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceA90B3303C
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/ApplicationLoadBalancer_serviceA/Listener_serviceA/Resource
  AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceAListenerserviceATargetGroupserviceAGroup747F293F:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /health
      Port: 3000
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/EnvoyFargateService_serviceA/ApplicationLoadBalancer_serviceA/Listener_serviceA/TargetGroup_serviceAGroup/Resource
  AppMeshServiceAVirtualRouterserviceA4CEEEC32:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Listeners:
          - PortMapping:
              Port: 3000
              Protocol: http
      VirtualRouterName: AwsAppmeshWeightedRoutingStackAppMeshServiceAVirtualRouterserviceAD60612D4
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/VirtualRouter_serviceA/Resource
  AppMeshServiceAVirtualRouterserviceAVirtualRoute10269A69:
    Type: AWS::AppMesh::Route
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        HttpRoute:
          Action:
            WeightedTargets:
              - VirtualNode:
                  Fn::GetAtt:
                    - AppMeshServiceAEnvoyFargateServiceserviceAVirtualNodeserviceA43DA8984
                    - VirtualNodeName
                Weight: 1
          Match:
            Prefix: /
      VirtualRouterName:
        Fn::GetAtt:
          - AppMeshServiceAVirtualRouterserviceA4CEEEC32
          - VirtualRouterName
      RouteName: VirtualRoute
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/VirtualRouter_serviceA/VirtualRoute/Resource
  AppMeshServiceAVirtualServiceserviceAB6C90E70:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName:
              Fn::GetAtt:
                - AppMeshServiceAVirtualRouterserviceA4CEEEC32
                - VirtualRouterName
      VirtualServiceName: servicea.appmesh.local
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/VirtualService_serviceA/Resource
  AppMeshServiceAARecordserviceA72F5CA2B:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: servicea.appmesh.local.
      Type: A
      HostedZoneId:
        Ref: PrivateHostedZone6354E1BB
      ResourceRecords:
        - 10.10.10.10
      TTL: "1800"
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceA/ARecord_serviceA/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1TaskRoleserviceBv1E6AC12BF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSAppMeshEnvoyAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchLogsFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/TaskRole_serviceB_v1/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1TaskExecutionRoleserviceBv1EAB4137E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/TaskExecutionRole_serviceB_v1/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1TaskExecutionRoleserviceBv1DefaultPolicy6304CC5B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1AppContainerserviceBv1LogGroup66A1B334
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1EnvoyContainerserviceBv1LogGroup195A51B7
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1XRayContainerserviceBv1LogGroupC4DE4BA8
                - Arn
        Version: "2012-10-17"
      PolicyName: AppMeshServiceBEnvoyFargateServiceserviceBv1TaskExecutionRoleserviceBv1DefaultPolicy6304CC5B
      Roles:
        - Ref: AppMeshServiceBEnvoyFargateServiceserviceBv1TaskExecutionRoleserviceBv1EAB4137E
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/TaskExecutionRole_serviceB_v1/DefaultPolicy/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv10218A1B6:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:3000/health
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:8e173e8a506058a0aef3aac5ce9fa6df409341d0619108fa40ae63b73f7ae5e6
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1AppContainerserviceBv1LogGroup66A1B334
              awslogs-stream-prefix: serviceB_v1
              awslogs-region:
                Ref: AWS::Region
          Name: AppContainer_serviceB_v1
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
        - Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/serviceB_v1
            - Name: AWS_REGION
              Value:
                Ref: AWS::Region
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.17.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1EnvoyContainerserviceBv1LogGroup195A51B7
              awslogs-stream-prefix: serviceB_v1_envoy
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: envoy
          User: "1337"
        - Essential: true
          Image: amazon/aws-xray-daemon:3.3.2
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1XRayContainerserviceBv1LogGroupC4DE4BA8
              awslogs-stream-prefix: serviceB_v1_xray
              awslogs-region:
                Ref: AWS::Region
          Name: xray
          PortMappings:
            - ContainerPort: 2000
              HostPort: 2000
              Protocol: udp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - AppMeshServiceBEnvoyFargateServiceserviceBv1TaskExecutionRoleserviceBv1EAB4137E
          - Arn
      Family: AwsAppmeshWeightedRoutingStackAppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv17B08101D
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: AppPorts
            Value: "3000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: IgnoredUID
            Value: "1337"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - AppMeshServiceBEnvoyFargateServiceserviceBv1TaskRoleserviceBv1E6AC12BF
          - Arn
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/TaskDefinition_serviceB_v1/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1AppContainerserviceBv1LogGroup66A1B334:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/TaskDefinition_serviceB_v1/AppContainer_serviceB_v1/LogGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1EnvoyContainerserviceBv1LogGroup195A51B7:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/TaskDefinition_serviceB_v1/EnvoyContainer_serviceB_v1/LogGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv1XRayContainerserviceBv1LogGroupC4DE4BA8:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/TaskDefinition_serviceB_v1/XRayContainer_serviceB_v1/LogGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1ServiceE8558170:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv1SecurityGroup6FCEE949
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - AppMeshServiceBEnvoyFargateServiceserviceBv1CloudmapService7E1E7553
              - Arn
      TaskDefinition:
        Ref: AppMeshServiceBEnvoyFargateServiceserviceBv1TaskDefinitionserviceBv10218A1B6
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/FargateService_serviceB_v1/Service
  AppMeshServiceBEnvoyFargateServiceserviceBv1CloudmapService7E1E7553:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 0
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - namespace177341A3
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: serviceB_v1
      NamespaceId:
        Fn::GetAtt:
          - namespace177341A3
          - Id
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/FargateService_serviceB_v1/CloudmapService/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1SecurityGroup6FCEE949:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/FargateService_serviceB_v1/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/FargateService_serviceB_v1/SecurityGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv1SecurityGroupfromAwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceASecurityGroupEBA46C583000AB666408:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Allow inbound traffic from serviceA to serviceB_v1 (TCP 3000)
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - AppMeshServiceBEnvoyFargateServiceserviceBv1SecurityGroup6FCEE949
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceASecurityGroupAD22D213
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/FargateService_serviceB_v1/SecurityGroup/from AwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceASecurityGroupEBA46C58:3000
  AppMeshServiceBEnvoyFargateServiceserviceBv1VirtualNodeserviceBv1F7E9C6A3:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Listeners:
          - HealthCheck:
              HealthyThreshold: 3
              IntervalMillis: 5000
              Path: /health
              Port: 3000
              Protocol: http
              TimeoutMillis: 2000
              UnhealthyThreshold: 2
            PortMapping:
              Port: 3000
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: cloudmap.local
            ServiceName:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv1CloudmapService7E1E7553
                - Name
      VirtualNodeName: serviceB_v1
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v1/VirtualNode_serviceB_v1/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2TaskRoleserviceBv25979C83C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSAppMeshEnvoyAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchLogsFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/TaskRole_serviceB_v2/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2TaskExecutionRoleserviceBv2C2D20BA7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/TaskExecutionRole_serviceB_v2/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2TaskExecutionRoleserviceBv2DefaultPolicy53C7CC0B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2AppContainerserviceBv2LogGroupF14A60B9
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2EnvoyContainerserviceBv2LogGroup0C629A63
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2XRayContainerserviceBv2LogGroup0EF0ED65
                - Arn
        Version: "2012-10-17"
      PolicyName: AppMeshServiceBEnvoyFargateServiceserviceBv2TaskExecutionRoleserviceBv2DefaultPolicy53C7CC0B
      Roles:
        - Ref: AppMeshServiceBEnvoyFargateServiceserviceBv2TaskExecutionRoleserviceBv2C2D20BA7
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/TaskExecutionRole_serviceB_v2/DefaultPolicy/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2A884C36A:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:3000/health
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:4590628dc18cae299dc02f8625fdb2a3ce2ea5ce9ed6a65f00c986b9fb7df0be
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2AppContainerserviceBv2LogGroupF14A60B9
              awslogs-stream-prefix: serviceB_v2
              awslogs-region:
                Ref: AWS::Region
          Name: AppContainer_serviceB_v2
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
        - Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/serviceB_v2
            - Name: AWS_REGION
              Value:
                Ref: AWS::Region
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.17.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2EnvoyContainerserviceBv2LogGroup0C629A63
              awslogs-stream-prefix: serviceB_v2_envoy
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: envoy
          User: "1337"
        - Essential: true
          Image: amazon/aws-xray-daemon:3.3.2
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2XRayContainerserviceBv2LogGroup0EF0ED65
              awslogs-stream-prefix: serviceB_v2_xray
              awslogs-region:
                Ref: AWS::Region
          Name: xray
          PortMappings:
            - ContainerPort: 2000
              HostPort: 2000
              Protocol: udp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - AppMeshServiceBEnvoyFargateServiceserviceBv2TaskExecutionRoleserviceBv2C2D20BA7
          - Arn
      Family: AwsAppmeshWeightedRoutingStackAppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv22555D237
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: AppPorts
            Value: "3000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: IgnoredUID
            Value: "1337"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - AppMeshServiceBEnvoyFargateServiceserviceBv2TaskRoleserviceBv25979C83C
          - Arn
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/TaskDefinition_serviceB_v2/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2AppContainerserviceBv2LogGroupF14A60B9:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/TaskDefinition_serviceB_v2/AppContainer_serviceB_v2/LogGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2EnvoyContainerserviceBv2LogGroup0C629A63:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/TaskDefinition_serviceB_v2/EnvoyContainer_serviceB_v2/LogGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2XRayContainerserviceBv2LogGroup0EF0ED65:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/TaskDefinition_serviceB_v2/XRayContainer_serviceB_v2/LogGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2Service1F114DBA:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv2SecurityGroup6FF6B18B
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - AppMeshServiceBEnvoyFargateServiceserviceBv2CloudmapService713EBF0F
              - Arn
      TaskDefinition:
        Ref: AppMeshServiceBEnvoyFargateServiceserviceBv2TaskDefinitionserviceBv2A884C36A
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/FargateService_serviceB_v2/Service
  AppMeshServiceBEnvoyFargateServiceserviceBv2CloudmapService713EBF0F:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 0
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - namespace177341A3
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: serviceB_v2
      NamespaceId:
        Fn::GetAtt:
          - namespace177341A3
          - Id
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/FargateService_serviceB_v2/CloudmapService/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2SecurityGroup6FF6B18B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/FargateService_serviceB_v2/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/FargateService_serviceB_v2/SecurityGroup/Resource
  AppMeshServiceBEnvoyFargateServiceserviceBv2SecurityGroupfromAwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceASecurityGroupEBA46C5830000A448520:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Allow inbound traffic from serviceA to serviceB_v2 (TCP 3000)
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - AppMeshServiceBEnvoyFargateServiceserviceBv2SecurityGroup6FF6B18B
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AppMeshServiceAEnvoyFargateServiceserviceASecurityGroupAD22D213
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/FargateService_serviceB_v2/SecurityGroup/from AwsAppmeshWeightedRoutingStackAppMeshServiceAEnvoyFargateServiceserviceASecurityGroupEBA46C58:3000
  AppMeshServiceBEnvoyFargateServiceserviceBv2VirtualNodeserviceBv2DCDC3AE2:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Listeners:
          - HealthCheck:
              HealthyThreshold: 3
              IntervalMillis: 5000
              Path: /health
              Port: 3000
              Protocol: http
              TimeoutMillis: 2000
              UnhealthyThreshold: 2
            PortMapping:
              Port: 3000
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: cloudmap.local
            ServiceName:
              Fn::GetAtt:
                - AppMeshServiceBEnvoyFargateServiceserviceBv2CloudmapService713EBF0F
                - Name
      VirtualNodeName: serviceB_v2
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/EnvoyFargateService_serviceB_v2/VirtualNode_serviceB_v2/Resource
  AppMeshServiceBVirtualRouterserviceB9C6D3848:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Listeners:
          - PortMapping:
              Port: 3000
              Protocol: http
      VirtualRouterName: AwsAppmeshWeightedRoutingStackAppMeshServiceBVirtualRouterserviceB76606811
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/VirtualRouter_serviceB/Resource
  AppMeshServiceBVirtualRouterserviceBVirtualRoute6BABE078:
    Type: AWS::AppMesh::Route
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        HttpRoute:
          Action:
            WeightedTargets:
              - VirtualNode:
                  Fn::GetAtt:
                    - AppMeshServiceBEnvoyFargateServiceserviceBv1VirtualNodeserviceBv1F7E9C6A3
                    - VirtualNodeName
                Weight: 4
              - VirtualNode:
                  Fn::GetAtt:
                    - AppMeshServiceBEnvoyFargateServiceserviceBv2VirtualNodeserviceBv2DCDC3AE2
                    - VirtualNodeName
                Weight: 1
          Match:
            Prefix: /
      VirtualRouterName:
        Fn::GetAtt:
          - AppMeshServiceBVirtualRouterserviceB9C6D3848
          - VirtualRouterName
      RouteName: VirtualRoute
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/VirtualRouter_serviceB/VirtualRoute/Resource
  AppMeshServiceBVirtualServiceserviceB35D211F7:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName:
              Fn::GetAtt:
                - AppMeshServiceBVirtualRouterserviceB9C6D3848
                - VirtualRouterName
      VirtualServiceName: serviceb.appmesh.local
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/VirtualService_serviceB/Resource
  AppMeshServiceBARecordserviceBAA20B6D1:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: serviceb.appmesh.local.
      Type: A
      HostedZoneId:
        Ref: PrivateHostedZone6354E1BB
      ResourceRecords:
        - 10.10.10.10
      TTL: "1800"
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/AppMeshServiceB/ARecord_serviceB/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31TTW/bMAz9Lb0rat1twI5Lk64L0GWBXeTQGyMzrhpHMvSRIjD830fJsuOtRS/m4yNFkdRzxrObr/zm6ge82ZkoD9et0AZ5WzgQB5aj1d4IZAutrDNeODa3Fh1FK6kqttirP9413gV0Sd4ryi+lk1p1LBRuUdzydtuIENtuFmzjd7UUhd8pjGcvKNfe4RPsarzwF45u10JCqDwmB3C/2gSzBvcADt/gzDZGngheCq+UQ0N4SOg7Sd7c0bwvR1SOFSi8ke78YLRvYg+fEitVGbT2HX8faRq/aY5oX3j7m74hK9qtNM5DvdZlbH/qJhxHM5NgIsaRe5CCBZqTFNNaiemY7UEprdAnNGfeptUslV0D9dZAf/AjelJ3LIjC8nZRe5v6G+BPMBWEd7KHJe6lksMr/c9o5UAqNBMunf3oOhPm/PZlbPuXptvKZ61i2sSb50jaLXspBlSg65iEI29zXaedkd1okl58/x6FicwMgq4tX2pxQLM6QoVR6SHGc2y0lU6b8x1YZLWuaAOPuhoVMWAqVYN1UtQayh3UoAT9JifS/rxp6K4o3EeK3cVYv79//GmepNFUyhnwJP5EOyM5Dz1M3K7rmCIt8Vd7fcq+8+yWZ1evVsqZ8crJI/K8t38BYOuu/P4DAAA=
    Metadata:
      aws:cdk:path: AwsAppmeshWeightedRoutingStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  AppMeshServiceAEnvoyFargateServiceserviceAApiEndpointserviceAB57BDA86:
    Value:
      Fn::GetAtt:
        - AppMeshServiceAEnvoyFargateServiceserviceAApplicationLoadBalancerserviceA90B3303C
        - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

