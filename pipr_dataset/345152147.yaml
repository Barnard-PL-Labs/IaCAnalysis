Resources:
  clusterDefaultVpc83B86FBD:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/Resource
  clusterDefaultVpcPublicSubnet1Subnet6A0D5072:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.0.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1/Subnet
  clusterDefaultVpcPublicSubnet1RouteTableFD55F525:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1/RouteTable
  clusterDefaultVpcPublicSubnet1RouteTableAssociationF21DD285:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPublicSubnet1RouteTableFD55F525
      SubnetId:
        Ref: clusterDefaultVpcPublicSubnet1Subnet6A0D5072
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1/RouteTableAssociation
  clusterDefaultVpcPublicSubnet1DefaultRoute008A2768:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPublicSubnet1RouteTableFD55F525
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: clusterDefaultVpcIGWEA83F638
    DependsOn:
      - clusterDefaultVpcVPCGWB52AB94D
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1/DefaultRoute
  clusterDefaultVpcPublicSubnet1EIP0E34F4D0:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1/EIP
  clusterDefaultVpcPublicSubnet1NATGateway3F34F14E:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: clusterDefaultVpcPublicSubnet1Subnet6A0D5072
      AllocationId:
        Fn::GetAtt:
          - clusterDefaultVpcPublicSubnet1EIP0E34F4D0
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1
    DependsOn:
      - clusterDefaultVpcPublicSubnet1DefaultRoute008A2768
      - clusterDefaultVpcPublicSubnet1RouteTableAssociationF21DD285
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet1/NATGateway
  clusterDefaultVpcPublicSubnet2SubnetD89F8A7D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.32.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2/Subnet
  clusterDefaultVpcPublicSubnet2RouteTable4B281F43:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2/RouteTable
  clusterDefaultVpcPublicSubnet2RouteTableAssociation8D159B16:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPublicSubnet2RouteTable4B281F43
      SubnetId:
        Ref: clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2/RouteTableAssociation
  clusterDefaultVpcPublicSubnet2DefaultRoute3C6354F6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPublicSubnet2RouteTable4B281F43
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: clusterDefaultVpcIGWEA83F638
    DependsOn:
      - clusterDefaultVpcVPCGWB52AB94D
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2/DefaultRoute
  clusterDefaultVpcPublicSubnet2EIP92893124:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2/EIP
  clusterDefaultVpcPublicSubnet2NATGateway4B5BF1A3:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
      AllocationId:
        Fn::GetAtt:
          - clusterDefaultVpcPublicSubnet2EIP92893124
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2
    DependsOn:
      - clusterDefaultVpcPublicSubnet2DefaultRoute3C6354F6
      - clusterDefaultVpcPublicSubnet2RouteTableAssociation8D159B16
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet2/NATGateway
  clusterDefaultVpcPublicSubnet3SubnetCF380ECB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      AvailabilityZone: eu-west-1c
      CidrBlock: 10.0.64.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3/Subnet
  clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3/RouteTable
  clusterDefaultVpcPublicSubnet3RouteTableAssociationEC89C4A6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA
      SubnetId:
        Ref: clusterDefaultVpcPublicSubnet3SubnetCF380ECB
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3/RouteTableAssociation
  clusterDefaultVpcPublicSubnet3DefaultRoute6DFF6152:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: clusterDefaultVpcIGWEA83F638
    DependsOn:
      - clusterDefaultVpcVPCGWB52AB94D
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3/DefaultRoute
  clusterDefaultVpcPublicSubnet3EIP3576AE12:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3/EIP
  clusterDefaultVpcPublicSubnet3NATGateway5D6BCE9C:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: clusterDefaultVpcPublicSubnet3SubnetCF380ECB
      AllocationId:
        Fn::GetAtt:
          - clusterDefaultVpcPublicSubnet3EIP3576AE12
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3
    DependsOn:
      - clusterDefaultVpcPublicSubnet3DefaultRoute6DFF6152
      - clusterDefaultVpcPublicSubnet3RouteTableAssociationEC89C4A6
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PublicSubnet3/NATGateway
  clusterDefaultVpcPrivateSubnet1Subnet56973734:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.96.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet1/Subnet
  clusterDefaultVpcPrivateSubnet1RouteTable6588FE09:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet1/RouteTable
  clusterDefaultVpcPrivateSubnet1RouteTableAssociation941EEF5E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPrivateSubnet1RouteTable6588FE09
      SubnetId:
        Ref: clusterDefaultVpcPrivateSubnet1Subnet56973734
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet1/RouteTableAssociation
  clusterDefaultVpcPrivateSubnet1DefaultRoute1A3591A8:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPrivateSubnet1RouteTable6588FE09
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: clusterDefaultVpcPublicSubnet1NATGateway3F34F14E
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet1/DefaultRoute
  clusterDefaultVpcPrivateSubnet2Subnet3A49BF39:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.128.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet2/Subnet
  clusterDefaultVpcPrivateSubnet2RouteTable9A709948:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet2/RouteTable
  clusterDefaultVpcPrivateSubnet2RouteTableAssociation188551CD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPrivateSubnet2RouteTable9A709948
      SubnetId:
        Ref: clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet2/RouteTableAssociation
  clusterDefaultVpcPrivateSubnet2DefaultRoute29031EDD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPrivateSubnet2RouteTable9A709948
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: clusterDefaultVpcPublicSubnet2NATGateway4B5BF1A3
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet2/DefaultRoute
  clusterDefaultVpcPrivateSubnet3SubnetB16AB70B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      AvailabilityZone: eu-west-1c
      CidrBlock: 10.0.160.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet3/Subnet
  clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet3/RouteTable
  clusterDefaultVpcPrivateSubnet3RouteTableAssociation1051D4E6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE
      SubnetId:
        Ref: clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet3/RouteTableAssociation
  clusterDefaultVpcPrivateSubnet3DefaultRouteFE3587F6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: clusterDefaultVpcPublicSubnet3NATGateway5D6BCE9C
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/PrivateSubnet3/DefaultRoute
  clusterDefaultVpcIGWEA83F638:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: eks-experiment-dev/cluster/DefaultVpc
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/IGW
  clusterDefaultVpcVPCGWB52AB94D:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
      InternetGatewayId:
        Ref: clusterDefaultVpcIGWEA83F638
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/DefaultVpc/VPCGW
  clusterRole88D0C969:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/Role/Resource
  clusterControlPlaneSecurityGroup7F1D5AB2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: clusterDefaultVpc83B86FBD
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/ControlPlaneSecurityGroup/Resource
  clusterCreationRole2B3B5002:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :iam::613455550379:root
        Version: "2012-10-17"
    DependsOn:
      - clusterDefaultVpcIGWEA83F638
      - clusterDefaultVpcPrivateSubnet1DefaultRoute1A3591A8
      - clusterDefaultVpcPrivateSubnet1RouteTable6588FE09
      - clusterDefaultVpcPrivateSubnet1RouteTableAssociation941EEF5E
      - clusterDefaultVpcPrivateSubnet1Subnet56973734
      - clusterDefaultVpcPrivateSubnet2DefaultRoute29031EDD
      - clusterDefaultVpcPrivateSubnet2RouteTable9A709948
      - clusterDefaultVpcPrivateSubnet2RouteTableAssociation188551CD
      - clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
      - clusterDefaultVpcPrivateSubnet3DefaultRouteFE3587F6
      - clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE
      - clusterDefaultVpcPrivateSubnet3RouteTableAssociation1051D4E6
      - clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
      - clusterDefaultVpcPublicSubnet1DefaultRoute008A2768
      - clusterDefaultVpcPublicSubnet1EIP0E34F4D0
      - clusterDefaultVpcPublicSubnet1NATGateway3F34F14E
      - clusterDefaultVpcPublicSubnet1RouteTableFD55F525
      - clusterDefaultVpcPublicSubnet1RouteTableAssociationF21DD285
      - clusterDefaultVpcPublicSubnet1Subnet6A0D5072
      - clusterDefaultVpcPublicSubnet2DefaultRoute3C6354F6
      - clusterDefaultVpcPublicSubnet2EIP92893124
      - clusterDefaultVpcPublicSubnet2NATGateway4B5BF1A3
      - clusterDefaultVpcPublicSubnet2RouteTable4B281F43
      - clusterDefaultVpcPublicSubnet2RouteTableAssociation8D159B16
      - clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
      - clusterDefaultVpcPublicSubnet3DefaultRoute6DFF6152
      - clusterDefaultVpcPublicSubnet3EIP3576AE12
      - clusterDefaultVpcPublicSubnet3NATGateway5D6BCE9C
      - clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA
      - clusterDefaultVpcPublicSubnet3RouteTableAssociationEC89C4A6
      - clusterDefaultVpcPublicSubnet3SubnetCF380ECB
      - clusterDefaultVpc83B86FBD
      - clusterDefaultVpcVPCGWB52AB94D
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/Resource/CreationRole/Resource
  clusterCreationRoleDefaultPolicy69503D2C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - clusterRole88D0C969
                - Arn
          - Action:
              - eks:CreateCluster
              - eks:DescribeCluster
              - eks:DescribeUpdate
              - eks:DeleteCluster
              - eks:UpdateClusterVersion
              - eks:UpdateClusterConfig
              - eks:CreateFargateProfile
              - eks:TagResource
              - eks:UntagResource
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - eks:DescribeFargateProfile
              - eks:DeleteFargateProfile
            Effect: Allow
            Resource: "*"
          - Action:
              - iam:GetRole
              - iam:listAttachedRolePolicies
            Effect: Allow
            Resource: "*"
          - Action: iam:CreateServiceLinkedRole
            Effect: Allow
            Resource: "*"
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeRouteTables
              - ec2:DescribeDhcpOptions
              - ec2:DescribeVpcs
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: clusterCreationRoleDefaultPolicy69503D2C
      Roles:
        - Ref: clusterCreationRole2B3B5002
    DependsOn:
      - clusterDefaultVpcIGWEA83F638
      - clusterDefaultVpcPrivateSubnet1DefaultRoute1A3591A8
      - clusterDefaultVpcPrivateSubnet1RouteTable6588FE09
      - clusterDefaultVpcPrivateSubnet1RouteTableAssociation941EEF5E
      - clusterDefaultVpcPrivateSubnet1Subnet56973734
      - clusterDefaultVpcPrivateSubnet2DefaultRoute29031EDD
      - clusterDefaultVpcPrivateSubnet2RouteTable9A709948
      - clusterDefaultVpcPrivateSubnet2RouteTableAssociation188551CD
      - clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
      - clusterDefaultVpcPrivateSubnet3DefaultRouteFE3587F6
      - clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE
      - clusterDefaultVpcPrivateSubnet3RouteTableAssociation1051D4E6
      - clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
      - clusterDefaultVpcPublicSubnet1DefaultRoute008A2768
      - clusterDefaultVpcPublicSubnet1EIP0E34F4D0
      - clusterDefaultVpcPublicSubnet1NATGateway3F34F14E
      - clusterDefaultVpcPublicSubnet1RouteTableFD55F525
      - clusterDefaultVpcPublicSubnet1RouteTableAssociationF21DD285
      - clusterDefaultVpcPublicSubnet1Subnet6A0D5072
      - clusterDefaultVpcPublicSubnet2DefaultRoute3C6354F6
      - clusterDefaultVpcPublicSubnet2EIP92893124
      - clusterDefaultVpcPublicSubnet2NATGateway4B5BF1A3
      - clusterDefaultVpcPublicSubnet2RouteTable4B281F43
      - clusterDefaultVpcPublicSubnet2RouteTableAssociation8D159B16
      - clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
      - clusterDefaultVpcPublicSubnet3DefaultRoute6DFF6152
      - clusterDefaultVpcPublicSubnet3EIP3576AE12
      - clusterDefaultVpcPublicSubnet3NATGateway5D6BCE9C
      - clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA
      - clusterDefaultVpcPublicSubnet3RouteTableAssociationEC89C4A6
      - clusterDefaultVpcPublicSubnet3SubnetCF380ECB
      - clusterDefaultVpc83B86FBD
      - clusterDefaultVpcVPCGWB52AB94D
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/Resource/CreationRole/DefaultPolicy/Resource
  clusterC5B25D0D:
    Type: Custom::AWSCDK-EKS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.eksexperimentdevawscdkawseksClusterResourceProviderframeworkonEventA3C780FDArn
      Config:
        version: "1.19"
        roleArn:
          Fn::GetAtt:
            - clusterRole88D0C969
            - Arn
        resourcesVpcConfig:
          subnetIds:
            - Ref: clusterDefaultVpcPublicSubnet1Subnet6A0D5072
            - Ref: clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
            - Ref: clusterDefaultVpcPublicSubnet3SubnetCF380ECB
            - Ref: clusterDefaultVpcPrivateSubnet1Subnet56973734
            - Ref: clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
            - Ref: clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
          securityGroupIds:
            - Fn::GetAtt:
                - clusterControlPlaneSecurityGroup7F1D5AB2
                - GroupId
          endpointPublicAccess: true
          endpointPrivateAccess: true
      AssumeRoleArn:
        Fn::GetAtt:
          - clusterCreationRole2B3B5002
          - Arn
      AttributesRevision: 2
    DependsOn:
      - clusterDefaultVpcIGWEA83F638
      - clusterDefaultVpcPrivateSubnet1DefaultRoute1A3591A8
      - clusterDefaultVpcPrivateSubnet1RouteTable6588FE09
      - clusterDefaultVpcPrivateSubnet1RouteTableAssociation941EEF5E
      - clusterDefaultVpcPrivateSubnet1Subnet56973734
      - clusterDefaultVpcPrivateSubnet2DefaultRoute29031EDD
      - clusterDefaultVpcPrivateSubnet2RouteTable9A709948
      - clusterDefaultVpcPrivateSubnet2RouteTableAssociation188551CD
      - clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
      - clusterDefaultVpcPrivateSubnet3DefaultRouteFE3587F6
      - clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE
      - clusterDefaultVpcPrivateSubnet3RouteTableAssociation1051D4E6
      - clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
      - clusterDefaultVpcPublicSubnet1DefaultRoute008A2768
      - clusterDefaultVpcPublicSubnet1EIP0E34F4D0
      - clusterDefaultVpcPublicSubnet1NATGateway3F34F14E
      - clusterDefaultVpcPublicSubnet1RouteTableFD55F525
      - clusterDefaultVpcPublicSubnet1RouteTableAssociationF21DD285
      - clusterDefaultVpcPublicSubnet1Subnet6A0D5072
      - clusterDefaultVpcPublicSubnet2DefaultRoute3C6354F6
      - clusterDefaultVpcPublicSubnet2EIP92893124
      - clusterDefaultVpcPublicSubnet2NATGateway4B5BF1A3
      - clusterDefaultVpcPublicSubnet2RouteTable4B281F43
      - clusterDefaultVpcPublicSubnet2RouteTableAssociation8D159B16
      - clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
      - clusterDefaultVpcPublicSubnet3DefaultRoute6DFF6152
      - clusterDefaultVpcPublicSubnet3EIP3576AE12
      - clusterDefaultVpcPublicSubnet3NATGateway5D6BCE9C
      - clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA
      - clusterDefaultVpcPublicSubnet3RouteTableAssociationEC89C4A6
      - clusterDefaultVpcPublicSubnet3SubnetCF380ECB
      - clusterDefaultVpc83B86FBD
      - clusterDefaultVpcVPCGWB52AB94D
      - clusterCreationRoleDefaultPolicy69503D2C
      - clusterCreationRole2B3B5002
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/Resource/Resource/Default
  clusterKubectlReadyBarrier17584D5B:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: aws:cdk:eks:kubectl-ready
    DependsOn:
      - clusterCreationRoleDefaultPolicy69503D2C
      - clusterCreationRole2B3B5002
      - clusterC5B25D0D
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/KubectlReadyBarrier
  clusterMastersRoleEABFBB9C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :iam::613455550379:root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/MastersRole/Resource
  clusterAwsAuthmanifestB57F2A94:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.eksexperimentdevawscdkawseksKubectlProviderframeworkonEvent9BAE4E77Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-auth","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c85af24898badc6d3cf7c0b57487aae0a68916a4af":""}},"data":{"mapRoles":"[{\"rolearn\":\"'
            - Fn::GetAtt:
                - clusterMastersRoleEABFBB9C
                - Arn
            - \",\"username\":\"
            - Fn::GetAtt:
                - clusterMastersRoleEABFBB9C
                - Arn
            - \",\"groups\":[\"system:masters\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - argocdServiceRole84E69D0A
                - Arn
            - \",\"username\":\"
            - Fn::GetAtt:
                - argocdServiceRole84E69D0A
                - Arn
            - \",\"groups\":[\"system:masters\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - lbcontrollerServiceRole01925856
                - Arn
            - \",\"username\":\"
            - Fn::GetAtt:
                - lbcontrollerServiceRole01925856
                - Arn
            - \",\"groups\":[\"system:masters\"]}]","mapUsers":"[]","mapAccounts":"[]"}}]
      ClusterName:
        Ref: clusterC5B25D0D
      RoleArn:
        Fn::GetAtt:
          - clusterCreationRole2B3B5002
          - Arn
      PruneLabel: aws.cdk.eks/prune-c85af24898badc6d3cf7c0b57487aae0a68916a4af
      Overwrite: true
    DependsOn:
      - clusterKubectlReadyBarrier17584D5B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/AwsAuth/manifest/Resource/Default
  clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSWorkerNodePolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKS_CNI_Policy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/NodegroupDefaultCapacity/NodeGroupRole/Resource
  clusterNodegroupDefaultCapacity371BFCEA:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: clusterC5B25D0D
      NodeRole:
        Fn::GetAtt:
          - clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB
          - Arn
      Subnets:
        - Ref: clusterDefaultVpcPrivateSubnet1Subnet56973734
        - Ref: clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
        - Ref: clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
      AmiType: AL2_x86_64
      ForceUpdateEnabled: true
      InstanceTypes:
        - m5.large
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 2
        MinSize: 2
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/NodegroupDefaultCapacity/Resource
  clusterserviceaccountConditionJsonD8B0F8DF:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: clusterOpenIdConnectProvider0EC7BDBC
            - :aud":"sts.amazonaws.com","
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: clusterOpenIdConnectProvider0EC7BDBC
            - :sub":"system:serviceaccount:default:eksexperimentdevclusterserviceaccount68a96ff3"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/service-account/ConditionJson/Resource/Default
  clusterserviceaccountRole9B03D3A1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - clusterserviceaccountConditionJsonD8B0F8DF
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Ref: clusterOpenIdConnectProvider0EC7BDBC
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/service-account/Role/Resource
  clusterserviceaccountmanifestserviceaccountServiceAccountResourceE8B7EADC:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.eksexperimentdevawscdkawseksKubectlProviderframeworkonEvent9BAE4E77Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"eksexperimentdevclusterserviceaccount68a96ff3","namespace":"default","labels":{"aws.cdk.eks/prune-c8d11fd7b99166be35e2440c49ae6fc522a8c443a6":"","app.kubernetes.io/name":"eksexperimentdevclusterserviceaccount68a96ff3"},"annotations":{"eks.amazonaws.com/role-arn":"'
            - Fn::GetAtt:
                - clusterserviceaccountRole9B03D3A1
                - Arn
            - '"}}}]'
      ClusterName:
        Ref: clusterC5B25D0D
      RoleArn:
        Fn::GetAtt:
          - clusterCreationRole2B3B5002
          - Arn
      PruneLabel: aws.cdk.eks/prune-c8d11fd7b99166be35e2440c49ae6fc522a8c443a6
    DependsOn:
      - clusterKubectlReadyBarrier17584D5B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/service-account/manifest-service-accountServiceAccountResource/Resource/Default
  clusterOpenIdConnectProvider0EC7BDBC:
    Type: Custom::AWSCDKOpenIdConnectProvider
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0
          - Arn
      ClientIDList:
        - sts.amazonaws.com
      ThumbprintList:
        - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280
      Url:
        Fn::GetAtt:
          - clusterC5B25D0D
          - OpenIdConnectIssuerUrl
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/cluster/OpenIdConnectProvider/Resource/Default
  awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.eu-west-1.
            - Ref: AWS::URLSuffix
            - /cdk-hnb659fds-assets-613455550379-eu-west-1/ad6382fac7e5d3450b1ecd70aa631e193f110f0988bb5fd0889ab146e8b8e4c2.json
      Parameters:
        referencetoeksexperimentdevclusterCreationRoleE6E615D1Arn:
          Fn::GetAtt:
            - clusterCreationRole2B3B5002
            - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource
      aws:asset:path: eksexperimentdevawscdkawseksClusterResourceProviderEF004EE3.nested.template.json
      aws:asset:property: TemplateURL
  awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.eu-west-1.
            - Ref: AWS::URLSuffix
            - /cdk-hnb659fds-assets-613455550379-eu-west-1/16d68482007556cecafefb56ef3dc6d764f17760839c601d5acb24ba0ace6bb9.json
      Parameters:
        referencetoeksexperimentdevclusterD077F02FArn:
          Fn::GetAtt:
            - clusterC5B25D0D
            - Arn
        referencetoeksexperimentdevclusterCreationRoleE6E615D1Arn:
          Fn::GetAtt:
            - clusterCreationRole2B3B5002
            - Arn
        referencetoeksexperimentdevclusterDefaultVpcPrivateSubnet1SubnetFDDB4F0ARef:
          Ref: clusterDefaultVpcPrivateSubnet1Subnet56973734
        referencetoeksexperimentdevclusterDefaultVpcPrivateSubnet2SubnetE9584EFARef:
          Ref: clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
        referencetoeksexperimentdevclusterDefaultVpcPrivateSubnet3SubnetFD45878FRef:
          Ref: clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
        referencetoeksexperimentdevclusterD077F02FClusterSecurityGroupId:
          Fn::GetAtt:
            - clusterC5B25D0D
            - ClusterSecurityGroupId
    DependsOn:
      - clusterDefaultVpcPrivateSubnet1DefaultRoute1A3591A8
      - clusterDefaultVpcPrivateSubnet1RouteTableAssociation941EEF5E
      - clusterDefaultVpcPrivateSubnet2DefaultRoute29031EDD
      - clusterDefaultVpcPrivateSubnet2RouteTableAssociation188551CD
      - clusterDefaultVpcPrivateSubnet3DefaultRouteFE3587F6
      - clusterDefaultVpcPrivateSubnet3RouteTableAssociation1051D4E6
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource
      aws:asset:path: eksexperimentdevawscdkawseksKubectlProvider71BA0CE6.nested.template.json
      aws:asset:property: TemplateURL
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - iam:CreateOpenIDConnectProvider
                  - iam:DeleteOpenIDConnectProvider
                  - iam:UpdateOpenIDConnectProviderThumbprint
                  - iam:AddClientIDToOpenIDConnectProvider
                  - iam:RemoveClientIDFromOpenIDConnectProvider
    Metadata:
      aws:cdk:path: eks-experiment-dev/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-613455550379-eu-west-1
        S3Key: 494e82802f093e633e580188c7937aef9d6ee0ad4a788d58c647e6bea26d2915.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
    Metadata:
      aws:cdk:path: eks-experiment-dev/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler
      aws:asset:path: asset.494e82802f093e633e580188c7937aef9d6ee0ad4a788d58c647e6bea26d2915
      aws:asset:property: Code
  AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: eks-experiment-dev/AWSCDKCfnUtilsProviderCustomResourceProvider/Role
  AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-613455550379-eu-west-1
        S3Key: a97987a1729ad440a42cac8aa979b932696afb2dc47dec373aad1a333a1cdbfc.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
    Metadata:
      aws:cdk:path: eks-experiment-dev/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler
      aws:asset:path: asset.a97987a1729ad440a42cac8aa979b932696afb2dc47dec373aad1a333a1cdbfc
      aws:asset:property: Code
  vpccni:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: vpc-cni
      ClusterName:
        Ref: clusterC5B25D0D
      AddonVersion: v1.7.9-eksbuild.1
      ResolveConflicts: OVERWRITE
    Metadata:
      aws:cdk:path: eks-experiment-dev/vpc-cni
  argocdServiceRole84E69D0A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: eks-experiment-dev/argocd/ServiceRole/Resource
  argocdServiceRoleDefaultPolicy0C45A01F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:DescribeCluster
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - clusterC5B25D0D
                - Arn
        Version: "2012-10-17"
      PolicyName: argocdServiceRoleDefaultPolicy0C45A01F
      Roles:
        - Ref: argocdServiceRole84E69D0A
    Metadata:
      aws:cdk:path: eks-experiment-dev/argocd/ServiceRole/DefaultPolicy/Resource
  argocd2D26B1F6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: 613455550379.dkr.ecr.eu-west-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-613455550379-eu-west-1:5655409ab0e99eeb5b6de22dc45dfa0c9823d35fb203ec8a6e0a539f36c2d25f
      Role:
        Fn::GetAtt:
          - argocdServiceRole84E69D0A
          - Arn
      Environment:
        Variables:
          cluster_name:
            Ref: clusterC5B25D0D
      PackageType: Image
      Timeout: 600
    DependsOn:
      - argocdServiceRoleDefaultPolicy0C45A01F
      - argocdServiceRole84E69D0A
    Metadata:
      aws:cdk:path: eks-experiment-dev/argocd/Resource
      aws:asset:path: asset.5655409ab0e99eeb5b6de22dc45dfa0c9823d35fb203ec8a6e0a539f36c2d25f
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  argocdCurrentVersionF8785A2A96db30230454c5e47c996cadad89e83b:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: argocd2D26B1F6
    Metadata:
      aws:cdk:path: eks-experiment-dev/argocd/CurrentVersion/Resource
  argocdtrigger2095596C:
    Type: Custom::Trigger
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91
          - Arn
      HandlerArn:
        Ref: argocdCurrentVersionF8785A2A96db30230454c5e47c996cadad89e83b
    DependsOn:
      - clusterAwsAuthmanifestB57F2A94
      - clusterControlPlaneSecurityGroup7F1D5AB2
      - clusterDefaultVpcIGWEA83F638
      - clusterDefaultVpcPrivateSubnet1DefaultRoute1A3591A8
      - clusterDefaultVpcPrivateSubnet1RouteTable6588FE09
      - clusterDefaultVpcPrivateSubnet1RouteTableAssociation941EEF5E
      - clusterDefaultVpcPrivateSubnet1Subnet56973734
      - clusterDefaultVpcPrivateSubnet2DefaultRoute29031EDD
      - clusterDefaultVpcPrivateSubnet2RouteTable9A709948
      - clusterDefaultVpcPrivateSubnet2RouteTableAssociation188551CD
      - clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
      - clusterDefaultVpcPrivateSubnet3DefaultRouteFE3587F6
      - clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE
      - clusterDefaultVpcPrivateSubnet3RouteTableAssociation1051D4E6
      - clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
      - clusterDefaultVpcPublicSubnet1DefaultRoute008A2768
      - clusterDefaultVpcPublicSubnet1EIP0E34F4D0
      - clusterDefaultVpcPublicSubnet1NATGateway3F34F14E
      - clusterDefaultVpcPublicSubnet1RouteTableFD55F525
      - clusterDefaultVpcPublicSubnet1RouteTableAssociationF21DD285
      - clusterDefaultVpcPublicSubnet1Subnet6A0D5072
      - clusterDefaultVpcPublicSubnet2DefaultRoute3C6354F6
      - clusterDefaultVpcPublicSubnet2EIP92893124
      - clusterDefaultVpcPublicSubnet2NATGateway4B5BF1A3
      - clusterDefaultVpcPublicSubnet2RouteTable4B281F43
      - clusterDefaultVpcPublicSubnet2RouteTableAssociation8D159B16
      - clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
      - clusterDefaultVpcPublicSubnet3DefaultRoute6DFF6152
      - clusterDefaultVpcPublicSubnet3EIP3576AE12
      - clusterDefaultVpcPublicSubnet3NATGateway5D6BCE9C
      - clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA
      - clusterDefaultVpcPublicSubnet3RouteTableAssociationEC89C4A6
      - clusterDefaultVpcPublicSubnet3SubnetCF380ECB
      - clusterDefaultVpc83B86FBD
      - clusterDefaultVpcVPCGWB52AB94D
      - clusterKubectlReadyBarrier17584D5B
      - clusterMastersRoleEABFBB9C
      - clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB
      - clusterNodegroupDefaultCapacity371BFCEA
      - clusterOpenIdConnectProvider0EC7BDBC
      - clusterCreationRoleDefaultPolicy69503D2C
      - clusterCreationRole2B3B5002
      - clusterC5B25D0D
      - clusterRole88D0C969
      - clusterserviceaccountConditionJsonD8B0F8DF
      - clusterserviceaccountmanifestserviceaccountServiceAccountResourceE8B7EADC
      - clusterserviceaccountRole9B03D3A1
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/argocd-trigger/Resource/Default
  AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - "*"
    Metadata:
      aws:cdk:path: eks-experiment-dev/AWSCDK.TriggerCustomResourceProviderCustomResourceProvider/Role
  AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-613455550379-eu-west-1
        S3Key: 5bc7c94fb1f907aff24bcb56688a028182107e25737be85d93e7ec229ca343e0.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A
    Metadata:
      aws:cdk:path: eks-experiment-dev/AWSCDK.TriggerCustomResourceProviderCustomResourceProvider/Handler
      aws:asset:path: asset.5bc7c94fb1f907aff24bcb56688a028182107e25737be85d93e7ec229ca343e0
      aws:asset:property: Code
  policyE16B4B70:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:CreateServiceLinkedRole
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeInternetGateways
              - ec2:DescribeVpcs
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeTags
              - ec2:GetCoipPoolUsage
              - ec2:DescribeCoipPools
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeListenerCertificates
              - elasticloadbalancing:DescribeSSLPolicies
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:DescribeTags
            Effect: Allow
            Resource: "*"
          - Action:
              - cognito-idp:DescribeUserPoolClient
              - acm:ListCertificates
              - acm:DescribeCertificate
              - iam:ListServerCertificates
              - iam:GetServerCertificate
              - waf-regional:GetWebACL
              - waf-regional:GetWebACLForResource
              - waf-regional:AssociateWebACL
              - waf-regional:DisassociateWebACL
              - wafv2:GetWebACL
              - wafv2:GetWebACLForResource
              - wafv2:AssociateWebACL
              - wafv2:DisassociateWebACL
              - shield:GetSubscriptionState
              - shield:DescribeProtection
              - shield:CreateProtection
              - shield:DeleteProtection
            Effect: Allow
            Resource: "*"
          - Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupIngress
            Effect: Allow
            Resource: "*"
          - Action: ec2:CreateSecurityGroup
            Effect: Allow
            Resource: "*"
          - Action: ec2:CreateTags
            Condition:
              StringEquals:
                ec2:CreateAction: CreateSecurityGroup
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: arn:aws:ec2:*:*:security-group/*
          - Action:
              - ec2:CreateTags
              - ec2:DeleteTags
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "true"
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: arn:aws:ec2:*:*:security-group/*
          - Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupIngress
              - ec2:DeleteSecurityGroup
            Condition:
              "Null":
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateTargetGroup
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:DeleteRule
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "true"
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource:
              - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
          - Action:
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:SetIpAddressType
              - elasticloadbalancing:SetSecurityGroups
              - elasticloadbalancing:SetSubnets
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:DeleteTargetGroup
            Condition:
              "Null":
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
            Effect: Allow
            Resource: arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
          - Action:
              - elasticloadbalancing:SetWebAcl
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:AddListenerCertificates
              - elasticloadbalancing:RemoveListenerCertificates
              - elasticloadbalancing:ModifyRule
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: AmazonEKSLoadBalancerControllerPolicy
      Roles:
        - Ref: roleC7B7E775
    Metadata:
      aws:cdk:path: eks-experiment-dev/policy/Resource
  condition20CBB01A:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::GetAtt:
                - clusterC5B25D0D
                - OpenIdConnectIssuer
            - :sub":"system:serviceaccount:kube-system:aws-load-balancer-controller"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/condition/Resource/Default
  roleC7B7E775:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - condition20CBB01A
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Fn::Join:
                  - ""
                  - - arn:aws:iam::613455550379:oidc-provider/
                    - Fn::GetAtt:
                        - clusterC5B25D0D
                        - OpenIdConnectIssuer
        Version: "2012-10-17"
      RoleName: AmazonEKSLoadBalancerControllerRole
    Metadata:
      aws:cdk:path: eks-experiment-dev/role/Resource
  lbcontrollerServiceRole01925856:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: eks-experiment-dev/lb-controller/ServiceRole/Resource
  lbcontrollerServiceRoleDefaultPolicy72789A50:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:DescribeCluster
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - clusterC5B25D0D
                - Arn
        Version: "2012-10-17"
      PolicyName: lbcontrollerServiceRoleDefaultPolicy72789A50
      Roles:
        - Ref: lbcontrollerServiceRole01925856
    Metadata:
      aws:cdk:path: eks-experiment-dev/lb-controller/ServiceRole/DefaultPolicy/Resource
  lbcontroller9D8ACCB9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: 613455550379.dkr.ecr.eu-west-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-613455550379-eu-west-1:ccc85b7a626dad8fa333d4cee3b74276f53dc352ed7c8d59e6763a21bb20e733
      Role:
        Fn::GetAtt:
          - lbcontrollerServiceRole01925856
          - Arn
      Environment:
        Variables:
          account_id: "613455550379"
          cluster_name:
            Ref: clusterC5B25D0D
      PackageType: Image
      Timeout: 600
    DependsOn:
      - lbcontrollerServiceRoleDefaultPolicy72789A50
      - lbcontrollerServiceRole01925856
    Metadata:
      aws:cdk:path: eks-experiment-dev/lb-controller/Resource
      aws:asset:path: asset.ccc85b7a626dad8fa333d4cee3b74276f53dc352ed7c8d59e6763a21bb20e733
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  lbcontrollerCurrentVersion02936B20c9b1d21817da4abf046b7afe63f4fa80:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: lbcontroller9D8ACCB9
    Metadata:
      aws:cdk:path: eks-experiment-dev/lb-controller/CurrentVersion/Resource
  lbcontrollertrigger23383D93:
    Type: Custom::Trigger
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91
          - Arn
      HandlerArn:
        Ref: lbcontrollerCurrentVersion02936B20c9b1d21817da4abf046b7afe63f4fa80
    DependsOn:
      - clusterAwsAuthmanifestB57F2A94
      - clusterControlPlaneSecurityGroup7F1D5AB2
      - clusterDefaultVpcIGWEA83F638
      - clusterDefaultVpcPrivateSubnet1DefaultRoute1A3591A8
      - clusterDefaultVpcPrivateSubnet1RouteTable6588FE09
      - clusterDefaultVpcPrivateSubnet1RouteTableAssociation941EEF5E
      - clusterDefaultVpcPrivateSubnet1Subnet56973734
      - clusterDefaultVpcPrivateSubnet2DefaultRoute29031EDD
      - clusterDefaultVpcPrivateSubnet2RouteTable9A709948
      - clusterDefaultVpcPrivateSubnet2RouteTableAssociation188551CD
      - clusterDefaultVpcPrivateSubnet2Subnet3A49BF39
      - clusterDefaultVpcPrivateSubnet3DefaultRouteFE3587F6
      - clusterDefaultVpcPrivateSubnet3RouteTable68FAA6DE
      - clusterDefaultVpcPrivateSubnet3RouteTableAssociation1051D4E6
      - clusterDefaultVpcPrivateSubnet3SubnetB16AB70B
      - clusterDefaultVpcPublicSubnet1DefaultRoute008A2768
      - clusterDefaultVpcPublicSubnet1EIP0E34F4D0
      - clusterDefaultVpcPublicSubnet1NATGateway3F34F14E
      - clusterDefaultVpcPublicSubnet1RouteTableFD55F525
      - clusterDefaultVpcPublicSubnet1RouteTableAssociationF21DD285
      - clusterDefaultVpcPublicSubnet1Subnet6A0D5072
      - clusterDefaultVpcPublicSubnet2DefaultRoute3C6354F6
      - clusterDefaultVpcPublicSubnet2EIP92893124
      - clusterDefaultVpcPublicSubnet2NATGateway4B5BF1A3
      - clusterDefaultVpcPublicSubnet2RouteTable4B281F43
      - clusterDefaultVpcPublicSubnet2RouteTableAssociation8D159B16
      - clusterDefaultVpcPublicSubnet2SubnetD89F8A7D
      - clusterDefaultVpcPublicSubnet3DefaultRoute6DFF6152
      - clusterDefaultVpcPublicSubnet3EIP3576AE12
      - clusterDefaultVpcPublicSubnet3NATGateway5D6BCE9C
      - clusterDefaultVpcPublicSubnet3RouteTableDF03BEAA
      - clusterDefaultVpcPublicSubnet3RouteTableAssociationEC89C4A6
      - clusterDefaultVpcPublicSubnet3SubnetCF380ECB
      - clusterDefaultVpc83B86FBD
      - clusterDefaultVpcVPCGWB52AB94D
      - clusterKubectlReadyBarrier17584D5B
      - clusterMastersRoleEABFBB9C
      - clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB
      - clusterNodegroupDefaultCapacity371BFCEA
      - clusterOpenIdConnectProvider0EC7BDBC
      - clusterCreationRoleDefaultPolicy69503D2C
      - clusterCreationRole2B3B5002
      - clusterC5B25D0D
      - clusterRole88D0C969
      - clusterserviceaccountConditionJsonD8B0F8DF
      - clusterserviceaccountmanifestserviceaccountServiceAccountResourceE8B7EADC
      - clusterserviceaccountRole9B03D3A1
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: eks-experiment-dev/lb-controller-trigger/Resource/Default
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VSTW+DMAz9LbunmdpdtiNjW8WmrQimXqcQXJoCCYodqgrx3xegLe3Jzy/+eLaz4k8vfPkgjriQebmoVMa7lIQsmaf+OiiRd2HlkMCy4IiBoz37chlYDQT4LbTaARL7MTkU1riGhTs9OynYVkkIpDROE9s0oKM8NFqDpNiaVuW+rM8I8tzonoFc8W7byIHaxiGLXVYpmbrMNxu4GSXGEfyKrIKZn7kA0UglSBl9DR7AexSP+gStBcFRnFhsVevhXDjSNM52CZiUnL2A/Gb2NfhRUpDOKjqtL0PfET1TouZdYiZ9o42Nn2UsOKGeVaLOcsG7NyNLsFEtCvhwWl5kX/EWLJ65MxxWZf8EIhDym/RgYIY3nkBjUJGxp1eB0LME0DgrvRx/S1PPrld3gzeOGjcu4hOnjtNnuM+6nm7s5yMKpYueaX93fsDHdvnMlyv/qw6o1ML6y6saeDLZf0b9H0dxAgAA
    Metadata:
      aws:cdk:path: eks-experiment-dev/CDKMetadata/Default
Outputs:
  clusterConfigCommand30DB378E:
    Value:
      Fn::Join:
        - ""
        - - "aws eks update-kubeconfig --name "
          - Ref: clusterC5B25D0D
          - " --region eu-west-1 --role-arn "
          - Fn::GetAtt:
              - clusterMastersRoleEABFBB9C
              - Arn
  clusterGetTokenCommand09C244B5:
    Value:
      Fn::Join:
        - ""
        - - "aws eks get-token --cluster-name "
          - Ref: clusterC5B25D0D
          - " --region eu-west-1 --role-arn "
          - Fn::GetAtt:
              - clusterMastersRoleEABFBB9C
              - Arn
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

