Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet2EIP4947BC00:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet2/EIP
  VPCPublicSubnet2NATGateway3C070193:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet2EIP4947BC00
          - AllocationId
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PublicSubnet2/NATGateway
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WebhooksStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WebhooksStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet2NATGateway3C070193
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WebhooksStack/VPC
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: WebhooksStack/VPC/VPCGW
  WebhookEventBusBDC3E109:
    Type: AWS::Events::EventBus
    Properties:
      Name: WebhooksStackWebhookEventBus9821C8F8
    Metadata:
      aws:cdk:path: WebhooksStack/WebhookEventBus/Resource
  toEventBridgeFunctionServiceRole2DCA9194:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WebhooksStack/toEventBridgeFunction/ServiceRole/Resource
  toEventBridgeFunctionServiceRoleDefaultPolicy7E480F77:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - WebhookEventBusBDC3E109
                - Arn
        Version: "2012-10-17"
      PolicyName: toEventBridgeFunctionServiceRoleDefaultPolicy7E480F77
      Roles:
        - Ref: toEventBridgeFunctionServiceRole2DCA9194
    Metadata:
      aws:cdk:path: WebhooksStack/toEventBridgeFunction/ServiceRole/DefaultPolicy/Resource
  toEventBridgeFunctionF6D4A1DB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552eS3BucketE652A286
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552eS3VersionKey3101ACBC
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552eS3VersionKey3101ACBC
      Role:
        Fn::GetAtt:
          - toEventBridgeFunctionServiceRole2DCA9194
          - Arn
      Environment:
        Variables:
          EVENT_BUS:
            Ref: WebhookEventBusBDC3E109
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - toEventBridgeFunctionServiceRoleDefaultPolicy7E480F77
      - toEventBridgeFunctionServiceRole2DCA9194
    Metadata:
      aws:cdk:path: WebhooksStack/toEventBridgeFunction/Resource
      aws:asset:path: asset.93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552e
      aws:asset:property: Code
  LambdaRole3A44B857:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: WebhooksStack/LambdaRole/Resource
  LambdaRoleDefaultPolicy75625A82:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - lambda:InvokeFunction
              - lambda:InvokeAsync
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - toEventBridgeFunctionF6D4A1DB
                - Arn
        Version: "2012-10-17"
      PolicyName: LambdaRoleDefaultPolicy75625A82
      Roles:
        - Ref: LambdaRole3A44B857
    Metadata:
      aws:cdk:path: WebhooksStack/LambdaRole/DefaultPolicy/Resource
  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: widgetdbsubnetgroup
      SubnetIds:
        - Ref: VPCPrivateSubnet1Subnet8BCA10E0
        - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
      DBSubnetGroupName: widgetdbsubnetgroup
    Metadata:
      aws:cdk:path: WebhooksStack/SubnetGroup
  DbAdminPasswordF329FC33:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
    Metadata:
      aws:cdk:path: WebhooksStack/DbAdminPassword/Resource
  WidgetDatabase:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      AssociatedRoles:
        - FeatureName: Lambda
          RoleArn:
            Fn::GetAtt:
              - LambdaRole3A44B857
              - Arn
      DBClusterIdentifier: widgetcluster
      DBSubnetGroupName: widgetdbsubnetgroup
      MasterUsername: dbadmin
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DbAdminPasswordF329FC33
            - :SecretString:::}}
      Port: 5432
      StorageEncrypted: true
    DependsOn:
      - SubnetGroup
    Metadata:
      aws:cdk:path: WebhooksStack/WidgetDatabase
  WidgetInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier: widgetcluster
      DBSubnetGroupName: widgetdbsubnetgroup
      Engine: aurora-postgresql
      PubliclyAccessible: false
    DependsOn:
      - WidgetDatabase
    Metadata:
      aws:cdk:path: WebhooksStack/WidgetInstance
  Cloud9EnvD28F4C4F:
    Type: AWS::Cloud9::EnvironmentEC2
    Properties:
      InstanceType: t2.micro
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: WebhooksStack/Cloud9Env/Resource
  defaultSecurityGroupfromIndirectPeer5432DFDCDFC2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      CidrIp:
        Fn::GetAtt:
          - VPCB9E5F0B4
          - CidrBlock
      Description: Allow all traffic from VPC
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - VPCB9E5F0B4
          - DefaultSecurityGroup
      ToPort: 5432
    Metadata:
      aws:cdk:path: WebhooksStack/defaultSecurityGroup/from {IndirectPeer}:5432
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: WebhooksStack/Table/Resource
  toDynamoDBFunctionServiceRole81AB37A1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: WebhooksStack/toDynamoDBFunction/ServiceRole/Resource
  toDynamoDBFunctionServiceRoleDefaultPolicyB94B0AE4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TableCD117FA1
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: toDynamoDBFunctionServiceRoleDefaultPolicyB94B0AE4
      Roles:
        - Ref: toDynamoDBFunctionServiceRole81AB37A1
    Metadata:
      aws:cdk:path: WebhooksStack/toDynamoDBFunction/ServiceRole/DefaultPolicy/Resource
  toDynamoDBFunction85F1D0B2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterscb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6dS3Bucket4518FFB8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6dS3VersionKeyA9BC76DE
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6dS3VersionKeyA9BC76DE
      Role:
        Fn::GetAtt:
          - toDynamoDBFunctionServiceRole81AB37A1
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - toDynamoDBFunctionServiceRoleDefaultPolicyB94B0AE4
      - toDynamoDBFunctionServiceRole81AB37A1
    Metadata:
      aws:cdk:path: WebhooksStack/toDynamoDBFunction/Resource
      aws:asset:path: asset.cb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6d
      aws:asset:property: Code
  DestinationWebhookApiE5A1B08B:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: DestinationWebhookApi
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: WebhooksStack/DestinationWebhookApi/Resource
  DestinationWebhookApiDefaultStageEDF20FAA:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: DestinationWebhookApiE5A1B08B
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: WebhooksStack/DestinationWebhookApi/DefaultStage/Resource
  DestinationWebhookApiANYpostWebhooksStackDestinationWebhookApiANYpostFB449653Permission2D7C472B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - toDynamoDBFunction85F1D0B2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: DestinationWebhookApiE5A1B08B
            - /*/*/post
    Metadata:
      aws:cdk:path: WebhooksStack/DestinationWebhookApi/ANY--post/WebhooksStackDestinationWebhookApiANYpostFB449653-Permission
  DestinationWebhookApiANYpostHttpIntegrationeb5667e4d54431ef43e9d6f88b7b2ec38E7A57D6:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: DestinationWebhookApiE5A1B08B
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - toDynamoDBFunction85F1D0B2
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: WebhooksStack/DestinationWebhookApi/ANY--post/HttpIntegration-eb5667e4d54431ef43e9d6f88b7b2ec3/Resource
  DestinationWebhookApiANYpost897B6630:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: DestinationWebhookApiE5A1B08B
      RouteKey: ANY /post
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: DestinationWebhookApiANYpostHttpIntegrationeb5667e4d54431ef43e9d6f88b7b2ec38E7A57D6
    Metadata:
      aws:cdk:path: WebhooksStack/DestinationWebhookApi/ANY--post/Resource
  TenantAApiKeyB96E11EC:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
    Metadata:
      aws:cdk:path: WebhooksStack/TenantAApiKey/Resource
  TenantAConnection:
    Type: AWS::Events::Connection
    Properties:
      AuthorizationType: API_KEY
      AuthParameters:
        ApiKeyAuthParameters:
          ApiKeyName: x-api-key
          ApiKeyValue:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:"
                - Ref: TenantAApiKeyB96E11EC
                - :SecretString:::}}
    Metadata:
      aws:cdk:path: WebhooksStack/TenantAConnection
  TenantADestination:
    Type: AWS::Events::ApiDestination
    Properties:
      ConnectionArn:
        Fn::GetAtt:
          - TenantAConnection
          - Arn
      HttpMethod: POST
      InvocationEndpoint:
        Fn::Join:
          - ""
          - - Fn::GetAtt:
                - DestinationWebhookApiE5A1B08B
                - ApiEndpoint
            - /post
      InvocationRateLimitPerSecond: 300
    Metadata:
      aws:cdk:path: WebhooksStack/TenantADestination
  EBRole71D12AA7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: WebhooksStack/EBRole/Resource
  EBRoleDefaultPolicyA9CC6E70:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:InvokeApiDestination
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - TenantADestination
                - Arn
        Version: "2012-10-17"
      PolicyName: EBRoleDefaultPolicyA9CC6E70
      Roles:
        - Ref: EBRole71D12AA7
    Metadata:
      aws:cdk:path: WebhooksStack/EBRole/DefaultPolicy/Resource
  DeadLetterQueue9F481546:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: WebhooksStack/DeadLetterQueue/Resource
  TenantARule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName:
        Ref: WebhookEventBusBDC3E109
      EventPattern:
        detail:
          tenantId:
            - "1"
      Targets:
        - Arn:
            Fn::GetAtt:
              - TenantADestination
              - Arn
          DeadLetterConfig:
            Arn:
              Fn::GetAtt:
                - DeadLetterQueue9F481546
                - Arn
          Id: TenantA
          RoleArn:
            Fn::GetAtt:
              - EBRole71D12AA7
              - Arn
    Metadata:
      aws:cdk:path: WebhooksStack/TenantARule
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE11SwW7bMAz9lt4VdU532G6LnazNZfDSoXdZ5jw1tuSJkovA0L+PkhI72ImP1AP1+MiCF8Vn/unhm/jAjWzPj7M0Fvj86oQ8sxOg8VYC2yGCo1qndMcqo9FZLx2rfutaWDGAAxuThU+YWK1yyujAYu8Z5JbPb6OMb291xWrf9Eq++kZDarSik/EOfommh7W+1kiKkUrEzgs5gsOxjuGHcM/CwYe4sNqqieDa+KhJJ+EbISu5ZjtHI/8ZQGc1IL1V7vJsjR+PurOAGBhM9Ix8PsRYekz/3mGaWYO8SduNag/olF7F+h4C68XQtILP371euPe4BjsoxGSdEgOfTyZbkWJtyLakPaPA8Gkj4n6QpzVRzksvz+BKgcBsS4KJvS+zEWkilgpV7/G6uX15pKUKLUkfgrTUbRBadGDpFlJ+dYVQYLI3vv1KPsjtQU/KGn3z7S49VNvA2osWg2kbPi8LTYCOYlRddn6iw3hxbiS/rraxmMZzyxeQQCzlZUcUV9nZxdj/0sSjQf7S6D89+NQmgRAC06YF/o6PU/GFF1tePLyjUhvrtVMD8FOO/wCVft1sGQMAAA==
    Metadata:
      aws:cdk:path: WebhooksStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552eS3BucketE652A286:
    Type: String
    Description: S3 bucket for asset "93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552e"
  AssetParameters93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552eS3VersionKey3101ACBC:
    Type: String
    Description: S3 key for asset version "93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552e"
  AssetParameters93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552eArtifactHash04A52764:
    Type: String
    Description: Artifact hash for asset "93580d40866783dd95b6f00e27f883507d18db562bbc405be9b740c4d81a552e"
  AssetParameterscb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6dS3Bucket4518FFB8:
    Type: String
    Description: S3 bucket for asset "cb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6d"
  AssetParameterscb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6dS3VersionKeyA9BC76DE:
    Type: String
    Description: S3 key for asset version "cb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6d"
  AssetParameterscb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6dArtifactHash15C59D06:
    Type: String
    Description: Artifact hash for asset "cb7eb924e57312d6ef4d15d0918a2b5dec18b2991aab3dc7a7a7d0f194756e6d"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

