Resources:
  DeepracerStackapidriverstandingstable25D30724:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: name
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: deepracerdrivers
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: DeepracerStack/DeepracerStack-api-driver-standings-table/Resource
  DeepRacerHandlerServiceRole2CC7EC44:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: DeepracerStack/DeepRacerHandler/ServiceRole/Resource
  DeepRacerHandlerServiceRoleDefaultPolicy7F86F583:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DeepracerStackapidriverstandingstable25D30724
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: DeepRacerHandlerServiceRoleDefaultPolicy7F86F583
      Roles:
        - Ref: DeepRacerHandlerServiceRole2CC7EC44
    Metadata:
      aws:cdk:path: DeepracerStack/DeepRacerHandler/ServiceRole/DefaultPolicy/Resource
  DeepRacerHandler22AC3D1E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 96022c2d5fba97f0d21e41c84ef9ca94daa64a7df817c8bbb7b5801ee5521114.zip
      Role:
        Fn::GetAtt:
          - DeepRacerHandlerServiceRole2CC7EC44
          - Arn
      Environment:
        Variables:
          TABLE_NAME: deepracerdrivers
      Handler: deepracer.main
      Runtime: nodejs16.x
    DependsOn:
      - DeepRacerHandlerServiceRoleDefaultPolicy7F86F583
      - DeepRacerHandlerServiceRole2CC7EC44
    Metadata:
      aws:cdk:path: DeepracerStack/DeepRacerHandler/Resource
      aws:asset:path: asset.96022c2d5fba97f0d21e41c84ef9ca94daa64a7df817c8bbb7b5801ee5521114
      aws:asset:is-bundled: false
      aws:asset:property: Code
  deepracerapi843A69CD:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: This service managers the deep racer event.
      Name: Deep Racer Service
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Resource
  deepracerapiCloudWatchRoleAF511E10:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/CloudWatchRole/Resource
  deepracerapiAccountA07F8B3A:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - deepracerapiCloudWatchRoleAF511E10
          - Arn
    DependsOn:
      - deepracerapi843A69CD
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Account
  deepracerapiDeployment868C0622435c53a10590452a5312257bcb4990d2:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: deepracerapi843A69CD
      Description: Automatically created by the RestApi construct
    DependsOn:
      - deepracerapiGET0B982690
      - deepracerapiOPTIONSD111739D
      - deepracerapiPOST598DB7B6
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Deployment/Resource
  deepracerapiDeploymentStageprodDD8C93A1:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: deepracerapi843A69CD
      DeploymentId:
        Ref: deepracerapiDeployment868C0622435c53a10590452a5312257bcb4990d2
      StageName: prod
    DependsOn:
      - deepracerapiAccountA07F8B3A
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/DeploymentStage.prod/Resource
  deepracerapiOPTIONSD111739D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - deepracerapi843A69CD
          - RootResourceId
      RestApiId:
        Ref: deepracerapi843A69CD
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Default/OPTIONS/Resource
  deepracerapiGETApiPermissionDeepracerStackdeepracerapi443F0B4AGET00A6AC37:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeepRacerHandler22AC3D1E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: deepracerapi843A69CD
            - /
            - Ref: deepracerapiDeploymentStageprodDD8C93A1
            - /GET/
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Default/GET/ApiPermission.DeepracerStackdeepracerapi443F0B4A.GET..
  deepracerapiGETApiPermissionTestDeepracerStackdeepracerapi443F0B4AGET5C031189:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeepRacerHandler22AC3D1E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: deepracerapi843A69CD
            - /test-invoke-stage/GET/
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Default/GET/ApiPermission.Test.DeepracerStackdeepracerapi443F0B4A.GET..
  deepracerapiGET0B982690:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Fn::GetAtt:
          - deepracerapi843A69CD
          - RootResourceId
      RestApiId:
        Ref: deepracerapi843A69CD
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        RequestTemplates:
          application/json: '{ "statusCode": "200" }'
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeepRacerHandler22AC3D1E
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Default/GET/Resource
  deepracerapiPOSTApiPermissionDeepracerStackdeepracerapi443F0B4APOST2B5F681D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeepRacerHandler22AC3D1E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: deepracerapi843A69CD
            - /
            - Ref: deepracerapiDeploymentStageprodDD8C93A1
            - /POST/
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Default/POST/ApiPermission.DeepracerStackdeepracerapi443F0B4A.POST..
  deepracerapiPOSTApiPermissionTestDeepracerStackdeepracerapi443F0B4APOSTA8856F9E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeepRacerHandler22AC3D1E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: deepracerapi843A69CD
            - /test-invoke-stage/POST/
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Default/POST/ApiPermission.Test.DeepracerStackdeepracerapi443F0B4A.POST..
  deepracerapiPOST598DB7B6:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Fn::GetAtt:
          - deepracerapi843A69CD
          - RootResourceId
      RestApiId:
        Ref: deepracerapi843A69CD
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        RequestTemplates:
          application/json: '{ "statusCode": "200" }'
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeepRacerHandler22AC3D1E
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: DeepracerStack/deep-racer-api/Default/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02PwU7DMAyGn2X31NAiJK7dEDfENLhPbmKK1yapmoSpqvruuCmCnfzZv/3brqB6hPsdXkOhTVf03MD8HlF3Skrn2UwOrTdS/MCmJ3X4dBkW1aNtDML8kpyO7N0q3fKRRsshSLYoRgvzyW/zOR59z3rKfZkWFR7OGALFAPUaJId90h3FPQZSOHCLka44iRGFWA+cvf6x1tonF9UzDb2fLAlK9SaTr9p8wAYy6tOoKdu/UvzyZhU3WpY/XeVz1hl27drxluKQ4u/2rUX44J3hmL913hBcwt13+QRlBeXuEpiLUY5jS3Da4g9BFBkNeAEAAA==
    Metadata:
      aws:cdk:path: DeepracerStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  deepracerapiEndpoint8F9FC2E6:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: deepracerapi843A69CD
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: deepracerapiDeploymentStageprodDD8C93A1
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

