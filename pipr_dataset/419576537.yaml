Resources:
  RestAPI1CC12F26:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: RestAPI
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Resource
  RestAPICloudWatchRole025FE33D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/CloudWatchRole/Resource
  RestAPIAccountB5481627:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - RestAPICloudWatchRole025FE33D
          - Arn
    DependsOn:
      - RestAPI1CC12F26
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Account
  RestAPIDeploymentD35A5380dea34cc5bf10e2bfda1d3ac24e8185da:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: RestAPI1CC12F26
      Description: Automatically created by the RestApi construct
    DependsOn:
      - RestAPIOPTIONS3271A002
      - RestAPIstaticpath1path2GETB2A2FA59
      - RestAPIstaticpath1path2OPTIONS59B6A766
      - RestAPIstaticpath1path2E8F3E0A8
      - RestAPIstaticpath1GET95ABACAC
      - RestAPIstaticpath1OPTIONSD6CA5EA1
      - RestAPIstaticpath19F1683EA
      - RestAPIstaticOPTIONSB0694DC3
      - RestAPIstatic80F01D0A
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Deployment/Resource
  RestAPIDeploymentStageapiE95FEE70:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: RestAPI1CC12F26
      DeploymentId:
        Ref: RestAPIDeploymentD35A5380dea34cc5bf10e2bfda1d3ac24e8185da
      StageName: api
    DependsOn:
      - RestAPIAccountB5481627
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/DeploymentStage.api/Resource
  RestAPIOPTIONS3271A002:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - RestAPI1CC12F26
          - RootResourceId
      RestApiId:
        Ref: RestAPI1CC12F26
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/OPTIONS/Resource
  RestAPIstatic80F01D0A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RestAPI1CC12F26
          - RootResourceId
      PathPart: static
      RestApiId:
        Ref: RestAPI1CC12F26
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/Resource
  RestAPIstaticOPTIONSB0694DC3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RestAPIstatic80F01D0A
      RestApiId:
        Ref: RestAPI1CC12F26
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/OPTIONS/Resource
  RestAPIstaticpath19F1683EA:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RestAPIstatic80F01D0A
      PathPart: "{path1}"
      RestApiId:
        Ref: RestAPI1CC12F26
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/{path1}/Resource
  RestAPIstaticpath1OPTIONSD6CA5EA1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RestAPIstaticpath19F1683EA
      RestApiId:
        Ref: RestAPI1CC12F26
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/{path1}/OPTIONS/Resource
  RestAPIstaticpath1path2E8F3E0A8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: RestAPIstaticpath19F1683EA
      PathPart: "{path2}"
      RestApiId:
        Ref: RestAPI1CC12F26
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/{path1}/{path2}/Resource
  RestAPIstaticpath1path2OPTIONS59B6A766:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: RestAPIstaticpath1path2E8F3E0A8
      RestApiId:
        Ref: RestAPI1CC12F26
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/{path1}/{path2}/OPTIONS/Resource
  RestAPIstaticpath1path2GETB2A2FA59:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RestAPIstaticpath1path2E8F3E0A8
      RestApiId:
        Ref: RestAPI1CC12F26
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - Role1ABCC5F0
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Timestamp: integration.response.header.Date
              method.response.header.Content-Length: integration.response.header.Content-Length
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: 4\d{2}
            StatusCode: "400"
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: 5\d{2}
            StatusCode: "500"
        PassthroughBehavior: WHEN_NO_MATCH
        RequestParameters:
          integration.request.path.path1: method.request.path.path1
          integration.request.path.path2: method.request.path.path2
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :s3:path/
              - Ref: WebHostingBucket56BD56D7
              - /static/{path1}/{path2}
      MethodResponses:
        - ResponseParameters:
            method.response.header.Timestamp: true
            method.response.header.Content-Length: true
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "400"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "500"
      RequestParameters:
        method.request.path.path1: true
        method.request.path.path2: true
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/{path1}/{path2}/GET/Resource
  RestAPIstaticpath1GET95ABACAC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: RestAPIstaticpath19F1683EA
      RestApiId:
        Ref: RestAPI1CC12F26
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - Role1ABCC5F0
            - Arn
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Timestamp: integration.response.header.Date
              method.response.header.Content-Length: integration.response.header.Content-Length
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: 4\d{2}
            StatusCode: "400"
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            SelectionPattern: 5\d{2}
            StatusCode: "500"
        PassthroughBehavior: WHEN_NO_MATCH
        RequestParameters:
          integration.request.path.path1: method.request.path.path1
          integration.request.path.path2: method.request.path.path2
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :s3:path/
              - Ref: WebHostingBucket56BD56D7
              - /static/{path1}
      MethodResponses:
        - ResponseParameters:
            method.response.header.Timestamp: true
            method.response.header.Content-Length: true
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "400"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "500"
      RequestParameters:
        method.request.path.path1: true
        method.request.path.path2: true
    Metadata:
      aws:cdk:path: S3APIGWStack/RestAPI/Default/static/{path1}/GET/Resource
  WebHostingBucket56BD56D7:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: aws-cdk:cr-owned:static:c41a5205
          Value: "true"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: S3APIGWStack/WebHostingBucket/Resource
  DeployWebsiteAwsCliLayer17DBC421:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameters1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5S3BucketA4E7C173
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5S3VersionKey35F67D7E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5S3VersionKey35F67D7E
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: S3APIGWStack/DeployWebsite/AwsCliLayer/Resource
      aws:asset:path: asset.1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  DeployWebsiteCustomResourceD116527B:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Ref: AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3S3Bucket47376985
      SourceObjectKeys:
        - Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3S3VersionKeyD0535C54
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3S3VersionKeyD0535C54
      DestinationBucketName:
        Ref: WebHostingBucket56BD56D7
      DestinationBucketKeyPrefix: static
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: S3APIGWStack/DeployWebsite/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: S3APIGWStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3S3Bucket47376985
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3S3Bucket47376985
                    - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - WebHostingBucket56BD56D7
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - WebHostingBucket56BD56D7
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: S3APIGWStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711daS3BucketF23C0DE7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711daS3VersionKey5E97B17D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711daS3VersionKey5E97B17D
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Handler: index.handler
      Layers:
        - Ref: DeployWebsiteAwsCliLayer17DBC421
      Runtime: python3.7
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: S3APIGWStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da
      aws:asset:is-bundled: false
      aws:asset:property: Code
  Role1ABCC5F0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      Path: /
    Metadata:
      aws:cdk:path: S3APIGWStack/Role/Resource
  RoleDefaultPolicy5FFB7DAB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - WebHostingBucket56BD56D7
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - WebHostingBucket56BD56D7
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: RoleDefaultPolicy5FFB7DAB
      Roles:
        - Ref: Role1ABCC5F0
    Metadata:
      aws:cdk:path: S3APIGWStack/Role/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21Qy07DMBD8Fu7OtikcOJIWcQJRtRJ34yzFrWNH3jVVZOXfsZ2m9MBpZ18zo6lhtXyA5d2TPFOl2tMiKucR4p6lOonNl30P3AcWDRFyGh60PYhNIHbdDskFrzBf/WFniX1QnKdb6WWHjD43adNq1s6OImtF2euDZDzLAWJ656bXF6YZNkq5YFk8Y2/c0KEtpDdd9lPkJzCbWEtC8Yb87dq8vKD/7I5Cyy7JOzONc906o9VQ7Bc0CrqHuA7qhEX/gqaSpfJBFdurLZhWNz5lDo+gZDgKI7vPVkJMXK9yQP+BnlIsYp+iNcjOvgSrclDiCtLpjMeZoDL5uUpZKqOhOdPG6MI3CutahCMtfupHqFdQ3x1J68qnLHWHsJvqLyTiDwT6AQAA
    Metadata:
      aws:cdk:path: S3APIGWStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  RestAPIEndpointB14C3C54:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: RestAPI1CC12F26
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: RestAPIDeploymentStageapiE95FEE70
          - /
Parameters:
  AssetParameters1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5S3BucketA4E7C173:
    Type: String
    Description: S3 bucket for asset "1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5"
  AssetParameters1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5S3VersionKey35F67D7E:
    Type: String
    Description: S3 key for asset version "1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5"
  AssetParameters1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5ArtifactHashF0E84BB2:
    Type: String
    Description: Artifact hash for asset "1da15adb9ba73812c695f9922eb752050e0a392eba0a120d36d64bfce7cf8dc5"
  AssetParametersf98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711daS3BucketF23C0DE7:
    Type: String
    Description: S3 bucket for asset "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da"
  AssetParametersf98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711daS3VersionKey5E97B17D:
    Type: String
    Description: S3 key for asset version "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da"
  AssetParametersf98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711daArtifactHashD85D28D8:
    Type: String
    Description: Artifact hash for asset "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da"
  AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3S3Bucket47376985:
    Type: String
    Description: S3 bucket for asset "37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3"
  AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3S3VersionKeyD0535C54:
    Type: String
    Description: S3 key for asset version "37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3"
  AssetParameters37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3ArtifactHash7E51AC09:
    Type: String
    Description: Artifact hash for asset "37f87545c009cf74762d777e056479c5f2532b00f3fca7edf847128a089ab5f3"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

