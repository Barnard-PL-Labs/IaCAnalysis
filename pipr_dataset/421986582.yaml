Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: orderid
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: orderid
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/Table/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/Bucket/Resource
  DebugLogGroup630DE26B:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/DebugLogGroup/Resource
  SfLogGroup9FBBE3BC:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/SfLogGroup/Resource
  EventBridgeF6D0CF9D:
    Type: AWS::Events::EventBus
    Properties:
      Name: ApiStepfunctionStackEventBridge0691EAD4
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/EventBridge/Resource
  LogEventRuleDAEC1FEA:
    Type: AWS::Events::Rule
    Properties:
      EventBusName:
        Ref: EventBridgeF6D0CF9D
      EventPattern:
        source:
          - custom.eventbus
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":logs:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":log-group:"
                - Ref: DebugLogGroup630DE26B
          Id: Target0
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/LogEventRule/Resource
  EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF2247CustomResourcePolicy3F74E0D4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: logs:PutResourcePolicy
            Effect: Allow
            Resource: "*"
          - Action: logs:DeleteResourcePolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF2247CustomResourcePolicy3F74E0D4
      Roles:
        - Ref: AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF2247/CustomResourcePolicy/Resource
  EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF22474FC592B2:
    Type: Custom::CloudwatchLogResourcePolicy
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        Fn::Join:
          - ""
          - - '{"service":"CloudWatchLogs","action":"putResourcePolicy","parameters":{"policyName":"ApiStepfunctionStackEventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF22471F713428","policyDocument":"{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"events.amazonaws.com\"},\"Resource\":\"'
            - Fn::GetAtt:
                - DebugLogGroup630DE26B
                - Arn
            - \"}],\"Version\":\"2012-10-17\"}"},"physicalResourceId":{"id":"EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF2247"}}
      Update:
        Fn::Join:
          - ""
          - - '{"service":"CloudWatchLogs","action":"putResourcePolicy","parameters":{"policyName":"ApiStepfunctionStackEventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF22471F713428","policyDocument":"{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"events.amazonaws.com\"},\"Resource\":\"'
            - Fn::GetAtt:
                - DebugLogGroup630DE26B
                - Arn
            - \"}],\"Version\":\"2012-10-17\"}"},"physicalResourceId":{"id":"EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF2247"}}
      Delete: '{"service":"CloudWatchLogs","action":"deleteResourcePolicy","parameters":{"policyName":"ApiStepfunctionStackEventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF22471F713428"},"ignoreErrorCodesMatching":"400"}'
      InstallLatestAwsSdk: true
    DependsOn:
      - EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF2247CustomResourcePolicy3F74E0D4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/EventsLogGroupPolicyApiStepfunctionStackLogEventRule3BFF2247/Resource/Default
  AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2.zip
      Role:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
          - Arn
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 120
    DependsOn:
      - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/rest/421986582/node_modules/aws-cdk-lib/custom-resources/lib/aws-custom-resource/runtime
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DynamoStateMachineRoleC27C025D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/Dynamo_StateMachine/Role/Resource
  DynamoStateMachineRoleDefaultPolicyC7428C08:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogDelivery
              - logs:GetLogDelivery
              - logs:UpdateLogDelivery
              - logs:DeleteLogDelivery
              - logs:ListLogDeliveries
              - logs:PutResourcePolicy
              - logs:DescribeResourcePolicies
              - logs:DescribeLogGroups
            Effect: Allow
            Resource: "*"
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
              - xray:GetSamplingRules
              - xray:GetSamplingTargets
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:GetItem
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":dynamodb:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :table/
                  - Ref: TableCD117FA1
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TableCD117FA1
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - DebugLogGroup630DE26B
                - Arn
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - EventBridgeF6D0CF9D
                - Arn
        Version: "2012-10-17"
      PolicyName: DynamoStateMachineRoleDefaultPolicyC7428C08
      Roles:
        - Ref: DynamoStateMachineRoleC27C025D
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/Dynamo_StateMachine/Role/DefaultPolicy/Resource
  DynamoStateMachineBAF49A60:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - DynamoStateMachineRoleC27C025D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"Check if method field exists","States":{"Check if method field exists":{"Type":"Choice","Choices":[{"Variable":"$.body.method","IsPresent":true,"Next":"Check value of method field"}],"Default":"no method field found in input"},"no method field found in input":{"Type":"Pass","ResultPath":"$.error","Parameters":{"error":"no method field found in input"},"OutputPath":"$.error","Next":"ERROR - no method field in input"},"ERROR - no method field in input":{"End":true,"Type":"Task","Resource":"arn:aws:states:::events:putEvents","Parameters":{"Entries":[{"EventBusName":"'
            - Ref: EventBridgeF6D0CF9D
            - '","Detail":{"event":"ERROR - no method field in input"},"DetailType":"eventDelivery","Source":"custom.eventbus"}]},"ResultPath":"$.ERROR - no method field in input"},"Check value of method field":{"Type":"Choice","Choices":[{"Variable":"$.body.method","StringEquals":"get","Next":"Check if order id field is present"},{"Variable":"$.body.method","StringEquals":"put","Next":"PUT request input received"}],"Default":"unknown method value found in input"},"unknown method value found in input":{"Type":"Pass","ResultPath":"$.error","Parameters":{"error":"unknown method value found in input"},"OutputPath":"$.error","Next":"ERROR - unknown method value in input"},"ERROR - unknown method value in input":{"End":true,"Type":"Task","Resource":"arn:aws:states:::events:putEvents","Parameters":{"Entries":[{"EventBusName":"'
            - Ref: EventBridgeF6D0CF9D
            - '","Detail":{"event":"ERROR - unknown method value in input"},"DetailType":"eventDelivery","Source":"custom.eventbus"}]},"ResultPath":"$.ERROR - unknown method value in input"},"Check if order id field is present":{"Type":"Choice","Choices":[{"Variable":"$.body.orderid","IsPresent":true,"Next":"Get Record from DynamoDB"}],"Default":"No OrderID field found in input"},"No OrderID field found in input":{"Type":"Pass","ResultPath":"$.error","Parameters":{"error":"No OrderID field found in input","request.$":"$"},"OutputPath":"$.error","Next":"ERROR - No OrderID field found in input"},"ERROR - No OrderID field found in input":{"End":true,"Type":"Task","Resource":"arn:aws:states:::events:putEvents","Parameters":{"Entries":[{"EventBusName":"'
            - Ref: EventBridgeF6D0CF9D
            - '","Detail":{"event":"ERROR - No OrderID field found in input"},"DetailType":"eventDelivery","Source":"custom.eventbus"}]},"ResultPath":"$.ERROR - No OrderID field found in input"},"Get Record from DynamoDB":{"Next":"Check Order ID in DynamoDB","Type":"Task","ResultPath":"$.sdkget","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:getItem","Parameters":{"Key":{"orderid":{"S.$":"$.body.orderid"}},"TableName":"
            - Ref: TableCD117FA1
            - '","ConsistentRead":false}},"Check Order ID in DynamoDB":{"Type":"Choice","Choices":[{"Variable":"$.sdkget.Item","IsPresent":true,"Next":"PASS - Order ID found in DynamoDB"}],"Default":"OrderID field not found in dynamodb"},"OrderID field not found in dynamodb":{"Type":"Pass","ResultPath":"$.error","Parameters":{"error":"OrderID field not found in dynamodb","request.$":"$"},"OutputPath":"$.error","Next":"ERROR - OrderID not found in DynamoDB"},"ERROR - OrderID not found in DynamoDB":{"End":true,"Type":"Task","Resource":"arn:aws:states:::events:putEvents","Parameters":{"Entries":[{"EventBusName":"'
            - Ref: EventBridgeF6D0CF9D
            - '","Detail":{"event":"ERROR - OrderID not found in DynamoDB"},"DetailType":"eventDelivery","Source":"custom.eventbus"}]},"ResultPath":"$.ERROR - OrderID not found in DynamoDB"},"PASS - Order ID found in DynamoDB":{"Type":"Pass","ResultPath":"$.recordFound","InputPath":"$.sdkget.Item","Parameters":{"$.sdkPut.Item":"$.sdkPut.Item"},"Next":"LOG - Order ID found in DynamoDB"},"LOG - Order ID found in DynamoDB":{"End":true,"Type":"Task","Resource":"arn:aws:states:::events:putEvents","Parameters":{"Entries":[{"EventBusName":"'
            - Ref: EventBridgeF6D0CF9D
            - '","Detail":{"event":"LOG - Order ID found in DynamoDB"},"DetailType":"eventDelivery","Source":"custom.eventbus"}]},"ResultPath":"$.LOG - Order ID found in DynamoDB"},"PUT request input received":{"Type":"Pass","ResultPath":"$.request","Parameters":{"method":"put"},"Next":"LOG - PUT request input received"},"LOG - PUT request input received":{"End":true,"Type":"Task","Resource":"arn:aws:states:::events:putEvents","Parameters":{"Entries":[{"EventBusName":"'
            - Ref: EventBridgeF6D0CF9D
            - '","Detail":{"event":"LOG - PUT request input received"},"DetailType":"eventDelivery","Source":"custom.eventbus"}]},"ResultPath":"$.LOG - PUT request input received"}},"TimeoutSeconds":60}'
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn:
                Fn::GetAtt:
                  - SfLogGroup9FBBE3BC
                  - Arn
        Level: ALL
      StateMachineType: EXPRESS
      TracingConfiguration:
        Enabled: true
    DependsOn:
      - DynamoStateMachineRoleDefaultPolicyC7428C08
      - DynamoStateMachineRoleC27C025D
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/Dynamo_StateMachine/Resource
  StartSyncExecutionRoleDE73CB90:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StartSyncExecutionRole/Resource
  StartSyncExecutionRoleDefaultPolicy5A5803F8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: states:StartSyncExecution
            Effect: Allow
            Resource:
              Ref: DynamoStateMachineBAF49A60
        Version: "2012-10-17"
      PolicyName: StartSyncExecutionRoleDefaultPolicy5A5803F8
      Roles:
        - Ref: StartSyncExecutionRoleDE73CB90
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StartSyncExecutionRole/DefaultPolicy/Resource
  StepFunctionsRestApiC6E3E883:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: StepFunctionsRestApi
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StepFunctionsRestApi/Resource
  StepFunctionsRestApiCloudWatchRoleB06ACDB9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StepFunctionsRestApi/CloudWatchRole/Resource
  StepFunctionsRestApiAccountBD0CCC0E:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - StepFunctionsRestApiCloudWatchRoleB06ACDB9
          - Arn
    DependsOn:
      - StepFunctionsRestApiC6E3E883
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StepFunctionsRestApi/Account
  StepFunctionsRestApiDeployment8FF8D52A9446ce2e39db0a1e3c9ccc779b486fa9:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: StepFunctionsRestApiC6E3E883
      Description: Automatically created by the RestApi construct
    DependsOn:
      - StepFunctionsRestApiANY7699CA92
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StepFunctionsRestApi/Deployment/Resource
  StepFunctionsRestApiDeploymentStageprodE1E3545E:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: StepFunctionsRestApiC6E3E883
      DeploymentId:
        Ref: StepFunctionsRestApiDeployment8FF8D52A9446ce2e39db0a1e3c9ccc779b486fa9
      StageName: prod
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StepFunctionsRestApi/DeploymentStage.prod/Resource
  StepFunctionsRestApiANY7699CA92:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - StepFunctionsRestApiC6E3E883
          - RootResourceId
      RestApiId:
        Ref: StepFunctionsRestApiC6E3E883
      AuthorizationType: NONE
      Integration:
        Credentials:
          Fn::GetAtt:
            - StartSyncExecutionRoleDE73CB90
            - Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseTemplates:
              application/json: |-
                #set($inputRoot = $input.path('$'))
                #if($input.path('$.status').toString().equals("FAILED"))
                #set($context.responseOverride.status = 500)
                {
                "error": "$input.path('$.error')"
                "cause": "$input.path('$.cause')"
                }
                #else
                $input.path('$.output')
                #end
            StatusCode: "200"
          - ResponseTemplates:
              application/json: |-
                {
                            "error": "Bad request!"
                          }
            SelectionPattern: 4\d{2}
            StatusCode: "400"
          - ResponseTemplates:
              application/json: "\"error\": $input.path('$.error')"
            SelectionPattern: 5\d{2}
            StatusCode: "500"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            Fn::Join:
              - ""
              - - |-
                  ## Velocity Template used for API Gateway request mapping template
                  ##
                  ## This template forwards the request body, header, path, and querystring
                  ## to the execution input of the state machine.
                  ##
                  ## "@@" is used here as a placeholder for '"' to avoid using escape characters.

                  #set($inputString = '')
                  #set($includeHeaders = false)
                  #set($includeQueryString = true)
                  #set($includePath = true)
                  #set($allParams = $input.params())
                  {
                      "stateMachineArn": "
                - Ref: DynamoStateMachineBAF49A60
                - |
                  ",

                      #set($inputString = "$inputString,@@body@@: $input.body")

                      #if ($includeHeaders)
                          #set($inputString = "$inputString, @@header@@:{")
                          #foreach($paramName in $allParams.header.keySet())
                              #set($inputString = "$inputString @@$paramName@@: @@$util.escapeJavaScript($allParams.header.get($paramName))@@")
                              #if($foreach.hasNext)
                                  #set($inputString = "$inputString,")
                              #end
                          #end
                          #set($inputString = "$inputString }")
                          
                      #end

                      #if ($includeQueryString)
                          #set($inputString = "$inputString, @@querystring@@:{")
                          #foreach($paramName in $allParams.querystring.keySet())
                              #set($inputString = "$inputString @@$paramName@@: @@$util.escapeJavaScript($allParams.querystring.get($paramName))@@")
                              #if($foreach.hasNext)
                                  #set($inputString = "$inputString,")
                              #end
                          #end
                          #set($inputString = "$inputString }")
                      #end

                      #if ($includePath)
                          #set($inputString = "$inputString, @@path@@:{")
                          #foreach($paramName in $allParams.path.keySet())
                              #set($inputString = "$inputString @@$paramName@@: @@$util.escapeJavaScript($allParams.path.get($paramName))@@")
                              #if($foreach.hasNext)
                                  #set($inputString = "$inputString,")
                              #end
                          #end
                          #set($inputString = "$inputString }")
                      #end
                      
                      #set($requestContext = "")
                      ## Check if the request context should be included as part of the execution input
                      #if($requestContext && !$requestContext.empty)
                          #set($inputString = "$inputString,")
                          #set($inputString = "$inputString @@requestContext@@: $requestContext")
                      #end

                      #set($inputString = "$inputString}")
                      #set($inputString = $inputString.replaceAll("@@",'"'))
                      #set($len = $inputString.length() - 1)
                      "input": "{$util.escapeJavaScript($inputString.substring(1,$len))}"
                  }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :states:action/StartSyncExecution
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: "200"
        - ResponseModels:
            application/json: Error
          StatusCode: "400"
        - ResponseModels:
            application/json: Error
          StatusCode: "500"
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/StepFunctionsRestApi/Default/ANY/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11RTW/CMAz9LbuHbGWXXaFsaNLQULd7FVJTQtu4qhNQVfW/z+kHYzv52c+xn1+WMpJPD+pKC50Vi9IcZPfllC4El9Iua62qMOPitzqUIOKjHUAv6Fl2a68LcKE4oTGsFXFDiTnJ7gPzbYO+Dk0z7gVcwDpmX0NcewrsDSd+XBQij1HVIVMsyti8BIf2zVvtDFpxA9w7414YVcluj6XRbSAmlOA0E0ftqSICVrAKQZCD+jhNoNQpKkhuhsu34N4dVH87ZBef0GgQe54i2C0HO6VPxg4r7vNeqNrknF9VG3yFehZKCZBb1WYQ9QtXWqO3TmygLrGt2JFQvct4ej6vYcBP0TcaguViB+6EWSBH1Pc3XmhPDqu0mXK+/ErxULu1/E8HYSMebAob+RMC8eld7QdpMdrMjM5bzECe6fESvchoKaOHMxmzaPgcU4FMxvgDi0oJg28CAAA=
    Metadata:
      aws:cdk:path: ApiStepfunctionStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  StepFunctionsRestApiEndpoint0DD66FCB:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: StepFunctionsRestApiC6E3E883
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: StepFunctionsRestApiDeploymentStageprodE1E3545E
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

