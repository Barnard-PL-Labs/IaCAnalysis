Resources:
  DemoVpc1AD7511C:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/18
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/Resource
  DemoVpcdemopublicsubnetSubnet1Subnet3AB93878:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.0.0/22
      VpcId:
        Ref: DemoVpc1AD7511C
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: demo-public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet1
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet1/Subnet
  DemoVpcdemopublicsubnetSubnet1RouteTableEDB8D87A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: DemoVpc1AD7511C
      Tags:
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet1
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet1/RouteTable
  DemoVpcdemopublicsubnetSubnet1RouteTableAssociation5D550964:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: DemoVpcdemopublicsubnetSubnet1RouteTableEDB8D87A
      SubnetId:
        Ref: DemoVpcdemopublicsubnetSubnet1Subnet3AB93878
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet1/RouteTableAssociation
  DemoVpcdemopublicsubnetSubnet1DefaultRoute5A473800:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: DemoVpcdemopublicsubnetSubnet1RouteTableEDB8D87A
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: DemoVpcIGWA39C3A20
    DependsOn:
      - DemoVpcVPCGW49915943
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet1/DefaultRoute
  DemoVpcdemopublicsubnetSubnet2SubnetF8EE75A8:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.4.0/22
      VpcId:
        Ref: DemoVpc1AD7511C
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: demo-public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet2
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet2/Subnet
  DemoVpcdemopublicsubnetSubnet2RouteTable633548A4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: DemoVpc1AD7511C
      Tags:
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet2
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet2/RouteTable
  DemoVpcdemopublicsubnetSubnet2RouteTableAssociation82474774:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: DemoVpcdemopublicsubnetSubnet2RouteTable633548A4
      SubnetId:
        Ref: DemoVpcdemopublicsubnetSubnet2SubnetF8EE75A8
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet2/RouteTableAssociation
  DemoVpcdemopublicsubnetSubnet2DefaultRoute3A32EE24:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: DemoVpcdemopublicsubnetSubnet2RouteTable633548A4
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: DemoVpcIGWA39C3A20
    DependsOn:
      - DemoVpcVPCGW49915943
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-public-subnetSubnet2/DefaultRoute
  DemoVpcdemoisolatedsubnetSubnet1SubnetBB59174F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.8.0/22
      VpcId:
        Ref: DemoVpc1AD7511C
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: demo-isolated-subnet
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet1
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet1/Subnet
  DemoVpcdemoisolatedsubnetSubnet1RouteTable2FE5E83A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: DemoVpc1AD7511C
      Tags:
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet1
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet1/RouteTable
  DemoVpcdemoisolatedsubnetSubnet1RouteTableAssociation0D501332:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: DemoVpcdemoisolatedsubnetSubnet1RouteTable2FE5E83A
      SubnetId:
        Ref: DemoVpcdemoisolatedsubnetSubnet1SubnetBB59174F
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet1/RouteTableAssociation
  DemoVpcdemoisolatedsubnetSubnet2Subnet8F052FD3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.12.0/22
      VpcId:
        Ref: DemoVpc1AD7511C
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: demo-isolated-subnet
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet2
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet2/Subnet
  DemoVpcdemoisolatedsubnetSubnet2RouteTableF2BF61BA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: DemoVpc1AD7511C
      Tags:
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet2
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet2/RouteTable
  DemoVpcdemoisolatedsubnetSubnet2RouteTableAssociation026312D4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: DemoVpcdemoisolatedsubnetSubnet2RouteTableF2BF61BA
      SubnetId:
        Ref: DemoVpcdemoisolatedsubnetSubnet2Subnet8F052FD3
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/demo-isolated-subnetSubnet2/RouteTableAssociation
  DemoVpcIGWA39C3A20:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ApiSimulatorStack/DemoVpc
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/IGW
  DemoVpcVPCGW49915943:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: DemoVpc1AD7511C
      InternetGatewayId:
        Ref: DemoVpcIGWA39C3A20
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoVpc/VPCGW
  EcsCluster97242B84:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: disabled
    Metadata:
      aws:cdk:path: ApiSimulatorStack/EcsCluster/Resource
  EcsCluster72B17558:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      Cluster:
        Ref: EcsCluster97242B84
      DefaultCapacityProviderStrategy: []
    Metadata:
      aws:cdk:path: ApiSimulatorStack/EcsCluster/EcsCluster
  DemoALB6736E692:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - DemoALBSecurityGroupA4974DC9
            - GroupId
      Subnets:
        - Ref: DemoVpcdemopublicsubnetSubnet1Subnet3AB93878
        - Ref: DemoVpcdemopublicsubnetSubnet2SubnetF8EE75A8
      Type: application
    DependsOn:
      - DemoVpcdemopublicsubnetSubnet1DefaultRoute5A473800
      - DemoVpcdemopublicsubnetSubnet2DefaultRoute3A32EE24
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoALB/Resource
  DemoALBSecurityGroupA4974DC9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB ApiSimulatorStackDemoALBDCEC97A3
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 3000
          FromPort: 3000
          IpProtocol: tcp
          ToPort: 3000
      VpcId:
        Ref: DemoVpc1AD7511C
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoALB/SecurityGroup/Resource
  DemoALBSecurityGrouptoApiSimulatorStackDemoServiceSecurityGroup994480E980971D63FA:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - DemoALBSecurityGroupA4974DC9
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - DemoServiceSecurityGroupB50DCE96
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoALB/SecurityGroup/to ApiSimulatorStackDemoServiceSecurityGroup994480E9:80
  DemoALBHttpListener027BDBB2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: DemoTargetGroupB4130169
          Type: forward
      LoadBalancerArn:
        Ref: DemoALB6736E692
      Port: 3000
      Protocol: HTTP
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoALB/HttpListener/Resource
  DemoLogGroupC760A71C:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: demo-backend
      RetentionInDays: 1
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoLogGroup/Resource
  DemoBackendTaskTaskRoleF0A02A9E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoBackendTask/TaskRole/Resource
  DemoBackendTaskF5BFC3A9:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: 128
          Environment:
            - Name: DEMO_WIREMOCK_ADMIN_USER
              Value:
                Ref: SsmParameterValuedemowiremockadminusernameC96584B6F00A464EAD1953AFF4B05118Parameter
            - Name: DEMO_WIREMOCK_ADMIN_PASS
              Value:
                Ref: SsmParameterValuedemowiremockadminpasswordC96584B6F00A464EAD1953AFF4B05118Parameter
          Essential: true
          Image:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:8afa8adbe2ac350aa0d2ac3bba7f8b25bd32d334a862ee5845d8619f4174249f
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: DemoLogGroupC760A71C
              awslogs-stream-prefix: auth-proxy-
              awslogs-region:
                Ref: AWS::Region
          Memory: 128
          Name: auth-proxy
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Command:
            - --local-response-templating
          Essential: true
          Image:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:a5f8750316ae2e676c46b038c5c18fdd77e5aa578d28f3fa23bc55b456841cc4
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: DemoLogGroupC760A71C
              awslogs-stream-prefix: wiremock-
              awslogs-region:
                Ref: AWS::Region
          Name: wiremock-container
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - DemoBackendTaskExecutionRoleE6D3D025
          - Arn
      Family: ApiSimulatorStackDemoBackendTask2316053C
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - DemoBackendTaskTaskRoleF0A02A9E
          - Arn
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoBackendTask/Resource
  DemoBackendTaskExecutionRoleE6D3D025:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoBackendTask/ExecutionRole/Resource
  DemoBackendTaskExecutionRoleDefaultPolicy429768EE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/
                  - Fn::Sub: cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - DemoLogGroupC760A71C
                - Arn
        Version: "2012-10-17"
      PolicyName: DemoBackendTaskExecutionRoleDefaultPolicy429768EE
      Roles:
        - Ref: DemoBackendTaskExecutionRoleE6D3D025
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoBackendTask/ExecutionRole/DefaultPolicy/Resource
  DemoServiceEF703959:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
      Cluster:
        Ref: EcsCluster97242B84
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LoadBalancers:
        - ContainerName: auth-proxy
          ContainerPort: 80
          TargetGroupArn:
            Ref: DemoTargetGroupB4130169
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::GetAtt:
                - DemoServiceSecurityGroupB50DCE96
                - GroupId
          Subnets:
            - Ref: DemoVpcdemopublicsubnetSubnet1Subnet3AB93878
            - Ref: DemoVpcdemopublicsubnetSubnet2SubnetF8EE75A8
      TaskDefinition:
        Ref: DemoBackendTaskF5BFC3A9
    DependsOn:
      - DemoALBHttpListener027BDBB2
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoService/Service
  DemoServiceSecurityGroupB50DCE96:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ApiSimulatorStack/DemoService/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: DemoVpc1AD7511C
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoService/SecurityGroup/Resource
  DemoServiceSecurityGroupfromApiSimulatorStackDemoALBSecurityGroupBF2EC2E580800EDC16:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - DemoServiceSecurityGroupB50DCE96
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - DemoALBSecurityGroupA4974DC9
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoService/SecurityGroup/from ApiSimulatorStackDemoALBSecurityGroupBF2EC2E5:80
  DemoTargetGroupB4130169:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 300
      HealthCheckPath: /healthcheck
      Matcher:
        HttpCode: 200,401,301,302
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: DemoVpc1AD7511C
    Metadata:
      aws:cdk:path: ApiSimulatorStack/DemoTargetGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STU/jMBD9LdxdQ3vaayksqoS0UYq4ookzhKGJHXnsoCrqf2fiJDQsEic/vxnPx3ve6PWNvrmCD16Z8riqqdD9IYA5KqFeejQb3T+3Ru1e7XO2U1ksajKHWFgMA3dBuYsBn6Co8cJfuC2zMwSBnP1KVpmnDgJeauxtQC/4QdgPOE1Np9s2yFhvDdqgDmiip3B68C62qd2vxH3lkfkHvbeJPys0rPtdHVm6D1k/4Q5aMPIu866jEv1iHVZ/wVcw7MnHO3wlS/OW/zPOBiCLfsFNbw/oOzKjciOUqWrgQKZ2UBZQgzVkq07c2LatWJB6P0rsNsXGab/dl3kkS9gpZ8aL+JNMIarP4i2uZ1W7StR5dNVXeMZnRdDoPnej5enMnNRMxo1oENe/ADMG1nfOHNHvG6iG/yCWS0zn2Dqm4PzpFljWzpFd9KJFSpGvWMneqSB4aHDy5V8MbRz/3Zw/uOVsmXQ9K+tK1O983a3/6PVGr6/emWjlow3UoM7H8xPiGtRn/QIAAA==
    Metadata:
      aws:cdk:path: ApiSimulatorStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValuedemowiremockadminusernameC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /demo/wiremock-admin-username
  SsmParameterValuedemowiremockadminpasswordC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /demo/wiremock-admin-password
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Outputs:
  DemoAlbEndpoint:
    Value:
      Fn::GetAtt:
        - DemoALB6736E692
        - DNSName
    Export:
      Name: demo-alb-endpoint
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

