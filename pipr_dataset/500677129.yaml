Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/Resource
  VpcdbsubnetSubnet1Subnet34C31029:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.0.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db-subnet
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/db-subnetSubnet1
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet1/Subnet
  VpcdbsubnetSubnet1RouteTable369EEA5D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/db-subnetSubnet1
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet1/RouteTable
  VpcdbsubnetSubnet1RouteTableAssociation7A7B10F1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbsubnetSubnet1RouteTable369EEA5D
      SubnetId:
        Ref: VpcdbsubnetSubnet1Subnet34C31029
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet1/RouteTableAssociation
  VpcdbsubnetSubnet2SubnetCCF36168:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.0.16/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db-subnet
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/db-subnetSubnet2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet2/Subnet
  VpcdbsubnetSubnet2RouteTableAAA1C587:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/db-subnetSubnet2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet2/RouteTable
  VpcdbsubnetSubnet2RouteTableAssociation50325F91:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbsubnetSubnet2RouteTableAAA1C587
      SubnetId:
        Ref: VpcdbsubnetSubnet2SubnetCCF36168
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet2/RouteTableAssociation
  VpcdbsubnetSubnet3SubnetAB7E4DC6:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1d
      CidrBlock: 10.0.0.32/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db-subnet
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/db-subnetSubnet3
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet3/Subnet
  VpcdbsubnetSubnet3RouteTable40E2159B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/db-subnetSubnet3
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet3/RouteTable
  VpcdbsubnetSubnet3RouteTableAssociationB8BCD0A6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbsubnetSubnet3RouteTable40E2159B
      SubnetId:
        Ref: VpcdbsubnetSubnet3SubnetAB7E4DC6
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/db-subnetSubnet3/RouteTableAssociation
  VpcappsubnetSubnet1Subnet47512B50:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: app-subnet
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/app-subnetSubnet1
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet1/Subnet
  VpcappsubnetSubnet1RouteTableEAB4E440:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/app-subnetSubnet1
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet1/RouteTable
  VpcappsubnetSubnet1RouteTableAssociationDA6B9128:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcappsubnetSubnet1RouteTableEAB4E440
      SubnetId:
        Ref: VpcappsubnetSubnet1Subnet47512B50
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet1/RouteTableAssociation
  VpcappsubnetSubnet1DefaultRouteCA5C7034:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcappsubnetSubnet1RouteTableEAB4E440
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: VpcpublicsubnetSubnet1NatInstance1D3980C6
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet1/DefaultRoute
  VpcappsubnetSubnet2SubnetFEF58B5C:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: app-subnet
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/app-subnetSubnet2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet2/Subnet
  VpcappsubnetSubnet2RouteTable113E3DAF:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/app-subnetSubnet2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet2/RouteTable
  VpcappsubnetSubnet2RouteTableAssociation08D5D04D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcappsubnetSubnet2RouteTable113E3DAF
      SubnetId:
        Ref: VpcappsubnetSubnet2SubnetFEF58B5C
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet2/RouteTableAssociation
  VpcappsubnetSubnet2DefaultRoute2E6F3E73:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcappsubnetSubnet2RouteTable113E3DAF
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: VpcpublicsubnetSubnet2NatInstanceB36BC453
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet2/DefaultRoute
  VpcappsubnetSubnet3Subnet8781975A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1d
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: app-subnet
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/app-subnetSubnet3
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet3/Subnet
  VpcappsubnetSubnet3RouteTable25EE9E74:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/app-subnetSubnet3
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet3/RouteTable
  VpcappsubnetSubnet3RouteTableAssociation5C8A8808:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcappsubnetSubnet3RouteTable25EE9E74
      SubnetId:
        Ref: VpcappsubnetSubnet3Subnet8781975A
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet3/RouteTableAssociation
  VpcappsubnetSubnet3DefaultRoute30B87175:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcappsubnetSubnet3RouteTable25EE9E74
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: VpcpublicsubnetSubnet3NatInstance1A87E843
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/app-subnetSubnet3/DefaultRoute
  VpcpublicsubnetSubnet1Subnet14A585FE:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet1
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet1/Subnet
  VpcpublicsubnetSubnet1RouteTable01D68FE6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet1
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet1/RouteTable
  VpcpublicsubnetSubnet1RouteTableAssociationB55E1AF7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicsubnetSubnet1RouteTable01D68FE6
      SubnetId:
        Ref: VpcpublicsubnetSubnet1Subnet14A585FE
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet1/RouteTableAssociation
  VpcpublicsubnetSubnet1DefaultRouteA41D054F:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicsubnetSubnet1RouteTable01D68FE6
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet1/DefaultRoute
  VpcpublicsubnetSubnet1NatInstanceInstanceProfile3E955276:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet1/NatInstance/InstanceProfile
  VpcpublicsubnetSubnet1NatInstance1D3980C6:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-northeast-1a
      IamInstanceProfile:
        Ref: VpcpublicsubnetSubnet1NatInstanceInstanceProfile3E955276
      ImageId: ami-0375a0128a9752f65
      InstanceType: t3.nano
      SecurityGroupIds:
        - Fn::GetAtt:
            - VpcNatSecurityGroup8DA26EDC
            - GroupId
      SourceDestCheck: false
      SubnetId:
        Ref: VpcpublicsubnetSubnet1Subnet14A585FE
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet1/NatInstance
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet1/NatInstance/Resource
  VpcpublicsubnetSubnet2Subnet635909F9:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.5.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet2/Subnet
  VpcpublicsubnetSubnet2RouteTable1BDA0140:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet2/RouteTable
  VpcpublicsubnetSubnet2RouteTableAssociationE674E421:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicsubnetSubnet2RouteTable1BDA0140
      SubnetId:
        Ref: VpcpublicsubnetSubnet2Subnet635909F9
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet2/RouteTableAssociation
  VpcpublicsubnetSubnet2DefaultRoute9C6C8560:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicsubnetSubnet2RouteTable1BDA0140
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet2/DefaultRoute
  VpcpublicsubnetSubnet2NatInstanceInstanceProfile86520FBB:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet2/NatInstance/InstanceProfile
  VpcpublicsubnetSubnet2NatInstanceB36BC453:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-northeast-1c
      IamInstanceProfile:
        Ref: VpcpublicsubnetSubnet2NatInstanceInstanceProfile86520FBB
      ImageId: ami-0375a0128a9752f65
      InstanceType: t3.nano
      SecurityGroupIds:
        - Fn::GetAtt:
            - VpcNatSecurityGroup8DA26EDC
            - GroupId
      SourceDestCheck: false
      SubnetId:
        Ref: VpcpublicsubnetSubnet2Subnet635909F9
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet2/NatInstance
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet2/NatInstance/Resource
  VpcpublicsubnetSubnet3Subnet6EACF6D0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-1d
      CidrBlock: 10.0.6.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet3
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet3/Subnet
  VpcpublicsubnetSubnet3RouteTableAFD32FAF:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet3
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet3/RouteTable
  VpcpublicsubnetSubnet3RouteTableAssociationA4E06AAD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicsubnetSubnet3RouteTableAFD32FAF
      SubnetId:
        Ref: VpcpublicsubnetSubnet3Subnet6EACF6D0
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet3/RouteTableAssociation
  VpcpublicsubnetSubnet3DefaultRouteE8857B39:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicsubnetSubnet3RouteTableAFD32FAF
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet3/DefaultRoute
  VpcpublicsubnetSubnet3NatInstanceInstanceProfileBF997F73:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet3/NatInstance/InstanceProfile
  VpcpublicsubnetSubnet3NatInstance1A87E843:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-northeast-1d
      IamInstanceProfile:
        Ref: VpcpublicsubnetSubnet3NatInstanceInstanceProfileBF997F73
      ImageId: ami-0375a0128a9752f65
      InstanceType: t3.nano
      SecurityGroupIds:
        - Fn::GetAtt:
            - VpcNatSecurityGroup8DA26EDC
            - GroupId
      SourceDestCheck: false
      SubnetId:
        Ref: VpcpublicsubnetSubnet3Subnet6EACF6D0
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc/public-subnetSubnet3/NatInstance
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/public-subnetSubnet3/NatInstance/Resource
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/VPCGW
  VpcNatSecurityGroup8DA26EDC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for NAT instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:ALL TRAFFIC
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/NatSecurityGroup/Resource
  VpcNatRoleA1B5D171:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: PlaygroundCdkStack/Vpc
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Vpc/NatRole/Resource
  DatabaseSubnets56F17B9A:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for Database database
      SubnetIds:
        - Ref: VpcdbsubnetSubnet1Subnet34C31029
        - Ref: VpcdbsubnetSubnet2SubnetCCF36168
        - Ref: VpcdbsubnetSubnet3SubnetAB7E4DC6
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/Subnets/Default
  DatabaseSecurityGroup5C91FDCB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/SecurityGroup/Resource
  DatabaseSecurityGroupfromPlaygroundCdkStackVpcConnectorSecurityGroup91AE8716IndirectPort54A188D8:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from PlaygroundCdkStackVpcConnectorSecurityGroup91AE8716:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DatabaseB269D8BB
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DatabaseSecurityGroup5C91FDCB
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - VpcConnectorSecurityGroup33FAF25D
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DatabaseB269D8BB
          - Endpoint.Port
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/SecurityGroup/from PlaygroundCdkStackVpcConnectorSecurityGroup91AE8716:{IndirectPort}
  DatabaseSecurityGroupfromPlaygroundCdkStackBastionInstanceSecurityGroupED041703IndirectPort5CBDD09E:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from PlaygroundCdkStackBastionInstanceSecurityGroupED041703:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DatabaseB269D8BB
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DatabaseSecurityGroup5C91FDCB
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - BastionInstanceSecurityGroup71C3847E
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DatabaseB269D8BB
          - Endpoint.Port
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/SecurityGroup/from PlaygroundCdkStackBastionInstanceSecurityGroupED041703:{IndirectPort}
  PlaygroundCdkStackDatabaseSecretF8D957743fdaad7efa858a3daf9490cf0a702aeb:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/Secret/Resource
  DatabaseSecretAttachmentE5D1B020:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: PlaygroundCdkStackDatabaseSecretF8D957743fdaad7efa858a3daf9490cf0a702aeb
      TargetId:
        Ref: DatabaseB269D8BB
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/Secret/Attachment/Resource
  DatabaseB269D8BB:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      CopyTagsToSnapshot: true
      DatabaseName: mydb
      DBClusterParameterGroupName: default.aurora-mysql5.7
      DBSubnetGroupName:
        Ref: DatabaseSubnets56F17B9A
      EngineVersion: 5.7.mysql_aurora.2.10.2
      MasterUsername: admin
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: PlaygroundCdkStackDatabaseSecretF8D957743fdaad7efa858a3daf9490cf0a702aeb
            - :SecretString:password::}}
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - DatabaseSecurityGroup5C91FDCB
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/Resource
  DatabaseInstance1844F58FD:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.small
      DBClusterIdentifier:
        Ref: DatabaseB269D8BB
      DBSubnetGroupName:
        Ref: DatabaseSubnets56F17B9A
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.10.2
      PubliclyAccessible: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/Instance1
  DatabaseInstance2AA380DEE:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.small
      DBClusterIdentifier:
        Ref: DatabaseB269D8BB
      DBSubnetGroupName:
        Ref: DatabaseSubnets56F17B9A
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.10.2
      PubliclyAccessible: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Database/Instance2
  VpcConnectorSecurityGroup33FAF25D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: PlaygroundCdkStack/VpcConnector/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/VpcConnector/SecurityGroup/Resource
  VpcConnectorE3A78531:
    Type: AWS::AppRunner::VpcConnector
    Properties:
      Subnets:
        - Ref: VpcappsubnetSubnet1Subnet47512B50
        - Ref: VpcappsubnetSubnet2SubnetFEF58B5C
        - Ref: VpcappsubnetSubnet3Subnet8781975A
      SecurityGroups:
        - Fn::GetAtt:
            - VpcConnectorSecurityGroup33FAF25D
            - GroupId
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/VpcConnector/Resource
  InstanceRole3CCE2F1D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: tasks.apprunner.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/InstanceRole/Resource
  InstanceRoleDefaultPolicy1531605C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: DatabaseSecretAttachmentE5D1B020
        Version: "2012-10-17"
      PolicyName: InstanceRoleDefaultPolicy1531605C
      Roles:
        - Ref: InstanceRole3CCE2F1D
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/InstanceRole/DefaultPolicy/Resource
  ServiceAccessRole4763579D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: build.apprunner.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Service/AccessRole/Resource
  ServiceAccessRoleDefaultPolicy9C214812:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :ecr:ap-northeast-1:660782280015:repository/cdk-hnb659fds-container-assets-660782280015-ap-northeast-1
        Version: "2012-10-17"
      PolicyName: ServiceAccessRoleDefaultPolicy9C214812
      Roles:
        - Ref: ServiceAccessRole4763579D
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Service/AccessRole/DefaultPolicy/Resource
  ServiceDBC79909:
    Type: AWS::AppRunner::Service
    Properties:
      SourceConfiguration:
        AuthenticationConfiguration:
          AccessRoleArn:
            Fn::GetAtt:
              - ServiceAccessRole4763579D
              - Arn
        ImageRepository:
          ImageConfiguration:
            Port: "3000"
            RuntimeEnvironmentVariables:
              - Name: DB_SECRET_NAME
                Value:
                  Fn::Join:
                    - "-"
                    - - Fn::Select:
                          - 0
                          - Fn::Split:
                              - "-"
                              - Fn::Select:
                                  - 6
                                  - Fn::Split:
                                      - ":"
                                      - Ref: PlaygroundCdkStackDatabaseSecretF8D957743fdaad7efa858a3daf9490cf0a702aeb
                      - Fn::Select:
                          - 1
                          - Fn::Split:
                              - "-"
                              - Fn::Select:
                                  - 6
                                  - Fn::Split:
                                      - ":"
                                      - Ref: PlaygroundCdkStackDatabaseSecretF8D957743fdaad7efa858a3daf9490cf0a702aeb
          ImageIdentifier:
            Fn::Sub: 660782280015.dkr.ecr.ap-northeast-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-660782280015-ap-northeast-1:bb238e93816f360f068af2d9c2e7952fa05e2e5fb1a6c22e514ab78bcf49e540
          ImageRepositoryType: ECR
      InstanceConfiguration:
        InstanceRoleArn:
          Fn::GetAtt:
            - InstanceRole3CCE2F1D
            - Arn
      NetworkConfiguration:
        EgressConfiguration:
          EgressType: VPC
          VpcConnectorArn:
            Fn::GetAtt:
              - VpcConnectorE3A78531
              - VpcConnectorArn
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Service/Resource
  BastionInstanceSecurityGroup71C3847E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: PlaygroundCdkStack/Bastion/Resource/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: BastionHost
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Bastion/Resource/InstanceSecurityGroup/Resource
  BastionInstanceRoleD3B36EDD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: BastionHost
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Bastion/Resource/InstanceRole/Resource
  BastionInstanceRoleDefaultPolicy457C3156:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2messages:*
              - ssm:UpdateInstanceInformation
              - ssmmessages:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BastionInstanceRoleDefaultPolicy457C3156
      Roles:
        - Ref: BastionInstanceRoleD3B36EDD
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Bastion/Resource/InstanceRole/DefaultPolicy/Resource
  BastionInstanceProfile8FFAF242:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: BastionInstanceRoleD3B36EDD
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Bastion/Resource/InstanceProfile
  Bastion6045F255:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-northeast-1a
      IamInstanceProfile:
        Ref: BastionInstanceProfile8FFAF242
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.nano
      SecurityGroupIds:
        - Fn::GetAtt:
            - BastionInstanceSecurityGroup71C3847E
            - GroupId
      SubnetId:
        Ref: VpcappsubnetSubnet1Subnet47512B50
      Tags:
        - Key: Name
          Value: BastionHost
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - BastionInstanceRoleDefaultPolicy457C3156
      - BastionInstanceRoleD3B36EDD
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/Bastion/Resource/Resource
  CustomDomainCustomResourcePolicyFDEF19AC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apprunner:AssociateCustomDomain
              - apprunner:DisassociateCustomDomain
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServiceDBC79909
                - ServiceArn
        Version: "2012-10-17"
      PolicyName: CustomDomainCustomResourcePolicyFDEF19AC
      Roles:
        - Ref: AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/CustomDomain/CustomResourcePolicy/Resource
  CustomDomain21DD44B6:
    Type: Custom::AWS
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        Fn::Join:
          - ""
          - - '{"service":"AppRunner","action":"associateCustomDomain","parameters":{"DomainName":"play-apprunner.yamatatsu.dev","ServiceArn":"'
            - Fn::GetAtt:
                - ServiceDBC79909
                - ServiceArn
            - '","EnableWWWSubdomain":false},"physicalResourceId":{"id":"AppRunnerCustomDomain"}}'
      Delete:
        Fn::Join:
          - ""
          - - '{"service":"AppRunner","action":"disassociateCustomDomain","parameters":{"DomainName":"play-apprunner.yamatatsu.dev","ServiceArn":"'
            - Fn::GetAtt:
                - ServiceDBC79909
                - ServiceArn
            - '"},"physicalResourceId":{"id":"AppRunnerCustomDomain"}}'
      InstallLatestAwsSdk: true
    DependsOn:
      - CustomDomainCustomResourcePolicyFDEF19AC
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/CustomDomain/Resource/Default
  AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-660782280015-ap-northeast-1
        S3Key: 9ab58259097ac1249b4061ac6e823f78810b11c4c760a30324f6d012fe8e6440.zip
      Role:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
          - Arn
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 120
    DependsOn:
      - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.9ab58259097ac1249b4061ac6e823f78810b11c4c760a30324f6d012fe8e6440
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31TTW/bMAz9LbkrapIeuuMSB+sCDKjhFL0GtMK6amzJEKVkgeH/Plr+SNrDTiIfycdHSlrJ1ZNsFjO40FwdT/NS57LZe1AnwdChQbWSzVutRPJu3tJEpE6fweM+5AZ9B96szAaPr5CXeMNv2JrIKg1eWzMlizTkpVYDxc6QB6Ni9Vfbo+OEZ+57geugZPDWnrV+VGi82KMKTvvrs7OhjhL+C+xM4ZBIbIA6Ub8t+T/ahL+t0FDJ5k5E6uy75qky248Wz9Sy8iimt1rhjiSbLXjIgTApA7Fs0c82Kdhu7oExmXW5fofbzVgYnVFBKyimUAUGCnRR3lDVH6/gCvR325gSvkdaAXXtgjEDDV9uYtlT3rq+yp1115KrD0DEXeXWqhO6XcW91x3SxWSGtSXNVVdeIYoSqvwI/Hi0KUr01vwKRsXrngxmH22e6HFk7ynpUW4Ct/EdWysyJBscv4AY5RdZMG/H8BJ8HeJ8KTiosFuW4p3Z6uCGGqa8UBKxiea7y9c42K1YzKGsP0AuZj+Hf/DQndOehnDzZVXjnlph7BHlJz2clz/kciWXs0/Ses6lXlcos/78BwaF6xdpAwAA
    Metadata:
      aws:cdk:path: PlaygroundCdkStack/CDKMetadata/Default
Outputs:
  BastionBastionHostId8F8CEB82:
    Description: Instance ID of the bastion host. Use this to connect via SSM Session Manager
    Value:
      Ref: Bastion6045F255
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

