Resources:
  User00B015A1:
    Type: AWS::IAM::User
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/User/Resource
  UserDefaultPolicy1F97781E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Repository22E53BBD
                - Arn
          - Action:
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Repository22E53BBD
                - Arn
          - Action:
              - ecs:ListTaskDefinitions
              - ecs:DescribeTaskDefinition
              - ecs:RegisterTaskDefinition
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ServiceTaskDefTaskRole0CFE2F57
                  - Arn
              - Fn::GetAtt:
                  - ServiceTaskDefExecutionRole919F7BE3
                  - Arn
          - Action:
              - ecs:DescribeServices
              - ecs:UpdateService
            Effect: Allow
            Resource:
              Ref: Service9571FDD8
        Version: "2012-10-17"
      PolicyName: UserDefaultPolicy1F97781E
      Users:
        - Ref: User00B015A1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/User/DefaultPolicy/Resource
  AccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        Ref: User00B015A1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/AccessKey
  Repository22E53BBD:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Repository/Resource
  ClusterEB0386A7:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Resource
  ClusterVpcFAA3CEDF:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/Resource
  ClusterVpcPublicSubnet1SubnetA9F7E0A5:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1/Subnet
  ClusterVpcPublicSubnet1RouteTable5594A636:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1/RouteTable
  ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterVpcPublicSubnet1RouteTable5594A636
      SubnetId:
        Ref: ClusterVpcPublicSubnet1SubnetA9F7E0A5
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1/RouteTableAssociation
  ClusterVpcPublicSubnet1DefaultRoute62DA4B4B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterVpcPublicSubnet1RouteTable5594A636
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ClusterVpcIGW1E358A6E
    DependsOn:
      - ClusterVpcVPCGW47AC17E9
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1/DefaultRoute
  ClusterVpcPublicSubnet1EIP433C56EE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1/EIP
  ClusterVpcPublicSubnet1NATGateway0693C346:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ClusterVpcPublicSubnet1EIP433C56EE
          - AllocationId
      SubnetId:
        Ref: ClusterVpcPublicSubnet1SubnetA9F7E0A5
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet1/NATGateway
  ClusterVpcPublicSubnet2Subnet059113C4:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2/Subnet
  ClusterVpcPublicSubnet2RouteTable7B43F18C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2/RouteTable
  ClusterVpcPublicSubnet2RouteTableAssociation8446B27D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterVpcPublicSubnet2RouteTable7B43F18C
      SubnetId:
        Ref: ClusterVpcPublicSubnet2Subnet059113C4
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2/RouteTableAssociation
  ClusterVpcPublicSubnet2DefaultRoute97446C8A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterVpcPublicSubnet2RouteTable7B43F18C
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ClusterVpcIGW1E358A6E
    DependsOn:
      - ClusterVpcVPCGW47AC17E9
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2/DefaultRoute
  ClusterVpcPublicSubnet2EIP203DF3E5:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2/EIP
  ClusterVpcPublicSubnet2NATGateway00B24686:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ClusterVpcPublicSubnet2EIP203DF3E5
          - AllocationId
      SubnetId:
        Ref: ClusterVpcPublicSubnet2Subnet059113C4
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PublicSubnet2/NATGateway
  ClusterVpcPrivateSubnet1SubnetA4EB481A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet1/Subnet
  ClusterVpcPrivateSubnet1RouteTable5AAEDA3F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet1/RouteTable
  ClusterVpcPrivateSubnet1RouteTableAssociation9B8A88D9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterVpcPrivateSubnet1RouteTable5AAEDA3F
      SubnetId:
        Ref: ClusterVpcPrivateSubnet1SubnetA4EB481A
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet1/RouteTableAssociation
  ClusterVpcPrivateSubnet1DefaultRoute3B4D40DD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterVpcPrivateSubnet1RouteTable5AAEDA3F
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ClusterVpcPublicSubnet1NATGateway0693C346
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet1/DefaultRoute
  ClusterVpcPrivateSubnet2SubnetBD1ECB6E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet2/Subnet
  ClusterVpcPrivateSubnet2RouteTable73064A66:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet2/RouteTable
  ClusterVpcPrivateSubnet2RouteTableAssociationFB21349E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterVpcPrivateSubnet2RouteTable73064A66
      SubnetId:
        Ref: ClusterVpcPrivateSubnet2SubnetBD1ECB6E
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet2/RouteTableAssociation
  ClusterVpcPrivateSubnet2DefaultRoute011666AF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterVpcPrivateSubnet2RouteTable73064A66
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ClusterVpcPublicSubnet2NATGateway00B24686
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/PrivateSubnet2/DefaultRoute
  ClusterVpcIGW1E358A6E:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ECSDeployGitHubActionApp/Cluster/Vpc
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/IGW
  ClusterVpcVPCGW47AC17E9:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: ClusterVpcFAA3CEDF
      InternetGatewayId:
        Ref: ClusterVpcIGW1E358A6E
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Cluster/Vpc/VPCGW
  ServiceLBE9A1ADBC:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ServiceLBSecurityGroupF7435A5C
            - GroupId
      Subnets:
        - Ref: ClusterVpcPublicSubnet1SubnetA9F7E0A5
        - Ref: ClusterVpcPublicSubnet2Subnet059113C4
      Type: application
    DependsOn:
      - ClusterVpcPublicSubnet1DefaultRoute62DA4B4B
      - ClusterVpcPublicSubnet2DefaultRoute97446C8A
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/LB/Resource
  ServiceLBSecurityGroupF7435A5C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB ECSDeployGitHubActionAppServiceLB0111A73C
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: ClusterVpcFAA3CEDF
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/LB/SecurityGroup/Resource
  ServiceLBSecurityGrouptoECSDeployGitHubActionAppServiceSecurityGroupB8DB9BBB8097211716:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - ServiceSecurityGroupEEA09B68
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/LB/SecurityGroup/to ECSDeployGitHubActionAppServiceSecurityGroupB8DB9BBB:80
  ServiceLBPublicListener46709EAA:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ServiceLBPublicListenerECSGroup0CC8688C
          Type: forward
      LoadBalancerArn:
        Ref: ServiceLBE9A1ADBC
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/LB/PublicListener/Resource
  ServiceLBPublicListenerECSGroup0CC8688C:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,301,302
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: ClusterVpcFAA3CEDF
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/LB/PublicListener/ECSGroup/Resource
  ServiceTaskDefTaskRole0CFE2F57:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/TaskDef/TaskRole/Resource
  ServiceTaskDef1922A00F:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: nginx:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: ServiceTaskDefwebLogGroup2A898F61
              awslogs-stream-prefix: Service
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - ServiceTaskDefExecutionRole919F7BE3
          - Arn
      Family: ECSDeployGitHubActionAppServiceTaskDefE8E7E7BB
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - ServiceTaskDefTaskRole0CFE2F57
          - Arn
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/TaskDef/Resource
  ServiceTaskDefwebLogGroup2A898F61:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/TaskDef/web/LogGroup/Resource
  ServiceTaskDefExecutionRole919F7BE3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/TaskDef/ExecutionRole/Resource
  ServiceTaskDefExecutionRoleDefaultPolicy3073559D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServiceTaskDefwebLogGroup2A898F61
                - Arn
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Repository22E53BBD
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ServiceTaskDefExecutionRoleDefaultPolicy3073559D
      Roles:
        - Ref: ServiceTaskDefExecutionRole919F7BE3
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/TaskDef/ExecutionRole/DefaultPolicy/Resource
  Service9571FDD8:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: ServiceLBPublicListenerECSGroup0CC8688C
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - ServiceSecurityGroupEEA09B68
                - GroupId
          Subnets:
            - Ref: ClusterVpcPrivateSubnet1SubnetA4EB481A
            - Ref: ClusterVpcPrivateSubnet2SubnetBD1ECB6E
      TaskDefinition:
        Ref: ServiceTaskDef1922A00F
    DependsOn:
      - ServiceLBPublicListenerECSGroup0CC8688C
      - ServiceLBPublicListener46709EAA
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/Service/Service
  ServiceSecurityGroupEEA09B68:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECSDeployGitHubActionApp/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ClusterVpcFAA3CEDF
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/Service/SecurityGroup/Resource
  ServiceSecurityGroupfromECSDeployGitHubActionAppServiceLBSecurityGroupD28235D0805C301D06:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - ServiceSecurityGroupEEA09B68
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/Service/Service/SecurityGroup/from ECSDeployGitHubActionAppServiceLBSecurityGroupD28235D0:80
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.70.0,@aws-cdk/aws-applicationautoscaling=1.70.0,@aws-cdk/aws-autoscaling=1.70.0,@aws-cdk/aws-autoscaling-common=1.70.0,@aws-cdk/aws-autoscaling-hooktargets=1.70.0,@aws-cdk/aws-certificatemanager=1.70.0,@aws-cdk/aws-cloudwatch=1.70.0,@aws-cdk/aws-codeguruprofiler=1.70.0,@aws-cdk/aws-ec2=1.70.0,@aws-cdk/aws-ecr=1.70.0,@aws-cdk/aws-ecr-assets=1.70.0,@aws-cdk/aws-ecs=1.70.0,@aws-cdk/aws-ecs-patterns=1.70.0,@aws-cdk/aws-elasticloadbalancingv2=1.70.0,@aws-cdk/aws-events=1.70.0,@aws-cdk/aws-events-targets=1.70.0,@aws-cdk/aws-iam=1.70.0,@aws-cdk/aws-kms=1.70.0,@aws-cdk/aws-lambda=1.70.0,@aws-cdk/aws-logs=1.70.0,@aws-cdk/aws-route53=1.70.0,@aws-cdk/aws-route53-targets=1.70.0,@aws-cdk/aws-s3=1.70.0,@aws-cdk/aws-s3-assets=1.70.0,@aws-cdk/aws-servicediscovery=1.70.0,@aws-cdk/aws-sns=1.70.0,@aws-cdk/aws-sns-subscriptions=1.70.0,@aws-cdk/aws-sqs=1.70.0,@aws-cdk/aws-ssm=1.70.0,@aws-cdk/cloud-assembly-schema=1.70.0,@aws-cdk/core=1.70.0,@aws-cdk/custom-resources=1.70.0,@aws-cdk/cx-api=1.70.0,@aws-cdk/region-info=1.70.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: ECSDeployGitHubActionApp/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ServiceLoadBalancerDNSEC5B149E:
    Value:
      Fn::GetAtt:
        - ServiceLBE9A1ADBC
        - DNSName
  ServiceServiceURL250C0FB6:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - ServiceLBE9A1ADBC
              - DNSName
  AccessKeyId:
    Value:
      Ref: AccessKey
  AccessKeySecret:
    Value:
      Fn::GetAtt:
        - AccessKey
        - SecretAccessKey
  RepositoryName:
    Value:
      Ref: Repository22E53BBD
  RepositoryUri:
    Value:
      Fn::Join:
        - ""
        - - Fn::Select:
              - 4
              - Fn::Split:
                  - ":"
                  - Fn::GetAtt:
                      - Repository22E53BBD
                      - Arn
          - .dkr.ecr.
          - Fn::Select:
              - 3
              - Fn::Split:
                  - ":"
                  - Fn::GetAtt:
                      - Repository22E53BBD
                      - Arn
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: Repository22E53BBD
  ClusterArn:
    Value:
      Fn::GetAtt:
        - ClusterEB0386A7
        - Arn
  ClusterName:
    Value:
      Ref: ClusterEB0386A7
  ServiceName:
    Value:
      Fn::GetAtt:
        - Service9571FDD8
        - Name
  TaskDefinitionFamily:
    Value: ECSDeployGitHubActionAppServiceTaskDefE8E7E7BB
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

