Resources:
  examplebucketC9DFA43E:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/example-bucket/Resource
  examplebucketPolicyE09B485E:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: examplebucketC9DFA43E
      PolicyDocument:
        Statement:
          - Action: "*"
            Condition:
              StringEquals:
                s3:DataAccessPointAccount:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - examplebucketC9DFA43E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - examplebucketC9DFA43E
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/example-bucket/Policy/Resource
  retrieveTransformedObjectLambdaServiceRole27FF342E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/retrieveTransformedObjectLambda/ServiceRole/Resource
  retrieveTransformedObjectLambdaServiceRoleDefaultPolicy18E312EA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3-object-lambda:WriteGetObjectResponse
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: retrieveTransformedObjectLambdaServiceRoleDefaultPolicy18E312EA
      Roles:
        - Ref: retrieveTransformedObjectLambdaServiceRole27FF342E
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/retrieveTransformedObjectLambda/ServiceRole/DefaultPolicy/Resource
  retrieveTransformedObjectLambdaD5D6532C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: abe4e2f4fcc1aaaf53db4829c23a5cf08795d36cce0f68a3321c1c8d728fec44.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - retrieveTransformedObjectLambdaServiceRole27FF342E
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - retrieveTransformedObjectLambdaServiceRoleDefaultPolicy18E312EA
      - retrieveTransformedObjectLambdaServiceRole27FF342E
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/retrieveTransformedObjectLambda/Resource
      aws:asset:path: asset.abe4e2f4fcc1aaaf53db4829c23a5cf08795d36cce0f68a3321c1c8d728fec44
      aws:asset:is-bundled: false
      aws:asset:property: Code
  retrieveTransformedObjectLambdainvocationRestrictionD58B0218:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - retrieveTransformedObjectLambdaD5D6532C
          - Arn
      Principal:
        Ref: AWS::AccountId
      SourceAccount:
        Ref: AWS::AccountId
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/retrieveTransformedObjectLambda/invocationRestriction
  exampleBucketAP:
    Type: AWS::S3::AccessPoint
    Properties:
      Bucket:
        Ref: examplebucketC9DFA43E
      Name: example-test-ap
      Policy:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - retrieveTransformedObjectLambdaServiceRole27FF342E
                  - Arn
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :accesspoint/example-test-ap/object/*
            Sid: AllowLambdaToUseAccessPoint
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/exampleBucketAP
  s3ObjectLambdaAP:
    Type: AWS::S3ObjectLambda::AccessPoint
    Properties:
      Name: s3-object-lambda-ap
      ObjectLambdaConfiguration:
        SupportingAccessPoint:
          Fn::Join:
            - ""
            - - "arn:aws:s3:"
              - Ref: AWS::Region
              - ":"
              - Ref: AWS::AccountId
              - :accesspoint/example-test-ap
        TransformationConfigurations:
          - Actions:
              - GetObject
            ContentTransformation:
              AwsLambda:
                FunctionArn:
                  Fn::GetAtt:
                    - retrieveTransformedObjectLambdaD5D6532C
                    - Arn
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/s3ObjectLambdaAP
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11Qy07EMAz8Fu6pUXY5cN1diStV+YBV6pqV+0hQ7YBQ1H8nTSsWcZoZe+SxfQBrn8A+uC+psBuqkVtIb+pwMLl0TXKEdI44kJrLu9/ZBnUYGb/v5V1v4uyE1tYJkUTqwF4XM7qp7Rykl+hROfjV8JfXNE8sktVi2E2QmjCWKQXveRtbjByvToRU4LRC1qHtCXXP+R/fkIQ4I5nizkfe2N/Wea9RP2I58NeS+SX4jrUs40NH0Mvjp30Ge8jv6oW5mqNXngiaDX8AEC0krEsBAAA=
    Metadata:
      aws:cdk:path: S3ObjectLambdaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  exampleBucketArn:
    Value:
      Fn::GetAtt:
        - examplebucketC9DFA43E
        - Arn
  objectLambdaArn:
    Value:
      Fn::GetAtt:
        - retrieveTransformedObjectLambdaD5D6532C
        - Arn
  objectLambdaAccessPointArn:
    Value:
      Fn::GetAtt:
        - s3ObjectLambdaAP
        - Arn
  objectLambdaAccessPointUrl:
    Value:
      Fn::Join:
        - ""
        - - https://console.aws.amazon.com/s3/olap/
          - Ref: AWS::AccountId
          - /s3-object-lambda-ap?region=
          - Ref: AWS::Region
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

