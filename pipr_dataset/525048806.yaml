Resources:
  vpc1F1721486:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/Resource
  vpc1publicsubnet1Subnet1Subnet4A10C448:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-1Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet1/Subnet
  vpc1publicsubnet1Subnet1RouteTable8EB97155:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-1Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet1/RouteTable
  vpc1publicsubnet1Subnet1RouteTableAssociation5A6E8833:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet1Subnet1RouteTable8EB97155
      SubnetId:
        Ref: vpc1publicsubnet1Subnet1Subnet4A10C448
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet1/RouteTableAssociation
  vpc1publicsubnet1Subnet1DefaultRoute8C3FE5E4:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet1Subnet1RouteTable8EB97155
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpc1IGW4D1B5995
    DependsOn:
      - vpc1VPCGWC07D6217
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet1/DefaultRoute
  vpc1publicsubnet1Subnet1EIP49C21512:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-1Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet1/EIP
  vpc1publicsubnet1Subnet1NATGatewayFA092032:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpc1publicsubnet1Subnet1Subnet4A10C448
      AllocationId:
        Fn::GetAtt:
          - vpc1publicsubnet1Subnet1EIP49C21512
          - AllocationId
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-1Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet1/NATGateway
  vpc1publicsubnet1Subnet2SubnetE5DDB094:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-1Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet2/Subnet
  vpc1publicsubnet1Subnet2RouteTable42280567:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-1Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet2/RouteTable
  vpc1publicsubnet1Subnet2RouteTableAssociation66DA2DDC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet1Subnet2RouteTable42280567
      SubnetId:
        Ref: vpc1publicsubnet1Subnet2SubnetE5DDB094
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet2/RouteTableAssociation
  vpc1publicsubnet1Subnet2DefaultRoute1605B305:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet1Subnet2RouteTable42280567
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpc1IGW4D1B5995
    DependsOn:
      - vpc1VPCGWC07D6217
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-1Subnet2/DefaultRoute
  vpc1publicsubnet2Subnet1SubnetE41A2585:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-2
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-2Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet1/Subnet
  vpc1publicsubnet2Subnet1RouteTable2C3B98B8:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-2Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet1/RouteTable
  vpc1publicsubnet2Subnet1RouteTableAssociationB83DD4BD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet2Subnet1RouteTable2C3B98B8
      SubnetId:
        Ref: vpc1publicsubnet2Subnet1SubnetE41A2585
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet1/RouteTableAssociation
  vpc1publicsubnet2Subnet1DefaultRoute6ADB420F:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet2Subnet1RouteTable2C3B98B8
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpc1IGW4D1B5995
    DependsOn:
      - vpc1VPCGWC07D6217
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet1/DefaultRoute
  vpc1publicsubnet2Subnet2SubnetAB855350:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.3.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-2
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-2Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet2/Subnet
  vpc1publicsubnet2Subnet2RouteTable6B5515EE:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/public-subnet-2Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet2/RouteTable
  vpc1publicsubnet2Subnet2RouteTableAssociation4152F9A1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet2Subnet2RouteTable6B5515EE
      SubnetId:
        Ref: vpc1publicsubnet2Subnet2SubnetAB855350
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet2/RouteTableAssociation
  vpc1publicsubnet2Subnet2DefaultRouteA2F9C591:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1publicsubnet2Subnet2RouteTable6B5515EE
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpc1IGW4D1B5995
    DependsOn:
      - vpc1VPCGWC07D6217
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/public-subnet-2Subnet2/DefaultRoute
  vpc1privatesubnet1Subnet1SubnetC54BCC94:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-1Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet1/Subnet
  vpc1privatesubnet1Subnet1RouteTable02D2A0F6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-1Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet1/RouteTable
  vpc1privatesubnet1Subnet1RouteTableAssociationDB8B932E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet1Subnet1RouteTable02D2A0F6
      SubnetId:
        Ref: vpc1privatesubnet1Subnet1SubnetC54BCC94
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet1/RouteTableAssociation
  vpc1privatesubnet1Subnet1DefaultRouteE8CEB955:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet1Subnet1RouteTable02D2A0F6
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpc1publicsubnet1Subnet1NATGatewayFA092032
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet1/DefaultRoute
  vpc1privatesubnet1Subnet2SubnetE215384E:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.5.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-1Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet2/Subnet
  vpc1privatesubnet1Subnet2RouteTableA9E2E3A3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-1Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet2/RouteTable
  vpc1privatesubnet1Subnet2RouteTableAssociationE1EFFAF2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet1Subnet2RouteTableA9E2E3A3
      SubnetId:
        Ref: vpc1privatesubnet1Subnet2SubnetE215384E
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet2/RouteTableAssociation
  vpc1privatesubnet1Subnet2DefaultRoute58AF0AC1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet1Subnet2RouteTableA9E2E3A3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpc1publicsubnet1Subnet1NATGatewayFA092032
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-1Subnet2/DefaultRoute
  vpc1privatesubnet2Subnet1Subnet9785D392:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.6.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-2
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-2Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet1/Subnet
  vpc1privatesubnet2Subnet1RouteTable08007F68:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-2Subnet1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet1/RouteTable
  vpc1privatesubnet2Subnet1RouteTableAssociation892F6C93:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet2Subnet1RouteTable08007F68
      SubnetId:
        Ref: vpc1privatesubnet2Subnet1Subnet9785D392
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet1/RouteTableAssociation
  vpc1privatesubnet2Subnet1DefaultRoute26BF12C9:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet2Subnet1RouteTable08007F68
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpc1publicsubnet1Subnet1NATGatewayFA092032
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet1/DefaultRoute
  vpc1privatesubnet2Subnet2Subnet9DDC464A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpc1F1721486
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.7.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-2
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-2Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet2/Subnet
  vpc1privatesubnet2Subnet2RouteTable1A438769:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc1F1721486
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1/private-subnet-2Subnet2
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet2/RouteTable
  vpc1privatesubnet2Subnet2RouteTableAssociationCD14A2B7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet2Subnet2RouteTable1A438769
      SubnetId:
        Ref: vpc1privatesubnet2Subnet2Subnet9DDC464A
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet2/RouteTableAssociation
  vpc1privatesubnet2Subnet2DefaultRoute89922D86:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpc1privatesubnet2Subnet2RouteTable1A438769
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpc1publicsubnet1Subnet1NATGatewayFA092032
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/private-subnet-2Subnet2/DefaultRoute
  vpc1IGW4D1B5995:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Vpc1Stack/vpc-1
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/IGW
  vpc1VPCGWC07D6217:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpc1F1721486
      InternetGatewayId:
        Ref: vpc1IGW4D1B5995
    Metadata:
      aws:cdk:path: Vpc1Stack/vpc-1/VPCGW
  databasesg2702FC9C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Vpc1Stack/database-sg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: allow postgres connections from anywhere
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
        - CidrIpv6: ::/0
          Description: allow postgres connections from anywhere
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      VpcId:
        Ref: vpc1F1721486
    Metadata:
      aws:cdk:path: Vpc1Stack/database-sg/Resource
  SecretA720EF05:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: RDS database auto-generated user password
      GenerateSecretString:
        ExcludeCharacters: '"@/'
        GenerateStringKey: password
        PasswordLength: 32
        SecretStringTemplate: '{"username": "postgres"}'
      Name: eil_db_1_password
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Vpc1Stack/Secret/Resource
  eildb1clusterSubnets8AFC1FFB:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for eil-db-1-cluster database
      SubnetIds:
        - Ref: vpc1privatesubnet1Subnet1SubnetC54BCC94
        - Ref: vpc1privatesubnet1Subnet2SubnetE215384E
        - Ref: vpc1privatesubnet2Subnet1Subnet9785D392
        - Ref: vpc1privatesubnet2Subnet2Subnet9DDC464A
    Metadata:
      aws:cdk:path: Vpc1Stack/eil-db-1-cluster/Subnets/Default
  eildb1clusterDC8ABC15:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      CopyTagsToSnapshot: true
      DatabaseName: eil-db-1
      DBClusterParameterGroupName: default.aurora-postgresql13
      DBSubnetGroupName:
        Ref: eildb1clusterSubnets8AFC1FFB
      EnableHttpEndpoint: false
      EngineMode: serverless
      EngineVersion: "13.7"
      MasterUsername: postgres
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: SecretA720EF05
            - :SecretString:::}}
      ScalingConfiguration:
        AutoPause: true
        MaxCapacity: 4
        MinCapacity: 1
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - databasesg2702FC9C
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: Vpc1Stack/eil-db-1-cluster/Resource
  alb1D3CDFB06:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - alb1SecurityGroup5DAE02A1
            - GroupId
      Subnets:
        - Ref: vpc1publicsubnet1Subnet1Subnet4A10C448
        - Ref: vpc1publicsubnet1Subnet2SubnetE5DDB094
        - Ref: vpc1publicsubnet2Subnet1SubnetE41A2585
        - Ref: vpc1publicsubnet2Subnet2SubnetAB855350
      Type: application
    DependsOn:
      - vpc1publicsubnet1Subnet1DefaultRoute8C3FE5E4
      - vpc1publicsubnet1Subnet2DefaultRoute1605B305
      - vpc1publicsubnet2Subnet1DefaultRoute6ADB420F
      - vpc1publicsubnet2Subnet2DefaultRouteA2F9C591
    Metadata:
      aws:cdk:path: Vpc1Stack/alb-1/Resource
  alb1SecurityGroup5DAE02A1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB Vpc1Stackalb1DBCC6966
      SecurityGroupEgress:
        - CidrIp: 255.255.255.255/32
          Description: Disallow all traffic
          FromPort: 252
          IpProtocol: icmp
          ToPort: 86
      VpcId:
        Ref: vpc1F1721486
    Metadata:
      aws:cdk:path: Vpc1Stack/alb-1/SecurityGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2VRwW7CMAz9lt1DJthhu0I3IaRpqtqJ6+SmHgukSRU7RQj13+cWRpF28vPzs/PsLPTTs54/wJFmpj7MnK30uWQwByXU1xnNQp+3rVHZt9/mmcpT5awpU+WRB25CRUiMn1A5nPiJWxIFY4Ft8DfxAN42+RA+gNfAeISTyqPtBE6DN54xCv4TXJxcsyWL158GPasSTYqWT+sYUjt6uCd6RWgiMjXgYYdRthzzq1BQr2JNAx07jA6JMpdInlYXK7exr6t/xFXZK3RAbI0LUFfgwBvrd51ccNm2crZx/XeprcaajJbu+7zvVYEUUjTjce5xFnxth/5e+VCj3tNjN3/R84V83p6sncXk2Taoi0v8BfNj9nrYAQAA
    Metadata:
      aws:cdk:path: Vpc1Stack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

