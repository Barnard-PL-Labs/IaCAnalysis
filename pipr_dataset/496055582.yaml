Resources:
  paasVpc8C4147ED:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/Resource
  paasVpcPublicSubnet1Subnet131FF148:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: softchef-paas/paasVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet1/Subnet
  paasVpcPublicSubnet1RouteTable8F19CD45:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet1/RouteTable
  paasVpcPublicSubnet1RouteTableAssociation00805E8D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: paasVpcPublicSubnet1RouteTable8F19CD45
      SubnetId:
        Ref: paasVpcPublicSubnet1Subnet131FF148
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet1/RouteTableAssociation
  paasVpcPublicSubnet1DefaultRouteE13A1FA8:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: paasVpcPublicSubnet1RouteTable8F19CD45
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: paasVpcIGWC884B440
    DependsOn:
      - paasVpcVPCGWA511FC0D
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet1/DefaultRoute
  paasVpcPublicSubnet1EIPE8402280:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet1/EIP
  paasVpcPublicSubnet1NATGatewayBF97DAD9:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: paasVpcPublicSubnet1Subnet131FF148
      AllocationId:
        Fn::GetAtt:
          - paasVpcPublicSubnet1EIPE8402280
          - AllocationId
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet1/NATGateway
  paasVpcPublicSubnet2Subnet813EC6C4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: softchef-paas/paasVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet2/Subnet
  paasVpcPublicSubnet2RouteTable23AD2D27:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet2/RouteTable
  paasVpcPublicSubnet2RouteTableAssociation6D215645:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: paasVpcPublicSubnet2RouteTable23AD2D27
      SubnetId:
        Ref: paasVpcPublicSubnet2Subnet813EC6C4
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet2/RouteTableAssociation
  paasVpcPublicSubnet2DefaultRoute905BEBB0:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: paasVpcPublicSubnet2RouteTable23AD2D27
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: paasVpcIGWC884B440
    DependsOn:
      - paasVpcVPCGWA511FC0D
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PublicSubnet2/DefaultRoute
  paasVpcPrivateSubnet1SubnetDC7925C5:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: softchef-paas/paasVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet1/Subnet
  paasVpcPrivateSubnet1RouteTable2BD93C2C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet1/RouteTable
  paasVpcPrivateSubnet1RouteTableAssociationEA5D4EE0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: paasVpcPrivateSubnet1RouteTable2BD93C2C
      SubnetId:
        Ref: paasVpcPrivateSubnet1SubnetDC7925C5
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet1/RouteTableAssociation
  paasVpcPrivateSubnet1DefaultRoute8E0791C1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: paasVpcPrivateSubnet1RouteTable2BD93C2C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: paasVpcPublicSubnet1NATGatewayBF97DAD9
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet1/DefaultRoute
  paasVpcPrivateSubnet2Subnet5E401116:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: softchef-paas/paasVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet2/Subnet
  paasVpcPrivateSubnet2RouteTableCFBA3FDC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet2/RouteTable
  paasVpcPrivateSubnet2RouteTableAssociation820B4387:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: paasVpcPrivateSubnet2RouteTableCFBA3FDC
      SubnetId:
        Ref: paasVpcPrivateSubnet2Subnet5E401116
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet2/RouteTableAssociation
  paasVpcPrivateSubnet2DefaultRoute828F353C:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: paasVpcPrivateSubnet2RouteTableCFBA3FDC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: paasVpcPublicSubnet1NATGatewayBF97DAD9
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/PrivateSubnet2/DefaultRoute
  paasVpcIGWC884B440:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: softchef-paas/paasVpc
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/IGW
  paasVpcVPCGWA511FC0D:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: paasVpc8C4147ED
      InternetGatewayId:
        Ref: paasVpcIGWC884B440
    Metadata:
      aws:cdk:path: softchef-paas/paasVpc/VPCGW
  paascluster6DECA133:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: paasCluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Metadata:
      aws:cdk:path: softchef-paas/paas-cluster/Resource
  amazonecssampleLBF8E7DBED:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - amazonecssampleLBSecurityGroup55736652
            - GroupId
      Subnets:
        - Ref: paasVpcPublicSubnet1Subnet131FF148
        - Ref: paasVpcPublicSubnet2Subnet813EC6C4
      Type: application
    DependsOn:
      - paasVpcPublicSubnet1DefaultRouteE13A1FA8
      - paasVpcPublicSubnet2DefaultRoute905BEBB0
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/LB/Resource
  amazonecssampleLBSecurityGroup55736652:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB softchefpaasamazonecssampleLB8ADC75C6
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: paasVpc8C4147ED
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/LB/SecurityGroup/Resource
  amazonecssampleLBSecurityGrouptosoftchefpaasamazonecssampleServiceSecurityGroupA453BA5380707C831E:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - amazonecssampleLBSecurityGroup55736652
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - amazonecssampleServiceSecurityGroup120A1640
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/LB/SecurityGroup/to softchefpaasamazonecssampleServiceSecurityGroupA453BA53:80
  amazonecssampleLBPublicListenerDAC9D871:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: amazonecssampleLBPublicListenerECSGroup65D63633
          Type: forward
      LoadBalancerArn:
        Ref: amazonecssampleLBF8E7DBED
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/LB/PublicListener/Resource
  amazonecssampleLBPublicListenerECSGroup65D63633:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: paasVpc8C4147ED
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/LB/PublicListener/ECSGroup/Resource
  amazonecssampleTaskDefTaskRole527DD07B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/TaskDef/TaskRole/Resource
  amazonecssampleTaskDefF37D3192:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: amazon/amazon-ecs-sample
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: amazonecssampleTaskDefwebLogGroup910AB31A
              awslogs-stream-prefix: softchef-paas
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - amazonecssampleTaskDefExecutionRoleF904F4BB
          - Arn
      Family: softchefpaasamazonecssampleTaskDef2FE416A0
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - amazonecssampleTaskDefTaskRole527DD07B
          - Arn
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/TaskDef/Resource
  amazonecssampleTaskDefwebLogGroup910AB31A:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/TaskDef/web/LogGroup/Resource
  amazonecssampleTaskDefExecutionRoleF904F4BB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/TaskDef/ExecutionRole/Resource
  amazonecssampleTaskDefExecutionRoleDefaultPolicyAFBFE89A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - amazonecssampleTaskDefwebLogGroup910AB31A
                - Arn
        Version: "2012-10-17"
      PolicyName: amazonecssampleTaskDefExecutionRoleDefaultPolicyAFBFE89A
      Roles:
        - Ref: amazonecssampleTaskDefExecutionRoleF904F4BB
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/TaskDef/ExecutionRole/DefaultPolicy/Resource
  amazonecssampleService537E3215:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: paascluster6DECA133
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: amazonecssampleLBPublicListenerECSGroup65D63633
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - amazonecssampleServiceSecurityGroup120A1640
                - GroupId
          Subnets:
            - Ref: paasVpcPrivateSubnet1SubnetDC7925C5
            - Ref: paasVpcPrivateSubnet2Subnet5E401116
      TaskDefinition:
        Ref: amazonecssampleTaskDefF37D3192
    DependsOn:
      - amazonecssampleLBPublicListenerECSGroup65D63633
      - amazonecssampleLBPublicListenerDAC9D871
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/Service/Service
  amazonecssampleServiceSecurityGroup120A1640:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: softchef-paas/amazon-ecs-sample/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: paasVpc8C4147ED
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/Service/SecurityGroup/Resource
  amazonecssampleServiceSecurityGroupfromsoftchefpaasamazonecssampleLBSecurityGroup64D1BA4180566B7C09:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - amazonecssampleServiceSecurityGroup120A1640
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - amazonecssampleLBSecurityGroup55736652
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: softchef-paas/amazon-ecs-sample/Service/SecurityGroup/from softchefpaasamazonecssampleLBSecurityGroup64D1BA41:80
  DnsNamespaceE8F044C2:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: http-api.local
      Vpc:
        Ref: paasVpc8C4147ED
      Description: Private DnsNamespace for Microservices
    Metadata:
      aws:cdk:path: softchef-paas/DnsNamespace/Resource
  ecspaasTaskExecutionRole643C76D7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    Metadata:
      aws:cdk:path: softchef-paas/ecspaasTaskExecutionRole/Resource
  paasServiceTaskDef227D8A7D:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /ex-service:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: paasServiceLogGroup93EF476C
              awslogs-stream-prefix: paasService
              awslogs-region:
                Ref: AWS::Region
          Name: paasServiceContainer
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - paasServiceTaskDefExecutionRole6892408C
          - Arn
      Family: softchefpaaspaasServiceTaskDef0BEB066A
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - ecspaasTaskExecutionRole643C76D7
          - Arn
    Metadata:
      aws:cdk:path: softchef-paas/paasServiceTaskDef/Resource
  paasServiceTaskDefExecutionRole6892408C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: softchef-paas/paasServiceTaskDef/ExecutionRole/Resource
  paasServiceTaskDefExecutionRoleDefaultPolicyE89E04EC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/ex-service
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - paasServiceLogGroup93EF476C
                - Arn
        Version: "2012-10-17"
      PolicyName: paasServiceTaskDefExecutionRoleDefaultPolicyE89E04EC
      Roles:
        - Ref: paasServiceTaskDefExecutionRole6892408C
    Metadata:
      aws:cdk:path: softchef-paas/paasServiceTaskDef/ExecutionRole/DefaultPolicy/Resource
  paasServiceLogGroup93EF476C:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/paasService
      RetentionInDays: 731
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: softchef-paas/paasServiceLogGroup/Resource
  paasServiceSecurityGroupDC5061D3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: softchef-paas/paasServiceSecurityGroup
      GroupName: paasServiceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: paasVpc8C4147ED
    Metadata:
      aws:cdk:path: softchef-paas/paasServiceSecurityGroup/Resource
  paasServiceSecurityGroupfromsoftchefpaasLBSecurityGroup336BF8DA80CCB07902:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - paasServiceSecurityGroupDC5061D3
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - LBSecurityGroup8A41EA2B
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: softchef-paas/paasServiceSecurityGroup/from softchefpaasLBSecurityGroup336BF8DA:80
  ServiceD69D759B:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: paascluster6DECA133
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: paasServiceContainer
          ContainerPort: 80
          TargetGroupArn:
            Ref: LBListenerECSGroup1D445DF5
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - paasServiceSecurityGroupDC5061D3
                - GroupId
          Subnets:
            - Ref: paasVpcPrivateSubnet1SubnetDC7925C5
            - Ref: paasVpcPrivateSubnet2Subnet5E401116
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - ServiceCloudmapService046058A4
              - Arn
      TaskDefinition:
        Ref: paasServiceTaskDef227D8A7D
    DependsOn:
      - LBListenerECSGroup1D445DF5
      - LBListener49E825B4
    Metadata:
      aws:cdk:path: softchef-paas/Service/Service
  ServiceCloudmapService046058A4:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 60
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - DnsNamespaceE8F044C2
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: paasService
      NamespaceId:
        Fn::GetAtt:
          - DnsNamespaceE8F044C2
          - Id
    Metadata:
      aws:cdk:path: softchef-paas/Service/CloudmapService/Resource
  LB8A12904C:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - LBSecurityGroup8A41EA2B
            - GroupId
      Subnets:
        - Ref: paasVpcPublicSubnet1Subnet131FF148
        - Ref: paasVpcPublicSubnet2Subnet813EC6C4
      Type: application
    DependsOn:
      - paasVpcPublicSubnet1DefaultRouteE13A1FA8
      - paasVpcPublicSubnet2DefaultRoute905BEBB0
    Metadata:
      aws:cdk:path: softchef-paas/LB/Resource
  LBSecurityGroup8A41EA2B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB softchefpaasLB1B130AA2
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: paasVpc8C4147ED
    Metadata:
      aws:cdk:path: softchef-paas/LB/SecurityGroup/Resource
  LBSecurityGrouptosoftchefpaaspaasServiceSecurityGroupE406A3EC80A35AFA0D:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - LBSecurityGroup8A41EA2B
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - paasServiceSecurityGroupDC5061D3
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: softchef-paas/LB/SecurityGroup/to softchefpaaspaasServiceSecurityGroupE406A3EC:80
  LBListener49E825B4:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: LBListenerECSGroup1D445DF5
          Type: forward
      LoadBalancerArn:
        Ref: LB8A12904C
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: softchef-paas/LB/Listener/Resource
  LBListenerECSGroup1D445DF5:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: paasVpc8C4147ED
    Metadata:
      aws:cdk:path: softchef-paas/LB/Listener/ECSGroup/Resource
  HttpVpcLink:
    Type: AWS::ApiGatewayV2::VpcLink
    Properties:
      Name: http-api-vpclink
      SubnetIds:
        - Ref: paasVpcPrivateSubnet1SubnetDC7925C5
        - Ref: paasVpcPrivateSubnet2Subnet5E401116
    Metadata:
      aws:cdk:path: softchef-paas/HttpVpcLink
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STU/DMAz9LdyzwCYhcR3jQ5MQVB3iitzUFLMuqeKkaKr630mTlRWYOPnl5Tm2n7OQi0t5cQafPFPldlZTIbuNA7UVgXrtUC1k99IosXrTL9lKZL6oSW18odEN3BHlxjt8hqLGI3/klsxGETgy+ls8gNt1NoRHcPfg8BP2IrPUBnh8eK0d2oBHQerkcFq60Ov7DrUTG1TektvfW+Ob2MO/xG1lkfkPvdaR7wUqlt2q9hyqD6oR3oGtYJiKtzf4RprGmX4zRjsgjXbCHXI3aFtSyacEY7nXBtwwKstl0wSXo1sPBsprqEErLH+lYw3sSNVBUUQF6aoN6zqdHYf4cZ7qKMymD5oRT+6fQ+WwgdHIybEXBDvZ5SbtPcbMhLy4qIR6UZsquPlgqu8nRtwLTuOUxMq0aPeyO3yBG82PsENuIHl1ij5tpZU5NobJGbu/Bg5cjmy8TcIn7xqf/uyEDfsq45Z6oU2J8oPP2/mVnC/k/OyDiWbWa0c7lHmKX7uoRFY5AwAA
    Metadata:
      aws:cdk:path: softchef-paas/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  amazonecssampleLoadBalancerDNS70F5FECA:
    Value:
      Fn::GetAtt:
        - amazonecssampleLBF8E7DBED
        - DNSName
  amazonecssampleServiceURLE3D5AC2F:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - amazonecssampleLBF8E7DBED
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

