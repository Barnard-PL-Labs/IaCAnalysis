Parameters:
  connectID:
    Type: String
    Description: The Connect ID
  queueID:
    Type: String
    Description: The Connect Queue ID
  AssetParameters74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1aS3Bucket5B4644B2:
    Type: String
    Description: S3 bucket for asset "74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1a"
  AssetParameters74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1aS3VersionKeyF9AD119F:
    Type: String
    Description: S3 key for asset version "74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1a"
  AssetParameters74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1aArtifactHash002521EC:
    Type: String
    Description: Artifact hash for asset "74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1a"
  AssetParameters6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2S3Bucket0AE9AEF5:
    Type: String
    Description: S3 bucket for asset "6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2"
  AssetParameters6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2S3VersionKeyE486E6C8:
    Type: String
    Description: S3 key for asset version "6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2"
  AssetParameters6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2ArtifactHashB282C6D5:
    Type: String
    Description: Artifact hash for asset "6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2"
  AssetParameters5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73fS3Bucket66E235DD:
    Type: String
    Description: S3 bucket for asset "5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73f"
  AssetParameters5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73fS3VersionKey5D8CB577:
    Type: String
    Description: S3 key for asset version "5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73f"
  AssetParameters5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73fArtifactHash909DE956:
    Type: String
    Description: Artifact hash for asset "5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73f"
  AssetParameters7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238S3Bucket26B61192:
    Type: String
    Description: S3 bucket for asset "7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238"
  AssetParameters7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238S3VersionKey2B3E4A61:
    Type: String
    Description: S3 key for asset version "7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238"
  AssetParameters7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238ArtifactHash288C1762:
    Type: String
    Description: Artifact hash for asset "7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238"
  AssetParametersae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9S3BucketB7FC6705:
    Type: String
    Description: S3 bucket for asset "ae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9"
  AssetParametersae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9S3VersionKey296731B8:
    Type: String
    Description: S3 key for asset version "ae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9"
  AssetParametersae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9ArtifactHash26E86051:
    Type: String
    Description: Artifact hash for asset "ae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9"
  AssetParameters4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674S3Bucket3773FC68:
    Type: String
    Description: S3 bucket for asset "4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674"
  AssetParameters4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674S3VersionKey9C6F4115:
    Type: String
    Description: S3 key for asset version "4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674"
  AssetParameters4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674ArtifactHash3BE6482D:
    Type: String
    Description: Artifact hash for asset "4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674"
  AssetParameterscfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6aS3Bucket111C0C7D:
    Type: String
    Description: S3 bucket for asset "cfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6a"
  AssetParameterscfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6aS3VersionKey96FDE51F:
    Type: String
    Description: S3 key for asset version "cfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6a"
  AssetParameterscfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6aArtifactHashDE47C231:
    Type: String
    Description: Artifact hash for asset "cfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6a"
  AssetParameterse2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8eS3Bucket6D6BABDE:
    Type: String
    Description: S3 bucket for asset "e2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8e"
  AssetParameterse2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8eS3VersionKey96A424AD:
    Type: String
    Description: S3 key for asset version "e2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8e"
  AssetParameterse2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8eArtifactHashD8189A43:
    Type: String
    Description: Artifact hash for asset "e2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8e"
  AssetParameters9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ffS3Bucket6ED10068:
    Type: String
    Description: S3 bucket for asset "9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ff"
  AssetParameters9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ffS3VersionKey60DA75FD:
    Type: String
    Description: S3 key for asset version "9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ff"
  AssetParameters9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ffArtifactHashF9143DE2:
    Type: String
    Description: Artifact hash for asset "9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ff"
  AssetParametersaa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9S3Bucket8760F675:
    Type: String
    Description: S3 bucket for asset "aa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9"
  AssetParametersaa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9S3VersionKeyEB9AB26E:
    Type: String
    Description: S3 key for asset version "aa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9"
  AssetParametersaa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9ArtifactHash41250A06:
    Type: String
    Description: Artifact hash for asset "aa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9"
  AssetParametersea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828afS3Bucket32B144EB:
    Type: String
    Description: S3 bucket for asset "ea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828af"
  AssetParametersea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828afS3VersionKey6DBD7AF1:
    Type: String
    Description: S3 key for asset version "ea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828af"
  AssetParametersea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828afArtifactHash2D66A2BD:
    Type: String
    Description: Artifact hash for asset "ea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828af"
Resources:
  AgentInfoAC65DCC9:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: agentName
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: agentName
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: AgentInfo
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CcpStack/AgentInfo/Resource
  Themes8D680D08:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: theme
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: theme
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: Themes
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CcpStack/Themes/Resource
  CCPPageCB7A0E83:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CcpStack/CCPPage/Resource
  CCPPagePolicy1062F3F9:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CCPPageCB7A0E83
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - OriginAccessIdentityDF1E3CAC
                  - S3CanonicalUserId
            Resource:
              - Fn::GetAtt:
                  - CCPPageCB7A0E83
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CCPPageCB7A0E83
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - OriginAccessIdentityDF1E3CAC
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - CCPPageCB7A0E83
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CcpStack/CCPPage/Policy/Resource
  OriginAccessIdentityDF1E3CAC:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allows CloudFront to reach the bucket
    Metadata:
      aws:cdk:path: CcpStack/OriginAccessIdentity/Resource
  DistributionForCCPPageCFDistribution37DD7565:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName:
              Fn::GetAtt:
                - CCPPageCB7A0E83
                - RegionalDomainName
            Id: origin1
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: OriginAccessIdentityDF1E3CAC
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
    Metadata:
      aws:cdk:path: CcpStack/DistributionForCCPPage/CFDistribution
  ConnectDashboardMetrics0EBB7F2E:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: ConnectDashboardMetrics
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/Resource
  ConnectDashboardMetricsDefaultStageAC32DAF9:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/DefaultStage/Resource
  ConnectDashboardMetricsGETgetActiveAgentsCcpStackConnectDashboardMetricsGETgetActiveAgents8A58FE60PermissionC5D32571:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getActiveAgentsDA2F6D1F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/getActiveAgents
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getActiveAgents/CcpStackConnectDashboardMetricsGETgetActiveAgents8A58FE60-Permission
  ConnectDashboardMetricsGETgetActiveAgentsHttpIntegrationc01d20efc907789b6657409b8a19a4c8D03551F0:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getActiveAgentsDA2F6D1F
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getActiveAgents/HttpIntegration-c01d20efc907789b6657409b8a19a4c8/Resource
  ConnectDashboardMetricsGETgetActiveAgents0E36C7D9:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /getActiveAgents
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETgetActiveAgentsHttpIntegrationc01d20efc907789b6657409b8a19a4c8D03551F0
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getActiveAgents/Resource
  ConnectDashboardMetricsGETavgMissedWaitTimeCcpStackConnectDashboardMetricsGETavgMissedWaitTime5D6D0910Permission41A8A143:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - avgMissedWaitTime641505C7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/avgMissedWaitTime
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--avgMissedWaitTime/CcpStackConnectDashboardMetricsGETavgMissedWaitTime5D6D0910-Permission
  ConnectDashboardMetricsGETavgMissedWaitTimeHttpIntegrationa22af440a62e31ad7d314872b1000020B062CDDA:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - avgMissedWaitTime641505C7
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--avgMissedWaitTime/HttpIntegration-a22af440a62e31ad7d314872b1000020/Resource
  ConnectDashboardMetricsGETavgMissedWaitTime01BC1318:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /avgMissedWaitTime
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETavgMissedWaitTimeHttpIntegrationa22af440a62e31ad7d314872b1000020B062CDDA
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--avgMissedWaitTime/Resource
  ConnectDashboardMetricsGETgetCustomersInQueueCcpStackConnectDashboardMetricsGETgetCustomersInQueue4E4EB1B0PermissionB1283C5F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getCustomersInQueue0706BE57
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/getCustomersInQueue
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getCustomersInQueue/CcpStackConnectDashboardMetricsGETgetCustomersInQueue4E4EB1B0-Permission
  ConnectDashboardMetricsGETgetCustomersInQueueHttpIntegrationa30673548cfeeb78371ccbd3dc04d51687134F86:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getCustomersInQueue0706BE57
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getCustomersInQueue/HttpIntegration-a30673548cfeeb78371ccbd3dc04d516/Resource
  ConnectDashboardMetricsGETgetCustomersInQueue5567EC75:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /getCustomersInQueue
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETgetCustomersInQueueHttpIntegrationa30673548cfeeb78371ccbd3dc04d51687134F86
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getCustomersInQueue/Resource
  ConnectDashboardMetricsGETgetChecklistCcpStackConnectDashboardMetricsGETgetChecklistA50C6887PermissionBA621EAC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getChecklist5DFE893A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/getChecklist
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getChecklist/CcpStackConnectDashboardMetricsGETgetChecklistA50C6887-Permission
  ConnectDashboardMetricsGETgetChecklistHttpIntegrationb96ca91d026f1a59cebe2bdcc0983176864EBC2F:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getChecklist5DFE893A
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getChecklist/HttpIntegration-b96ca91d026f1a59cebe2bdcc0983176/Resource
  ConnectDashboardMetricsGETgetChecklistAE8713DB:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /getChecklist
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETgetChecklistHttpIntegrationb96ca91d026f1a59cebe2bdcc0983176864EBC2F
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getChecklist/Resource
  ConnectDashboardMetricsGETgetIntentsForAgentCcpStackConnectDashboardMetricsGETgetIntentsForAgent2CE1C1CBPermission32A1A0F7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getIntentsForAgentAD6C8D49
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/getIntentsForAgent
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getIntentsForAgent/CcpStackConnectDashboardMetricsGETgetIntentsForAgent2CE1C1CB-Permission
  ConnectDashboardMetricsGETgetIntentsForAgentHttpIntegration4b5de26ba12b00d6b70f20cd7d0db40d2108244E:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getIntentsForAgentAD6C8D49
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getIntentsForAgent/HttpIntegration-4b5de26ba12b00d6b70f20cd7d0db40d/Resource
  ConnectDashboardMetricsGETgetIntentsForAgent5FB8951E:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /getIntentsForAgent
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETgetIntentsForAgentHttpIntegration4b5de26ba12b00d6b70f20cd7d0db40d2108244E
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getIntentsForAgent/Resource
  ConnectDashboardMetricsGETgetLongestWaitTimeCcpStackConnectDashboardMetricsGETgetLongestWaitTimeC631ABE4PermissionE8853A9A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getLongestWaitTime7D131801
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/getLongestWaitTime
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getLongestWaitTime/CcpStackConnectDashboardMetricsGETgetLongestWaitTimeC631ABE4-Permission
  ConnectDashboardMetricsGETgetLongestWaitTimeHttpIntegration21ec7575b4812438ff057caa7f7e3d0d8E11F9E1:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getLongestWaitTime7D131801
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getLongestWaitTime/HttpIntegration-21ec7575b4812438ff057caa7f7e3d0d/Resource
  ConnectDashboardMetricsGETgetLongestWaitTime443059A1:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /getLongestWaitTime
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETgetLongestWaitTimeHttpIntegration21ec7575b4812438ff057caa7f7e3d0d8E11F9E1
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getLongestWaitTime/Resource
  ConnectDashboardMetricsGETgetThemesCcpStackConnectDashboardMetricsGETgetThemes4AA60C64PermissionA32F4B68:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getThemes2822FA47
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/getThemes
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getThemes/CcpStackConnectDashboardMetricsGETgetThemes4AA60C64-Permission
  ConnectDashboardMetricsGETgetThemesHttpIntegrationd4801c2dad803df5542c82f85bf7775c58EAA748:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getThemes2822FA47
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getThemes/HttpIntegration-d4801c2dad803df5542c82f85bf7775c/Resource
  ConnectDashboardMetricsGETgetThemesA37EA113:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /getThemes
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETgetThemesHttpIntegrationd4801c2dad803df5542c82f85bf7775c58EAA748
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getThemes/Resource
  ConnectDashboardMetricsGETgetMissedCallsCcpStackConnectDashboardMetricsGETgetMissedCallsB6C516D8PermissionCE96F996:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getMissedCalls8BBA3F93
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/getMissedCalls
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getMissedCalls/CcpStackConnectDashboardMetricsGETgetMissedCallsB6C516D8-Permission
  ConnectDashboardMetricsGETgetMissedCallsHttpIntegratione79485ac47ae333a30acc12ab706e2916E89646D:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getMissedCalls8BBA3F93
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getMissedCalls/HttpIntegration-e79485ac47ae333a30acc12ab706e291/Resource
  ConnectDashboardMetricsGETgetMissedCalls355E5D24:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: GET /getMissedCalls
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsGETgetMissedCallsHttpIntegratione79485ac47ae333a30acc12ab706e2916E89646D
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/GET--getMissedCalls/Resource
  ConnectDashboardMetricsPOSTnewConnectIDCcpStackConnectDashboardMetricsPOSTnewConnectIDA6A9BD71Permission4F612736:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - newConnectID1A2522CC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/newConnectID
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/POST--newConnectID/CcpStackConnectDashboardMetricsPOSTnewConnectIDA6A9BD71-Permission
  ConnectDashboardMetricsPOSTnewConnectIDHttpIntegrationa665f64fd10a8cf4f1acaa85e19f69d2303D93BA:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - newConnectID1A2522CC
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/POST--newConnectID/HttpIntegration-a665f64fd10a8cf4f1acaa85e19f69d2/Resource
  ConnectDashboardMetricsPOSTnewConnectIDFBCA84AB:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: POST /newConnectID
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsPOSTnewConnectIDHttpIntegrationa665f64fd10a8cf4f1acaa85e19f69d2303D93BA
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/POST--newConnectID/Resource
  ConnectDashboardMetricsPOSTupdateIntentTableCcpStackConnectDashboardMetricsPOSTupdateIntentTable26EEFEC7Permission25EE851B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - updateIntentTable1AC6F691
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ConnectDashboardMetrics0EBB7F2E
            - /*/*/updateIntentTable
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/POST--updateIntentTable/CcpStackConnectDashboardMetricsPOSTupdateIntentTable26EEFEC7-Permission
  ConnectDashboardMetricsPOSTupdateIntentTableHttpIntegration8077dd0b178ea4cc6c38cd56cd0c6f29A4766D0C:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - updateIntentTable1AC6F691
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/POST--updateIntentTable/HttpIntegration-8077dd0b178ea4cc6c38cd56cd0c6f29/Resource
  ConnectDashboardMetricsPOSTupdateIntentTable02429EF1:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ConnectDashboardMetrics0EBB7F2E
      RouteKey: POST /updateIntentTable
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ConnectDashboardMetricsPOSTupdateIntentTableHttpIntegration8077dd0b178ea4cc6c38cd56cd0c6f29A4766D0C
    Metadata:
      aws:cdk:path: CcpStack/ConnectDashboardMetrics/POST--updateIntentTable/Resource
  populateDBServiceRole55E80C18:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/populateDB/ServiceRole/Resource
  populateDBServiceRoleDefaultPolicyA9E8C274:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Themes8D680D08
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: populateDBServiceRoleDefaultPolicyA9E8C274
      Roles:
        - Ref: populateDBServiceRole55E80C18
    Metadata:
      aws:cdk:path: CcpStack/populateDB/ServiceRole/DefaultPolicy/Resource
  populateDBC8F6E776:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1aS3Bucket5B4644B2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1aS3VersionKeyF9AD119F
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1aS3VersionKeyF9AD119F
      Role:
        Fn::GetAtt:
          - populateDBServiceRole55E80C18
          - Arn
      Environment:
        Variables:
          THEMES_TABLE:
            Ref: Themes8D680D08
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - populateDBServiceRoleDefaultPolicyA9E8C274
      - populateDBServiceRole55E80C18
    Metadata:
      aws:cdk:path: CcpStack/populateDB/Resource
      aws:asset:path: asset.74c49be6c54cfc1377cffc96d9e8eaad613a0fd1f1bed904c7905d873a3d0a1a
      aws:asset:property: Code
  getActiveAgentsServiceRoleD84A1A7A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/getActiveAgents/ServiceRole/Resource
  getActiveAgentsServiceRoleDefaultPolicyB5A01032:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: connect:GetCurrentMetricData
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":connect:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :instance/
                  - Ref: connectID
                  - /queue/
                  - Ref: queueID
        Version: "2012-10-17"
      PolicyName: getActiveAgentsServiceRoleDefaultPolicyB5A01032
      Roles:
        - Ref: getActiveAgentsServiceRoleD84A1A7A
    Metadata:
      aws:cdk:path: CcpStack/getActiveAgents/ServiceRole/DefaultPolicy/Resource
  getActiveAgentsDA2F6D1F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2S3Bucket0AE9AEF5
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2S3VersionKeyE486E6C8
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2S3VersionKeyE486E6C8
      Role:
        Fn::GetAtt:
          - getActiveAgentsServiceRoleD84A1A7A
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - getActiveAgentsServiceRoleDefaultPolicyB5A01032
      - getActiveAgentsServiceRoleD84A1A7A
    Metadata:
      aws:cdk:path: CcpStack/getActiveAgents/Resource
      aws:asset:path: asset.6418ff64ab4e88320b7d7aaa375e1054a8af994da1dfab616d94a2e1fe7030d2
      aws:asset:property: Code
  avgMissedWaitTimeServiceRoleF1B13F38:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/avgMissedWaitTime/ServiceRole/Resource
  avgMissedWaitTimeServiceRoleDefaultPolicy9806DEA8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: connect:GetMetricData
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":connect:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :instance/
                  - Ref: connectID
                  - /queue/
                  - Ref: queueID
        Version: "2012-10-17"
      PolicyName: avgMissedWaitTimeServiceRoleDefaultPolicy9806DEA8
      Roles:
        - Ref: avgMissedWaitTimeServiceRoleF1B13F38
    Metadata:
      aws:cdk:path: CcpStack/avgMissedWaitTime/ServiceRole/DefaultPolicy/Resource
  avgMissedWaitTime641505C7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73fS3Bucket66E235DD
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73fS3VersionKey5D8CB577
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73fS3VersionKey5D8CB577
      Role:
        Fn::GetAtt:
          - avgMissedWaitTimeServiceRoleF1B13F38
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - avgMissedWaitTimeServiceRoleDefaultPolicy9806DEA8
      - avgMissedWaitTimeServiceRoleF1B13F38
    Metadata:
      aws:cdk:path: CcpStack/avgMissedWaitTime/Resource
      aws:asset:path: asset.5e52fbd7d1c581105db3e9162bd8d2534e5511f843d12e9a4807919a61a6a73f
      aws:asset:property: Code
  getCustomersInQueueServiceRole2E813939:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/getCustomersInQueue/ServiceRole/Resource
  getCustomersInQueueServiceRoleDefaultPolicyBA2FFC35:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: connect:GetCurrentMetricData
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":connect:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :instance/
                  - Ref: connectID
                  - /queue/
                  - Ref: queueID
        Version: "2012-10-17"
      PolicyName: getCustomersInQueueServiceRoleDefaultPolicyBA2FFC35
      Roles:
        - Ref: getCustomersInQueueServiceRole2E813939
    Metadata:
      aws:cdk:path: CcpStack/getCustomersInQueue/ServiceRole/DefaultPolicy/Resource
  getCustomersInQueue0706BE57:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238S3Bucket26B61192
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238S3VersionKey2B3E4A61
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238S3VersionKey2B3E4A61
      Role:
        Fn::GetAtt:
          - getCustomersInQueueServiceRole2E813939
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - getCustomersInQueueServiceRoleDefaultPolicyBA2FFC35
      - getCustomersInQueueServiceRole2E813939
    Metadata:
      aws:cdk:path: CcpStack/getCustomersInQueue/Resource
      aws:asset:path: asset.7013b7384e7389c86c6015ffc7fde932365e789dcba8aa96cb37ddca4294e238
      aws:asset:property: Code
  getChecklistServiceRole1266BBC8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/getChecklist/ServiceRole/Resource
  getChecklistServiceRoleDefaultPolicyB5370FB1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Themes8D680D08
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getChecklistServiceRoleDefaultPolicyB5370FB1
      Roles:
        - Ref: getChecklistServiceRole1266BBC8
    Metadata:
      aws:cdk:path: CcpStack/getChecklist/ServiceRole/DefaultPolicy/Resource
  getChecklist5DFE893A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9S3BucketB7FC6705
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9S3VersionKey296731B8
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9S3VersionKey296731B8
      Role:
        Fn::GetAtt:
          - getChecklistServiceRole1266BBC8
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - getChecklistServiceRoleDefaultPolicyB5370FB1
      - getChecklistServiceRole1266BBC8
    Metadata:
      aws:cdk:path: CcpStack/getChecklist/Resource
      aws:asset:path: asset.ae2ec4ebb0c78f6c4ccfa48dce98b815c4d61ca6befcaaa2c41d5ac667949da9
      aws:asset:property: Code
  getIntentsForAgentServiceRoleA3F468FF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/getIntentsForAgent/ServiceRole/Resource
  getIntentsForAgentServiceRoleDefaultPolicy41E34C21:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AgentInfoAC65DCC9
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AgentInfoAC65DCC9
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getIntentsForAgentServiceRoleDefaultPolicy41E34C21
      Roles:
        - Ref: getIntentsForAgentServiceRoleA3F468FF
    Metadata:
      aws:cdk:path: CcpStack/getIntentsForAgent/ServiceRole/DefaultPolicy/Resource
  getIntentsForAgentAD6C8D49:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674S3Bucket3773FC68
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674S3VersionKey9C6F4115
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674S3VersionKey9C6F4115
      Role:
        Fn::GetAtt:
          - getIntentsForAgentServiceRoleA3F468FF
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - getIntentsForAgentServiceRoleDefaultPolicy41E34C21
      - getIntentsForAgentServiceRoleA3F468FF
    Metadata:
      aws:cdk:path: CcpStack/getIntentsForAgent/Resource
      aws:asset:path: asset.4b75b31a129312850030473c9182523dd4917096530dd4f07a7e0e2ac0199674
      aws:asset:property: Code
  getLongestWaitTimeServiceRole599B4BCF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/getLongestWaitTime/ServiceRole/Resource
  getLongestWaitTimeServiceRoleDefaultPolicy91B4368B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: connect:GetCurrentMetricData
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":connect:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :instance/
                  - Ref: connectID
                  - /queue/
                  - Ref: queueID
        Version: "2012-10-17"
      PolicyName: getLongestWaitTimeServiceRoleDefaultPolicy91B4368B
      Roles:
        - Ref: getLongestWaitTimeServiceRole599B4BCF
    Metadata:
      aws:cdk:path: CcpStack/getLongestWaitTime/ServiceRole/DefaultPolicy/Resource
  getLongestWaitTime7D131801:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterscfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6aS3Bucket111C0C7D
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6aS3VersionKey96FDE51F
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6aS3VersionKey96FDE51F
      Role:
        Fn::GetAtt:
          - getLongestWaitTimeServiceRole599B4BCF
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - getLongestWaitTimeServiceRoleDefaultPolicy91B4368B
      - getLongestWaitTimeServiceRole599B4BCF
    Metadata:
      aws:cdk:path: CcpStack/getLongestWaitTime/Resource
      aws:asset:path: asset.cfe88521f63f27a00d49ac03eb3e7b5314444e37ba756853a30d658670dc3b6a
      aws:asset:property: Code
  getThemesServiceRoleD9449B93:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/getThemes/ServiceRole/Resource
  getThemesServiceRoleDefaultPolicyD29B5360:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Themes8D680D08
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getThemesServiceRoleDefaultPolicyD29B5360
      Roles:
        - Ref: getThemesServiceRoleD9449B93
    Metadata:
      aws:cdk:path: CcpStack/getThemes/ServiceRole/DefaultPolicy/Resource
  getThemes2822FA47:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8eS3Bucket6D6BABDE
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8eS3VersionKey96A424AD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8eS3VersionKey96A424AD
      Role:
        Fn::GetAtt:
          - getThemesServiceRoleD9449B93
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - getThemesServiceRoleDefaultPolicyD29B5360
      - getThemesServiceRoleD9449B93
    Metadata:
      aws:cdk:path: CcpStack/getThemes/Resource
      aws:asset:path: asset.e2faaf5dee85cdc194e0c55517a854dd577519fc51c062ba96c8aafada8b2a8e
      aws:asset:property: Code
  getMissedCallsServiceRole666B968D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/getMissedCalls/ServiceRole/Resource
  getMissedCallsServiceRoleDefaultPolicy410AF7C8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: connect:GetMetricData
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":connect:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :instance/
                  - Ref: connectID
                  - /queue/
                  - Ref: queueID
        Version: "2012-10-17"
      PolicyName: getMissedCallsServiceRoleDefaultPolicy410AF7C8
      Roles:
        - Ref: getMissedCallsServiceRole666B968D
    Metadata:
      aws:cdk:path: CcpStack/getMissedCalls/ServiceRole/DefaultPolicy/Resource
  getMissedCalls8BBA3F93:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ffS3Bucket6ED10068
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ffS3VersionKey60DA75FD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ffS3VersionKey60DA75FD
      Role:
        Fn::GetAtt:
          - getMissedCallsServiceRole666B968D
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - getMissedCallsServiceRoleDefaultPolicy410AF7C8
      - getMissedCallsServiceRole666B968D
    Metadata:
      aws:cdk:path: CcpStack/getMissedCalls/Resource
      aws:asset:path: asset.9171d81432fe1b19d240bbed95836fc6680ca65a4ec20004acba393b0442f7ff
      aws:asset:property: Code
  newConnectIDServiceRole284FC171:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/newConnectID/ServiceRole/Resource
  newConnectIDServiceRoleDefaultPolicyD7117409:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AgentInfoAC65DCC9
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AgentInfoAC65DCC9
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: newConnectIDServiceRoleDefaultPolicyD7117409
      Roles:
        - Ref: newConnectIDServiceRole284FC171
    Metadata:
      aws:cdk:path: CcpStack/newConnectID/ServiceRole/DefaultPolicy/Resource
  newConnectID1A2522CC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersaa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9S3Bucket8760F675
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersaa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9S3VersionKeyEB9AB26E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersaa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9S3VersionKeyEB9AB26E
      Role:
        Fn::GetAtt:
          - newConnectIDServiceRole284FC171
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - newConnectIDServiceRoleDefaultPolicyD7117409
      - newConnectIDServiceRole284FC171
    Metadata:
      aws:cdk:path: CcpStack/newConnectID/Resource
      aws:asset:path: asset.aa2a98d1e3a73f4eee61046890edf54fb0977a9d962a895fb4cfa774da8d3db9
      aws:asset:property: Code
  updateIntentTableServiceRole65B74ACB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CcpStack/updateIntentTable/ServiceRole/Resource
  updateIntentTableServiceRoleDefaultPolicyCB18B17A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AgentInfoAC65DCC9
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AgentInfoAC65DCC9
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Themes8D680D08
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Themes8D680D08
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: updateIntentTableServiceRoleDefaultPolicyCB18B17A
      Roles:
        - Ref: updateIntentTableServiceRole65B74ACB
    Metadata:
      aws:cdk:path: CcpStack/updateIntentTable/ServiceRole/DefaultPolicy/Resource
  updateIntentTable1AC6F691:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828afS3Bucket32B144EB
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828afS3VersionKey6DBD7AF1
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828afS3VersionKey6DBD7AF1
      Role:
        Fn::GetAtt:
          - updateIntentTableServiceRole65B74ACB
          - Arn
      Environment:
        Variables:
          ORIGIN: http://localhost:3000
          AGENT_INFO_TABLE:
            Ref: AgentInfoAC65DCC9
          THEMES_TABLE:
            Ref: Themes8D680D08
          QUEUE_ID:
            Ref: queueID
          CONNECT_ID:
            Ref: connectID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - updateIntentTableServiceRoleDefaultPolicyCB18B17A
      - updateIntentTableServiceRole65B74ACB
    Metadata:
      aws:cdk:path: CcpStack/updateIntentTable/Resource
      aws:asset:path: asset.ea4e714ed3840d0f2f80ffa6c04ecfd3a42fa410657bb0e3ec46b529b4b828af
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE22RTW8CIRCGf4t3Fl1Nkx5rNaZeqtk26ZmFcYPuwoYZNIbsf+8CWpump3c+HobhpeTl7InPJi/igoVUp2mQ1gEPHyTkia0OZi+c6IDAsQrQeieBraxBcl4SWyICjWijTRPhnafeU4we8MGMvNKkrRlYvCWoqxGdVTUPn6JuE5KCgeGCh1cvT5Bm3KIse9tqeX2Ucz4w2VqvDs4a4mHn9LjJUkpA3CowpCmdWEVmE5n/iZ/2F9RrPb5N1z7uG8/+zsf9e90Igou4nuc8vBH1y15HLEpMoxnpRTmIpcp6ytHWEDRO3Ef/SRM3sFZ0tRI8RO/BdRrx1t94I/MWGSmMVXBE/p7k3mVadDxUNvua9GHd3TRcFCJ+HfL0g8PA4ix+xOm5fOblnJeTI2pdOD861AGvsn4DPIjjmC0CAAA=
    Metadata:
      aws:cdk:path: CcpStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  apiGatewayID:
    Value:
      Ref: ConnectDashboardMetrics0EBB7F2E
  populateDBFunctionName:
    Value:
      Ref: populateDBC8F6E776
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

