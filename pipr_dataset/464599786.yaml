Resources:
  RocketPoolSessionManagerDocument:
    Type: AWS::SSM::Document
    Properties:
      Content:
        schemaVersion: "1.0"
        description: Rocket Pool node Session Manager Configurations
        sessionType: Standard_Stream
        inputs:
          runAsEnabled: true
          runAsDefaultUser: ec2-user
          idleSessionTimeout: "20"
          shellProfile:
            linux: cd ~ && bash
      DocumentFormat: JSON
      DocumentType: Session
      Name: SSM-RocketPoolConfiguration
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/RocketPoolSessionManagerDocument
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkRocketpoolValidatorStack/VPC
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/Resource
  VPCasteriskSubnet1SubnetEE53BCBC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: asterisk
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkRocketpoolValidatorStack/VPC/asteriskSubnet1
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet1/Subnet
  VPCasteriskSubnet1RouteTable23B73BA2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkRocketpoolValidatorStack/VPC/asteriskSubnet1
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet1/RouteTable
  VPCasteriskSubnet1RouteTableAssociationFD2182F2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCasteriskSubnet1RouteTable23B73BA2
      SubnetId:
        Ref: VPCasteriskSubnet1SubnetEE53BCBC
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet1/RouteTableAssociation
  VPCasteriskSubnet1DefaultRoute377544B7:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCasteriskSubnet1RouteTable23B73BA2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet1/DefaultRoute
  VPCasteriskSubnet2Subnet7959E1B2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: asterisk
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkRocketpoolValidatorStack/VPC/asteriskSubnet2
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet2/Subnet
  VPCasteriskSubnet2RouteTable01067F80:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkRocketpoolValidatorStack/VPC/asteriskSubnet2
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet2/RouteTable
  VPCasteriskSubnet2RouteTableAssociation781F3620:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCasteriskSubnet2RouteTable01067F80
      SubnetId:
        Ref: VPCasteriskSubnet2Subnet7959E1B2
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet2/RouteTableAssociation
  VPCasteriskSubnet2DefaultRoute9650F4DB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCasteriskSubnet2RouteTable01067F80
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/asteriskSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkRocketpoolValidatorStack/VPC
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/VPC/VPCGW
  SecurityGroupDD263621:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Rocketpool validator node security group.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: allow HTTPS traffic from anywhere
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: "allow Beacon Node metrics port: 9100 - 9104"
          FromPort: 9100
          IpProtocol: tcp
          ToPort: 9104
        - CidrIp: 0.0.0.0/0
          Description: "allow Prometheus port: 9091"
          FromPort: 9091
          IpProtocol: tcp
          ToPort: 9091
        - CidrIp: 0.0.0.0/0
          Description: "allow Grafana port: 3100"
          FromPort: 3100
          IpProtocol: tcp
          ToPort: 3100
        - CidrIp: 0.0.0.0/0
          Description: "allow geth port: 8545"
          FromPort: 8545
          IpProtocol: tcp
          ToPort: 8545
        - CidrIp: 0.0.0.0/0
          Description: "allow ETH2 P2P port: 9001"
          FromPort: 9001
          IpProtocol: tcp
          ToPort: 9001
        - CidrIp: 0.0.0.0/0
          Description: "allow ETH1 P2P port: 30303"
          FromPort: 30303
          IpProtocol: tcp
          ToPort: 30303
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/SecurityGroup/Resource
  ec2Role38AB65C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMManagedInstanceCore
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/ec2Role/Resource
  ec2RoleDefaultPolicyC400AE24:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
                    - /*
        Version: "2012-10-17"
      PolicyName: ec2RoleDefaultPolicyC400AE24
      Roles:
        - Ref: ec2Role38AB65C0
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/ec2Role/DefaultPolicy/Resource
  InstanceInstanceProfileAB5AEF02:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2Role38AB65C0
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/Instance/InstanceProfile
  InstanceC1063A87:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 2048
      IamInstanceProfile:
        Ref: InstanceInstanceProfileAB5AEF02
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: c6g.2xlarge
      SecurityGroupIds:
        - Fn::GetAtt:
            - SecurityGroupDD263621
            - GroupId
      SubnetId:
        Ref: VPCasteriskSubnet1SubnetEE53BCBC
      Tags:
        - Key: Name
          Value: CdkRocketpoolValidatorStack/Instance
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash
                mkdir -p $(dirname '/tmp/607964fa238a0de94dacc9cd465ef32af0d20dc60a23ea58498ffd825e8f5651.sh')
                aws s3 cp 's3://
              - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
              - |-
                /607964fa238a0de94dacc9cd465ef32af0d20dc60a23ea58498ffd825e8f5651.sh' '/tmp/607964fa238a0de94dacc9cd465ef32af0d20dc60a23ea58498ffd825e8f5651.sh'
                set -e
                chmod +x '/tmp/607964fa238a0de94dacc9cd465ef32af0d20dc60a23ea58498ffd825e8f5651.sh'
                '/tmp/607964fa238a0de94dacc9cd465ef32af0d20dc60a23ea58498ffd825e8f5651.sh' --verbose -y
                runuser -l  ec2-user -c 'cd /home/ec2-user && sh install.sh -d'
                mkdir -p $(dirname '/home/ec2-user/.rocketpool/user-settings.yml')
                aws s3 cp 's3://
              - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
              - |-
                /6d84d07bb50005d0ee28e0a74a15d0766f360919cce117c93f3bd380772f52ee.yml' '/home/ec2-user/.rocketpool/user-settings.yml'
                chown ec2-user:ec2-user /home/ec2-user/.rocketpool/user-settings.yml && chmod 666 /home/ec2-user/.rocketpool/user-settings.yml
    DependsOn:
      - ec2RoleDefaultPolicyC400AE24
      - ec2Role38AB65C0
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/Instance/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VQTW+DMAz9Lb2HbDBN2pUyqeppCKZeqxDc1gUSFDurKtT/vvCxsZ38/Pzi9+JExq/yeaNuFOm6iVqs5FCy0o0I1HEg6mR2Mu9W+w4MC9CJHA69FoE85JnIfdWiLn1lgEduRYX1DJ+qamHlVy4lshoVozW/4hHsDYMLyp1iuKn7YrN0KYdglylHCdo75PvOWd9PBv+IvSFWRi8rZ/wQqDo5FHZONNXchvSTy4p+9LmzJ2zDM3o5KiJgkulYQi+3XjfAW0VhXABZ72avXDnVQfiCmKThkGc053Hy4bn382H+6DNrahyP8BDG1iCv9PQVv8k4kfHmSoiR84axA1nM9Rs8JO6irgEAAA==
    Metadata:
      aws:cdk:path: CdkRocketpoolValidatorStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Outputs:
  IPAddress:
    Value:
      Fn::GetAtt:
        - InstanceC1063A87
        - PublicIp
  sshcommand:
    Value:
      Fn::Join:
        - ""
        - - "aws ssm start-session --target "
          - Ref: InstanceC1063A87
          - " --document-name SSM-RocketPoolConfiguration"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

