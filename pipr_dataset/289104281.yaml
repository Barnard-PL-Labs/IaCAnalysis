Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet2EIP4947BC00:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet2/EIP
  VPCPublicSubnet2NATGateway3C070193:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet2EIP4947BC00
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PublicSubnet2/NATGateway
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet2NATGateway3C070193
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AwsEcsWordpressStack/VPC
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/VPC/VPCGW
  ClusterEB0386A7:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Cluster/Resource
  DatabaseCredentials8547B3E7:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        IncludeSpace: false
        PasswordLength: 30
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/DatabaseCredentials/Resource
  AuthKey6C8BEA6C:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/AuthKey/Resource
  SecureAuthKey28157A3F:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/SecureAuthKey/Resource
  LoggedInKey8445918F:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/LoggedInKey/Resource
  NonceKey6371D824:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/NonceKey/Resource
  AuthSaltB21041AA:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/AuthSalt/Resource
  SecureAuthSaltA3006E9F:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/SecureAuthSalt/Resource
  LoggedInSalt9FBBCB65:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/LoggedInSalt/Resource
  NonceSalt8EDEB517:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "'\""
        PasswordLength: 64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/NonceSalt/Resource
  DatabaseSubnets56F17B9A:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for Database database
      SubnetIds:
        - Ref: VPCPrivateSubnet1Subnet8BCA10E0
        - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Database/Subnets
  DatabaseSecurityGroup5C91FDCB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - VPCB9E5F0B4
              - CidrBlock
          Description: allow connections from within the vpc to the database
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Database/SecurityGroup/Resource
  DatabaseB269D8BB:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      DatabaseName: wordpress
      DBClusterParameterGroupName: default.aurora-mysql5.7
      DBSubnetGroupName:
        Ref: DatabaseSubnets56F17B9A
      MasterUsername: admin
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DatabaseCredentials8547B3E7
            - :SecretString:::}}
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - DatabaseSecurityGroup5C91FDCB
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Database/Resource
  DatabaseInstance1844F58FD:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier:
        Ref: DatabaseB269D8BB
      DBSubnetGroupName:
        Ref: DatabaseSubnets56F17B9A
      Engine: aurora-mysql
      PubliclyAccessible: false
    DependsOn:
      - VPCPrivateSubnet1DefaultRouteAE1D6490
      - VPCPrivateSubnet2DefaultRouteF4F5CFD2
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Database/Instance1
  DatabaseInstance2AA380DEE:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier:
        Ref: DatabaseB269D8BB
      DBSubnetGroupName:
        Ref: DatabaseSubnets56F17B9A
      Engine: aurora-mysql
      PubliclyAccessible: false
    DependsOn:
      - VPCPrivateSubnet1DefaultRouteAE1D6490
      - VPCPrivateSubnet2DefaultRouteF4F5CFD2
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Database/Instance2
  EfsSecurityGroupEC5F36AC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow access to the efs file system
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - VPCB9E5F0B4
              - CidrBlock
          Description: allow access to the efs file mounts
          FromPort: 2049
          IpProtocol: tcp
          ToPort: 2049
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/EfsSecurityGroup/Resource
  Content88381566:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: AwsEcsWordpressStack/Content
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Content/Resource
  ContentEfsMountTarget1FC0A326E:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: Content88381566
      SecurityGroups:
        - Fn::GetAtt:
            - EfsSecurityGroupEC5F36AC
            - GroupId
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Content/EfsMountTarget1
  ContentEfsMountTarget25EAD3D83:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: Content88381566
      SecurityGroups:
        - Fn::GetAtt:
            - EfsSecurityGroupEC5F36AC
            - GroupId
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Content/EfsMountTarget2
  TaskExecutionRole250D2532:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/TaskExecutionRole/Resource
  TaskExecutionRoleDefaultPolicyA84DD1B0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DatabaseCredentials8547B3E7
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: AuthKey6C8BEA6C
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SecureAuthKey28157A3F
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: LoggedInKey8445918F
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: NonceKey6371D824
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: AuthSaltB21041AA
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SecureAuthSaltA3006E9F
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: LoggedInSalt9FBBCB65
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: NonceSalt8EDEB517
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - TaskDefWordpressLogGroup6E045402
                - Arn
        Version: "2012-10-17"
      PolicyName: TaskExecutionRoleDefaultPolicyA84DD1B0
      Roles:
        - Ref: TaskExecutionRole250D2532
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/TaskExecutionRole/DefaultPolicy/Resource
  TaskSecurityGroup2D2EA438:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow access to the task
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/TaskSecurityGroup/Resource
  TaskSecurityGroupfromAwsEcsWordpressStackServiceLBSecurityGroup0C2EE747806D0D86FA:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - TaskSecurityGroup2D2EA438
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/TaskSecurityGroup/from AwsEcsWordpressStackServiceLBSecurityGroup0C2EE747:80
  TaskDefTaskRole1EDB4A67:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/TaskDef/TaskRole/Resource
  TaskDef54694570:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: 512
          Environment:
            - Name: WORDPRESS_DB_HOST
              Value:
                Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseB269D8BB
                        - Endpoint.Address
                    - ":"
                    - Fn::GetAtt:
                        - DatabaseB269D8BB
                        - Endpoint.Port
            - Name: WORDPRESS_DB_NAME
              Value: wordpress
            - Name: WORDPRESS_DB_USER
              Value: admin
          Essential: true
          Image: wordpress:5.5-apache
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: TaskDefWordpressLogGroup6E045402
              awslogs-stream-prefix: Wordpress
              awslogs-region:
                Ref: AWS::Region
          Memory: 1024
          MountPoints:
            - ContainerPath: /var/www/html/wp-content
              ReadOnly: false
              SourceVolume: wp-content
          Name: Wordpress
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          Secrets:
            - Name: WORDPRESS_DB_PASSWORD
              ValueFrom:
                Ref: DatabaseCredentials8547B3E7
            - Name: WORDPRESS_AUTH_KEY
              ValueFrom:
                Ref: SecureAuthKey28157A3F
            - Name: WORDPRESS_SECURE_AUTH_KEY
              ValueFrom:
                Ref: SecureAuthKey28157A3F
            - Name: WORDPRESS_LOGGED_IN_KEY
              ValueFrom:
                Ref: LoggedInKey8445918F
            - Name: WORDPRESS_NONCE_KEY
              ValueFrom:
                Ref: NonceKey6371D824
            - Name: WORDPRESS_AUTH_SALT
              ValueFrom:
                Ref: AuthSaltB21041AA
            - Name: WORDPRESS_SECURE_AUTH_SALT
              ValueFrom:
                Ref: SecureAuthSaltA3006E9F
            - Name: WORDPRESS_LOGGED_IN_SALT
              ValueFrom:
                Ref: LoggedInSalt9FBBCB65
            - Name: WORDPRESS_NONCE_SALT
              ValueFrom:
                Ref: NonceSalt8EDEB517
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - TaskExecutionRole250D2532
          - Arn
      Family: wordpress
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - TaskDefTaskRole1EDB4A67
          - Arn
      Volumes:
        - Name: wp-content
          EFSVolumeConfiguration:
            FilesystemId:
              Ref: Content88381566
            TransitEncryption: ENABLED
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/TaskDef/Resource
  TaskDefWordpressLogGroup6E045402:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/TaskDef/Wordpress/LogGroup/Resource
  ServiceLBE9A1ADBC:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ServiceLBSecurityGroupF7435A5C
            - GroupId
      Subnets:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
      Type: application
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/LB/Resource
  ServiceLBSecurityGroupF7435A5C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB AwsEcsWordpressStackServiceLB448365FF
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/LB/SecurityGroup/Resource
  ServiceLBSecurityGrouptoAwsEcsWordpressStackServiceSecurityGroup60FA27F18027EA8996:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - ServiceSecurityGroupEEA09B68
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/LB/SecurityGroup/to AwsEcsWordpressStackServiceSecurityGroup60FA27F1:80
  ServiceLBSecurityGrouptoAwsEcsWordpressStackTaskSecurityGroupA8B5A6B18080E3D376:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - TaskSecurityGroup2D2EA438
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/LB/SecurityGroup/to AwsEcsWordpressStackTaskSecurityGroupA8B5A6B1:80
  ServiceLBPublicListener46709EAA:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ServiceLBPublicListenerECSGroup0CC8688C
          Type: forward
      LoadBalancerArn:
        Ref: ServiceLBE9A1ADBC
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/LB/PublicListener/Resource
  ServiceLBPublicListenerECSGroup0CC8688C:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /index.php
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Matcher:
        HttpCode: 200,201,302
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/LB/PublicListener/ECSGroup/Resource
  Service9571FDD8:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: Wordpress
          ContainerPort: 80
          TargetGroupArn:
            Ref: ServiceLBPublicListenerECSGroup0CC8688C
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - ServiceSecurityGroupEEA09B68
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
      PlatformVersion: 1.4.0
      TaskDefinition:
        Ref: TaskDef54694570
    DependsOn:
      - ServiceLBPublicListenerECSGroup0CC8688C
      - ServiceLBPublicListener46709EAA
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/Service/Service
  ServiceSecurityGroupEEA09B68:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsEcsWordpressStack/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/Service/SecurityGroup/Resource
  ServiceSecurityGroupfromAwsEcsWordpressStackServiceLBSecurityGroup0C2EE747801CF8973C:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - ServiceSecurityGroupEEA09B68
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/Service/SecurityGroup/from AwsEcsWordpressStackServiceLBSecurityGroup0C2EE747:80
  ServiceTaskCountTargetDF7542A8:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId:
        Fn::Join:
          - ""
          - - service/
            - Ref: ClusterEB0386A7
            - /
            - Fn::GetAtt:
                - Service9571FDD8
                - Name
      RoleARN:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":iam::"
            - Ref: AWS::AccountId
            - :role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    Metadata:
      aws:cdk:path: AwsEcsWordpressStack/Service/Service/TaskCount/Target/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.59.0,@aws-cdk/aws-applicationautoscaling=1.59.0,@aws-cdk/aws-autoscaling=1.59.0,@aws-cdk/aws-autoscaling-common=1.59.0,@aws-cdk/aws-autoscaling-hooktargets=1.59.0,@aws-cdk/aws-certificatemanager=1.59.0,@aws-cdk/aws-cloudwatch=1.59.0,@aws-cdk/aws-codeguruprofiler=1.59.0,@aws-cdk/aws-ec2=1.59.0,@aws-cdk/aws-ecr=1.59.0,@aws-cdk/aws-ecr-assets=1.59.0,@aws-cdk/aws-ecs=1.59.0,@aws-cdk/aws-ecs-patterns=1.59.0,@aws-cdk/aws-efs=1.59.0,@aws-cdk/aws-elasticloadbalancingv2=1.59.0,@aws-cdk/aws-events=1.59.0,@aws-cdk/aws-events-targets=1.59.0,@aws-cdk/aws-iam=1.59.0,@aws-cdk/aws-kms=1.59.0,@aws-cdk/aws-lambda=1.59.0,@aws-cdk/aws-logs=1.59.0,@aws-cdk/aws-rds=1.59.0,@aws-cdk/aws-route53=1.59.0,@aws-cdk/aws-route53-targets=1.59.0,@aws-cdk/aws-s3=1.59.0,@aws-cdk/aws-s3-assets=1.59.0,@aws-cdk/aws-sam=1.59.0,@aws-cdk/aws-secretsmanager=1.59.0,@aws-cdk/aws-servicediscovery=1.59.0,@aws-cdk/aws-sns=1.59.0,@aws-cdk/aws-sns-subscriptions=1.59.0,@aws-cdk/aws-sqs=1.59.0,@aws-cdk/aws-ssm=1.59.0,@aws-cdk/cloud-assembly-schema=1.59.0,@aws-cdk/core=1.59.0,@aws-cdk/custom-resources=1.59.0,@aws-cdk/cx-api=1.59.0,@aws-cdk/region-info=1.59.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Outputs:
  ServiceLoadBalancerDNSEC5B149E:
    Value:
      Fn::GetAtt:
        - ServiceLBE9A1ADBC
        - DNSName
  ServiceServiceURL250C0FB6:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - ServiceLBE9A1ADBC
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

