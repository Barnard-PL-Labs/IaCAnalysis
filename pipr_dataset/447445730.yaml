Resources:
  MyLambdaServiceRole4539ECB6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/MyLambda/ServiceRole/Resource
  MyLambdaCCE802FB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |-
          
          def handler(event, context):
              return 'Hello, World!'
      Role:
        Fn::GetAtt:
          - MyLambdaServiceRole4539ECB6
          - Arn
      Handler: index.handler
      Runtime: python3.9
    DependsOn:
      - MyLambdaServiceRole4539ECB6
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/MyLambda/Resource
  HttpApiF5A9A8A7:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: HelloApi
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/HttpApi/Resource
  HttpApiDefaultStage3EEB07D6:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/HttpApi/DefaultStage/Resource
  HttpApiGETHttpApiIgPermission17FD6F32:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyLambdaCCE802FB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: HttpApiF5A9A8A7
            - /*/*/
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/HttpApi/GET--/HttpApiIg-Permission
  HttpApiGETHttpApiIg786AD2C3:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - MyLambdaCCE802FB
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/HttpApi/GET--/HttpApiIg/Resource
  HttpApiGETF1CE5704:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      RouteKey: GET /
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpApiGETHttpApiIg786AD2C3
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/HttpApi/GET--/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QwQ6CMAyGn8U7FMGDetOYGD1p8AFMhYlF2BbWSczCu7uhJpz+v3+bfk0zcIs1pDPsTVyUz7ihG7gLY/GMfHR1Dba3EsHtrSyYlIx2dzn1Z9G1ZIyvhoiwBZerRoRG0CFCTRWy6PH9ysD5eKspdD2hGseOkkXV4X9driyLYQj2ZFlbHkNhlO0Kv24J8xgb/UCYzza/k5OgU85vwh2YdcAF/fKCGwmjm6A9UapSQG2SV7qCNPMfqQ1R3FnJ1ArIv/oBohHy6y4BAAA=
    Metadata:
      aws:cdk:path: api-rest-lambda-fun/CDKMetadata/Default
Outputs:
  HttpApiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: HttpApiF5A9A8A7
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

