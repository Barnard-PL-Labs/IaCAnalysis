Resources:
  EgressVPC08D3162E:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.1.0/26
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Resource
  EgressVPCPublicEgressVPCSubNetSubnet1Subnet22A5BCA0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/28
      VpcId:
        Ref: EgressVPC08D3162E
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public - EgressVPC SubNet
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1/Subnet
  EgressVPCPublicEgressVPCSubNetSubnet1RouteTable79816722:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EgressVPC08D3162E
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1/RouteTable
  EgressVPCPublicEgressVPCSubNetSubnet1RouteTableAssociation1821E509:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet1RouteTable79816722
      SubnetId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet1Subnet22A5BCA0
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1/RouteTableAssociation
  EgressVPCPublicEgressVPCSubNetSubnet1DefaultRouteDBF19DAC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet1RouteTable79816722
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EgressVPCIGW8C11054A
    DependsOn:
      - EgressVPCVPCGWE1B3B21E
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1/DefaultRoute
  EgressVPCPublicEgressVPCSubNetSubnet1EIPEBE10DB6:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1/EIP
  EgressVPCPublicEgressVPCSubNetSubnet1NATGatewayDAF81BB6:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EgressVPCPublicEgressVPCSubNetSubnet1EIPEBE10DB6
          - AllocationId
      SubnetId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet1Subnet22A5BCA0
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet1/NATGateway
  EgressVPCPublicEgressVPCSubNetSubnet2Subnet7F8B059E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.16/28
      VpcId:
        Ref: EgressVPC08D3162E
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public - EgressVPC SubNet
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2/Subnet
  EgressVPCPublicEgressVPCSubNetSubnet2RouteTableF5880CD1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EgressVPC08D3162E
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2/RouteTable
  EgressVPCPublicEgressVPCSubNetSubnet2RouteTableAssociationD09AD64A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet2RouteTableF5880CD1
      SubnetId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet2Subnet7F8B059E
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2/RouteTableAssociation
  EgressVPCPublicEgressVPCSubNetSubnet2DefaultRoute3D436A4B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet2RouteTableF5880CD1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EgressVPCIGW8C11054A
    DependsOn:
      - EgressVPCVPCGWE1B3B21E
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2/DefaultRoute
  EgressVPCPublicEgressVPCSubNetSubnet2EIPE3FE27EA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2/EIP
  EgressVPCPublicEgressVPCSubNetSubnet2NATGateway9E758314:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EgressVPCPublicEgressVPCSubNetSubnet2EIPE3FE27EA
          - AllocationId
      SubnetId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet2Subnet7F8B059E
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Public - EgressVPC SubNetSubnet2/NATGateway
  EgressVPCPrivateEgressVPCSubNetSubnet1Subnet5FFB5200:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.32/28
      VpcId:
        Ref: EgressVPC08D3162E
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet1
        - Key: aws-cdk:subnet-name
          Value: Private - EgressVPC SubNet
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet1/Subnet
  EgressVPCPrivateEgressVPCSubNetSubnet1RouteTable59572A92:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EgressVPC08D3162E
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet1
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet1/RouteTable
  EgressVPCPrivateEgressVPCSubNetSubnet1RouteTableAssociation7D1E7439:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EgressVPCPrivateEgressVPCSubNetSubnet1RouteTable59572A92
      SubnetId:
        Ref: EgressVPCPrivateEgressVPCSubNetSubnet1Subnet5FFB5200
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet1/RouteTableAssociation
  EgressVPCPrivateEgressVPCSubNetSubnet1DefaultRouteF10212A6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EgressVPCPrivateEgressVPCSubNetSubnet1RouteTable59572A92
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet1NATGatewayDAF81BB6
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet1/DefaultRoute
  EgressVPCPrivateEgressVPCSubNetSubnet2Subnet93274602:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.48/28
      VpcId:
        Ref: EgressVPC08D3162E
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet2
        - Key: aws-cdk:subnet-name
          Value: Private - EgressVPC SubNet
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet2/Subnet
  EgressVPCPrivateEgressVPCSubNetSubnet2RouteTableBBEB5EAA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EgressVPC08D3162E
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet2
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet2/RouteTable
  EgressVPCPrivateEgressVPCSubNetSubnet2RouteTableAssociationF10259AC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EgressVPCPrivateEgressVPCSubNetSubnet2RouteTableBBEB5EAA
      SubnetId:
        Ref: EgressVPCPrivateEgressVPCSubNetSubnet2Subnet93274602
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet2/RouteTableAssociation
  EgressVPCPrivateEgressVPCSubNetSubnet2DefaultRoute05AC8B15:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EgressVPCPrivateEgressVPCSubNetSubnet2RouteTableBBEB5EAA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet2NATGateway9E758314
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/Private - EgressVPC SubNetSubnet2/DefaultRoute
  EgressVPCIGW8C11054A:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Egress VPC
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/IGW
  EgressVPCVPCGWE1B3B21E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: EgressVPC08D3162E
      InternetGatewayId:
        Ref: EgressVPCIGW8C11054A
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Egress VPC/VPCGW
  PrivateVPC10F6CF03:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.2.0/26
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Private VPC
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Private VPC/Resource
  PrivateVPCIsolatedSubnetprivateVPCSubnet1Subnet181A6889:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/28
      VpcId:
        Ref: PrivateVPC10F6CF03
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Private VPC/Isolated Subnet - privateVPCSubnet1
        - Key: aws-cdk:subnet-name
          Value: Isolated Subnet - privateVPC
        - Key: aws-cdk:subnet-type
          Value: Isolated
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Private VPC/Isolated Subnet - privateVPCSubnet1/Subnet
  PrivateVPCIsolatedSubnetprivateVPCSubnet1RouteTable9F3FE547:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PrivateVPC10F6CF03
      Tags:
        - Key: Name
          Value: EgressVpcTgDemoStack/Private VPC/Isolated Subnet - privateVPCSubnet1
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Private VPC/Isolated Subnet - privateVPCSubnet1/RouteTable
  PrivateVPCIsolatedSubnetprivateVPCSubnet1RouteTableAssociation7449C395:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateVPCIsolatedSubnetprivateVPCSubnet1RouteTable9F3FE547
      SubnetId:
        Ref: PrivateVPCIsolatedSubnetprivateVPCSubnet1Subnet181A6889
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Private VPC/Isolated Subnet - privateVPCSubnet1/RouteTableAssociation
  SSMPrivateSecurityGroupE8ADFF3F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Demo EC2 Instance Security Group
      GroupName: Demo EC2 Instance Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: PrivateVPC10F6CF03
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/SSMPrivateSecurityGroup/Resource
  TransitGateway:
    Type: AWS::EC2::TransitGateway
    Properties:
      DefaultRouteTableAssociation: disable
      DefaultRouteTablePropagation: disable
      Description: Transit Gateway
      Tags:
        - Key: Name
          Value: Transit Gateway
      VpnEcmpSupport: enable
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Transit_Gateway
  TransitGatewayAttachmentEgress:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - Ref: EgressVPCPrivateEgressVPCSubNetSubnet1Subnet5FFB5200
        - Ref: EgressVPCPrivateEgressVPCSubNetSubnet2Subnet93274602
      TransitGatewayId:
        Ref: TransitGateway
      VpcId:
        Ref: EgressVPC08D3162E
      Tags:
        - Key: Name
          Value: TG-Egress-VPC-Private_SubNet-Attachment
    DependsOn:
      - TransitGateway
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/TransitGatewayAttachmentEgress
  TransitGatewayAttachmentPrivate:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - Ref: PrivateVPCIsolatedSubnetprivateVPCSubnet1Subnet181A6889
      TransitGatewayId:
        Ref: TransitGateway
      VpcId:
        Ref: PrivateVPC10F6CF03
      Tags:
        - Key: Name
          Value: TG-Private-VPC-Private_SubNet-Attachment
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/TransitGatewayAttachmentPrivate
  EgressVpcTgDemoStackEgressVPCPublicEgressVPCSubNetSubnet1241C40E7:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet1RouteTable79816722
      DestinationCidrBlock:
        Fn::GetAtt:
          - PrivateVPC10F6CF03
          - CidrBlock
      TransitGatewayId:
        Ref: TransitGateway
    DependsOn:
      - TransitGatewayAttachmentEgress
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/EgressVpcTgDemoStackEgressVPCPublicEgressVPCSubNetSubnet1241C40E7
  EgressVpcTgDemoStackEgressVPCPublicEgressVPCSubNetSubnet29BCDF82A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EgressVPCPublicEgressVPCSubNetSubnet2RouteTableF5880CD1
      DestinationCidrBlock:
        Fn::GetAtt:
          - PrivateVPC10F6CF03
          - CidrBlock
      TransitGatewayId:
        Ref: TransitGateway
    DependsOn:
      - TransitGatewayAttachmentEgress
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/EgressVpcTgDemoStackEgressVPCPublicEgressVPCSubNetSubnet29BCDF82A
  EgressVpcTgDemoStackPrivateVPCIsolatedSubnetprivateVPCSubnet1E61B937F:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateVPCIsolatedSubnetprivateVPCSubnet1RouteTable9F3FE547
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId:
        Ref: TransitGateway
    DependsOn:
      - TransitGatewayAttachmentPrivate
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/EgressVpcTgDemoStackPrivateVPCIsolatedSubnetprivateVPCSubnet1E61B937F
  TGEgressRouteTable:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties:
      TransitGatewayId:
        Ref: TransitGateway
      Tags:
        - Key: Name
          Value: TG Route Domain
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/TGEgressRouteTable
  TransitGatewayToEgressVPCRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties:
      TransitGatewayRouteTableId:
        Ref: TGEgressRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayAttachmentId:
        Ref: TransitGatewayAttachmentEgress
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/TransitGatewayToEgressVPCRoute
  EgressVPCTGAssociation:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties:
      TransitGatewayAttachmentId:
        Ref: TransitGatewayAttachmentEgress
      TransitGatewayRouteTableId:
        Ref: TGEgressRouteTable
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/EgressVPC_TG_Association
  EgressVPCTGPropagation:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties:
      TransitGatewayAttachmentId:
        Ref: TransitGatewayAttachmentEgress
      TransitGatewayRouteTableId:
        Ref: TGEgressRouteTable
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/EgressVPC_TG_Propagation
  PrivateVPCTGAssociation:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties:
      TransitGatewayAttachmentId:
        Ref: TransitGatewayAttachmentPrivate
      TransitGatewayRouteTableId:
        Ref: TGEgressRouteTable
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/PrivateVPC_TG_Association
  PrivateVPCTGPropagation:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties:
      TransitGatewayAttachmentId:
        Ref: TransitGatewayAttachmentPrivate
      TransitGatewayRouteTableId:
        Ref: TGEgressRouteTable
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/PrivateVPC_TG_Propagation
  SSMRole4E0C2080:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMManagedInstanceCore
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyDocument:
            Statement:
              - Action: s3:GetObject
                Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - arn:aws:s3:::aws-ssm-
                        - Ref: AWS::Region
                        - /*
                  - Fn::Join:
                      - ""
                      - - arn:aws:s3:::aws-windows-downloads-
                        - Ref: AWS::Region
                        - /*
                  - Fn::Join:
                      - ""
                      - - arn:aws:s3:::amazon-ssm-
                        - Ref: AWS::Region
                        - /*
                  - Fn::Join:
                      - ""
                      - - arn:aws:s3:::amazon-ssm-packages-
                        - Ref: AWS::Region
                        - /*
                  - Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - Ref: AWS::Region
                        - -birdwatcher-prod/*
                  - Fn::Join:
                      - ""
                      - - arn:aws:s3:::patch-baseline-snapshot-
                        - Ref: AWS::Region
                        - /*
            Version: "2012-10-17"
          PolicyName: ssmS3policy
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/SSMRole/Resource
  DemoEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: SSMRole4E0C2080
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/DemoEC2_InstanceProfile
  DemoInstance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile:
        Ref: DemoEC2InstanceProfile
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.nano
      SecurityGroupIds:
        - Fn::GetAtt:
            - SSMPrivateSecurityGroupE8ADFF3F
            - GroupId
      SubnetId:
        Ref: PrivateVPCIsolatedSubnetprivateVPCSubnet1Subnet181A6889
      Tags:
        - Key: Name
          Value: Demo instance
    Metadata:
      aws:cdk:path: EgressVpcTgDemoStack/Demo Instance
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/aws-cloudwatch=1.27.0,@aws-cdk/aws-ec2=1.27.0,@aws-cdk/aws-events=1.27.0,@aws-cdk/aws-iam=1.27.0,@aws-cdk/aws-kms=1.27.0,@aws-cdk/aws-logs=1.27.0,@aws-cdk/aws-s3=1.27.0,@aws-cdk/aws-ssm=1.27.0,@aws-cdk/core=1.27.0,@aws-cdk/cx-api=1.27.0,@aws-cdk/region-info=1.27.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

