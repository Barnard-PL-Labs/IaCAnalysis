Resources:
  CloudtraillakeQueryHandlerServiceRole5D9D9813:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/CloudtraillakeQueryHandler/ServiceRole/Resource
  CloudtraillakeQueryHandlerServiceRoleDefaultPolicy3FB4268D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudtrail:getQueryResults
              - cloudtrail:startQuery
            Effect: Allow
            Resource: PROVIDE THIS
        Version: "2012-10-17"
      PolicyName: CloudtraillakeQueryHandlerServiceRoleDefaultPolicy3FB4268D
      Roles:
        - Ref: CloudtraillakeQueryHandlerServiceRole5D9D9813
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/CloudtraillakeQueryHandler/ServiceRole/DefaultPolicy/Resource
  CloudtraillakeQuery:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 93e33235cde27532ca2d2a4ffbcac8b1a09943bf553acde7e03a1a14cf0b4c74.zip
      Role:
        Fn::GetAtt:
          - CloudtraillakeQueryHandlerServiceRole5D9D9813
          - Arn
      Handler: cloudtraillake-query.lambda_handler
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - CloudtraillakeQueryHandlerServiceRoleDefaultPolicy3FB4268D
      - CloudtraillakeQueryHandlerServiceRole5D9D9813
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/CloudtraillakeQueryHandler/Resource
      aws:asset:path: asset.93e33235cde27532ca2d2a4ffbcac8b1a09943bf553acde7e03a1a14cf0b4c74
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ServiceLimitChecker3F9FF6D3:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/ServiceLimitChecker/Resource
  ServiceLimitCheckerPROVIDETHISC3E79B41:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn:
        Ref: ServiceLimitChecker3F9FF6D3
      Endpoint: PROVIDE THIS
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/ServiceLimitChecker/PROVIDE THIS/Resource
  Role1ABCC5F0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
      Description: Role for CloudtraillakeOrchectrator state machine to interface with other AWS resources
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/Role/Resource
  RoleDefaultPolicy5FFB7DAB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CloudtraillakeQuery
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CloudtraillakeQuery
                        - Arn
                    - :*
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: ServiceLimitChecker3F9FF6D3
        Version: "2012-10-17"
      PolicyName: RoleDefaultPolicy5FFB7DAB
      Roles:
        - Ref: Role1ABCC5F0
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/Role/DefaultPolicy/Resource
  CloudtraillakeOrchestrator0B66B823:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - Role1ABCC5F0
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"Comment":"A sample state machine that queries CloudTrail Lake using the CloudtraillakeQuery Lambda function to demonstrate its capabilities.","StartAt":"CloudtraillakeQuery_RequestServiceQuotaIncrease","States":{"CloudtraillakeQuery_RequestServiceQuotaIncrease":{"Type":"Task","Resource":"arn:aws:states:::lambda:invoke","Parameters":{"FunctionName":"'
            - Fn::GetAtt:
                - CloudtraillakeQuery
                - Arn
            - "\",\"Payload\":{\"EventDataStore\":\"PLACEHOLDER\",\"QueryStatement\":\"SELECT json_extract_scalar(element_at(responseElements, 'requestedQuota'), '$.id') as requestId, awsRegion, recipientAccountId FROM {m[EventDataStore]} WHERE eventSource='servicequotas.amazonaws.com' and eventname = 'RequestServiceQuotaIncrease'\",\"QueryFormatParams\":{\"EventDataStore\":\"PLACEHOLDER\"}}},\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Next\":\"Each_RequestServiceQuotaIncrease\"},\"Each_RequestServiceQuotaIncrease\":{\"Type\":\"Map\",\"End\":true,\"Iterator\":{\"StartAt\":\"CloudtraillakeQuery_UpdateServiceQuotaIncreaseRequestStatus\",\"States\":{\"CloudtraillakeQuery_UpdateServiceQuotaIncreaseRequestStatus\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\""
            - Fn::GetAtt:
                - CloudtraillakeQuery
                - Arn
            - "\",\"Payload\":{\"EventDataStore\":\"PLACEHOLDER\",\"QueryStatement\":\"SELECT recipientAccountId, awsRegion, serviceEventDetails FROM {m[EventDataStore]} WHERE eventSource='servicequotas.amazonaws.com' and eventname = 'UpdateServiceQuotaIncreaseRequestStatus' and element_at(serviceEventDetails, 'requestId') = '{m[RequestId]}'\",\"QueryFormatParams\":{\"EventDataStore\":\"PLACEHOLDER\",\"RequestId.$\":\"$[0].requestId\"}}},\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Next\":\"Send_Report\"},\"Send_Report\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:states:::sns:publish\",\"Parameters\":{\"Message\":{\"ServiceLimitIncreaseStatus.$\":\"$.Payload.body[0]\"},\"TopicArn\":\""
            - Ref: ServiceLimitChecker3F9FF6D3
            - '"},"End":true}}},"ItemsPath":"$.Payload.body"}}}'
      StateMachineName: CloudtraillakeOrchestrator
    DependsOn:
      - RoleDefaultPolicy5FFB7DAB
      - Role1ABCC5F0
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/CloudtraillakeOrchestrator/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/01QTWvDMAz9Lbs7Ks0uu7aF3Qaj3b0oitqpSeQQ2RvD5L/XTlrY6X0ISU+qoX6D7Qv+WkVtV/XSQDoFpM5l65x6HJoWIb1HpSBe3eGiTz47wQHS0fdc7AU/fS/0V+TKZmevZzTjYLArkDXsI3Uc9mjsTA3Slx+FSs9KTrExmmR87vuv87zA4+WRwKCUAwb+QPoW5dktS7J1Fb0uqdh8nGhJePDayjpFfctws83PNl9f5wfcTKSaogYZGI4r3gEnsgAyHAEAAA==
    Metadata:
      aws:cdk:path: CloudtraillakeOrchestratorStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

