Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/Resource
  VPCpublicSubnet1Subnet325F50B2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ECSPipelineStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet1/Subnet
  VPCpublicSubnet1RouteTableF591E248:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet1/RouteTable
  VPCpublicSubnet1RouteTableAssociationBFFA43B7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet1RouteTableF591E248
      SubnetId:
        Ref: VPCpublicSubnet1Subnet325F50B2
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet1/RouteTableAssociation
  VPCpublicSubnet1DefaultRoute19059ECD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet1RouteTableF591E248
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet1/DefaultRoute
  VPCpublicSubnet1EIP2D50A06D:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet1/EIP
  VPCpublicSubnet1NATGatewayEEDEB5A1:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCpublicSubnet1Subnet325F50B2
      AllocationId:
        Fn::GetAtt:
          - VPCpublicSubnet1EIP2D50A06D
          - AllocationId
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet1/NATGateway
  VPCpublicSubnet2Subnet2B2DFF71:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ECSPipelineStack/VPC/publicSubnet2
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet2/Subnet
  VPCpublicSubnet2RouteTable55DAB1BB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC/publicSubnet2
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet2/RouteTable
  VPCpublicSubnet2RouteTableAssociation0849466B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet2RouteTable55DAB1BB
      SubnetId:
        Ref: VPCpublicSubnet2Subnet2B2DFF71
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet2/RouteTableAssociation
  VPCpublicSubnet2DefaultRoute9ED4D6BC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCpublicSubnet2RouteTable55DAB1BB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/publicSubnet2/DefaultRoute
  VPCprivateSubnet1SubnetE522290D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ECSPipelineStack/VPC/privateSubnet1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet1/Subnet
  VPCprivateSubnet1RouteTable41566AF9:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC/privateSubnet1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet1/RouteTable
  VPCprivateSubnet1RouteTableAssociation43FE0C59:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCprivateSubnet1RouteTable41566AF9
      SubnetId:
        Ref: VPCprivateSubnet1SubnetE522290D
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet1/RouteTableAssociation
  VPCprivateSubnet1DefaultRoute68B79172:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCprivateSubnet1RouteTable41566AF9
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCpublicSubnet1NATGatewayEEDEB5A1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet1/DefaultRoute
  VPCprivateSubnet2Subnet2F4D9530:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ECSPipelineStack/VPC/privateSubnet2
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet2/Subnet
  VPCprivateSubnet2RouteTableBBE8BB2B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC/privateSubnet2
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet2/RouteTable
  VPCprivateSubnet2RouteTableAssociation45BBC356:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCprivateSubnet2RouteTableBBE8BB2B
      SubnetId:
        Ref: VPCprivateSubnet2Subnet2F4D9530
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet2/RouteTableAssociation
  VPCprivateSubnet2DefaultRouteD808B206:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCprivateSubnet2RouteTableBBE8BB2B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCpublicSubnet1NATGatewayEEDEB5A1
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/privateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ECSPipelineStack/VPC
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: ECSPipelineStack/VPC/VPCGW
  ClusterEB0386A7:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: ECSPipelineStack/Cluster/Resource
  ServiceLBE9A1ADBC:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ServiceLBSecurityGroupF7435A5C
            - GroupId
      Subnets:
        - Ref: VPCpublicSubnet1Subnet325F50B2
        - Ref: VPCpublicSubnet2Subnet2B2DFF71
      Type: application
    DependsOn:
      - VPCpublicSubnet1DefaultRoute19059ECD
      - VPCpublicSubnet2DefaultRoute9ED4D6BC
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/LB/Resource
  ServiceLBSecurityGroupF7435A5C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB ECSPipelineStackServiceLB31790365
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/LB/SecurityGroup/Resource
  ServiceLBSecurityGrouptoECSPipelineStackServiceSecurityGroupAE36BC24801896A7FA:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - ServiceSecurityGroupEEA09B68
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/LB/SecurityGroup/to ECSPipelineStackServiceSecurityGroupAE36BC24:80
  ServiceLBPublicListener46709EAA:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ServiceLBPublicListenerECSGroup0CC8688C
          Type: forward
      LoadBalancerArn:
        Ref: ServiceLBE9A1ADBC
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/LB/PublicListener/Resource
  ServiceLBPublicListenerECSGroup0CC8688C:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/LB/PublicListener/ECSGroup/Resource
  ServiceTaskDefTaskRole0CFE2F57:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/TaskDef/TaskRole/Resource
  ServiceTaskDef1922A00F:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: 256
          Essential: true
          Image: httpd
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: ServiceTaskDefwebLogGroup2A898F61
              awslogs-stream-prefix: Service
              awslogs-region:
                Ref: AWS::Region
          Memory: 512
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - ServiceTaskDefExecutionRole919F7BE3
          - Arn
      Family: ECSPipelineStackServiceTaskDefFDEA9363
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - ServiceTaskDefTaskRole0CFE2F57
          - Arn
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/TaskDef/Resource
  ServiceTaskDefwebLogGroup2A898F61:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/TaskDef/web/LogGroup/Resource
  ServiceTaskDefExecutionRole919F7BE3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/TaskDef/ExecutionRole/Resource
  ServiceTaskDefExecutionRoleDefaultPolicy3073559D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServiceTaskDefwebLogGroup2A898F61
                - Arn
        Version: "2012-10-17"
      PolicyName: ServiceTaskDefExecutionRoleDefaultPolicy3073559D
      Roles:
        - Ref: ServiceTaskDefExecutionRole919F7BE3
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/TaskDef/ExecutionRole/DefaultPolicy/Resource
  Service9571FDD8:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: CODE_DEPLOY
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: ServiceLBPublicListenerECSGroup0CC8688C
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - ServiceSecurityGroupEEA09B68
                - GroupId
          Subnets:
            - Ref: VPCprivateSubnet1SubnetE522290D
            - Ref: VPCprivateSubnet2Subnet2F4D9530
      TaskDefinition:
        Ref: ServiceTaskDef1922A00F
    DependsOn:
      - ServiceLBPublicListenerECSGroup0CC8688C
      - ServiceLBPublicListener46709EAA
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/Service/Service
  ServiceSecurityGroupEEA09B68:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECSPipelineStack/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/Service/SecurityGroup/Resource
  ServiceSecurityGroupfromECSPipelineStackServiceLBSecurityGroupB29F052280A71B504B:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - ServiceSecurityGroupEEA09B68
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ServiceLBSecurityGroupF7435A5C
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: ECSPipelineStack/Service/Service/SecurityGroup/from ECSPipelineStackServiceLBSecurityGroupB29F0522:80
  targetGroupD9C5A146:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ecsTargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: ECSPipelineStack/targetGroup/Resource
  ecrRepositoryF10F8231:
    Type: AWS::ECR::Repository
    Properties:
      ImageTagMutability: IMMUTABLE
      RepositoryName: echo-server
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ECSPipelineStack/ecrRepository/Resource
  CodeCommit506A881C:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: echo-server
    Metadata:
      aws:cdk:path: ECSPipelineStack/CodeCommit/Resource
  CodeCommitECSPipelineStackcodePipeline5A2F7378mainEventRule34A7DDD5:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        resources:
          - Fn::GetAtt:
              - CodeCommit506A881C
              - Arn
        detail-type:
          - CodeCommit Repository State Change
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - main
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: codePipeline1920B5F9
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - codePipelineEventsRole904167E6
              - Arn
    Metadata:
      aws:cdk:path: ECSPipelineStack/CodeCommit/ECSPipelineStackcodePipeline5A2F7378-main-EventRule/Resource
  CodeBuildLogs2297454D:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ECSPipelineStack/CodeBuildLogs/Resource
  CodeBuildRoleE9A44575:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/CodeBuild/Role/Resource
  CodeBuildRoleDefaultPolicy196BAF24:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeBuildLogs2297454D
                - Arn
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodeBuild2FDE9E35
                    - :*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodeBuild2FDE9E35
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CodeBuild2FDE9E35
                  - -*
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:CompleteLayerUpload
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:UploadLayerPart
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ecrRepositoryF10F8231
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - codePipelineArtifactsBucket7617373B
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - codePipelineArtifactsBucket7617373B
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - codePipelineArtifactsBucketEncryptionKey418EA7EC
                - Arn
        Version: "2012-10-17"
      PolicyName: CodeBuildRoleDefaultPolicy196BAF24
      Roles:
        - Ref: CodeBuildRoleE9A44575
    Metadata:
      aws:cdk:path: ECSPipelineStack/CodeBuild/Role/DefaultPolicy/Resource
  CodeBuild2FDE9E35:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value:
              Ref: ecrRepositoryF10F8231
        Image: aws/codebuild/standard:6.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildRoleE9A44575
          - Arn
      Source:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      ConcurrentBuildLimit: 8
      EncryptionKey:
        Fn::GetAtt:
          - codePipelineArtifactsBucketEncryptionKey418EA7EC
          - Arn
      LogsConfig:
        CloudWatchLogs:
          GroupName:
            Ref: CodeBuildLogs2297454D
          Status: ENABLED
      TimeoutInMinutes: 60
    Metadata:
      aws:cdk:path: ECSPipelineStack/CodeBuild/Resource
  codePipelineArtifactsBucketEncryptionKey418EA7EC:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/ArtifactsBucketEncryptionKey/Resource
  codePipelineArtifactsBucketEncryptionKeyAliasBBF8044F:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-ecspipelinestack-codepipeline-5a2f7378
      TargetKeyId:
        Fn::GetAtt:
          - codePipelineArtifactsBucketEncryptionKey418EA7EC
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  codePipelineArtifactsBucket7617373B:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - codePipelineArtifactsBucketEncryptionKey418EA7EC
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/ArtifactsBucket/Resource
  codePipelineArtifactsBucketPolicyAD6DBA70:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: codePipelineArtifactsBucket7617373B
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - codePipelineArtifactsBucket7617373B
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - codePipelineArtifactsBucket7617373B
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/ArtifactsBucket/Policy/Resource
  codePipelineRoleF9ADBDAB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/Role/Resource
  codePipelineRoleDefaultPolicy2AD28CF5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - codePipelineArtifactsBucket7617373B
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - codePipelineArtifactsBucket7617373B
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - codePipelineArtifactsBucketEncryptionKey418EA7EC
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - codePipelineBuildDockerBuildCodePipelineActionRoleADCF0447
                  - Arn
              - Fn::GetAtt:
                  - codePipelineSourceCodePipelineActionRoleEE319BB4
                  - Arn
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              - ecs:RegisterTaskDefinition
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - ecs-tasks.amazonaws.com
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: codePipelineRoleDefaultPolicy2AD28CF5
      Roles:
        - Ref: codePipelineRoleF9ADBDAB
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/Role/DefaultPolicy/Resource
  codePipeline1920B5F9:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - codePipelineRoleF9ADBDAB
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                RepositoryName:
                  Fn::GetAtt:
                    - CodeCommit506A881C
                    - Name
                BranchName: main
                PollForSourceChanges: false
              Name: Source
              OutputArtifacts:
                - Name: SourceArtifact
              RoleArn:
                Fn::GetAtt:
                  - codePipelineSourceCodePipelineActionRoleEE319BB4
                  - Arn
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CodeBuild2FDE9E35
              InputArtifacts:
                - Name: SourceArtifact
              Name: DockerBuild
              OutputArtifacts:
                - Name: BuildArtifact
              RoleArn:
                Fn::GetAtt:
                  - codePipelineBuildDockerBuildCodePipelineActionRoleADCF0447
                  - Arn
              RunOrder: 1
          Name: Build
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - codePipelineArtifactsBucketEncryptionKey418EA7EC
              - Arn
          Type: KMS
        Location:
          Ref: codePipelineArtifactsBucket7617373B
        Type: S3
    DependsOn:
      - codePipelineRoleDefaultPolicy2AD28CF5
      - codePipelineRoleF9ADBDAB
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/Resource
  codePipelineSourceCodePipelineActionRoleEE319BB4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/Source/Source/CodePipelineActionRole/Resource
  codePipelineSourceCodePipelineActionRoleDefaultPolicy2FBAD19D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - codePipelineArtifactsBucket7617373B
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - codePipelineArtifactsBucket7617373B
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - codePipelineArtifactsBucketEncryptionKey418EA7EC
                - Arn
          - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeCommit506A881C
                - Arn
        Version: "2012-10-17"
      PolicyName: codePipelineSourceCodePipelineActionRoleDefaultPolicy2FBAD19D
      Roles:
        - Ref: codePipelineSourceCodePipelineActionRoleEE319BB4
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/Source/Source/CodePipelineActionRole/DefaultPolicy/Resource
  codePipelineEventsRole904167E6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/EventsRole/Resource
  codePipelineEventsRoleDefaultPolicy17B926CC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codepipeline:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: codePipeline1920B5F9
        Version: "2012-10-17"
      PolicyName: codePipelineEventsRoleDefaultPolicy17B926CC
      Roles:
        - Ref: codePipelineEventsRole904167E6
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/EventsRole/DefaultPolicy/Resource
  codePipelineBuildDockerBuildCodePipelineActionRoleADCF0447:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/Build/DockerBuild/CodePipelineActionRole/Resource
  codePipelineBuildDockerBuildCodePipelineActionRoleDefaultPolicy5BCC8FF4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeBuild2FDE9E35
                - Arn
        Version: "2012-10-17"
      PolicyName: codePipelineBuildDockerBuildCodePipelineActionRoleDefaultPolicy5BCC8FF4
      Roles:
        - Ref: codePipelineBuildDockerBuildCodePipelineActionRoleADCF0447
    Metadata:
      aws:cdk:path: ECSPipelineStack/codePipeline/Build/DockerBuild/CodePipelineActionRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31T207cMBD9Ft69hl1Uqa/LQtGqqI2yiFfkOEM6G8eOfAlCUf6diZ2QlFY8zZmTM55rdvz6G7+6EK9uI8t6o7Dg/ckLWTOinnuQO94/tZIdXvRTdmBZKBTKUyg0+JFbUG6Ch0dRKFj4hds7ZyQKj0Z/iEdwd8xG80v4e+HhVbyxzGJHcHn4qD1YwrMgVTJ5e0+1/mlAe3YCGSz6t3trQhtr+JK4qyw49w991JEfGEjH+4MKjrKPqhn+ELYSY1euvoUX1Dj39Jkx2gvUYFfcFHsC26FMc0owpntuhR9bdXzftjTlOK0HI8oboYSWUH4KByWcR6lIUUQF6qqjdf0/Ojbxl7/WIfWmJ82MV98fKTNtYB7kyh0Yiob3uUl7jzYzFBcXldDAlKlomg+m+nhixmPnluKhNQ69sTFs8QYmTQnSNA36r1TQ0QlQijxMdZBNsUVAVfI+wxYUrSOz5gwyHtYEk6ydvi/KKJnwwOqGXv8JMfFo9gpFvJ4IBuaueX8TZJ1udkLJLONY+8PAcnAm2HQIv4NvQ/qRViwdURlPZ2CaiuRnd9ltv/Ptjm8vzg5xY4P22ADPk30HiwsHjs4DAAA=
    Metadata:
      aws:cdk:path: ECSPipelineStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ServiceLoadBalancerDNSEC5B149E:
    Value:
      Fn::GetAtt:
        - ServiceLBE9A1ADBC
        - DNSName
  ServiceServiceURL250C0FB6:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - ServiceLBE9A1ADBC
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

