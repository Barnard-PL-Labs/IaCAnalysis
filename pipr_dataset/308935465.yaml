Resources:
  basicLambdaFunctionServiceRole3D0D875F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: blog-cdk-openapi/basicLambdaFunction/ServiceRole/Resource
  basicLambdaFunctionF69553F9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8S3BucketD94FFC1A
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8S3VersionKeyC9298FB3
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8S3VersionKeyC9298FB3
      Role:
        Fn::GetAtt:
          - basicLambdaFunctionServiceRole3D0D875F
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - basicLambdaFunctionServiceRole3D0D875F
    Metadata:
      aws:cdk:path: blog-cdk-openapi/basicLambdaFunction/Resource
      aws:asset:path: asset.1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8
      aws:asset:property: Code
  advancedLambdaFunctionServiceRole94547389:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: blog-cdk-openapi/advancedLambdaFunction/ServiceRole/Resource
  advancedLambdaFunction225720E0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58aS3Bucket642C6685
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58aS3VersionKey5E7A28F6
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58aS3VersionKey5E7A28F6
      Role:
        Fn::GetAtt:
          - advancedLambdaFunctionServiceRole94547389
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - advancedLambdaFunctionServiceRole94547389
    Metadata:
      aws:cdk:path: blog-cdk-openapi/advancedLambdaFunction/Resource
      aws:asset:path: asset.86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58a
      aws:asset:property: Code
  authorizerLambdaFunctionServiceRole2AEEDAD3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: blog-cdk-openapi/authorizerLambdaFunction/ServiceRole/Resource
  authorizerLambdaFunction52301750:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305S3BucketB9C472F0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305S3VersionKey193D8D1A
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305S3VersionKey193D8D1A
      Role:
        Fn::GetAtt:
          - authorizerLambdaFunctionServiceRole2AEEDAD3
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: blogAuthorizer
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - authorizerLambdaFunctionServiceRole2AEEDAD3
    Metadata:
      aws:cdk:path: blog-cdk-openapi/authorizerLambdaFunction/Resource
      aws:asset:path: asset.9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305
      aws:asset:property: Code
  authorizerLambdaFunctionblogcdkopenapiblogAuthorizer0C135D8APermissions16814EEA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - authorizerLambdaFunction52301750
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: OpenApi667EDE0B
            - /authorizers/
            - Ref: blogAuthorizerF1D3AEF3
    Metadata:
      aws:cdk:path: blog-cdk-openapi/authorizerLambdaFunction/blogcdkopenapiblogAuthorizer0C135D8A:Permissions
  blogAuthorizerF1D3AEF3:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: OpenApi667EDE0B
      Type: TOKEN
      AuthorizerResultTtlInSeconds: 0
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - authorizerLambdaFunction52301750
                - Arn
            - /invocations
      IdentitySource: method.request.header.Authorization
      Name: blogcdkopenapiblogAuthorizer0C135D8A
    Metadata:
      aws:cdk:path: blog-cdk-openapi/blogAuthorizer/Resource
  OpenApi667EDE0B:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: OpenApi
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Resource
  OpenApiCloudWatchRole86E92353:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/CloudWatchRole/Resource
  OpenApiAccount550EBAC4:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - OpenApiCloudWatchRole86E92353
          - Arn
    DependsOn:
      - OpenApi667EDE0B
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Account
  OpenApiDeployment46B898978eae7b751853360b409607b2e6f6874c:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: OpenApi667EDE0B
      Description: Automatically created by the RestApi construct
    DependsOn:
      - OpenApiAdvancedModelF9EAD729
      - OpenApiBasicModel9C5F67F6
      - OpenApiexamplehelloadvancedPOSTA5F66F5E
      - OpenApiexamplehelloadvanced33A8B49E
      - OpenApiexamplehellobasicPOSTC5CB8664
      - OpenApiexamplehellobasicD068E15C
      - OpenApiexamplehello419DFBD2
      - OpenApiexampleA15E7BB2
      - OpenApiResponseModel05515321
      - OpenApivalidatorParamsBodyA1B3230E
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Deployment/Resource
  OpenApiDeploymentStageprod3BBCA9DE:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: OpenApi667EDE0B
      DeploymentId:
        Ref: OpenApiDeployment46B898978eae7b751853360b409607b2e6f6874c
      StageName: prod
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/DeploymentStage.prod/Resource
  OpenApiexampleA15E7BB2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - OpenApi667EDE0B
          - RootResourceId
      PathPart: example
      RestApiId:
        Ref: OpenApi667EDE0B
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/Resource
  OpenApiexamplehello419DFBD2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: OpenApiexampleA15E7BB2
      PathPart: "{hello}"
      RestApiId:
        Ref: OpenApi667EDE0B
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/Resource
  OpenApiexamplehellobasicD068E15C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: OpenApiexamplehello419DFBD2
      PathPart: basic
      RestApiId:
        Ref: OpenApi667EDE0B
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/basic/Resource
  OpenApiexamplehellobasicPOSTApiPermissionblogcdkopenapiOpenApiC8D92670POSTexamplehellobasic29840A72:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - basicLambdaFunctionF69553F9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: OpenApi667EDE0B
            - /
            - Ref: OpenApiDeploymentStageprod3BBCA9DE
            - /POST/example/*/basic
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/basic/POST/ApiPermission.blogcdkopenapiOpenApiC8D92670.POST..example.{hello}.basic
  OpenApiexamplehellobasicPOSTApiPermissionTestblogcdkopenapiOpenApiC8D92670POSTexamplehellobasic2BEE1B7A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - basicLambdaFunctionF69553F9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: OpenApi667EDE0B
            - /test-invoke-stage/POST/example/*/basic
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/basic/POST/ApiPermission.Test.blogcdkopenapiOpenApiC8D92670.POST..example.{hello}.basic
  OpenApiexamplehellobasicPOSTC5CB8664:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: OpenApiexamplehellobasicD068E15C
      RestApiId:
        Ref: OpenApi667EDE0B
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: blogAuthorizerF1D3AEF3
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - basicLambdaFunctionF69553F9
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: OpenApiResponseModel05515321
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "200"
      RequestModels:
        application/json:
          Ref: OpenApiBasicModel9C5F67F6
      RequestParameters:
        method.request.path.hello: true
      RequestValidatorId:
        Ref: OpenApivalidatorParamsBodyA1B3230E
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/basic/POST/Resource
  OpenApiexamplehelloadvanced33A8B49E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: OpenApiexamplehello419DFBD2
      PathPart: advanced
      RestApiId:
        Ref: OpenApi667EDE0B
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/advanced/Resource
  OpenApiexamplehelloadvancedPOSTApiPermissionblogcdkopenapiOpenApiC8D92670POSTexamplehelloadvanced4842476F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - advancedLambdaFunction225720E0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: OpenApi667EDE0B
            - /
            - Ref: OpenApiDeploymentStageprod3BBCA9DE
            - /POST/example/*/advanced
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/advanced/POST/ApiPermission.blogcdkopenapiOpenApiC8D92670.POST..example.{hello}.advanced
  OpenApiexamplehelloadvancedPOSTApiPermissionTestblogcdkopenapiOpenApiC8D92670POSTexamplehelloadvanced8E1D90D3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - advancedLambdaFunction225720E0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: OpenApi667EDE0B
            - /test-invoke-stage/POST/example/*/advanced
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/advanced/POST/ApiPermission.Test.blogcdkopenapiOpenApiC8D92670.POST..example.{hello}.advanced
  OpenApiexamplehelloadvancedPOSTA5F66F5E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: OpenApiexamplehelloadvanced33A8B49E
      RestApiId:
        Ref: OpenApi667EDE0B
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: blogAuthorizerF1D3AEF3
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - advancedLambdaFunction225720E0
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: OpenApiResponseModel05515321
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "200"
      RequestModels:
        application/json:
          Ref: OpenApiAdvancedModelF9EAD729
      RequestParameters:
        method.request.path.hello: true
      RequestValidatorId:
        Ref: OpenApivalidatorParamsBodyA1B3230E
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/Default/example/{hello}/advanced/POST/Resource
  OpenApivalidatorParamsBodyA1B3230E:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: OpenApi667EDE0B
      ValidateRequestBody: true
      ValidateRequestParameters: true
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/validatorParamsBody/Resource
  OpenApiBasicModel9C5F67F6:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: OpenApi667EDE0B
      ContentType: application/json
      Name: BasicModel
      Schema:
        type: object
        properties:
          someString:
            type: string
          someNumber:
            type: number
        required:
          - someString
          - someNumber
        $schema: http://json-schema.org/draft-07/schema#
        title: BasicModel
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/BasicModel/Resource
  OpenApiResponseModel05515321:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: OpenApi667EDE0B
      ContentType: application/json
      Name: ResponseModel
      Schema:
        type: object
        properties:
          message:
            type: string
        required:
          - message
        $schema: http://json-schema.org/draft-07/schema#
        title: ResponseModel
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/ResponseModel/Resource
  OpenApiAdvancedModelF9EAD729:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: OpenApi667EDE0B
      ContentType: application/json
      Name: AdvancedModel
      Schema:
        type: object
        properties:
          greeting:
            type: string
          basic:
            $ref:
              Fn::Join:
                - ""
                - - https://apigateway.amazonaws.com/restapis/
                  - Ref: OpenApi667EDE0B
                  - /models/BasicModel
          postfix:
            type: string
        required:
          - greeting
          - basic
        $schema: http://json-schema.org/draft-07/schema#
        title: AdvancedModel
    Metadata:
      aws:cdk:path: blog-cdk-openapi/OpenApi/OpenApi/AdvancedModel/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.88.0,@aws-cdk/aws-apigateway=1.88.0,@aws-cdk/aws-applicationautoscaling=1.88.0,@aws-cdk/aws-autoscaling-common=1.88.0,@aws-cdk/aws-cloudwatch=1.88.0,@aws-cdk/aws-codeguruprofiler=1.88.0,@aws-cdk/aws-ec2=1.88.0,@aws-cdk/aws-ecr=1.88.0,@aws-cdk/aws-ecr-assets=1.88.0,@aws-cdk/aws-events=1.88.0,@aws-cdk/aws-iam=1.88.0,@aws-cdk/aws-kms=1.88.0,@aws-cdk/aws-lambda=1.88.0,@aws-cdk/aws-lambda-nodejs=1.88.0,@aws-cdk/aws-logs=1.88.0,@aws-cdk/aws-s3=1.88.0,@aws-cdk/aws-s3-assets=1.88.0,@aws-cdk/aws-sqs=1.88.0,@aws-cdk/aws-ssm=1.88.0,@aws-cdk/cloud-assembly-schema=1.88.0,@aws-cdk/core=1.88.0,@aws-cdk/cx-api=1.88.0,@aws-cdk/region-info=1.88.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: blog-cdk-openapi/CDKMetadata/Default
Parameters:
  AssetParameters1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8S3BucketD94FFC1A:
    Type: String
    Description: S3 bucket for asset "1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8"
  AssetParameters1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8S3VersionKeyC9298FB3:
    Type: String
    Description: S3 key for asset version "1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8"
  AssetParameters1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8ArtifactHash655C497B:
    Type: String
    Description: Artifact hash for asset "1db54d8da187102a9fa51c5312d208baed3a64e997d0f490f8a326d3d5a24ce8"
  AssetParameters86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58aS3Bucket642C6685:
    Type: String
    Description: S3 bucket for asset "86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58a"
  AssetParameters86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58aS3VersionKey5E7A28F6:
    Type: String
    Description: S3 key for asset version "86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58a"
  AssetParameters86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58aArtifactHashCAA04F06:
    Type: String
    Description: Artifact hash for asset "86513f9e978934f5bd127a1191c99f97ae26cc5d7c9cbb7ff5130d9d3559f58a"
  AssetParameters9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305S3BucketB9C472F0:
    Type: String
    Description: S3 bucket for asset "9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305"
  AssetParameters9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305S3VersionKey193D8D1A:
    Type: String
    Description: S3 key for asset version "9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305"
  AssetParameters9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305ArtifactHashBD1E13F5:
    Type: String
    Description: Artifact hash for asset "9d01930cfb66bbbf023061a9f8291a6b4805e9c4fb872733072be52324635305"
Outputs:
  OpenApiEndpointAD04A46A:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: OpenApi667EDE0B
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: OpenApiDeploymentStageprod3BBCA9DE
          - /

