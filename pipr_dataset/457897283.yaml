Resources:
  discordApiBB5FF229:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 43200
      Name: discordApi
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: stampApi/discordApi/Resource
  discordApiDefaultStageDAE927AC:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: discordApiBB5FF229
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: stampApi/discordApi/DefaultStage/Resource
  discordApiPOSTtwitchAuthCallbackIntPermission9EFB6A46:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - discordInteraction08C7288F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: discordApiBB5FF229
            - /*/*/
    Metadata:
      aws:cdk:path: stampApi/discordApi/POST--/twitchAuthCallbackInt-Permission
  discordApiPOSTtwitchAuthCallbackInt853A71A0:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: discordApiBB5FF229
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - discordInteraction08C7288F
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: stampApi/discordApi/POST--/twitchAuthCallbackInt/Resource
  discordApiPOSTE8FE2C1B:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: discordApiBB5FF229
      RouteKey: POST /
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: discordApiPOSTtwitchAuthCallbackInt853A71A0
    Metadata:
      aws:cdk:path: stampApi/discordApi/POST--/Resource
  discordInteractionServiceRole4B8DAFBC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: stampApi/discordInteraction/ServiceRole/Resource
  discordInteraction08C7288F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d83d66c7f66595187711e287f3a59bebd6c69b1d290888cde1e5209a297142b3.zip
      Role:
        Fn::GetAtt:
          - discordInteractionServiceRole4B8DAFBC
          - Arn
      Architectures:
        - arm64
      Environment:
        Variables:
          PUBLIC_KEY: UNDEFINED
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      MemorySize: 256
      Runtime: nodejs14.x
    DependsOn:
      - discordInteractionServiceRole4B8DAFBC
    Metadata:
      aws:cdk:path: stampApi/discordInteraction/Resource
      aws:asset:path: asset.d83d66c7f66595187711e287f3a59bebd6c69b1d290888cde1e5209a297142b3
      aws:asset:is-bundled: true
      aws:asset:property: Code
  discordInteractionLogRetention7563181D:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: discordInteraction08C7288F
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: stampApi/discordInteraction/LogRetention/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: stampApi/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: stampApi/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: stampApi/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/01Ry27DIBD8Ft8xcdJLj00iVa1UtZH7AdYGbyk2BssLiSLL/14eTpXTzO7OsDDs+HbH56qAK5Wi7Uutznz+diB6FlrNDKOS4PAKt0vQHX/MflQsQJBIjOTdOJQTOGVNLGvrHS5Mw3BuIRlOOA2KaJ2/eiOi9i5pjG2xI/6Z4D5lCgY+11ZjPjPgyWolbrHMbGH01AAROuL7CKHmBy96dAcgZNpK4h9W1ujQ5I3B++Xd6B1LhvgEZWTagGT9JJD9k9A8WtOq7KxK0OMv8Kp4WYPaRHwMZ1XMb86NMaOIOaTIUiyJPeS1LCy+nne0uWyf40dsi46UKicfbjwgrzP+AemTvNGkAQAA
    Metadata:
      aws:cdk:path: stampApi/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  apibaseurl:
    Value:
      Fn::Join:
        - ""
        - - https://https://
          - Ref: discordApiBB5FF229
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - //
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

