Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet2EIP4947BC00:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet2/EIP
  VPCPublicSubnet2NATGateway3C070193:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet2EIP4947BC00
          - AllocationId
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PublicSubnet2/NATGateway
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AdFsxStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AdFsxStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet2NATGateway3C070193
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AdFsxStack/VPC
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: AdFsxStack/VPC/VPCGW
  examplecorpcredentialsA196A81F:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        GenerateStringKey: password
        SecretStringTemplate: '{"username":"admin"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AdFsxStack/example.corp_credentials/Resource
  ad:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties:
      Name: example.corp
      Password:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: examplecorpcredentialsA196A81F
            - :SecretString:password::}}
      VpcSettings:
        SubnetIds:
          - Ref: VPCPrivateSubnet1Subnet8BCA10E0
          - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
        VpcId:
          Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AdFsxStack/ad
  dhcpOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: example.corp
      DomainNameServers:
        Fn::GetAtt:
          - ad
          - DnsIpAddresses
    Metadata:
      aws:cdk:path: AdFsxStack/dhcpOptions
  dhcpOptionsAssoc:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      DhcpOptionsId:
        Ref: dhcpOptions
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AdFsxStack/dhcpOptionsAssoc
  adjoinedinstanceInstanceSecurityGroup9F871739:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AdFsxStack/ad-joined-instance/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: AdFsxStack/ad-joined-instance
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: AdFsxStack/ad-joined-instance/InstanceSecurityGroup/Resource
  adjoinedinstanceInstanceRole26EFF14A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMManagedInstanceCore
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMDirectoryServiceAccess
      Tags:
        - Key: Name
          Value: AdFsxStack/ad-joined-instance
    Metadata:
      aws:cdk:path: AdFsxStack/ad-joined-instance/InstanceRole/Resource
  adjoinedinstanceInstanceProfileA48C35DA:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: adjoinedinstanceInstanceRole26EFF14A
    Metadata:
      aws:cdk:path: AdFsxStack/ad-joined-instance/InstanceProfile
  adjoinedinstanceC08AFCDF:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: adjoinedinstanceInstanceProfileA48C35DA
      ImageId:
        Ref: SsmParameterValueawsserviceamiwindowslatestWindowsServer2019EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: c5.large
      SecurityGroupIds:
        - Fn::GetAtt:
            - adjoinedinstanceInstanceSecurityGroup9F871739
            - GroupId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: Name
          Value: AdFsxStack/ad-joined-instance
      UserData:
        Fn::Base64: <powershell>Add-WindowsFeature RSAT-Role-Tools</powershell>
    DependsOn:
      - adjoinedinstanceInstanceRole26EFF14A
    Metadata:
      aws:cdk:path: AdFsxStack/ad-joined-instance/Resource
  domainJoinDoc:
    Type: AWS::SSM::Document
    Properties:
      Content:
        Fn::Join:
          - ""
          - - |-
              {
                    "schemaVersion": "1.0",
                    "description": "Join an instance to a domain",
                    "runtimeConfig": {
                      "aws:domainJoin": {
                        "properties": {
                          "directoryId": "
            - Fn::GetAtt:
                - ad
                - Alias
            - |-
              ",
                          "directoryName": "example.corp",
                          "dnsIpAddresses": [
                            "
            - Fn::Select:
                - 0
                - Fn::GetAtt:
                    - ad
                    - DnsIpAddresses
            - |-
              ",
                            "
            - Fn::Select:
                - 1
                - Fn::GetAtt:
                    - ad
                    - DnsIpAddresses
            - |-
              "
                          ]
                        }
                      }
                    }
                  }
      Name: ad-join-domain
    Metadata:
      aws:cdk:path: AdFsxStack/domainJoinDoc
  ssmAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name:
        Ref: domainJoinDoc
      InstanceId:
        Ref: adjoinedinstanceC08AFCDF
    Metadata:
      aws:cdk:path: AdFsxStack/ssmAssociation
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11QwW7CMAz9Fu5ZoGiHHYfKxDhsRGXiHlyzBWhSOQ4IVf33JYWu1U5+fn6x30sm57NnOZu86qt/gvI0bcARymbLGk6iQO8CAYr8YJUmXSEjpWYTuA4scmc9UwBO3FgcB6Vh42wr0uIGYS6bXQ1ptlO5UGF/NrANe4vd2wEVLjB+6f0ZB37gFt47MDpt/hMn8LZWqXxqXmnGq74JReYS4bB4baP3iHvB3cmjW3DM+1Oh7aTL91xt6nTEP2QjZmxhHeNrGyNvEQIZvq3Ihboz/p/opa3wCITsK231N1L86q5/PIqoFaUhBHZ080gXAyjj7MMAOe8OvFgKoyvZFO7+RX3tDyhyB3NOd3xUpTQOQp9sZL5tW2FdifLop5fsRWZzmU2O3pgnCpZNhbK4119Olz6pIwIAAA==
    Metadata:
      aws:cdk:path: AdFsxStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiwindowslatestWindowsServer2019EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base
Outputs:
  directoryAlias:
    Value:
      Fn::GetAtt:
        - ad
        - Alias
  directoryDns:
    Value:
      Fn::Join:
        - ","
        - Fn::GetAtt:
            - ad
            - DnsIpAddresses
  subnetIds:
    Value:
      Fn::Join:
        - ","
        - - Ref: VPCPrivateSubnet1Subnet8BCA10E0
          - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
  vpcId:
    Value:
      Ref: VPCB9E5F0B4
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

