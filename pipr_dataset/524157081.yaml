Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: sqs-fargate-ddb-table
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/Table/Resource
  SqsQueue13597403:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: alias/aws/sqs
      QueueName: sqs-fargate-queue
      VisibilityTimeout: 900
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/SqsQueue/Resource
  EcsVpcCEF3634B:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/Resource
  EcsVpcPublicSubnet1Subnet4FC26CFD:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet1/Subnet
  EcsVpcPublicSubnet1RouteTable3F836709:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet1/RouteTable
  EcsVpcPublicSubnet1RouteTableAssociation27B0B1F1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsVpcPublicSubnet1RouteTable3F836709
      SubnetId:
        Ref: EcsVpcPublicSubnet1Subnet4FC26CFD
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet1/RouteTableAssociation
  EcsVpcPublicSubnet1DefaultRoute29B4D851:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsVpcPublicSubnet1RouteTable3F836709
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EcsVpcIGWF80402C4
    DependsOn:
      - EcsVpcVPCGWE2526015
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet1/DefaultRoute
  EcsVpcPublicSubnet1EIP97CC60E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet1/EIP
  EcsVpcPublicSubnet1NATGateway84F4640B:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: EcsVpcPublicSubnet1Subnet4FC26CFD
      AllocationId:
        Fn::GetAtt:
          - EcsVpcPublicSubnet1EIP97CC60E8
          - AllocationId
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet1/NATGateway
  EcsVpcPublicSubnet2Subnet127B1F4A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet2/Subnet
  EcsVpcPublicSubnet2RouteTable259A8B2D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet2/RouteTable
  EcsVpcPublicSubnet2RouteTableAssociation6449DB9B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsVpcPublicSubnet2RouteTable259A8B2D
      SubnetId:
        Ref: EcsVpcPublicSubnet2Subnet127B1F4A
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet2/RouteTableAssociation
  EcsVpcPublicSubnet2DefaultRouteD785541D:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsVpcPublicSubnet2RouteTable259A8B2D
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EcsVpcIGWF80402C4
    DependsOn:
      - EcsVpcVPCGWE2526015
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet2/DefaultRoute
  EcsVpcPublicSubnet2EIP9B6C83AE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet2/EIP
  EcsVpcPublicSubnet2NATGatewayDFAD96D0:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: EcsVpcPublicSubnet2Subnet127B1F4A
      AllocationId:
        Fn::GetAtt:
          - EcsVpcPublicSubnet2EIP9B6C83AE
          - AllocationId
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PublicSubnet2/NATGateway
  EcsVpcPrivateSubnet1SubnetDE1C6717:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet1/Subnet
  EcsVpcPrivateSubnet1RouteTable44D603B2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet1/RouteTable
  EcsVpcPrivateSubnet1RouteTableAssociationA072EBC4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsVpcPrivateSubnet1RouteTable44D603B2
      SubnetId:
        Ref: EcsVpcPrivateSubnet1SubnetDE1C6717
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet1/RouteTableAssociation
  EcsVpcPrivateSubnet1DefaultRoute523B7F1A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsVpcPrivateSubnet1RouteTable44D603B2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EcsVpcPublicSubnet1NATGateway84F4640B
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet1/DefaultRoute
  EcsVpcPrivateSubnet2Subnet4E5EDAB1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet2/Subnet
  EcsVpcPrivateSubnet2RouteTable1CB3B77F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet2/RouteTable
  EcsVpcPrivateSubnet2RouteTableAssociation136FEFD9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsVpcPrivateSubnet2RouteTable1CB3B77F
      SubnetId:
        Ref: EcsVpcPrivateSubnet2Subnet4E5EDAB1
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet2/RouteTableAssociation
  EcsVpcPrivateSubnet2DefaultRoute1D92C4ED:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsVpcPrivateSubnet2RouteTable1CB3B77F
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EcsVpcPublicSubnet2NATGatewayDFAD96D0
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/PrivateSubnet2/DefaultRoute
  EcsVpcIGWF80402C4:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: SqsFargateServiceStack/EcsVpc
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/IGW
  EcsVpcVPCGWE2526015:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: EcsVpcCEF3634B
      InternetGatewayId:
        Ref: EcsVpcIGWF80402C4
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsVpc/VPCGW
  EcsCluster97242B84:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: go-service-cluster
      ClusterSettings:
        - Name: containerInsights
          Value: disabled
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/EcsCluster/Resource
  FargateLogGroupA4B4CA79:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/aws-samples/go-service-logs
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/FargateLogGroup/Resource
  MyTaskTaskRole560858C4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/MyTask/TaskRole/Resource
  MyTaskTaskRoleDefaultPolicyE727E75A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SqsQueue13597403
                - Arn
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TableCD117FA1
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: MyTaskTaskRoleDefaultPolicyE727E75A
      Roles:
        - Ref: MyTaskTaskRole560858C4
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/MyTask/TaskRole/DefaultPolicy/Resource
  MyTaskF5748B4B:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: SQS_URL
              Value:
                Ref: SqsQueue13597403
            - Name: DDB_TABLE
              Value:
                Ref: TableCD117FA1
          Essential: true
          Image:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:05d3e1ba9224847e6a5eee9f197fe92f4e7ddbdda4f6ce8e96366c122cd07477
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: FargateLogGroupA4B4CA79
              awslogs-stream-prefix: go-service
              awslogs-region:
                Ref: AWS::Region
          Name: MyContainer
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - MyTaskExecutionRoleD2FEFCB2
          - Arn
      Family: SqsFargateServiceStackMyTask7B68B4C0
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - MyTaskTaskRole560858C4
          - Arn
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/MyTask/Resource
  MyTaskExecutionRoleD2FEFCB2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/MyTask/ExecutionRole/Resource
  MyTaskExecutionRoleDefaultPolicy8A6B211B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/
                  - Fn::Sub: cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - FargateLogGroupA4B4CA79
                - Arn
        Version: "2012-10-17"
      PolicyName: MyTaskExecutionRoleDefaultPolicy8A6B211B
      Roles:
        - Ref: MyTaskExecutionRoleD2FEFCB2
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/MyTask/ExecutionRole/DefaultPolicy/Resource
  MyServiceB4132EDA:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: EcsCluster97242B84
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - MyServiceSecurityGroup6281A313
                - GroupId
          Subnets:
            - Ref: EcsVpcPrivateSubnet1SubnetDE1C6717
            - Ref: EcsVpcPrivateSubnet2Subnet4E5EDAB1
      PlatformVersion: 1.4.0
      ServiceName: go-fargate-service
      TaskDefinition:
        Ref: MyTaskF5748B4B
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/MyService/Service
  MyServiceSecurityGroup6281A313:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SqsFargateServiceStack/MyService/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: EcsVpcCEF3634B
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/MyService/SecurityGroup/Resource
  ServiceDashboard3C555A71:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody:
        Fn::Join:
          - ""
          - - '{"start":"-P1D","widgets":[{"type":"log","width":24,"height":6,"x":0,"y":0,"properties":{"view":"timeSeries","title":"Saved to DDB","region":"'
            - Ref: AWS::Region
            - "\",\"query\":\"SOURCE '/ecs/aws-samples/go-service-logs' | filter @message like /is saved in DDB/\\n| | stats count(*) as messagesSavedInDynamoDBCount by bin(5m)\\n| | sort exceptionCount desc\",\"stacked\":false}},{\"type\":\"log\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Received from SQS\",\"region\":\""
            - Ref: AWS::Region
            - "\",\"query\":\"SOURCE '/ecs/aws-samples/go-service-logs' | filter @message like /is received from SQS/\\n| | stats count(*) as sqsMessageReceivedCount by bin(5m)\\n| | sort exceptionCount desc\",\"stacked\":false}}]}"
      DashboardName: go-service-dashboard
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/ServiceDashboard/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/12S3W7CMAyFn4X7kA2mSbtlsCGkaeraiVvkpqaEtjHLDwhVffclKS3TrnLy2bWPnc750zN/nMDFTEVRTWuZ8zazICrm0a4trgoaKjz8hrxGttyrKDpmfgxvvxy6CKPoGAq9A2PQGr4iUaHeNFDiIpAQ4ymeyEhL+voKBj2a83Z7EqHCNlmyxOW1FJnLlc/37K5SchZHCz2/M9+AhAQrSY3JQbxtknB8gl2DxQtcWaLl2ct74Y2yqL0eEnont9vC+k0cGlSWZSiclva61uRO0cNfECb361jWzvhyITzId9AlBJumWuFeKjmY/E9IWZAK9R92+zZDfZaiH7yXHaup9P0+qBz9DLpjEhreptSvKp4J+bXG2XrVMVGTKy5gxYG3KzCHnEAXIWG8dB1L0ZDTvnN8QP9XlFKVsegQCIOSKqLdjikqkB/Nw3n2wmdzPpscjZRT7ZSVDfK0P38BUYWLQ3ECAAA=
    Metadata:
      aws:cdk:path: SqsFargateServiceStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

