Resources:
  unifiedlogsvpc668A82AC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/Resource
  unifiedlogsvpcPublicSubnet1SubnetE3D9589A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1/Subnet
  unifiedlogsvpcPublicSubnet1RouteTable55683A1E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1/RouteTable
  unifiedlogsvpcPublicSubnet1RouteTableAssociation0D16DE70:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPublicSubnet1RouteTable55683A1E
      SubnetId:
        Ref: unifiedlogsvpcPublicSubnet1SubnetE3D9589A
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1/RouteTableAssociation
  unifiedlogsvpcPublicSubnet1DefaultRoute57F406E0:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPublicSubnet1RouteTable55683A1E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: unifiedlogsvpcIGW5581C881
    DependsOn:
      - unifiedlogsvpcVPCGWB6597D21
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1/DefaultRoute
  unifiedlogsvpcPublicSubnet1EIP50F0E26C:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1/EIP
  unifiedlogsvpcPublicSubnet1NATGateway0A7A6911:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: unifiedlogsvpcPublicSubnet1SubnetE3D9589A
      AllocationId:
        Fn::GetAtt:
          - unifiedlogsvpcPublicSubnet1EIP50F0E26C
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet1/NATGateway
  unifiedlogsvpcPublicSubnet2Subnet5F012F1A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet2/Subnet
  unifiedlogsvpcPublicSubnet2RouteTable4B68B2AF:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet2/RouteTable
  unifiedlogsvpcPublicSubnet2RouteTableAssociationCFFD9CA0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPublicSubnet2RouteTable4B68B2AF
      SubnetId:
        Ref: unifiedlogsvpcPublicSubnet2Subnet5F012F1A
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet2/RouteTableAssociation
  unifiedlogsvpcPublicSubnet2DefaultRouteA99EF24E:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPublicSubnet2RouteTable4B68B2AF
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: unifiedlogsvpcIGW5581C881
    DependsOn:
      - unifiedlogsvpcVPCGWB6597D21
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PublicSubnet2/DefaultRoute
  unifiedlogsvpcPrivateSubnet1Subnet11EC1736:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet1/Subnet
  unifiedlogsvpcPrivateSubnet1RouteTable168DEC99:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet1/RouteTable
  unifiedlogsvpcPrivateSubnet1RouteTableAssociation04850696:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPrivateSubnet1RouteTable168DEC99
      SubnetId:
        Ref: unifiedlogsvpcPrivateSubnet1Subnet11EC1736
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet1/RouteTableAssociation
  unifiedlogsvpcPrivateSubnet1DefaultRoute50129099:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPrivateSubnet1RouteTable168DEC99
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: unifiedlogsvpcPublicSubnet1NATGateway0A7A6911
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet1/DefaultRoute
  unifiedlogsvpcPrivateSubnet2Subnet435B49BB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet2/Subnet
  unifiedlogsvpcPrivateSubnet2RouteTableF93BDBB2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet2/RouteTable
  unifiedlogsvpcPrivateSubnet2RouteTableAssociation6CBEFA81:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPrivateSubnet2RouteTableF93BDBB2
      SubnetId:
        Ref: unifiedlogsvpcPrivateSubnet2Subnet435B49BB
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet2/RouteTableAssociation
  unifiedlogsvpcPrivateSubnet2DefaultRoute711ED839:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: unifiedlogsvpcPrivateSubnet2RouteTableF93BDBB2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: unifiedlogsvpcPublicSubnet1NATGateway0A7A6911
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/PrivateSubnet2/DefaultRoute
  unifiedlogsvpcIGW5581C881:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkUnifiedLogStack/unified-logs-vpc
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/IGW
  unifiedlogsvpcVPCGWB6597D21:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: unifiedlogsvpc668A82AC
      InternetGatewayId:
        Ref: unifiedlogsvpcIGW5581C881
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logs-vpc/VPCGW
  opensearch2F25E4C7:
    Type: AWS::OpenSearchService::Domain
    Properties:
      ClusterConfig:
        InstanceCount: 1
        DedicatedMasterEnabled: false
        InstanceType: r5.large.search
        ZoneAwarenessEnabled: false
      CognitoOptions:
        Enabled: false
      DomainEndpointOptions:
        EnforceHTTPS: false
        TLSSecurityPolicy: Policy-Min-TLS-1-0-2019-07
      EBSOptions:
        EBSEnabled: true
        VolumeType: gp2
        VolumeSize: 10
      EncryptionAtRestOptions:
        Enabled: false
      EngineVersion: OpenSearch_1.0
      LogPublishingOptions: {}
      NodeToNodeEncryptionOptions:
        Enabled: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/opensearch/Resource
  logsFailedErrCaptureBucket0BCC8303:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/logsFailedErrCaptureBucket/Resource
  logsFailedErrCaptureBucketPolicy3D783021:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: logsFailedErrCaptureBucket0BCC8303
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - logsFailedErrCaptureBucket0BCC8303
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - logsFailedErrCaptureBucket0BCC8303
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/logsFailedErrCaptureBucket/Policy/Resource
  logsFailedErrCaptureBucketAutoDeleteObjectsCustomResource1C7690D1:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: logsFailedErrCaptureBucket0BCC8303
    DependsOn:
      - logsFailedErrCaptureBucketPolicy3D783021
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/logsFailedErrCaptureBucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: logsFailedErrCaptureBucket0BCC8303
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1
      aws:asset:property: Code
  eksstackNestedStackeksstackNestedStackResourceE5C15B40:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /ceefd4dd78529c01d6a3d2e43cf0894f1b7b0bd2eaa597bde007bf90fbf9bf4c.json
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-stack.NestedStack/eks-stack.NestedStackResource
      aws:asset:path: CdkUnifiedLogStackeksstack2686E27F.nested.template.json
      aws:asset:property: TemplateURL
  policyeksfirehosedeliverystream8226A6A3:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource: "*"
          - Action: es:*
            Effect: Allow
            Resource: "*"
          - Action: lambda:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/policy_eks-fire-hose-delivery-stream/Resource
  firehoseRoleeksfirehosedeliverystreamA54C9BFF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: policyeksfirehosedeliverystream8226A6A3
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/firehoseRole_eks-fire-hose-delivery-stream/Resource
  FirehoseStreamToS3eksfirehosedeliverystream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      AmazonopensearchserviceDestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: eks-fire-hose-delivery-stream
          LogStreamName: eks-fire-hose-delivery-stream
        DomainARN:
          Fn::GetAtt:
            - opensearch2F25E4C7
            - Arn
        IndexName: eks
        ProcessingConfiguration: {}
        RetryOptions:
          DurationInSeconds: 5
        RoleARN:
          Fn::GetAtt:
            - firehoseRoleeksfirehosedeliverystreamA54C9BFF
            - Arn
        S3BackupMode: FailedDocumentsOnly
        S3Configuration:
          BucketARN:
            Fn::GetAtt:
              - logsFailedErrCaptureBucket0BCC8303
              - Arn
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 1
          CompressionFormat: UNCOMPRESSED
          RoleARN:
            Fn::GetAtt:
              - firehoseRoleeksfirehosedeliverystreamA54C9BFF
              - Arn
      DeliveryStreamName: eks-fire-hose-delivery-stream
      DeliveryStreamType: DirectPut
    DependsOn:
      - firehoseRoleeksfirehosedeliverystreamA54C9BFF
      - logsFailedErrCaptureBucketAutoDeleteObjectsCustomResource1C7690D1
      - logsFailedErrCaptureBucketPolicy3D783021
      - logsFailedErrCaptureBucket0BCC8303
      - opensearch2F25E4C7
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/FirehoseStreamToS3_eks-fire-hose-delivery-stream
  clustermasterroleCD184EDB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/cluster-master-role/Resource
  eksclusterRoleAD55CC89:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/Role/Resource
  eksclusterControlPlaneSecurityGroupBAB2FC0A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: unifiedlogsvpc668A82AC
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/ControlPlaneSecurityGroup/Resource
  eksclusterCreationRole183DA047:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/Resource/CreationRole/Resource
  eksclusterCreationRoleDefaultPolicy3CACA8C6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - eksclusterRoleAD55CC89
                - Arn
          - Action:
              - eks:CreateCluster
              - eks:DescribeCluster
              - eks:DescribeUpdate
              - eks:DeleteCluster
              - eks:UpdateClusterVersion
              - eks:UpdateClusterConfig
              - eks:CreateFargateProfile
              - eks:TagResource
              - eks:UntagResource
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - eks:DescribeFargateProfile
              - eks:DeleteFargateProfile
            Effect: Allow
            Resource: "*"
          - Action:
              - iam:GetRole
              - iam:listAttachedRolePolicies
            Effect: Allow
            Resource: "*"
          - Action: iam:CreateServiceLinkedRole
            Effect: Allow
            Resource: "*"
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeRouteTables
              - ec2:DescribeDhcpOptions
              - ec2:DescribeVpcs
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - eksclusterfargateprofiledefaultPodExecutionRoleF33D5A33
                - Arn
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - eksclusterfargateprofilecustomerappprofilePodExecutionRole9DA686DD
                - Arn
        Version: "2012-10-17"
      PolicyName: eksclusterCreationRoleDefaultPolicy3CACA8C6
      Roles:
        - Ref: eksclusterCreationRole183DA047
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/Resource/CreationRole/DefaultPolicy/Resource
  ekscluster92983EFB:
    Type: Custom::AWSCDK-EKS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.CdkUnifiedLogStackawscdkawseksClusterResourceProviderframeworkonEvent4441C5F3Arn
      Config:
        version: "1.21"
        roleArn:
          Fn::GetAtt:
            - eksclusterRoleAD55CC89
            - Arn
        resourcesVpcConfig:
          subnetIds:
            - Ref: unifiedlogsvpcPrivateSubnet1Subnet11EC1736
            - Ref: unifiedlogsvpcPrivateSubnet2Subnet435B49BB
          securityGroupIds:
            - Fn::GetAtt:
                - eksclusterControlPlaneSecurityGroupBAB2FC0A
                - GroupId
          endpointPublicAccess: true
          endpointPrivateAccess: false
      AssumeRoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      AttributesRevision: 2
    DependsOn:
      - eksclusterCreationRoleDefaultPolicy3CACA8C6
      - eksclusterCreationRole183DA047
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/Resource/Resource/Default
  eksclusterKubectlReadyBarrier2A406583:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: aws:cdk:eks:kubectl-ready
    DependsOn:
      - eksclusterfargateprofilecustomerappprofilePodExecutionRole9DA686DD
      - eksclusterfargateprofilecustomerappprofileCEE539A6
      - eksclusterfargateprofiledefaultPodExecutionRoleF33D5A33
      - eksclusterfargateprofiledefault815439EC
      - eksclusterCreationRoleDefaultPolicy3CACA8C6
      - eksclusterCreationRole183DA047
      - ekscluster92983EFB
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/KubectlReadyBarrier
  eksclusterAwsAuthmanifest769BDE7D:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.CdkUnifiedLogStackawscdkawseksKubectlProviderframeworkonEventF2BE9376Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-auth","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c81228874576a4cf3c5e0ce2be402c066077d45a9f":""}},"data":{"mapRoles":"[{\"rolearn\":\"'
            - Fn::GetAtt:
                - clustermasterroleCD184EDB
                - Arn
            - \",\"username\":\"
            - Fn::GetAtt:
                - clustermasterroleCD184EDB
                - Arn
            - \",\"groups\":[\"system:masters\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - eksclusterfargateprofiledefaultPodExecutionRoleF33D5A33
                - Arn
            - \",\"username\":\"system:node:{{SessionName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\",\"system:node-proxier\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - eksclusterfargateprofilecustomerappprofilePodExecutionRole9DA686DD
                - Arn
            - \",\"username\":\"system:node:{{SessionName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\",\"system:node-proxier\"]}]","mapUsers":"[]","mapAccounts":"[]"}}]
      ClusterName:
        Ref: ekscluster92983EFB
      RoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      PruneLabel: aws.cdk.eks/prune-c81228874576a4cf3c5e0ce2be402c066077d45a9f
      Overwrite: true
    DependsOn:
      - eksclusterKubectlReadyBarrier2A406583
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/AwsAuth/manifest/Resource/Default
  eksclusterCoreDnsComputeTypePatchA90CA91A:
    Type: Custom::AWSCDK-EKS-KubernetesPatch
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.CdkUnifiedLogStackawscdkawseksKubectlProviderframeworkonEventF2BE9376Arn
      ResourceName: deployment/coredns
      ResourceNamespace: kube-system
      ApplyPatchJson: '{"spec":{"template":{"metadata":{"annotations":{"eks.amazonaws.com/compute-type":"fargate"}}}}}'
      RestorePatchJson: '{"spec":{"template":{"metadata":{"annotations":{"eks.amazonaws.com/compute-type":"ec2"}}}}}'
      ClusterName:
        Ref: ekscluster92983EFB
      RoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      PatchType: strategic
    DependsOn:
      - eksclusterKubectlReadyBarrier2A406583
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/CoreDnsComputeTypePatch/Resource/Default
  eksclusterfargateprofiledefaultPodExecutionRoleF33D5A33:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks-fargate-pods.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/fargate-profile-default/PodExecutionRole/Resource
  eksclusterfargateprofiledefault815439EC:
    Type: Custom::AWSCDK-EKS-FargateProfile
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.CdkUnifiedLogStackawscdkawseksClusterResourceProviderframeworkonEvent4441C5F3Arn
      AssumeRoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      Config:
        clusterName:
          Ref: ekscluster92983EFB
        podExecutionRoleArn:
          Fn::GetAtt:
            - eksclusterfargateprofiledefaultPodExecutionRoleF33D5A33
            - Arn
        selectors:
          - namespace: default
          - namespace: kube-system
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/fargate-profile-default/Resource/Default
  eksclusterawsloadbalancercontrollerConditionJson629E686D:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: eksclusterOpenIdConnectProvider30D7C8A6
            - :aud":"sts.amazonaws.com","
            - Fn::Select:
                - 1
                - Fn::Split:
                    - :oidc-provider/
                    - Ref: eksclusterOpenIdConnectProvider30D7C8A6
            - :sub":"system:serviceaccount:kube-system:aws-load-balancer-controller"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/aws-load-balancer-controller/ConditionJson/Resource/Default
  eksclusterawsloadbalancercontrollerRole5E4944FA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - eksclusterawsloadbalancercontrollerConditionJson629E686D
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Ref: eksclusterOpenIdConnectProvider30D7C8A6
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/aws-load-balancer-controller/Role/Resource
  eksclusterawsloadbalancercontrollerRoleDefaultPolicyFE5B446B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:CreateServiceLinkedRole
              - ec2:*
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeListenerCertificates
              - elasticloadbalancing:DescribeSSLPolicies
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:DescribeTags
            Effect: Allow
            Resource: "*"
          - Action:
              - cognito-idp:DescribeUserPoolClient
              - acm:ListCertificates
              - acm:DescribeCertificate
              - iam:ListServerCertificates
              - iam:GetServerCertificate
              - waf-regional:GetWebACL
              - waf-regional:GetWebACLForResource
              - waf-regional:AssociateWebACL
              - waf-regional:DisassociateWebACL
              - wafv2:GetWebACL
              - wafv2:GetWebACLForResource
              - wafv2:AssociateWebACL
              - wafv2:DisassociateWebACL
              - shield:GetSubscriptionState
              - shield:DescribeProtection
              - shield:CreateProtection
              - shield:DeleteProtection
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateTargetGroup
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:DeleteRule
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Condition:
              "Null":
                aws:RequestTag/elbv2.k8s.aws/cluster: "true"
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource:
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
              - arn:aws:elasticloadbalancing:*:*:targetgroup/*
          - Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Effect: Allow
            Resource:
              - arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*
          - Action:
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:SetIpAddressType
              - elasticloadbalancing:SetSecurityGroups
              - elasticloadbalancing:SetSubnets
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:DeleteTargetGroup
            Condition:
              "Null":
                aws:ResourceTag/elbv2.k8s.aws/cluster: "false"
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
            Effect: Allow
            Resource: arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
          - Action:
              - elasticloadbalancing:SetWebAcl
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:AddListenerCertificates
              - elasticloadbalancing:RemoveListenerCertificates
              - elasticloadbalancing:ModifyRule
            Effect: Allow
            Resource: "*"
          - Action:
              - acm:DescribeCertificate
              - acm:ListCertificates
              - acm:GetCertificate
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: eksclusterawsloadbalancercontrollerRoleDefaultPolicyFE5B446B
      Roles:
        - Ref: eksclusterawsloadbalancercontrollerRole5E4944FA
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/aws-load-balancer-controller/Role/DefaultPolicy/Resource
  eksclusterawsloadbalancercontrollermanifestawsloadbalancercontrollerServiceAccountResource2BAA4404:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.CdkUnifiedLogStackawscdkawseksKubectlProviderframeworkonEventF2BE9376Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"aws-load-balancer-controller","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c80bd57262b60efd8248133d6fba81bfe38bc425cf":"","app.kubernetes.io/name":"aws-load-balancer-controller"},"annotations":{"eks.amazonaws.com/role-arn":"'
            - Fn::GetAtt:
                - eksclusterawsloadbalancercontrollerRole5E4944FA
                - Arn
            - '"}}}]'
      ClusterName:
        Ref: ekscluster92983EFB
      RoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      PruneLabel: aws.cdk.eks/prune-c80bd57262b60efd8248133d6fba81bfe38bc425cf
    DependsOn:
      - eksclusterKubectlReadyBarrier2A406583
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/aws-load-balancer-controller/manifest-aws-load-balancer-controllerServiceAccountResource/Resource/Default
  eksclusterOpenIdConnectProvider30D7C8A6:
    Type: Custom::AWSCDKOpenIdConnectProvider
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0
          - Arn
      ClientIDList:
        - sts.amazonaws.com
      ThumbprintList:
        - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280
      Url:
        Fn::GetAtt:
          - ekscluster92983EFB
          - OpenIdConnectIssuerUrl
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/OpenIdConnectProvider/Resource/Default
  eksclusterchartawsloadbalancercontrollerC40413F5:
    Type: Custom::AWSCDK-EKS-HelmChart
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.CdkUnifiedLogStackawscdkawseksKubectlProviderframeworkonEventF2BE9376Arn
      ClusterName:
        Ref: ekscluster92983EFB
      RoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      Release: stackeksclusterchartawsloadbalancercontroller750e0538
      Chart: aws-load-balancer-controller
      Values:
        Fn::Join:
          - ""
          - - '{"clusterName":"'
            - Ref: ekscluster92983EFB
            - '","region":"'
            - Ref: AWS::Region
            - '","vpcId":"'
            - Ref: unifiedlogsvpc668A82AC
            - '","serviceAccount":{"create":false,"name":"aws-load-balancer-controller"}}'
      Namespace: kube-system
      Repository: https://aws.github.io/eks-charts
      CreateNamespace: true
    DependsOn:
      - eksclusterKubectlReadyBarrier2A406583
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/chart-aws-load-balancer-controller/Resource/Default
  eksclusterfargateprofilecustomerappprofilePodExecutionRole9DA686DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks-fargate-pods.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy
        - Ref: eksfargateloggingiampolicy2606927A
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/fargate-profile-customer-app-profile/PodExecutionRole/Resource
  eksclusterfargateprofilecustomerappprofileCEE539A6:
    Type: Custom::AWSCDK-EKS-FargateProfile
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.CdkUnifiedLogStackawscdkawseksClusterResourceProviderframeworkonEvent4441C5F3Arn
      AssumeRoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      Config:
        clusterName:
          Ref: ekscluster92983EFB
        podExecutionRoleArn:
          Fn::GetAtt:
            - eksclusterfargateprofilecustomerappprofilePodExecutionRole9DA686DD
            - Arn
        selectors:
          - namespace: nginx
        subnets:
          - Ref: unifiedlogsvpcPrivateSubnet1Subnet11EC1736
          - Ref: unifiedlogsvpcPrivateSubnet2Subnet435B49BB
    DependsOn:
      - eksclusterfargateprofiledefaultPodExecutionRoleF33D5A33
      - eksclusterfargateprofiledefault815439EC
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/fargate-profile-customer-app-profile/Resource/Default
  eksclustereksfargateloggingBC2057F1:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.CdkUnifiedLogStackawscdkawseksKubectlProviderframeworkonEventF2BE9376Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"Namespace","metadata":{"labels":{"aws.cdk.eks/prune-c875b47d752e8aa86e34e2f02d6e18d5b102135895":"","aws-observability":"enabled"},"name":"aws-observability"}},{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-logging","namespace":"aws-observability","labels":{"aws.cdk.eks/prune-c875b47d752e8aa86e34e2f02d6e18d5b102135895":""}},"data":{"output.conf":"[OUTPUT]\n    Name kinesis_firehose\n    Match   *\n    region '
            - Ref: AWS::Region
            - \n    delivery_stream eks-fire-hose-delivery-stream"}}]
      ClusterName:
        Ref: ekscluster92983EFB
      RoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      PruneLabel: aws.cdk.eks/prune-c875b47d752e8aa86e34e2f02d6e18d5b102135895
    DependsOn:
      - eksclusterfargateprofilecustomerappprofilePodExecutionRole9DA686DD
      - eksclusterfargateprofilecustomerappprofileCEE539A6
      - eksclusterKubectlReadyBarrier2A406583
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/eks-fargate-logging/Resource/Default
  eksclusternginxappservice2617D1C4:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.CdkUnifiedLogStackawscdkawseksKubectlProviderframeworkonEventF2BE9376Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"Namespace","metadata":{"name":"nginx","labels":{"aws.cdk.eks/prune-c8194173ea27ebf6ec81c1bf90cfd1bc36476f5aaf":""}}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"eks.amazonaws.com/role-arn":"'
            - Fn::GetAtt:
                - nginxappsaroleF1AFE961
                - Arn
            - '"},"name":"sa-nginx","namespace":"nginx","labels":{"aws.cdk.eks/prune-c8194173ea27ebf6ec81c1bf90cfd1bc36476f5aaf":""}}},{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"name":"api-deployment","namespace":"nginx","labels":{"aws.cdk.eks/prune-c8194173ea27ebf6ec81c1bf90cfd1bc36476f5aaf":""}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"nginx","cdk8s.deployment":"eks-chart-nginx-app-chart-api-deployment-c8b087fc"}},"template":{"metadata":{"labels":{"app":"nginx","cdk8s.deployment":"eks-chart-nginx-app-chart-api-deployment-c8b087fc"}},"spec":{"containers":[{"env":[],"image":"nginx","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/","port":80}},"name":"nginx","ports":[{"containerPort":80}],"volumeMounts":[]}],"serviceAccountName":"sa-nginx","volumes":[]}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"alb.ingress.kubernetes.io/target-type":"ip"},"labels":{"aws.cdk.eks/prune-c8194173ea27ebf6ec81c1bf90cfd1bc36476f5aaf":"","app":"nginx"},"name":"api-service","namespace":"nginx"},"spec":{"externalIPs":[],"ports":[{"port":80,"targetPort":80}],"selector":{"app":"nginx","cdk8s.deployment":"eks-chart-nginx-app-chart-api-deployment-c8b087fc"},"type":"NodePort"}},{"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"alb.ingress.kubernetes.io/healthcheck-path":"/","alb.ingress.kubernetes.io/scheme":"internal","alb.ingress.kubernetes.io/target-type":"ip","kubernetes.io/ingress.class":"alb"},"labels":{"aws.cdk.eks/prune-c8194173ea27ebf6ec81c1bf90cfd1bc36476f5aaf":"","app":"nginx"},"name":"api-ingress","namespace":"nginx"},"spec":{"rules":[{"http":{"paths":[{"backend":{"serviceName":"api-service","servicePort":80},"path":"/*"}]}}]}}]'
      ClusterName:
        Ref: ekscluster92983EFB
      RoleArn:
        Fn::GetAtt:
          - eksclusterCreationRole183DA047
          - Arn
      PruneLabel: aws.cdk.eks/prune-c8194173ea27ebf6ec81c1bf90cfd1bc36476f5aaf
    DependsOn:
      - eksclusterKubectlReadyBarrier2A406583
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-cluster/nginx-app-service/Resource/Default
  awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /41f517a13a379c522d783c17d55aba5d1b1e5b365b46948adb48c871760c9416.json
      Parameters:
        referencetoCdkUnifiedLogStackeksclusterCreationRole43FF71E9Arn:
          Fn::GetAtt:
            - eksclusterCreationRole183DA047
            - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource
      aws:asset:path: CdkUnifiedLogStackawscdkawseksClusterResourceProvider843C8151.nested.template.json
      aws:asset:property: TemplateURL
  awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /616be41b6ddddc54d27948b3771ad70899dcc073a3d09bdc54b09740475f2f54.json
      Parameters:
        referencetoCdkUnifiedLogStackeksclusterCF915C74Arn:
          Fn::GetAtt:
            - ekscluster92983EFB
            - Arn
        referencetoCdkUnifiedLogStackeksclusterCreationRole43FF71E9Arn:
          Fn::GetAtt:
            - eksclusterCreationRole183DA047
            - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource
      aws:asset:path: CdkUnifiedLogStackawscdkawseksKubectlProviderD0A438BD.nested.template.json
      aws:asset:property: TemplateURL
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - iam:CreateOpenIDConnectProvider
                  - iam:DeleteOpenIDConnectProvider
                  - iam:UpdateOpenIDConnectProviderThumbprint
                  - iam:AddClientIDToOpenIDConnectProvider
                  - iam:RemoveClientIDFromOpenIDConnectProvider
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ff8d00f9cedcafaf1ab299446ed2500b61b0b88ab40f066d05b26ff66bd58b15.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
          - Arn
      Runtime: nodejs12.x
    DependsOn:
      - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler
      aws:asset:path: asset.ff8d00f9cedcafaf1ab299446ed2500b61b0b88ab40f066d05b26ff66bd58b15
      aws:asset:property: Code
  AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Role
  AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
          - Arn
      Runtime: nodejs12.x
    DependsOn:
      - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler
      aws:asset:path: asset.43079f879513e0d85eeb42ddfe71e5ead66edf1ee02c33bb165d7c2f926030c4
      aws:asset:property: Code
  ConditionJson7698FD65:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Fn::GetAtt:
                - ekscluster92983EFB
                - OpenIdConnectIssuer
            - :aud":"sts.amazonaws.com","
            - Fn::GetAtt:
                - ekscluster92983EFB
                - OpenIdConnectIssuer
            - :sub":"system:serviceaccount:nginx:sa-nginx"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ConditionJson/Resource/Default
  nginxappsaroleF1AFE961:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - ConditionJson7698FD65
                  - Value
            Effect: Allow
            Principal:
              Federated:
                Ref: eksclusterOpenIdConnectProvider30D7C8A6
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/nginx-app-sa-role/Resource
  nginxappsaroleDefaultPolicy08E1A7CD:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - S3BucketToShowGrantPermissionA9467888
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - S3BucketToShowGrantPermissionA9467888
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: nginxappsaroleDefaultPolicy08E1A7CD
      Roles:
        - Ref: nginxappsaroleF1AFE961
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/nginx-app-sa-role/DefaultPolicy/Resource
  S3BucketToShowGrantPermissionA9467888:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/S3BucketToShowGrantPermission/Resource
  eksfargateloggingiampolicy2606927A:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:CreateLogGroup
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
          - Action: firehose:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-fargate-logging-iam-policy/Resource
  ec2stackNestedStackec2stackNestedStackResourceE45AB0DC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /a4ecfdd74e01c0fb53365d6c5fdbbce58e5a6832a596cae4c78a5930c6d6bcb5.json
    DependsOn:
      - eksstackNestedStackeksstackNestedStackResourceE5C15B40
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ec2-stack.NestedStack/ec2-stack.NestedStackResource
      aws:asset:path: CdkUnifiedLogStackec2stack72F9ED56.nested.template.json
      aws:asset:property: TemplateURL
  securitygroupE7525979:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkUnifiedLogStack/security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Port SSH for inbound traffic from IPv4
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIpv6: ::/0
          Description: Port SSH for inbound traffic from IPv6
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: Port 80 for inbound traffic from IPv4
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIpv6: ::/0
          Description: Port 80 for inbound traffic from IPv6
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: unifiedlogsvpc668A82AC
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/security-group/Resource
  ec2LambdaFirehoseWriteAccess31FE99F9:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: firehose:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ec2LambdaFirehoseWriteAccess/Resource
  ec2LambdaCloudWatchAccessFF0DF371:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ec2LambdaCloudWatchAccess/Resource
  ecslambdaroleC95C2A96:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: ec2LambdaFirehoseWriteAccess31FE99F9
        - Ref: ec2LambdaCloudWatchAccessFF0DF371
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-lambda-role/Resource
  Ec2transformerfunctionC9F97A5F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 6e254044c8b366f039724b80c31271a7ac439b74f254d8c79aa63c5c59a6b9a6.zip
      Role:
        Fn::GetAtt:
          - ecslambdaroleC95C2A96
          - Arn
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 120
    DependsOn:
      - ecslambdaroleC95C2A96
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/Ec2-transformer-function/Resource
      aws:asset:path: asset.6e254044c8b366f039724b80c31271a7ac439b74f254d8c79aa63c5c59a6b9a6
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/rest/415039617/lib/computes/ec2/lambda
      aws:asset:is-bundled: false
      aws:asset:property: Code
  policyec2logsdeliverystream3E8EC1D9:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource: "*"
          - Action: es:*
            Effect: Allow
            Resource: "*"
          - Action: lambda:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/policy_ec2-logs-delivery-stream/Resource
  firehoseRoleec2logsdeliverystreamE9C6F24D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: policyec2logsdeliverystream3E8EC1D9
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/firehoseRole_ec2-logs-delivery-stream/Resource
  FirehoseStreamToS3ec2logsdeliverystream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      AmazonopensearchserviceDestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: ec2-logs-delivery-stream
          LogStreamName: ec2-logs-delivery-stream
        DomainARN:
          Fn::GetAtt:
            - opensearch2F25E4C7
            - Arn
        IndexName: ec2
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue:
                    Fn::GetAtt:
                      - Ec2transformerfunctionC9F97A5F
                      - Arn
              Type: Lambda
        RetryOptions:
          DurationInSeconds: 5
        RoleARN:
          Fn::GetAtt:
            - firehoseRoleec2logsdeliverystreamE9C6F24D
            - Arn
        S3BackupMode: FailedDocumentsOnly
        S3Configuration:
          BucketARN:
            Fn::GetAtt:
              - logsFailedErrCaptureBucket0BCC8303
              - Arn
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 1
          CompressionFormat: UNCOMPRESSED
          RoleARN:
            Fn::GetAtt:
              - firehoseRoleec2logsdeliverystreamE9C6F24D
              - Arn
      DeliveryStreamName: ec2-logs-delivery-stream
      DeliveryStreamType: DirectPut
    DependsOn:
      - firehoseRoleec2logsdeliverystreamE9C6F24D
      - logsFailedErrCaptureBucketAutoDeleteObjectsCustomResource1C7690D1
      - logsFailedErrCaptureBucketPolicy3D783021
      - logsFailedErrCaptureBucket0BCC8303
      - opensearch2F25E4C7
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/FirehoseStreamToS3_ec2-logs-delivery-stream
  firehosewriteccess45B643BA:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: firehose:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/firehosewriteccess/Resource
  cloudwatchAccessC96F4F49:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: cloudwatch:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/cloudwatchAccess/Resource
  ec2roleFD75669B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: firehosewriteccess45B643BA
        - Ref: cloudwatchAccessC96F4F49
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ec2-role/Resource
  ec2instanceInstanceProfile9BCE9015:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2roleFD75669B
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ec2-instance/InstanceProfile
  ec2instance42082E81:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: ec2instanceInstanceProfile9BCE9015
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.large
      SecurityGroupIds:
        - Fn::GetAtt:
            - securitygroupE7525979
            - GroupId
      SubnetId:
        Ref: unifiedlogsvpcPublicSubnet1SubnetE3D9589A
      Tags:
        - Key: Name
          Value: CdkUnifiedLogStack/ec2-instance
      UserData:
        Fn::Base64: |
          #!/bin/bash
          #!/bin/bash
          yum update -y
          yum install -y httpd php
          yum install -y aws-kinesis-agent
          systemctl start httpd
          systemctl enable httpd
          usermod -a -G apache ec2-user
          chown -R ec2-user:apache /var/www
          chmod 777 /var/www
          chmod -Rf 777 /etc/httpd/logs
          find /var/www -type d -exec chmod 777 {} \;
          find /var/www -type f -exec chmod 777 {} \;
          ​
          # PHP script to display Instance ID and Availability Zone
          cat << 'EOF' > /var/www/html/index.php
          <!DOCTYPE html>
          <html>
          <body>
              <center>
          ​
              <?php
              # Get the instance ID from meta-data and store it in the $instance_id variable
              $url = "http://169.254.169.254/latest/meta-data/instance-id";
              $instance_id = file_get_contents($url);
              # Get the instance's availability zone from metadata and store it in the $zone variable
              $url = "http://169.254.169.254/latest/meta-data/placement/availability-zone";
              $zone = file_get_contents($url);
              ?>
          ​
              <h2>EC2 Instance ID: <?php echo $instance_id ?></h2>
              <h2>Availability Zone: <?php echo $zone ?></h2>
          ​
              </center>
          </body>
          </html>
          EOF
          ​
          # Start kinesis firehose agent
          cat << 'EOF' > /etc/aws-kinesis/agent.json
          {
              "cloudwatch.emitMetrics": true,
              "firehose.endpoint": "firehose.us-east-1.amazonaws.com"
              "flows": [
                  {
                      "filePattern": "/etc/httpd/logs/access_log*",
                      "deliveryStream": "ec2-logs-delivery-stream"
                  },
                  {
                      "filePattern": "/etc/httpd/logs/error_log*",
                      "deliveryStream": "ec2-logs-delivery-stream"
                  }
              ]
          }
          EOF
          ​
          service aws-kinesis-agent  start
          chkconfig aws-kinesis-agent on
    DependsOn:
      - ec2roleFD75669B
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ec2-instance/Resource
  lambdastackNestedStacklambdastackNestedStackResource2F8DCF64:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /33056dd51493d3de230ba6e681dc45fa23037df6b0f7967021511a16a275ca1a.json
    DependsOn:
      - ec2stackNestedStackec2stackNestedStackResourceE45AB0DC
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/lambda-stack.NestedStack/lambda-stack.NestedStackResource
      aws:asset:path: CdkUnifiedLogStacklambdastackCD45D48C.nested.template.json
      aws:asset:property: TemplateURL
  lambdaserverlesstransformerfunctionServiceRole8EA802B8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/lambda-serverless-transformer-function/ServiceRole/Resource
  lambdaserverlesstransformerfunction2367063A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 0a8ae33a46e26a6134aece18dc3d2b48baf7c347b8f62841c852ff36aee24dd4.zip
      Role:
        Fn::GetAtt:
          - lambdaserverlesstransformerfunctionServiceRole8EA802B8
          - Arn
      Handler: index.handler
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 60
    DependsOn:
      - lambdaserverlesstransformerfunctionServiceRole8EA802B8
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/lambda-serverless-transformer-function/Resource
      aws:asset:path: asset.0a8ae33a46e26a6134aece18dc3d2b48baf7c347b8f62841c852ff36aee24dd4
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/rest/415039617/lib/computes/lambda/transformer
      aws:asset:is-bundled: false
      aws:asset:property: Code
  policylambdalogsdeliverystream0C942AA3:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource: "*"
          - Action: es:*
            Effect: Allow
            Resource: "*"
          - Action: lambda:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/policy_lambda-logs-delivery-stream/Resource
  firehoseRolelambdalogsdeliverystream0D6148AE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: policylambdalogsdeliverystream0C942AA3
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/firehoseRole_lambda-logs-delivery-stream/Resource
  FirehoseStreamToS3lambdalogsdeliverystream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      AmazonopensearchserviceDestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: lambda-logs-delivery-stream
          LogStreamName: lambda-logs-delivery-stream
        DomainARN:
          Fn::GetAtt:
            - opensearch2F25E4C7
            - Arn
        IndexName: lambda
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue:
                    Fn::GetAtt:
                      - lambdaserverlesstransformerfunction2367063A
                      - Arn
              Type: Lambda
        RetryOptions:
          DurationInSeconds: 5
        RoleARN:
          Fn::GetAtt:
            - firehoseRolelambdalogsdeliverystream0D6148AE
            - Arn
        S3BackupMode: FailedDocumentsOnly
        S3Configuration:
          BucketARN:
            Fn::GetAtt:
              - logsFailedErrCaptureBucket0BCC8303
              - Arn
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 1
          CompressionFormat: UNCOMPRESSED
          RoleARN:
            Fn::GetAtt:
              - firehoseRolelambdalogsdeliverystream0D6148AE
              - Arn
      DeliveryStreamName: lambda-logs-delivery-stream
      DeliveryStreamType: DirectPut
    DependsOn:
      - firehoseRolelambdalogsdeliverystream0D6148AE
      - logsFailedErrCaptureBucketAutoDeleteObjectsCustomResource1C7690D1
      - logsFailedErrCaptureBucketPolicy3D783021
      - logsFailedErrCaptureBucket0BCC8303
      - opensearch2F25E4C7
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/FirehoseStreamToS3_lambda-logs-delivery-stream
  lambdafirehosewriteccess9EDE9726:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: firehose:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/lambdafirehosewriteccess/Resource
  lambdacloudwatchAccess76E25CEE:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Deny
            Resource: arn:aws:logs:*:*:*
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/lambdacloudwatchAccess/Resource
  lambdaroleDFE21467:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: lambdafirehosewriteccess9EDE9726
        - Ref: lambdacloudwatchAccess76E25CEE
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/lambda-role/Resource
  firehoselayer1EC91130:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2e41e22640ad4061f609f992df215a1257f1ac9b5a55f8d9b2b9750d56e4c7fe.zip
      CompatibleRuntimes:
        - go1.x
        - nodejs14.x
      Description: Kinesis firehose log extension
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/firehose-layer/Resource
      aws:asset:path: asset.2e41e22640ad4061f609f992df215a1257f1ac9b5a55f8d9b2b9750d56e4c7fe
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/rest/415039617/lib/computes/lambda/extensions
      aws:asset:is-bundled: false
      aws:asset:property: Content
  LambdatransformerfunctionFA3659EA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 99399deb89f0d3c5c40d3c7f1fc23ed97080107f8335f55e013620ffad6813b9.zip
      Role:
        Fn::GetAtt:
          - lambdaroleDFE21467
          - Arn
      Environment:
        Variables:
          AWS_KINESIS_STREAM_NAME: lambda-logs-delivery-stream
      Handler: index.handler
      Layers:
        - Ref: firehoselayer1EC91130
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 60
    DependsOn:
      - lambdaroleDFE21467
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/Lambda-transformer-function/Resource
      aws:asset:path: asset.99399deb89f0d3c5c40d3c7f1fc23ed97080107f8335f55e013620ffad6813b9
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/rest/415039617/lib/computes/lambda/handler
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ecsstackNestedStackecsstackNestedStackResourceA85FA658:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /654e4d3e73c4b5305f86f0a3872be0b29165cae32cc28d390c265e2a12a1226e.json
    DependsOn:
      - lambdastackNestedStacklambdastackNestedStackResource2F8DCF64
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-stack.NestedStack/ecs-stack.NestedStackResource
      aws:asset:path: CdkUnifiedLogStackecsstack81C265D1.nested.template.json
      aws:asset:property: TemplateURL
  policyecsfirehosedeliverystream24E0EB82:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource: "*"
          - Action: es:*
            Effect: Allow
            Resource: "*"
          - Action: lambda:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      Path: /
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/policy_ecs-fire-hose-delivery-stream/Resource
  firehoseRoleecsfirehosedeliverystream28394DC2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: policyecsfirehosedeliverystream24E0EB82
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/firehoseRole_ecs-fire-hose-delivery-stream/Resource
  FirehoseStreamToS3ecsfirehosedeliverystream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      AmazonopensearchserviceDestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: ecs-fire-hose-delivery-stream
          LogStreamName: ecs-fire-hose-delivery-stream
        DomainARN:
          Fn::GetAtt:
            - opensearch2F25E4C7
            - Arn
        IndexName: ecs
        ProcessingConfiguration: {}
        RetryOptions:
          DurationInSeconds: 5
        RoleARN:
          Fn::GetAtt:
            - firehoseRoleecsfirehosedeliverystream28394DC2
            - Arn
        S3BackupMode: FailedDocumentsOnly
        S3Configuration:
          BucketARN:
            Fn::GetAtt:
              - logsFailedErrCaptureBucket0BCC8303
              - Arn
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 1
          CompressionFormat: UNCOMPRESSED
          RoleARN:
            Fn::GetAtt:
              - firehoseRoleecsfirehosedeliverystream28394DC2
              - Arn
      DeliveryStreamName: ecs-fire-hose-delivery-stream
      DeliveryStreamType: DirectPut
    DependsOn:
      - firehoseRoleecsfirehosedeliverystream28394DC2
      - logsFailedErrCaptureBucketAutoDeleteObjectsCustomResource1C7690D1
      - logsFailedErrCaptureBucketPolicy3D783021
      - logsFailedErrCaptureBucket0BCC8303
      - opensearch2F25E4C7
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/FirehoseStreamToS3_ecs-fire-hose-delivery-stream
  unifiedloggerecsclusterCAA4DF4B:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/unified-logger-ecs-cluster/Resource
  taskTaskRole99C98141:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/task/TaskRole/Resource
  taskTaskRoleDefaultPolicy08F0FEF8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: firehose:PutRecordBatch
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: taskTaskRoleDefaultPolicy08F0FEF8
      Roles:
        - Ref: taskTaskRole99C98141
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/task/TaskRole/DefaultPolicy/Resource
  task117DF50A:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: public.ecr.aws/docker/library/httpd:latest
          LogConfiguration:
            LogDriver: awsfirelens
            Options:
              Name: firehose
              region:
                Ref: AWS::Region
              delivery_stream: ecs-fire-hose-delivery-stream
          Memory: 512
          Name: container
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Essential: true
          FirelensConfiguration:
            Type: fluentbit
          Image:
            Ref: SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: tasklogrouterLogGroupE80F17C8
              awslogs-stream-prefix: firelens
              awslogs-region:
                Ref: AWS::Region
          MemoryReservation: 50
          Name: log-router
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - taskExecutionRoleBA215F69
          - Arn
      Family: task
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - EC2
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - taskTaskRole99C98141
          - Arn
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/task/Resource
  taskExecutionRoleBA215F69:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/task/ExecutionRole/Resource
  taskExecutionRoleDefaultPolicy25B52F7A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - tasklogrouterLogGroupE80F17C8
                - Arn
        Version: "2012-10-17"
      PolicyName: taskExecutionRoleDefaultPolicy25B52F7A
      Roles:
        - Ref: taskExecutionRoleBA215F69
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/task/ExecutionRole/DefaultPolicy/Resource
  tasklogrouterLogGroupE80F17C8:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/task/log-router/LogGroup/Resource
  ecsserviceLBAF58771B:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ecsserviceLBSecurityGroup1D9E4856
            - GroupId
      Subnets:
        - Ref: unifiedlogsvpcPublicSubnet1SubnetE3D9589A
        - Ref: unifiedlogsvpcPublicSubnet2Subnet5F012F1A
      Type: application
    DependsOn:
      - unifiedlogsvpcPublicSubnet1DefaultRoute57F406E0
      - unifiedlogsvpcPublicSubnet2DefaultRouteA99EF24E
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/LB/Resource
  ecsserviceLBSecurityGroup1D9E4856:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB CdkUnifiedLogStackecsserviceLB53E9B74C
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: unifiedlogsvpc668A82AC
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/LB/SecurityGroup/Resource
  ecsserviceLBSecurityGrouptoCdkUnifiedLogStackecsserviceServiceSecurityGroupF212E99E80EDA719DF:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ecsserviceLBSecurityGroup1D9E4856
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - ecsserviceServiceSecurityGroupBE9BC6CD
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/LB/SecurityGroup/to CdkUnifiedLogStackecsserviceServiceSecurityGroupF212E99E:80
  ecsserviceLBPublicListenerEC7E9209:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ecsserviceLBPublicListenerECSGroup3F5A4B44
          Type: forward
      LoadBalancerArn:
        Ref: ecsserviceLBAF58771B
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/LB/PublicListener/Resource
  ecsserviceLBPublicListenerECSGroup3F5A4B44:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: unifiedlogsvpc668A82AC
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/LB/PublicListener/ECSGroup/Resource
  ecsserviceServiceA4F72D46:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: unifiedloggerecsclusterCAA4DF4B
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: container
          ContainerPort: 80
          TargetGroupArn:
            Ref: ecsserviceLBPublicListenerECSGroup3F5A4B44
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - ecsserviceServiceSecurityGroupBE9BC6CD
                - GroupId
          Subnets:
            - Ref: unifiedlogsvpcPrivateSubnet1Subnet11EC1736
            - Ref: unifiedlogsvpcPrivateSubnet2Subnet435B49BB
      TaskDefinition:
        Ref: task117DF50A
    DependsOn:
      - ecsserviceLBPublicListenerECSGroup3F5A4B44
      - ecsserviceLBPublicListenerEC7E9209
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/Service/Service
  ecsserviceServiceSecurityGroupBE9BC6CD:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkUnifiedLogStack/ecs-service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: unifiedlogsvpc668A82AC
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/Service/SecurityGroup/Resource
  ecsserviceServiceSecurityGroupfromCdkUnifiedLogStackecsserviceLBSecurityGroup821E3DB9800F9C87AC:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - ecsserviceServiceSecurityGroupBE9BC6CD
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ecsserviceLBSecurityGroup1D9E4856
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/ecs-service/Service/SecurityGroup/from CdkUnifiedLogStackecsserviceLBSecurityGroup821E3DB9:80
  eksdeploymentNestedStackeksdeploymentNestedStackResource7205EAFD:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /49fc04686b5195cc4eb2f71e8425ea825aa4cccc708ca67289b0919938f0022c.json
    DependsOn:
      - ecsstackNestedStackecsstackNestedStackResourceA85FA658
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/eks-deployment.NestedStack/eks-deployment.NestedStackResource
      aws:asset:path: CdkUnifiedLogStackeksdeployment538C32A4.nested.template.json
      aws:asset:property: TemplateURL
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21TTZPaMAz9LXs33rLbQ48F9qO0tJuBHe7CEcFLYmcsG4bJ5L9XzgcJ2578JMvSk/Q8ldPHr/LL3Xc400Slx/tKWYey2nhQR7FGssEpFAtryLugvFgE8rYYLvZmwDdXibMnnaITMyL0nC/TJovxbWoGb8GXwUf0k6yJZwIOCvT8iA2umWqvralFJFehepDVtlTxbpssRBJ2uVabsDPYJBnQ2gaP77DLcfAPPuZjlYaY+RocwfMyiccf8K/g8QwXkTh9YjgkXhrmxrgPaJl01sxzY4cCjRcbVMFpf3l1NpQNhxvHkocJpp3eGN9EPWcOif5xL03jr4Ut0RCCUwdCd9KKl/ZkC9BNUy2qBT3Kah7UsaXfofZILE/vMrg7uzXmQFgLDYWsfoOBDNMh/Naxtu2Um3MIGlDfIOthr3POetQGSdNeOzxYQhnpYq5P6C4b7xAKgUeS1Qu4jAe7yFlVUUVnmgV/EL/CrlkBEvPQeyQ/ciXg1UF0L7uCvIxmPDOlbODdvPHclimLy6DyV5H+wLxYHMD5WuRQ7FJgAsGoXiRXvIILui066i7Gdhz3BKLaSTaiF6i4kb6DKOkOvgMdn3Cvje4LfPZY43mB6Ea+Fx5Yzjtf2azRrOsb7RpspdJAbsJmXJpDrxLscR1ZTUrwUcpMtCx5U81vWFlI55DHZaWfUmMO5LXKOWLXRPBfPvF3/P9r19Yb2eM4zSMwXUyPR/fvXJl/WE97ZNZ1LYxNUX7Q/Wn6TU4f5PTug7SeOF6sLlCu2/MvDn+Lr9UEAAA=
    Metadata:
      aws:cdk:path: CdkUnifiedLogStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  eksclusterClusterNameCE21A0DB:
    Value:
      Ref: ekscluster92983EFB
  eksclusterConfigCommand515C0544:
    Value:
      Fn::Join:
        - ""
        - - "aws eks update-kubeconfig --name "
          - Ref: ekscluster92983EFB
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - clustermasterroleCD184EDB
              - Arn
  eksclusterGetTokenCommand3C33A2A5:
    Value:
      Fn::Join:
        - ""
        - - "aws eks get-token --cluster-name "
          - Ref: ekscluster92983EFB
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - clustermasterroleCD184EDB
              - Arn
  ec2ipaddress:
    Value:
      Fn::GetAtt:
        - ec2instance42082E81
        - PublicIp
    Export:
      Name: EC2-IP-Address
  samplelambdafunction:
    Value:
      Ref: LambdatransformerfunctionFA3659EA
    Export:
      Name: Sample-Lambda-Function
  ecsserviceLoadBalancerDNS570CB744:
    Value:
      Fn::GetAtt:
        - ecsserviceLBAF58771B
        - DNSName
  ecsserviceServiceURL88A7B1EE:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - ecsserviceLBAF58771B
              - DNSName
  ecsloadbalancerurl:
    Value:
      Fn::GetAtt:
        - ecsserviceLBAF58771B
        - DNSName
    Export:
      Name: ECS-Load-balancer-URL
  opensearchdomainarn:
    Value:
      Fn::GetAtt:
        - opensearch2F25E4C7
        - Arn
    Export:
      Name: OpenSearch-Domain
  s3bucketname:
    Value:
      Ref: logsFailedErrCaptureBucket0BCC8303
    Export:
      Name: S3-Bucket-Name
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/aws-for-fluent-bit/latest
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

