Resources:
  ProwlerAuditReportBucket1D699EE6:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/ReportBucket/Resource
  ProwlerAuditReportBucketPolicy97748E07:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ProwlerAuditReportBucket1D699EE6
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - ProwlerAuditReportBucket1D699EE6
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ProwlerAuditReportBucket1D699EE6
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/ReportBucket/Policy/Resource
  ProwlerAuditReportBucketAutoDeleteObjectsCustomResource34C90E22:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: ProwlerAuditReportBucket1D699EE6
    DependsOn:
      - ProwlerAuditReportBucketPolicy97748E07
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/ReportBucket/AutoDeleteObjectsCustomResource/Default
  ProwlerAuditreportGroup178CA9F2:
    Type: AWS::CodeBuild::ReportGroup
    Properties:
      ExportConfig:
        ExportConfigType: NO_EXPORT
      Type: TEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/reportGroup/Resource
  ProwlerAuditprowlerBuildRoleC35C3CA9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/SecurityAudit
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/job-function/ViewOnlyAccess
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/prowlerBuild/Role/Resource
  ProwlerAuditprowlerBuildRoleDefaultPolicy40CB0230:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ProwlerAuditprowlerBuild7EB2FBA4
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ProwlerAuditprowlerBuild7EB2FBA4
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: ProwlerAuditprowlerBuild7EB2FBA4
                  - -*
          - Action: ds:ListAuthorizedApplications
            Effect: Allow
            Resource: "*"
          - Action: ec2:GetEbsEncryptionByDefault
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:DescribeImageScanFindings
              - ecr:DescribeImages
              - ecr:DescribeRegistry
            Effect: Allow
            Resource: "*"
          - Action: tag:GetTagKeys
            Effect: Allow
            Resource: "*"
          - Action: lambda:GetFunction
            Effect: Allow
            Resource: "*"
          - Action:
              - glue:GetConnections
              - glue:SearchTables
            Effect: Allow
            Resource: "*"
          - Action: apigateway:GET
            Effect: Allow
            Resource: "*"
          - Action: support:Describe*
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ProwlerAuditReportBucket1D699EE6
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: ProwlerAuditprowlerBuildRoleDefaultPolicy40CB0230
      Roles:
        - Ref: ProwlerAuditprowlerBuildRoleC35C3CA9
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/prowlerBuild/Role/DefaultPolicy/Resource
  ProwlerAuditprowlerBuild7EB2FBA4:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: BUCKET_REPORT
            Type: PLAINTEXT
            Value:
              Ref: ProwlerAuditReportBucket1D699EE6
          - Name: BUCKET_PREFIX
            Type: PLAINTEXT
            Value: ""
          - Name: ADDITIONAL_S3_ARGS
            Type: PLAINTEXT
            Value: ""
          - Name: PROWLER_OPTIONS
            Type: PLAINTEXT
            Value: -M text,junit-xml,html,csv,json
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - ProwlerAuditprowlerBuildRoleC35C3CA9
          - Arn
      Source:
        BuildSpec:
          Fn::Join:
            - ""
            - - |-
                {
                  "version": "0.2",
                  "phases": {
                    "install": {
                      "runtime-versions": {
                        "python": 3.9
                      },
                      "commands": [
                        "echo \"Installing Prowler and dependencies...\"",
                        "pip3 install detect-secrets",
                        "yum -y install jq",
                        "curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"",
                        "unzip awscliv2.zip",
                        "./aws/install",
                        "git clone -b 2.10.0 https://github.com/prowler-cloud/prowler"
                      ]
                    },
                    "pre_build": {
                      "commands": []
                    },
                    "build": {
                      "commands": [
                        "echo \"Running Prowler as ./prowler -M text,junit-xml,html,csv,json && echo OK || echo FAILED\"",
                        "cd prowler",
                        "./prowler -M text,junit-xml,html,csv,json && echo OK || echo FAILED"
                      ]
                    },
                    "post_build": {
                      "commands": [
                        "echo \"Uploading reports to S3...\" ",
                        "aws s3 cp --sse AES256 output/ s3://$BUCKET_REPORT/$BUCKET_PREFIX --recursive $ADDITIONAL_S3_ARGS",
                        "echo \"Done!\""
                      ]
                    }
                  },
                  "reports": {
                    "
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - /
                      - Ref: ProwlerAuditreportGroup178CA9F2
              - |-
                ": {
                      "files": [
                        "**/*"
                      ],
                      "base-directory": "prowler/junit-reports",
                      "file-format": "JunitXml"
                    }
                  }
                }
        Type: NO_SOURCE
      Cache:
        Type: NO_CACHE
      Description: Run Prowler assessment
      EncryptionKey: alias/aws/s3
      TimeoutInMinutes: 300
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/prowlerBuild/Resource
  ProwlerAuditMyRole3AEFBF5B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/MyRole/Resource
  ProwlerAuditMyRoleDefaultPolicy240C0267:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ProwlerAuditprowlerStartBuildLambda0B98F5F6
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ProwlerAuditprowlerStartBuildLambda0B98F5F6
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: ProwlerAuditMyRoleDefaultPolicy240C0267
      Roles:
        - Ref: ProwlerAuditMyRole3AEFBF5B
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/MyRole/DefaultPolicy/Resource
  ProwlerAuditprowlerStartBuildLambdaServiceRole7D000D80:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/prowlerStartBuildLambda/ServiceRole/Resource
  ProwlerAuditprowlerStartBuildLambdaServiceRoleDefaultPolicy9580B01F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codebuild:StartBuild
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ProwlerAuditprowlerStartBuildLambdaServiceRoleDefaultPolicy9580B01F
      Roles:
        - Ref: ProwlerAuditprowlerStartBuildLambdaServiceRole7D000D80
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/prowlerStartBuildLambda/ServiceRole/DefaultPolicy/Resource
  ProwlerAuditprowlerStartBuildLambda0B98F5F6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "import boto3

          import cfnresponse

          from botocore.exceptions import ClientError

          def lambda_handler(event,context):

          \  props = event['ResourceProperties']

          \  codebuild_client = boto3.client('codebuild')

          \  if (event['RequestType'] == 'Create' or event['RequestType'] == 'Update'):

          \    try:

          \        response = codebuild_client.start_build(projectName=props['Build'])

          \        print(response)

          \        print(\"Respond: SUCCESS\")

          \        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})

          \    except Exception as ex:

          \        print(ex.response['Error']['Message'])

          \        cfnresponse.send(event, context, cfnresponse.FAILED, ex.response)

          \      "
      Role:
        Fn::GetAtt:
          - ProwlerAuditprowlerStartBuildLambdaServiceRole7D000D80
          - Arn
      Handler: index.lambda_handler
      Runtime: python3.9
      Timeout: 120
    DependsOn:
      - ProwlerAuditprowlerStartBuildLambdaServiceRoleDefaultPolicy9580B01F
      - ProwlerAuditprowlerStartBuildLambdaServiceRole7D000D80
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/prowlerStartBuildLambda/Resource
  ProwlerAuditMyProviderframeworkonEvent45ABF2ED:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - ProwlerAuditMyRole3AEFBF5B
          - Arn
      Description: AWS CDK resource provider framework - onEvent (ProwlerAudit-stack/ProwlerAudit/MyProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - ProwlerAuditprowlerStartBuildLambda0B98F5F6
              - Arn
      Handler: framework.onEvent
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - ProwlerAuditMyRoleDefaultPolicy240C0267
      - ProwlerAuditMyRole3AEFBF5B
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/MyProvider/framework-onEvent/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ProwlerAuditMyProviderframeworkonEventLogRetention9F62070A:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: ProwlerAuditMyProviderframeworkonEvent45ABF2ED
      RetentionInDays: 3
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/MyProvider/framework-onEvent/LogRetention/Resource
  ProwlerAuditResource161ACC9DB:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - ProwlerAuditMyProviderframeworkonEvent45ABF2ED
          - Arn
      Build:
        Ref: ProwlerAuditprowlerBuild7EB2FBA4
      RERUN_PROWLER: ""
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/Resource1/Default
  ProwlerAuditScheduleLambdaServiceRole0341DF68:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/ScheduleLambda/ServiceRole/Resource
  ProwlerAuditScheduleLambda533C6929:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "import boto3

          \        import os

          \        def lambda_handler(event,context):

          \          codebuild_client = boto3.client('codebuild')

          \          print(\"Running Prowler scheduled!: \" + os.environ['buildName'])

          \          project_name = os.environ['buildName']

          \          response = codebuild_client.start_build(projectName=project_name)

          \          print(response)

          \          print(\"Respond: SUCCESS\")

          \        "
      Role:
        Fn::GetAtt:
          - ProwlerAuditScheduleLambdaServiceRole0341DF68
          - Arn
      Environment:
        Variables:
          buildName:
            Ref: ProwlerAuditprowlerBuild7EB2FBA4
      Handler: index.lambda_handler
      Runtime: python3.9
      Timeout: 120
    DependsOn:
      - ProwlerAuditScheduleLambdaServiceRole0341DF68
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/ScheduleLambda/Resource
  ProwlerAuditSchedulerC5D06D70:
    Type: AWS::Events::Rule
    Properties:
      Description: A schedule for the Lambda function that triggers Prowler in CodeBuild.
      ScheduleExpression: cron(0 22 * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - ProwlerAuditScheduleLambda533C6929
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/Scheduler/Resource
  ProwlerAuditSchedulerAllowEventRuleProwlerAuditstackProwlerAuditScheduleLambdaC87119006385E827:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProwlerAuditScheduleLambda533C6929
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - ProwlerAuditSchedulerC5D06D70
          - Arn
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/ProwlerAudit/Scheduler/AllowEventRuleProwlerAuditstackProwlerAuditScheduleLambdaC8711900
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs14.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: ProwlerAuditReportBucket1D699EE6
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca
      aws:asset:property: Code
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ae967c277459e8936ac565a71d34ea5dcff7b98e556466c36a4d6da023a2d9aa.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.ae967c277459e8936ac565a71d34ea5dcff7b98e556466c36a4d6da023a2d9aa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VQQW6EMAx8y96D210uvXaR2sseEH0AComLAiFZxQlVhfL3hkDL9jQztsdj+QJlCc8n/kWFkGOhVQfLh+diZKnULlTCcg1iRM+qT7OzDWqrlfg+yrvexJUTRiasxC4oLWFp8G6df3c23FfLo6ydHVDkgJ1GpviUPFZjHl7xiNtYZJpPneSwvAUjvLJm7T3yGt2kiJKKjMqWE6EneF2BadsT3GzfoEeTDTgnQik07KEJY2RVIG+nBskGJ7bGLxe51bpdE6TrZyXRsZyRvtgr07PD+2/V33BaWVkjlc+HmvQyGOhpPr/A+QLn00BKFS6kIyeEZsMf/jrbh7UBAAA=
    Metadata:
      aws:cdk:path: ProwlerAudit-stack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

