Resources:
  examplespringbootapplicationvpc2BFA1506:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/Resource
  examplespringbootapplicationvpcPublicSubnet1Subnet6030F598:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet1/Subnet
  examplespringbootapplicationvpcPublicSubnet1RouteTableF5B4B16E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet1/RouteTable
  examplespringbootapplicationvpcPublicSubnet1RouteTableAssociation9220496C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPublicSubnet1RouteTableF5B4B16E
      SubnetId:
        Ref: examplespringbootapplicationvpcPublicSubnet1Subnet6030F598
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet1/RouteTableAssociation
  examplespringbootapplicationvpcPublicSubnet1DefaultRoute8B829291:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPublicSubnet1RouteTableF5B4B16E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: examplespringbootapplicationvpcIGW295D411F
    DependsOn:
      - examplespringbootapplicationvpcVPCGW02958AFD
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet1/DefaultRoute
  examplespringbootapplicationvpcPublicSubnet1EIP9D8CA246:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet1/EIP
  examplespringbootapplicationvpcPublicSubnet1NATGateway0B08C059:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - examplespringbootapplicationvpcPublicSubnet1EIP9D8CA246
          - AllocationId
      SubnetId:
        Ref: examplespringbootapplicationvpcPublicSubnet1Subnet6030F598
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet1/NATGateway
  examplespringbootapplicationvpcPublicSubnet2SubnetAA3FBAD7:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet2/Subnet
  examplespringbootapplicationvpcPublicSubnet2RouteTableF6892605:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet2/RouteTable
  examplespringbootapplicationvpcPublicSubnet2RouteTableAssociation6D6CD065:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPublicSubnet2RouteTableF6892605
      SubnetId:
        Ref: examplespringbootapplicationvpcPublicSubnet2SubnetAA3FBAD7
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet2/RouteTableAssociation
  examplespringbootapplicationvpcPublicSubnet2DefaultRoute0AD36131:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPublicSubnet2RouteTableF6892605
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: examplespringbootapplicationvpcIGW295D411F
    DependsOn:
      - examplespringbootapplicationvpcVPCGW02958AFD
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PublicSubnet2/DefaultRoute
  examplespringbootapplicationvpcPrivateSubnet1SubnetF73D4E75:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet1/Subnet
  examplespringbootapplicationvpcPrivateSubnet1RouteTableF3150ED0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet1/RouteTable
  examplespringbootapplicationvpcPrivateSubnet1RouteTableAssociation230C55EC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPrivateSubnet1RouteTableF3150ED0
      SubnetId:
        Ref: examplespringbootapplicationvpcPrivateSubnet1SubnetF73D4E75
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet1/RouteTableAssociation
  examplespringbootapplicationvpcPrivateSubnet1DefaultRoute0C195584:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPrivateSubnet1RouteTableF3150ED0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: examplespringbootapplicationvpcPublicSubnet1NATGateway0B08C059
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet1/DefaultRoute
  examplespringbootapplicationvpcPrivateSubnet2Subnet2E72042F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet2/Subnet
  examplespringbootapplicationvpcPrivateSubnet2RouteTable8F51785B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet2/RouteTable
  examplespringbootapplicationvpcPrivateSubnet2RouteTableAssociationFF355633:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPrivateSubnet2RouteTable8F51785B
      SubnetId:
        Ref: examplespringbootapplicationvpcPrivateSubnet2Subnet2E72042F
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet2/RouteTableAssociation
  examplespringbootapplicationvpcPrivateSubnet2DefaultRoute377851B7:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: examplespringbootapplicationvpcPrivateSubnet2RouteTable8F51785B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: examplespringbootapplicationvpcPublicSubnet1NATGateway0B08C059
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/PrivateSubnet2/DefaultRoute
  examplespringbootapplicationvpcIGW295D411F:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ExampleApp/example-springboot-application-vpc
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/IGW
  examplespringbootapplicationvpcVPCGW02958AFD:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
      InternetGatewayId:
        Ref: examplespringbootapplicationvpcIGW295D411F
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-vpc/VPCGW
  examplespringbootapplicationcluster2100CD44:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: application-cluster
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-application-cluster/Resource
  examplespringbootloadbalancedapplicationLBC76701C6:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - examplespringbootloadbalancedapplicationLBSecurityGroup58470FCF
            - GroupId
      Subnets:
        - Ref: examplespringbootapplicationvpcPublicSubnet1Subnet6030F598
        - Ref: examplespringbootapplicationvpcPublicSubnet2SubnetAA3FBAD7
      Type: application
    DependsOn:
      - examplespringbootapplicationvpcPublicSubnet1DefaultRoute8B829291
      - examplespringbootapplicationvpcPublicSubnet2DefaultRoute0AD36131
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/LB/Resource
  examplespringbootloadbalancedapplicationLBSecurityGroup58470FCF:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB ExampleAppexamplespringbootloadbalancedapplicationLB47CCDF56
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/LB/SecurityGroup/Resource
  examplespringbootloadbalancedapplicationLBSecurityGrouptoExampleAppexamplespringbootloadbalancedapplicationServiceSecurityGroup052B68A0808070C63F0D:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - examplespringbootloadbalancedapplicationLBSecurityGroup58470FCF
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - examplespringbootloadbalancedapplicationServiceSecurityGroupE1E6350D
          - GroupId
      FromPort: 8080
      ToPort: 8080
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/LB/SecurityGroup/to ExampleAppexamplespringbootloadbalancedapplicationServiceSecurityGroup052B68A0:8080
  examplespringbootloadbalancedapplicationLBPublicListener8ACFBB7F:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: examplespringbootloadbalancedapplicationLBPublicListenerECSGroup8248E3BE
          Type: forward
      LoadBalancerArn:
        Ref: examplespringbootloadbalancedapplicationLBC76701C6
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/LB/PublicListener/Resource
  examplespringbootloadbalancedapplicationLBPublicListenerECSGroup8248E3BE:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /actuator/health
      HealthCheckPort: traffic-port
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,301,302
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/LB/PublicListener/ECSGroup/Resource
  examplespringbootloadbalancedapplicationTaskDefTaskRole60FA377C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/TaskDef/TaskRole/Resource
  examplespringbootloadbalancedapplicationTaskDef284A4DCE:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:5fe422f8905d5427ff60b6f6b3480157b08d306ba5a4870f06ae57218d438494
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: examplespringbootloadbalancedapplicationTaskDefwebLogGroupD26D3A6E
              awslogs-stream-prefix: example-springboot-load-balanced-application
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - examplespringbootloadbalancedapplicationTaskDefExecutionRole6C9C6E3B
          - Arn
      Family: ExampleAppexamplespringbootloadbalancedapplicationTaskDef5B25627D
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - examplespringbootloadbalancedapplicationTaskDefTaskRole60FA377C
          - Arn
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/TaskDef/Resource
  examplespringbootloadbalancedapplicationTaskDefwebLogGroupD26D3A6E:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/TaskDef/web/LogGroup/Resource
  examplespringbootloadbalancedapplicationTaskDefExecutionRole6C9C6E3B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/TaskDef/ExecutionRole/Resource
  examplespringbootloadbalancedapplicationTaskDefExecutionRoleDefaultPolicyB4E7CFDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - examplespringbootloadbalancedapplicationTaskDefwebLogGroupD26D3A6E
                - Arn
        Version: "2012-10-17"
      PolicyName: examplespringbootloadbalancedapplicationTaskDefExecutionRoleDefaultPolicyB4E7CFDB
      Roles:
        - Ref: examplespringbootloadbalancedapplicationTaskDefExecutionRole6C9C6E3B
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/TaskDef/ExecutionRole/DefaultPolicy/Resource
  examplespringbootloadbalancedapplicationServiceC4491618:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: examplespringbootapplicationcluster2100CD44
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 2
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 8080
          TargetGroupArn:
            Ref: examplespringbootloadbalancedapplicationLBPublicListenerECSGroup8248E3BE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - examplespringbootloadbalancedapplicationServiceSecurityGroupE1E6350D
                - GroupId
          Subnets:
            - Ref: examplespringbootapplicationvpcPrivateSubnet1SubnetF73D4E75
            - Ref: examplespringbootapplicationvpcPrivateSubnet2Subnet2E72042F
      TaskDefinition:
        Ref: examplespringbootloadbalancedapplicationTaskDef284A4DCE
    DependsOn:
      - examplespringbootloadbalancedapplicationLBPublicListenerECSGroup8248E3BE
      - examplespringbootloadbalancedapplicationLBPublicListener8ACFBB7F
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/Service/Service
  examplespringbootloadbalancedapplicationServiceSecurityGroupE1E6350D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ExampleApp/example-springboot-load-balanced-application/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: examplespringbootapplicationvpc2BFA1506
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/Service/SecurityGroup/Resource
  examplespringbootloadbalancedapplicationServiceSecurityGroupfromExampleAppexamplespringbootloadbalancedapplicationLBSecurityGroup3087BA758080E7C2E0E0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - examplespringbootloadbalancedapplicationServiceSecurityGroupE1E6350D
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - examplespringbootloadbalancedapplicationLBSecurityGroup58470FCF
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/Service/SecurityGroup/from ExampleAppexamplespringbootloadbalancedapplicationLBSecurityGroup3087BA75:8080
  examplespringbootloadbalancedapplicationServiceTaskCountTargetCC876E32:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 4
      MinCapacity: 2
      ResourceId:
        Fn::Join:
          - ""
          - - service/
            - Ref: examplespringbootapplicationcluster2100CD44
            - /
            - Fn::GetAtt:
                - examplespringbootloadbalancedapplicationServiceC4491618
                - Name
      RoleARN:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":iam::"
            - Ref: AWS::AccountId
            - :role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/Service/TaskCount/Target/Resource
  examplespringbootloadbalancedapplicationServiceTaskCountTargetcpuautoscaling53C85A99:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: cpu-autoscaling-policy
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: examplespringbootloadbalancedapplicationServiceTaskCountTargetCC876E32
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        ScaleInCooldown: 30
        ScaleOutCooldown: 30
        TargetValue: 45
    Metadata:
      aws:cdk:path: ExampleApp/example-springboot-load-balanced-application/Service/TaskCount/Target/cpu-autoscaling/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31TTU/jMBD9LdxdoyIhsbctgUWV0G6UVNxdZ8iapnbkGRdVUf47Y6dpUkCc/Pzm+429lL9u5fLqt3rHha521512HmRXktI7UQC64DWI7NX+C9QGEpmzSD5oitzczobKkHG2FzFXB/pGdi+tjraXPBN52DZGl2FrIcVOqHCBYKO2DUz8xK0QnTYqZj47R/C4zuPxV9GTInhXR5F7c2A4JV5bAs94dBg6Od1WxCP+34MlUYIO3tDxybvQph5+JB5rD4hf6LVNfC9Ao+yyJiBXT8qc4B/laxWnwt0DvBprxpk+M86SMhb8jDvFluAPZtB7hKVWTdQpJslcsJQaWLSK4vAoV23Luif9np2q7tnbaqg+JYRGIRndsMc2eRhbH3iB30ensS7ucz/D09qTz4hn9g1X5p2M0s6uvTBqL7vCDS8hnbnjuLS6AcXp/EIhAqF8cHoHfr1XdXwmvHS2yQJah4acP94rBNG4mtfx7OpzxRHzQ526UoEcspQ8N7/+s6axt6T2JTMcG8+fhAPKIW5q9YLouc7QLn+qmuleWFeBfMPrw/JOLm/4+72hMQvPyzN7kMVwfgAsZyqBmgMAAA==
    Metadata:
      aws:cdk:path: ExampleApp/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  examplespringbootloadbalancedapplicationLoadBalancerDNS0C825802:
    Value:
      Fn::GetAtt:
        - examplespringbootloadbalancedapplicationLBC76701C6
        - DNSName
  examplespringbootloadbalancedapplicationServiceURLEBDB4578:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - examplespringbootloadbalancedapplicationLBC76701C6
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

