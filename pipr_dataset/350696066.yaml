Resources:
  SitePublisherRoleB985EA4C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::ImportValue: UserArn
        Version: "2012-10-17"
      Description: This role can be used to publish site content.
      RoleName: www.voegele.mePublisher
    Metadata:
      aws:cdk:path: BlogInfraStack/SitePublisherRole/Resource
  SiteBucket397A1860:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: www.voegele.me
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteBucket/Resource
  SiteBucketPolicy3AC1D0F8:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: SiteBucket397A1860
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - SiteBucket397A1860
                      - Arn
                  - /*
          - Action:
              - s3:List*
              - s3:Get*
              - s3:Put*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - SitePublisherRoleB985EA4C
                  - Arn
            Resource:
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SiteBucket397A1860
                        - Arn
                    - /*
              - Fn::GetAtt:
                  - SiteBucket397A1860
                  - Arn
          - Action: "*"
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:aws:iam::"
                    - Ref: AWS::AccountId
                    - :role/admin
            Resource:
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SiteBucket397A1860
                        - Arn
                    - /*
              - Fn::GetAtt:
                  - SiteBucket397A1860
                  - Arn
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - OAIE1EFC67F
                  - S3CanonicalUserId
            Resource:
              - Fn::GetAtt:
                  - SiteBucket397A1860
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SiteBucket397A1860
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - OAIE1EFC67F
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - SiteBucket397A1860
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteBucket/Policy/Resource
  OAIE1EFC67F:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allows CloudFront to reach the bucket
    Metadata:
      aws:cdk:path: BlogInfraStack/OAI/Resource
  SiteCertificateCertificateRequestorFunctionServiceRole645E891D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteCertificate/CertificateRequestorFunction/ServiceRole/Resource
  SiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy96ED5C9C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - acm:RequestCertificate
              - acm:DescribeCertificate
              - acm:DeleteCertificate
            Effect: Allow
            Resource: "*"
          - Action: route53:GetChange
            Effect: Allow
            Resource: "*"
          - Action: route53:changeResourceRecordSets
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :route53:::hostedzone/
                  - Fn::ImportValue: voegelemeZoneId
        Version: "2012-10-17"
      PolicyName: SiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy96ED5C9C
      Roles:
        - Ref: SiteCertificateCertificateRequestorFunctionServiceRole645E891D
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteCertificate/CertificateRequestorFunction/ServiceRole/DefaultPolicy/Resource
  SiteCertificateCertificateRequestorFunction7CFA7DEA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3BucketFCCD3A76
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6
      Role:
        Fn::GetAtt:
          - SiteCertificateCertificateRequestorFunctionServiceRole645E891D
          - Arn
      Handler: index.certificateRequestHandler
      Runtime: nodejs10.x
      Timeout: 900
    DependsOn:
      - SiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy96ED5C9C
      - SiteCertificateCertificateRequestorFunctionServiceRole645E891D
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteCertificate/CertificateRequestorFunction/Resource
      aws:asset:path: asset.19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2
      aws:asset:property: Code
  SiteCertificateCertificateRequestorResource6021082A:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - SiteCertificateCertificateRequestorFunction7CFA7DEA
          - Arn
      DomainName: www.voegele.me
      HostedZoneId:
        Fn::ImportValue: voegelemeZoneId
      Region: us-east-1
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteCertificate/CertificateRequestorResource/Default
  SiteDistributionCFDistribution209CF7F5:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - www.voegele.me
        CustomErrorResponses:
          - ErrorCode: 400
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 403
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 405
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 414
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 416
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 500
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 501
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 502
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 503
            ResponseCode: 404
            ResponsePagePath: /error.html
          - ErrorCode: 504
            ResponseCode: 404
            ResponsePagePath: /error.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName:
              Fn::GetAtt:
                - SiteBucket397A1860
                - RegionalDomainName
            Id: origin1
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: OAIE1EFC67F
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn:
            Fn::GetAtt:
              - SiteCertificateCertificateRequestorResource6021082A
              - Arn
          MinimumProtocolVersion: TLSv1.2_2019
          SslSupportMethod: sni-only
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteDistribution/CFDistribution
  SiteAliasRecord3C0AF5BF:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: www.voegele.me.
      Type: A
      AliasTarget:
        DNSName:
          Fn::GetAtt:
            - SiteDistributionCFDistribution209CF7F5
            - DomainName
        HostedZoneId:
          Fn::FindInMap:
            - AWSCloudFrontPartitionHostedZoneIdMap
            - Ref: AWS::Partition
            - zoneId
      HostedZoneId:
        Fn::ImportValue: voegelemeZoneId
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteAliasRecord/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE21RwW7CMAz9Fu4hrKBJ222sCGmHaahI29kkBhnaBMXOpinqvy9px+Cwk5/t9+w8p9KPC303eYIvnhp7miXjA+q0FTAn1SD7GAyq2juWEI2oJTNK7h7IHVQdWXx3Ze3dLd5AgA4FQ0le4XzOkl6VRYmg06nx7agpceNbMt+DbEC94oVOz9GcUEr1F43hSr7Ne2VaH+0+eCc6vQXKb1wag8wvFp2QDIq6cNaF8z/jr/2BuxVl17SLQt4V7W2et2EQ2pMBwQ4cHDDoleN3aMnmkq2vbdVCt7Og0zo6cxl2wcXpFMpZWQ/XVcFHwftsf9lg/g47HragLUrf98p5i/rIs8/qQVdzXU2OTDQNMVvoUDdj/AFiRqrJ2gEAAA==
    Metadata:
      aws:cdk:path: BlogInfraStack/CDKMetadata/Default
Parameters:
  AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3BucketFCCD3A76:
    Type: String
    Description: S3 bucket for asset "19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2"
  AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6:
    Type: String
    Description: S3 key for asset version "19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2"
  AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2ArtifactHash652C125C:
    Type: String
    Description: Artifact hash for asset "19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2"
Mappings:
  AWSCloudFrontPartitionHostedZoneIdMap:
    aws:
      zoneId: Z2FDTNDATAQYW2
    aws-cn:
      zoneId: Z3RFFRIM2A3IF5

