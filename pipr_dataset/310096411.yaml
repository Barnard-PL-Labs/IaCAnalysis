Description: "(SO0146) v1.1.0: Video on Demand on AWS Foundation Solution Implementation"
Mappings:
  Send:
    AnonymousUsage:
      Data: "Yes"
Parameters:
  emailAddress:
    Type: String
    AllowedPattern: ^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{2,})$
    Description: The admin email address to receive SNS notifications for job status.
  AssetParameters8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865S3Bucket106F0DD3:
    Type: String
    Description: S3 bucket for asset "8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865"
  AssetParameters8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865S3VersionKey7F3FD976:
    Type: String
    Description: S3 key for asset version "8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865"
  AssetParameters8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865ArtifactHash351B3B30:
    Type: String
    Description: Artifact hash for asset "8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865"
  AssetParameters6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529S3BucketD88540BD:
    Type: String
    Description: S3 bucket for asset "6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529"
  AssetParameters6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529S3VersionKey70BD02F2:
    Type: String
    Description: S3 key for asset version "6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529"
  AssetParameters6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529ArtifactHash587DE8F1:
    Type: String
    Description: Artifact hash for asset "6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529"
  AssetParametersffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515S3Bucket0710537F:
    Type: String
    Description: S3 bucket for asset "ffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515"
  AssetParametersffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515S3VersionKeyF0A77C80:
    Type: String
    Description: S3 key for asset version "ffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515"
  AssetParametersffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515ArtifactHash1A05A240:
    Type: String
    Description: Artifact hash for asset "ffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515"
Resources:
  Logs6819BB44:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: Logs bucket does not require logging configuration
          - id: W51
            reason: Logs bucket is private and does not require a bucket policy
  Source71E471F1:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName:
          Ref: Logs6819BB44
        LogFilePrefix: source-bucket-logs/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W51
            reason: source bucket is private and does not require a bucket policy
  Destination920A3C57:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      LoggingConfiguration:
        DestinationBucketName:
          Ref: Logs6819BB44
        LogFilePrefix: destination-bucket-logs/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: VodFoundation/Destination/Resource
  DestinationPolicy7982387E:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Destination920A3C57
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - CloudFrontCloudFrontDistributionOrigin1S3Origin17B88F1A
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - Destination920A3C57
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F16
            reason: Public website bucket policy requires a wildcard principal
  CloudFrontCloudfrontLoggingBucketE23C521E:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: This S3 bucket is used as the access logging bucket for CloudFront Distribution
  CloudFrontCloudfrontLoggingBucketPolicyD60AA01A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CloudFrontCloudfrontLoggingBucketE23C521E
      PolicyDocument:
        Statement:
          - Action: "*"
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - CloudFrontCloudfrontLoggingBucketE23C521E
                      - Arn
                  - /*
            Sid: HttpsOnly
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: VodFoundation/CloudFront/CloudfrontLoggingBucket/Policy/Resource
  CloudFrontCloudFrontDistributionOrigin1S3Origin17B88F1A:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Identity for VodFoundationCloudFrontCloudFrontDistributionOrigin1F191A578
    Metadata:
      aws:cdk:path: VodFoundation/CloudFront/CloudFrontDistribution/Origin1/S3Origin/Resource
  CloudFrontCloudFrontDistribution824F3346:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment:
          Fn::Join:
            - ""
            - - Ref: AWS::StackName
              - " Video on Demand Foundation"
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: VodFoundationCloudFrontCloudFrontDistributionOrigin1F191A578
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket:
            Fn::GetAtt:
              - CloudFrontCloudfrontLoggingBucketE23C521E
              - RegionalDomainName
        Origins:
          - DomainName:
              Fn::GetAtt:
                - Destination920A3C57
                - RegionalDomainName
            Id: VodFoundationCloudFrontCloudFrontDistributionOrigin1F191A578
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: CloudFrontCloudFrontDistributionOrigin1S3Origin17B88F1A
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W70
            reason: Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion
  MediaConvertRole031A64A9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: mediaconvert.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: VodFoundation/MediaConvertRole/Resource
  MediaconvertPolicy9E3026EC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Source71E471F1
                        - Arn
                    - /*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Destination920A3C57
                        - Arn
                    - /*
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :*
        Version: "2012-10-17"
      PolicyName: MediaconvertPolicy9E3026EC
      Roles:
        - Ref: MediaConvertRole031A64A9
    Metadata:
      aws:cdk:path: VodFoundation/MediaconvertPolicy/Resource
  CustomResourceServiceRoleE774390D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VodFoundation/CustomResource/ServiceRole/Resource
  CustomResourceServiceRoleDefaultPolicy62213138:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:PutBucketNotification
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Source71E471F1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Source71E471F1
                        - Arn
                    - /*
          - Action: mediaconvert:DescribeEndpoints
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:mediaconvert:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :*
        Version: "2012-10-17"
      PolicyName: CustomResourceServiceRoleDefaultPolicy62213138
      Roles:
        - Ref: CustomResourceServiceRoleE774390D
    Metadata:
      aws:cdk:path: VodFoundation/CustomResource/ServiceRole/DefaultPolicy/Resource
  CustomResource8CDCD7A7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865S3Bucket106F0DD3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865S3VersionKey7F3FD976
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8d4f5f3f2089157ba55135536b1bfca9113929423b931ae59ad49afc2de8d865S3VersionKey7F3FD976
      Role:
        Fn::GetAtt:
          - CustomResourceServiceRoleE774390D
          - Arn
      Description: CFN Custom resource to copy assets to S3 and get the MediaConvert endpoint
      Environment:
        Variables:
          SOLUTION_IDENTIFIER: AwsSolution/SO0146/v1.1.0
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 30
    DependsOn:
      - CustomResourceServiceRoleDefaultPolicy62213138
      - CustomResourceServiceRoleE774390D
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "Invalid warning: function has access to cloudwatch"
          - id: W89
            reason: AWS Lambda does not require VPC for this solution.
          - id: W92
            reason: ReservedConcurrentExecutions not required
  Endpoint:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomResource8CDCD7A7
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: VodFoundation/Endpoint/Default
  jobSubmitServiceRole829286B1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VodFoundation/jobSubmit/ServiceRole/Resource
  jobSubmitServiceRoleDefaultPolicyEC39C00E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MediaConvertRole031A64A9
                - Arn
          - Action: mediaconvert:CreateJob
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":mediaconvert:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :*
          - Action: s3:GetObject
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Source71E471F1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Source71E471F1
                        - Arn
                    - /*
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: NotificationSnsTopicB941FD22
        Version: "2012-10-17"
      PolicyName: jobSubmitServiceRoleDefaultPolicyEC39C00E
      Roles:
        - Ref: jobSubmitServiceRole829286B1
    Metadata:
      aws:cdk:path: VodFoundation/jobSubmit/ServiceRole/DefaultPolicy/Resource
  jobSubmitB391E42F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529S3BucketD88540BD
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529S3VersionKey70BD02F2
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6e4f701df8ba3e9b541c3903aa9b750a24f9e10d7ee632895bf17ecfa5c89529S3VersionKey70BD02F2
      Role:
        Fn::GetAtt:
          - jobSubmitServiceRole829286B1
          - Arn
      Description: Submits an Encoding job to MediaConvert
      Environment:
        Variables:
          MEDIACONVERT_ENDPOINT:
            Fn::GetAtt:
              - Endpoint
              - Endpoint
          MEDIACONVERT_ROLE:
            Fn::GetAtt:
              - MediaConvertRole031A64A9
              - Arn
          JOB_SETTINGS: job-settings.json
          DESTINATION_BUCKET:
            Ref: Destination920A3C57
          SOLUTION_ID: SO0146
          STACKNAME:
            Ref: AWS::StackName
          SOLUTION_IDENTIFIER: AwsSolution/SO0146/v1.1.0
          SNS_TOPIC_ARN:
            Ref: NotificationSnsTopicB941FD22
          SNS_TOPIC_NAME:
            Fn::GetAtt:
              - NotificationSnsTopicB941FD22
              - TopicName
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 30
    DependsOn:
      - jobSubmitServiceRoleDefaultPolicyEC39C00E
      - jobSubmitServiceRole829286B1
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "Invalid warning: function has access to cloudwatch"
          - id: W89
            reason: AWS Lambda does not require VPC for this solution.
          - id: W92
            reason: ReservedConcurrentExecutions not required
  jobSubmitEventInvokeConfig0385F502:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: jobSubmitB391E42F
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: VodFoundation/jobSubmit/EventInvokeConfig/Resource
  jobSubmitS3Trigger3DEB8D7C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - jobSubmitB391E42F
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
    Metadata:
      aws:cdk:path: VodFoundation/jobSubmit/S3Trigger
  JobCompleteServiceRole2855C268:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: VodFoundation/JobComplete/ServiceRole/Resource
  JobCompleteServiceRoleDefaultPolicy686BE0F5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: mediaconvert:GetJob
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":mediaconvert:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :*
          - Action:
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - Source71E471F1
                      - Arn
                  - /*
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: NotificationSnsTopicB941FD22
        Version: "2012-10-17"
      PolicyName: JobCompleteServiceRoleDefaultPolicy686BE0F5
      Roles:
        - Ref: JobCompleteServiceRole2855C268
    Metadata:
      aws:cdk:path: VodFoundation/JobComplete/ServiceRole/DefaultPolicy/Resource
  JobComplete703682D0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515S3Bucket0710537F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515S3VersionKeyF0A77C80
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersffc4650ec1e93c58a86f8c6306a8cb8ace1fcced5ba2200ce6da503eefcd2515S3VersionKeyF0A77C80
      Role:
        Fn::GetAtt:
          - JobCompleteServiceRole2855C268
          - Arn
      Description: Triggered by Cloudwatch Events,processes completed MediaConvert jobs.
      Environment:
        Variables:
          MEDIACONVERT_ENDPOINT:
            Fn::GetAtt:
              - Endpoint
              - Endpoint
          CLOUDFRONT_DOMAIN:
            Fn::GetAtt:
              - CloudFrontCloudFrontDistribution824F3346
              - DomainName
          SOURCE_BUCKET:
            Ref: Source71E471F1
          JOB_MANIFEST: jobs-manifest.json
          STACKNAME:
            Ref: AWS::StackName
          METRICS:
            Fn::FindInMap:
              - Send
              - AnonymousUsage
              - Data
          SOLUTION_ID: SO0146
          VERSION: 1.1.0
          UUID:
            Fn::GetAtt:
              - Endpoint
              - UUID
          SOLUTION_IDENTIFIER: AwsSolution/SO0146/v1.1.0
          SNS_TOPIC_ARN:
            Ref: NotificationSnsTopicB941FD22
          SNS_TOPIC_NAME:
            Fn::GetAtt:
              - NotificationSnsTopicB941FD22
              - TopicName
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 30
    DependsOn:
      - JobCompleteServiceRoleDefaultPolicy686BE0F5
      - JobCompleteServiceRole2855C268
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "Invalid warning: function has access to cloudwatch"
          - id: W89
            reason: AWS Lambda does not require VPC for this solution.
          - id: W92
            reason: ReservedConcurrentExecutions not required
  JobCompleteEventInvokeConfig692D89BE:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: JobComplete703682D0
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: VodFoundation/JobComplete/EventInvokeConfig/Resource
  JobCompleteAwsEventsLambdaInvokePermission1ED79B615:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - JobComplete703682D0
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - EventTriggerEventsRule76A88FDF
          - Arn
    Metadata:
      aws:cdk:path: VodFoundation/JobComplete/AwsEventsLambdaInvokePermission-1
  S3Config:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomResource8CDCD7A7
          - Arn
      SourceBucket:
        Ref: Source71E471F1
      LambdaArn:
        Fn::GetAtt:
          - jobSubmitB391E42F
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: VodFoundation/S3Config/Default
  EventTriggerEventsRule76A88FDF:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.mediaconvert
        detail:
          userMetadata:
            StackName:
              - Ref: AWS::StackName
          status:
            - COMPLETE
            - ERROR
            - CANCELED
            - INPUT_INFORMATION
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - JobComplete703682D0
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: VodFoundation/EventTrigger/EventsRule/Resource
  NotificationSnsTopicB941FD22:
    Type: AWS::SNS::Topic
    Properties:
      KmsMasterKeyId:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":kms:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - :alias/aws/sns
    Metadata:
      aws:cdk:path: VodFoundation/Notification/SnsTopic/Resource
  NotificationSnsTopicPolicy4027082A:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - SNS:Publish
              - SNS:RemovePermission
              - SNS:SetTopicAttributes
              - SNS:DeleteTopic
              - SNS:ListSubscriptionsByTopic
              - SNS:GetTopicAttributes
              - SNS:Receive
              - SNS:AddPermission
              - SNS:Subscribe
            Condition:
              StringEquals:
                AWS:SourceOwner:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource:
              Ref: NotificationSnsTopicB941FD22
            Sid: TopicOwnerOnlyAccess
          - Action:
              - SNS:Publish
              - SNS:RemovePermission
              - SNS:SetTopicAttributes
              - SNS:DeleteTopic
              - SNS:ListSubscriptionsByTopic
              - SNS:GetTopicAttributes
              - SNS:Receive
              - SNS:AddPermission
              - SNS:Subscribe
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal: "*"
            Resource:
              Ref: NotificationSnsTopicB941FD22
            Sid: HttpsOnly
        Version: "2012-10-17"
      Topics:
        - Ref: NotificationSnsTopicB941FD22
    Metadata:
      aws:cdk:path: VodFoundation/Notification/SnsTopic/Policy/Resource
  NotificationSnsTopicTokenSubscription1209F3ABA:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn:
        Ref: NotificationSnsTopicB941FD22
      Endpoint:
        Ref: emailAddress
    Metadata:
      aws:cdk:path: VodFoundation/Notification/SnsTopic/TokenSubscription:1/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE3VSwW7CMAz9Fu5poOtlxwEbEtImEPADITUotE2qOGGaqv77nKTQHrZLbb/YL88vzXmeL/hi9ia+MetkWc07aSzw7uiErNj6or9E2yp9DeleWNGAA8vWRqOzXjq2RARHzdfY49GZ5gBovJUQRp75FNx513oXMuIplVNG9ywKwIJ3Ky8riKdDlsLe1Er+jPBQp2IlEHoma+PLizXa8e5dkUB19oGc7awifUspAXFbgnbKRaZ1GNiEgf86pjQ9U6Lh3cHUabUQR1Up61ktmnMpeLfxWsbL6eyZf9yJeqvvpgJa/aKirX+Ce7CNQozXYpGJYDPy6DaDMICkxA9KKFKXJuhkWiUDlpL4HTVOy6M/o7SqfWic1n1PdKaOW2MmH4+N8/SXPG3O6L1GD0/mWAzaMkuSssGKuB8GkSfzGaHBpCxITgjNaqRbtSmB33B+z195/sLz2Q2VIjZ6kAb4IcVfdOWu7rUCAAA=
    Metadata:
      aws:cdk:path: VodFoundation/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  SourceBucket:
    Description: Source S3 Bucket used to host source video and MediaConvert job settings files
    Value:
      Ref: Source71E471F1
    Export:
      Name:
        Fn::Join:
          - ""
          - - Ref: AWS::StackName
            - -SourceBucket
  DestinationBucket:
    Description: Source S3 Bucket used to host all MediaConvert ouputs
    Value:
      Ref: Destination920A3C57
    Export:
      Name:
        Fn::Join:
          - ""
          - - Ref: AWS::StackName
            - -DestinationBucket
  CloudFrontDomain:
    Description: CloudFront Domain Name
    Value:
      Fn::GetAtt:
        - CloudFrontCloudFrontDistribution824F3346
        - DomainName
    Export:
      Name:
        Fn::Join:
          - ""
          - - Ref: AWS::StackName
            - -CloudFrontDomain
  SnsTopic:
    Description: SNS Topic used to capture the VOD workflow outputs including errors
    Value:
      Fn::GetAtt:
        - NotificationSnsTopicB941FD22
        - TopicName
    Export:
      Name:
        Fn::Join:
          - ""
          - - Ref: AWS::StackName
            - -SnsTopic
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

