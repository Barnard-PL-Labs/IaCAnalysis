Description: (SO8024) - BEV BMS Battery Consistency Bias Alarm Prediction Stack. Template version v1.0
Parameters:
  sagemakerEndpointName:
    Type: String
    Default: battery-consistency-bias-alarm-prediction-endpoint
    Description: Sagemaker Runtime Endpoint Name
  AssetParametersfc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6ccS3Bucket67356811:
    Type: String
    Description: S3 bucket for asset "fc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6cc"
  AssetParametersfc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6ccS3VersionKeyAD0A9BFD:
    Type: String
    Description: S3 key for asset version "fc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6cc"
  AssetParametersfc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6ccArtifactHashF04AEA92:
    Type: String
    Description: Artifact hash for asset "fc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6cc"
  AssetParameters9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60S3BucketF676E4B8:
    Type: String
    Description: S3 bucket for asset "9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60"
  AssetParameters9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60S3VersionKey59D407D9:
    Type: String
    Description: S3 key for asset version "9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60"
  AssetParameters9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60ArtifactHashB5F07C70:
    Type: String
    Description: Artifact hash for asset "9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60"
Resources:
  bevBmsBatteryConsistencyBiasAlarmPredictionTrainS3B36B5565:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - bev-bms-train-
            - Ref: AWS::Region
            - "-"
            - Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionTrainS3/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionInferS3DA07B0A1:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - bev-bms-infer-
            - Ref: AWS::Region
            - "-"
            - Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionInferS3/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionInferS3NotificationsCB3DB350:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionInferS3DA07B0A1
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            Filter:
              Key:
                FilterRules:
                  - Name: suffix
                    Value: .csv
            LambdaFunctionArn:
              Fn::GetAtt:
                - bevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger9CC841DB
                - Arn
      Managed: true
    DependsOn:
      - bevBmsBatteryConsistencyBiasAlarmPredictionInferS3AllowBucketNotificationsToAwsBevBmsBatteryConsistencyBiasAlarmPredictionStackbevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger25ADF3A8DED8F81C
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionInferS3/Notifications/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionInferS3AllowBucketNotificationsToAwsBevBmsBatteryConsistencyBiasAlarmPredictionStackbevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger25ADF3A8DED8F81C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger9CC841DB
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionInferS3DA07B0A1
          - Arn
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionInferS3/AllowBucketNotificationsToAwsBevBmsBatteryConsistencyBiasAlarmPredictionStackbevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger25ADF3A8
  bevBmsBatteryConsistencyBiasAlarmPredictionEventsS3C7FC4E91:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - bev-bms-events-
            - Ref: AWS::Region
            - "-"
            - Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionEventsS3/Resource
  supersetVpcD0A7C8D9:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/Resource
  supersetVpcPublicSubnet1SubnetC154B8F9:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1/Subnet
  supersetVpcPublicSubnet1RouteTable4A3AD087:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1/RouteTable
  supersetVpcPublicSubnet1RouteTableAssociation35036C0E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: supersetVpcPublicSubnet1RouteTable4A3AD087
      SubnetId:
        Ref: supersetVpcPublicSubnet1SubnetC154B8F9
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1/RouteTableAssociation
  supersetVpcPublicSubnet1DefaultRoute0FF44189:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: supersetVpcPublicSubnet1RouteTable4A3AD087
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: supersetVpcIGW3437E82D
    DependsOn:
      - supersetVpcVPCGW532651AA
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1/DefaultRoute
  supersetVpcPublicSubnet1EIPFBBDF426:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1/EIP
  supersetVpcPublicSubnet1NATGatewayE22FE37C:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: supersetVpcPublicSubnet1SubnetC154B8F9
      AllocationId:
        Fn::GetAtt:
          - supersetVpcPublicSubnet1EIPFBBDF426
          - AllocationId
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet1/NATGateway
  supersetVpcPublicSubnet2SubnetDFD078B2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2/Subnet
  supersetVpcPublicSubnet2RouteTableEAA00A7E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2/RouteTable
  supersetVpcPublicSubnet2RouteTableAssociationE0EA4794:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: supersetVpcPublicSubnet2RouteTableEAA00A7E
      SubnetId:
        Ref: supersetVpcPublicSubnet2SubnetDFD078B2
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2/RouteTableAssociation
  supersetVpcPublicSubnet2DefaultRouteC6E1C641:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: supersetVpcPublicSubnet2RouteTableEAA00A7E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: supersetVpcIGW3437E82D
    DependsOn:
      - supersetVpcVPCGW532651AA
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2/DefaultRoute
  supersetVpcPublicSubnet2EIPBA171A82:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2/EIP
  supersetVpcPublicSubnet2NATGateway36387C6E:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: supersetVpcPublicSubnet2SubnetDFD078B2
      AllocationId:
        Fn::GetAtt:
          - supersetVpcPublicSubnet2EIPBA171A82
          - AllocationId
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PublicSubnet2/NATGateway
  supersetVpcPrivateSubnet1Subnet4094F501:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet1/Subnet
  supersetVpcPrivateSubnet1RouteTable37F5F3FD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet1/RouteTable
  supersetVpcPrivateSubnet1RouteTableAssociation02CA65C0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: supersetVpcPrivateSubnet1RouteTable37F5F3FD
      SubnetId:
        Ref: supersetVpcPrivateSubnet1Subnet4094F501
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet1/RouteTableAssociation
  supersetVpcPrivateSubnet1DefaultRoute67742DEB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: supersetVpcPrivateSubnet1RouteTable37F5F3FD
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: supersetVpcPublicSubnet1NATGatewayE22FE37C
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet1/DefaultRoute
  supersetVpcPrivateSubnet2Subnet1F5D7D0A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet2/Subnet
  supersetVpcPrivateSubnet2RouteTableD4EE03BB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet2/RouteTable
  supersetVpcPrivateSubnet2RouteTableAssociation83F3D800:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: supersetVpcPrivateSubnet2RouteTableD4EE03BB
      SubnetId:
        Ref: supersetVpcPrivateSubnet2Subnet1F5D7D0A
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet2/RouteTableAssociation
  supersetVpcPrivateSubnet2DefaultRoute5711B0DE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: supersetVpcPrivateSubnet2RouteTableD4EE03BB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: supersetVpcPublicSubnet2NATGateway36387C6E
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/PrivateSubnet2/DefaultRoute
  supersetVpcIGW3437E82D:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/IGW
  supersetVpcVPCGW532651AA:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: supersetVpcD0A7C8D9
      InternetGatewayId:
        Ref: supersetVpcIGW3437E82D
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetVpc/VPCGW
  supersetCluster00A32ADB:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetCluster/Resource
  supersetFargateServiceLBB7E11822:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - supersetFargateServiceLBSecurityGroupC8D6C07D
            - GroupId
      Subnets:
        - Ref: supersetVpcPublicSubnet1SubnetC154B8F9
        - Ref: supersetVpcPublicSubnet2SubnetDFD078B2
      Type: application
    DependsOn:
      - supersetVpcPublicSubnet1DefaultRoute0FF44189
      - supersetVpcPublicSubnet2DefaultRouteC6E1C641
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/LB/Resource
  supersetFargateServiceLBSecurityGroupC8D6C07D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB AwsBevBmsBatteryConsistencyBiasAlarmPredictionStacksupersetFargateServiceLBFD4D1FE9
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: supersetVpcD0A7C8D9
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/LB/SecurityGroup/Resource
  supersetFargateServiceLBSecurityGrouptoAwsBevBmsBatteryConsistencyBiasAlarmPredictionStacksupersetFargateServiceSecurityGroup91C8DDD880E2747601:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - supersetFargateServiceLBSecurityGroupC8D6C07D
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - supersetFargateServiceSecurityGroup1F1FD17C
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/LB/SecurityGroup/to AwsBevBmsBatteryConsistencyBiasAlarmPredictionStacksupersetFargateServiceSecurityGroup91C8DDD8:80
  supersetFargateServiceLBPublicListener48B5013B:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: supersetFargateServiceLBPublicListenerECSGroup43FE3584
          Type: forward
      LoadBalancerArn:
        Ref: supersetFargateServiceLBB7E11822
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/LB/PublicListener/Resource
  supersetFargateServiceLBPublicListenerECSGroup43FE3584:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /login/
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: supersetVpcD0A7C8D9
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/LB/PublicListener/ECSGroup/Resource
  supersetFargateServiceTaskDefTaskRole087960DE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonAthenaFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3FullAccess
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/TaskDef/TaskRole/Resource
  supersetFargateServiceTaskDef31303D5E:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Fn::Select:
                    - 4
                    - Fn::Split:
                        - ":"
                        - Fn::If:
                            - IsChinaRegionCondition
                            - arn:aws-cn:ecr:cn-northwest-1:753680513547:repository/battery-consistency-bias-alarm-prediction-visualization
                            - arn:aws:ecr:us-west-2:366590864501:repository/battery-consistency-bias-alarm-prediction-visualization
                - .dkr.ecr.
                - Fn::Select:
                    - 3
                    - Fn::Split:
                        - ":"
                        - Fn::If:
                            - IsChinaRegionCondition
                            - arn:aws-cn:ecr:cn-northwest-1:753680513547:repository/battery-consistency-bias-alarm-prediction-visualization
                            - arn:aws:ecr:us-west-2:366590864501:repository/battery-consistency-bias-alarm-prediction-visualization
                - "."
                - Ref: AWS::URLSuffix
                - /battery-consistency-bias-alarm-prediction-visualization:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: supersetFargateServiceTaskDefwebLogGroup91EE9BA7
              awslogs-stream-prefix: supersetFargateService
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "1024"
      ExecutionRoleArn:
        Fn::GetAtt:
          - supersetFargateServiceTaskDefExecutionRoleC2C7C1ED
          - Arn
      Family: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStacksupersetFargateServiceTaskDef6463C08B
      Memory: "4096"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - supersetFargateServiceTaskDefTaskRole087960DE
          - Arn
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/TaskDef/Resource
  supersetFargateServiceTaskDefwebLogGroup91EE9BA7:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/TaskDef/web/LogGroup/Resource
  supersetFargateServiceTaskDefExecutionRoleC2C7C1ED:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/TaskDef/ExecutionRole/Resource
  supersetFargateServiceTaskDefExecutionRoleDefaultPolicyBE416313:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::If:
                - IsChinaRegionCondition
                - arn:aws-cn:ecr:cn-northwest-1:753680513547:repository/battery-consistency-bias-alarm-prediction-visualization
                - arn:aws:ecr:us-west-2:366590864501:repository/battery-consistency-bias-alarm-prediction-visualization
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - supersetFargateServiceTaskDefwebLogGroup91EE9BA7
                - Arn
        Version: "2012-10-17"
      PolicyName: supersetFargateServiceTaskDefExecutionRoleDefaultPolicyBE416313
      Roles:
        - Ref: supersetFargateServiceTaskDefExecutionRoleC2C7C1ED
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource
  supersetFargateService91535678:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: supersetCluster00A32ADB
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: supersetFargateServiceLBPublicListenerECSGroup43FE3584
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::GetAtt:
                - supersetFargateServiceSecurityGroup1F1FD17C
                - GroupId
          Subnets:
            - Ref: supersetVpcPublicSubnet1SubnetC154B8F9
            - Ref: supersetVpcPublicSubnet2SubnetDFD078B2
      ServiceName: battery-consistency-bias-alarm-prediction-superset-host
      TaskDefinition:
        Ref: supersetFargateServiceTaskDef31303D5E
    DependsOn:
      - supersetFargateServiceLBPublicListenerECSGroup43FE3584
      - supersetFargateServiceLBPublicListener48B5013B
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/Service/Service
  supersetFargateServiceSecurityGroup1F1FD17C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: supersetVpcD0A7C8D9
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/Service/SecurityGroup/Resource
  supersetFargateServiceSecurityGroupfromAwsBevBmsBatteryConsistencyBiasAlarmPredictionStacksupersetFargateServiceLBSecurityGroupB0BE595B8071A1A61E:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - supersetFargateServiceSecurityGroup1F1FD17C
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - supersetFargateServiceLBSecurityGroupC8D6C07D
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/supersetFargateService/Service/SecurityGroup/from AwsBevBmsBatteryConsistencyBiasAlarmPredictionStacksupersetFargateServiceLBSecurityGroupB0BE595B:80
  bevBmsBatteryConsistencyBiasAlarmPredictionEventsDdbTableEF31EAAB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: request_id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: request_id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: battery-consistency-bias-alarm-prediction-events-ddb
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionEventsDdbTable/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionS3TriggerServiceRole36351ECF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger/ServiceRole/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionS3TriggerServiceRoleDefaultPolicyB2CBF8F1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sagemaker:InvokeEndpoint
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - bevBmsBatteryConsistencyBiasAlarmPredictionEventsDdbTableEF31EAAB
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: bevBmsBatteryConsistencyBiasAlarmPredictionS3TriggerServiceRoleDefaultPolicyB2CBF8F1
      Roles:
        - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionS3TriggerServiceRole36351ECF
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger/ServiceRole/DefaultPolicy/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger9CC841DB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6ccS3Bucket67356811
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6ccS3VersionKeyAD0A9BFD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6ccS3VersionKeyAD0A9BFD
      Role:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionS3TriggerServiceRole36351ECF
          - Arn
      Environment:
        Variables:
          INFER_BUCKET_NAME:
            Ref: bevBmsBatteryConsistencyBiasAlarmPredictionInferS3DA07B0A1
          DUMP_BUCKET_NAME:
            Ref: bevBmsBatteryConsistencyBiasAlarmPredictionEventsS3C7FC4E91
          DUMP_BUCKET_PREFIX: events
          DYNAMODB_TABLE_NAME:
            Ref: bevBmsBatteryConsistencyBiasAlarmPredictionEventsDdbTableEF31EAAB
          DYNAMODB_PRIMARY_KEY: request_id
          SAGEMAKER_ENDPOINT_NAME:
            Ref: sagemakerEndpointName
      FunctionName: battery-consistency-bias-alarm-prediction-s3-trigger
      Handler: main.handler
      MemorySize: 1024
      Runtime: python3.8
      Timeout: 900
    DependsOn:
      - bevBmsBatteryConsistencyBiasAlarmPredictionS3TriggerServiceRoleDefaultPolicyB2CBF8F1
      - bevBmsBatteryConsistencyBiasAlarmPredictionS3TriggerServiceRole36351ECF
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionS3Trigger/Resource
      aws:asset:path: asset.fc0035eb20bbb30377bb2b370c8464210f3fa6450cbb6054b64da0e21500d6cc
      aws:asset:is-bundled: false
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |
          import boto3  # type: ignore
          import json
          import logging
          import urllib.request

          s3 = boto3.client("s3")

          EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

          CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

          def handler(event: dict, context):
            response_status = "SUCCESS"
            error_message = ""
            try:
              props = event["ResourceProperties"]
              bucket = props["BucketName"]
              notification_configuration = props["NotificationConfiguration"]
              request_type = event["RequestType"]
              managed = props.get('Managed', 'true').lower() == 'true'
              stack_id = event['StackId']

              if managed:
                config = handle_managed(request_type, notification_configuration)
              else:
                config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

              put_bucket_notification_configuration(bucket, config)
            except Exception as e:
              logging.exception("Failed to put bucket notification configuration")
              response_status = "FAILED"
              error_message = f"Error: {str(e)}. "
            finally:
              submit_response(event, context, response_status, error_message)

          def handle_managed(request_type, notification_configuration):
            if request_type == 'Delete':
              return {}
            return notification_configuration

          def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
            external_notifications = find_external_notifications(bucket, stack_id)

            if request_type == 'Delete':
              return external_notifications

            def with_id(notification):
              notification['Id'] = f"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}"
              return notification

            notifications = {}
            for t in CONFIGURATION_TYPES:
              external = external_notifications.get(t, [])
              incoming = [with_id(n) for n in notification_configuration.get(t, [])]
              notifications[t] = external + incoming

            if EVENTBRIDGE_CONFIGURATION in notification_configuration:
              notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
            elif EVENTBRIDGE_CONFIGURATION in external_notifications:
              notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

            return notifications

          def find_external_notifications(bucket, stack_id):
            existing_notifications = get_bucket_notification_configuration(bucket)
            external_notifications = {}
            for t in CONFIGURATION_TYPES:
              external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]

            if EVENTBRIDGE_CONFIGURATION in existing_notifications:
              external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

            return external_notifications

          def get_bucket_notification_configuration(bucket):
            return s3.get_bucket_notification_configuration(Bucket=bucket)

          def put_bucket_notification_configuration(bucket, notification_configuration):
            s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

          def submit_response(event: dict, context, response_status: str, error_message: str):
            response_body = json.dumps(
              {
                "Status": response_status,
                "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
                "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
                "StackId": event["StackId"],
                "RequestId": event["RequestId"],
                "LogicalResourceId": event["LogicalResourceId"],
                "NoEcho": False,
              }
            ).encode("utf-8")
            headers = {"content-type": "", "content-length": str(len(response_body))}
            try:
              req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
              with urllib.request.urlopen(req) as response:
                print(response.read().decode("utf-8"))
              print("Status code: " + response.reason)
            except Exception as e:
                print("send(..) failed executing request.urlopen(..): " + str(e))
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: python3.7
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerServiceRole0EB8D0A4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiTrigger/ServiceRole/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerServiceRoleDefaultPolicyA2DB01BD:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sagemaker:InvokeEndpoint
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - bevBmsBatteryConsistencyBiasAlarmPredictionEventsDdbTableEF31EAAB
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerServiceRoleDefaultPolicyA2DB01BD
      Roles:
        - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerServiceRole0EB8D0A4
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiTrigger/ServiceRole/DefaultPolicy/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerCE3E0B15:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60S3BucketF676E4B8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60S3VersionKey59D407D9
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60S3VersionKey59D407D9
      Role:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerServiceRole0EB8D0A4
          - Arn
      Environment:
        Variables:
          DUMP_BUCKET_NAME:
            Ref: bevBmsBatteryConsistencyBiasAlarmPredictionEventsS3C7FC4E91
          DUMP_BUCKET_PREFIX: events
          DYNAMODB_TABLE_NAME:
            Ref: bevBmsBatteryConsistencyBiasAlarmPredictionEventsDdbTableEF31EAAB
          DYNAMODB_PRIMARY_KEY: request_id
          SAGEMAKER_ENDPOINT_NAME:
            Ref: sagemakerEndpointName
      FunctionName: battery-consistency-bias-alarm-prediction-api-trigger
      Handler: main.handler
      MemorySize: 512
      Runtime: python3.8
      Timeout: 30
    DependsOn:
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerServiceRoleDefaultPolicyA2DB01BD
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerServiceRole0EB8D0A4
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiTrigger/Resource
      aws:asset:path: asset.9f04a65e08f0e3bf2bad317e09b872dd3427ce1a2519ff1dcf82a81b3ff30b60
      aws:asset:is-bundled: false
      aws:asset:property: Code
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: battery-consistency-bias-alarm-prediction-api-router
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterCloudWatchRole82CE350C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/CloudWatchRole/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterAccount49F09C00:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterCloudWatchRole82CE350C
          - Arn
    DependsOn:
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Account
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterDeployment70F5B5319669cf1bb305657b2458b8c6c4e0747c:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
      Description: Automatically created by the RestApi construct
    DependsOn:
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinferenceOPTIONSDD4E22F1
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinferencePOSTECD3B41E
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinference09D74172
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterOPTIONSB412C1CB
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Deployment/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterDeploymentStageprod032E80E1:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
      DeploymentId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterDeployment70F5B5319669cf1bb305657b2458b8c6c4e0747c
      StageName: prod
    DependsOn:
      - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterAccount49F09C00
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/DeploymentStage.prod/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterOPTIONSB412C1CB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
          - RootResourceId
      RestApiId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Default/OPTIONS/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinference09D74172:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
          - RootResourceId
      PathPart: inference
      RestApiId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Default/inference/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinferenceOPTIONSDD4E22F1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinference09D74172
      RestApiId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Default/inference/OPTIONS/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinferencePOSTApiPermissionAwsBevBmsBatteryConsistencyBiasAlarmPredictionStackbevBmsBatteryConsistencyBiasAlarmPredictionApiRouterE2B1C6E3POSTinferenceF7E2B054:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerCE3E0B15
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
            - /
            - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterDeploymentStageprod032E80E1
            - /POST/inference
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Default/inference/POST/ApiPermission.AwsBevBmsBatteryConsistencyBiasAlarmPredictionStackbevBmsBatteryConsistencyBiasAlarmPredictionApiRouterE2B1C6E3.POST..inference
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinferencePOSTApiPermissionTestAwsBevBmsBatteryConsistencyBiasAlarmPredictionStackbevBmsBatteryConsistencyBiasAlarmPredictionApiRouterE2B1C6E3POSTinference34A74D8F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerCE3E0B15
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
            - /test-invoke-stage/POST/inference
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Default/inference/POST/ApiPermission.Test.AwsBevBmsBatteryConsistencyBiasAlarmPredictionStackbevBmsBatteryConsistencyBiasAlarmPredictionApiRouterE2B1C6E3.POST..inference
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinferencePOSTECD3B41E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterinference09D74172
      RestApiId:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - bevBmsBatteryConsistencyBiasAlarmPredictionApiTriggerCE3E0B15
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter/Default/inference/POST/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionNotebookRole92FEF939:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSageMakerFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3FullAccess
      RoleName: battery-consistency-bias-alarm-prediction-notebook-role
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionNotebookRole/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      NotebookInstanceLifecycleConfigName: battery-consistency-bias-alarm-prediction-lifecycle-conf
      OnCreate:
        - Content:
            Fn::Base64: |
              #!/bin/bash

              set -e

              # download scripts and dataset
              cd /home/ec2-user/SageMaker
              echo "Fetching the scripts and data..."

              wget -c https://aws-gcr-solutions.s3.cn-north-1.amazonaws.com.cn/Amazon-bev-bms-battery-consistency-bias-alarm-prediction/latest/series_samples.csv
              wget -c https://aws-gcr-solutions.s3.cn-north-1.amazonaws.com.cn/Amazon-bev-bms-battery-consistency-bias-alarm-prediction/latest/xgboost_beginner.ipynb
              sudo chmod +777 xgboost_beginner.ipynb
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionLifecycleConfig
  bevBmsBatteryConsistencyBiasAlarmPredictionNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: ml.t2.medium
      RoleArn:
        Fn::GetAtt:
          - bevBmsBatteryConsistencyBiasAlarmPredictionNotebookRole92FEF939
          - Arn
      LifecycleConfigName: battery-consistency-bias-alarm-prediction-lifecycle-conf
      NotebookInstanceName: battery-consistency-bias-alarm-prediction-example
      VolumeSizeInGB: 128
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionNotebookInstance
  bevBmsBatteryConsistencyBiasAlarmPredictionGlueDatabaseF9B906F3:
    Type: AWS::Glue::Database
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseInput:
        Name: battery-consistency-bias-alarm-prediction-glue-database
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionGlueDatabase/Resource
  bevBmsBatteryConsistencyBiasAlarmPredictionEventsGlueTable89889A6A:
    Type: AWS::Glue::Table
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseName:
        Ref: bevBmsBatteryConsistencyBiasAlarmPredictionGlueDatabaseF9B906F3
      TableInput:
        Description: battery-consistency-bias-alarm-prediction-events generated by CDK
        Name: battery-consistency-bias-alarm-prediction-events
        Parameters:
          classification: json
          has_encrypted_data: false
        StorageDescriptor:
          Columns:
            - Name: request_id
              Type: string
            - Name: vin
              Type: string
            - Name: date
              Type: date
            - Name: predicted_prob
              Type: float
            - Name: total_voltage_14
              Type: float
            - Name: total_current_14
              Type: float
            - Name: cell_max_voltage_14
              Type: float
            - Name: cell_min_voltage_14
              Type: float
            - Name: max_temperature_14
              Type: float
            - Name: min_temperature_14
              Type: float
            - Name: total_voltage_13
              Type: float
            - Name: total_current_13
              Type: float
            - Name: cell_max_voltage_13
              Type: float
            - Name: cell_min_voltage_13
              Type: float
            - Name: max_temperature_13
              Type: float
            - Name: min_temperature_13
              Type: float
            - Name: total_voltage_12
              Type: float
            - Name: total_current_12
              Type: float
            - Name: cell_max_voltage_12
              Type: float
            - Name: cell_min_voltage_12
              Type: float
            - Name: max_temperature_12
              Type: float
            - Name: min_temperature_12
              Type: float
            - Name: total_voltage_11
              Type: float
            - Name: total_current_11
              Type: float
            - Name: cell_max_voltage_11
              Type: float
            - Name: cell_min_voltage_11
              Type: float
            - Name: max_temperature_11
              Type: float
            - Name: min_temperature_11
              Type: float
            - Name: total_voltage_10
              Type: float
            - Name: total_current_10
              Type: float
            - Name: cell_max_voltage_10
              Type: float
            - Name: cell_min_voltage_10
              Type: float
            - Name: max_temperature_10
              Type: float
            - Name: min_temperature_10
              Type: float
            - Name: total_voltage_9
              Type: float
            - Name: total_current_9
              Type: float
            - Name: cell_max_voltage_9
              Type: float
            - Name: cell_min_voltage_9
              Type: float
            - Name: max_temperature_9
              Type: float
            - Name: min_temperature_9
              Type: float
            - Name: total_voltage_8
              Type: float
            - Name: total_current_8
              Type: float
            - Name: cell_max_voltage_8
              Type: float
            - Name: cell_min_voltage_8
              Type: float
            - Name: max_temperature_8
              Type: float
            - Name: min_temperature_8
              Type: float
            - Name: total_voltage_7
              Type: float
            - Name: total_current_7
              Type: float
            - Name: cell_max_voltage_7
              Type: float
            - Name: cell_min_voltage_7
              Type: float
            - Name: max_temperature_7
              Type: float
            - Name: min_temperature_7
              Type: float
            - Name: total_voltage_6
              Type: float
            - Name: total_current_6
              Type: float
            - Name: cell_max_voltage_6
              Type: float
            - Name: cell_min_voltage_6
              Type: float
            - Name: max_temperature_6
              Type: float
            - Name: min_temperature_6
              Type: float
            - Name: total_voltage_5
              Type: float
            - Name: total_current_5
              Type: float
            - Name: cell_max_voltage_5
              Type: float
            - Name: cell_min_voltage_5
              Type: float
            - Name: max_temperature_5
              Type: float
            - Name: min_temperature_5
              Type: float
            - Name: total_voltage_4
              Type: float
            - Name: total_current_4
              Type: float
            - Name: cell_max_voltage_4
              Type: float
            - Name: cell_min_voltage_4
              Type: float
            - Name: max_temperature_4
              Type: float
            - Name: min_temperature_4
              Type: float
            - Name: total_voltage_3
              Type: float
            - Name: total_current_3
              Type: float
            - Name: cell_max_voltage_3
              Type: float
            - Name: cell_min_voltage_3
              Type: float
            - Name: max_temperature_3
              Type: float
            - Name: min_temperature_3
              Type: float
            - Name: total_voltage_2
              Type: float
            - Name: total_current_2
              Type: float
            - Name: cell_max_voltage_2
              Type: float
            - Name: cell_min_voltage_2
              Type: float
            - Name: max_temperature_2
              Type: float
            - Name: min_temperature_2
              Type: float
            - Name: total_voltage_1
              Type: float
            - Name: total_current_1
              Type: float
            - Name: cell_max_voltage_1
              Type: float
            - Name: cell_min_voltage_1
              Type: float
            - Name: max_temperature_1
              Type: float
            - Name: min_temperature_1
              Type: float
          Compressed: false
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location:
            Fn::Join:
              - ""
              - - s3://
                - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionEventsS3C7FC4E91
                - /events
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          SerdeInfo:
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
          StoredAsSubDirectories: false
        TableType: EXTERNAL_TABLE
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/bevBmsBatteryConsistencyBiasAlarmPredictionEventsGlueTable/Table
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31U226jMBD9lr47bpP2YR83l7aKlHZRUvV9MBPqAjbyJRVC/PuODSQ0W+2Tjw/juZyZYc4Xdw/87uY3fNmZyIrbVmiDvD04EAVbH1UCBip0aNhaK+uMFy7Qe7TaG4HsDIgki0w6qVW4/PGu9o4trUVH3nKp8o6FKK295+3KiwKjpwH1xwosdqyEKs2AtyE8mkpaG3w+eSVG5yPuGIoFb99rEdj3ZM0Sn5ZSHHyqevcXtNfe4RukJV74C0d5aiFhDBA/BPC4TcLxCu4ZHH5BwxIjTwQvjreK5CE8GvSZDLelIyU/KlSOHVB4I13zbLSvYw7/JR5zg9b+Q29V5EPlliQqvY3NIfUH+AQmh1CVLTZ4lOrckWtGKwdSoZlww9sDmpPsezrAEM7wPdbaSqdNExoVMpjV4EL1li/rmoSPAu40ZCsoQQnMrjxiCdZJUZJFGi1oLE7UwZ9fx7q+3ad2kspVg82IJ9/fKDI1ZdR2cu2YhIq3e92PQjwTTe9i73pEU6hzEnin87OLEXcsaxRUOkt5ex6oCDpm72cQRp4ECQeDWub9JFBAtG5Zy2F/RrgUQnsajw3WpW7ipBA7uYXt6XsRwbhxsQUv6D50Fj4OaLqPI6as6GEFBZq4VK/aYap1saWFDrLu5BFFI0qkkTjKnP1g0rG89PRf2ICDNAQOKY74SoOuY0pnyD/t7Wn+i88XfH7zaaWcGSpTVsj3/fkXLRICxnwEAAA=
    Metadata:
      aws:cdk:path: AwsBevBmsBatteryConsistencyBiasAlarmPredictionStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  IsChinaRegionCondition:
    Fn::Equals:
      - Ref: AWS::Partition
      - aws-cn
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Outputs:
  supersetFargateServiceLoadBalancerDNSC1DF1E87:
    Value:
      Fn::GetAtt:
        - supersetFargateServiceLBB7E11822
        - DNSName
  supersetFargateServiceServiceURLFC45BFBA:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - supersetFargateServiceLBB7E11822
              - DNSName
  bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterEndpoint3F994502:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouter6E0EF336
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: bevBmsBatteryConsistencyBiasAlarmPredictionApiRouterDeploymentStageprod032E80E1
          - /

