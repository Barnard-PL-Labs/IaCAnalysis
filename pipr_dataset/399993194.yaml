Resources:
  SpaceApi1B373D2B:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: SpaceApi
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Resource
  SpaceApiCloudWatchRole2811DDE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/CloudWatchRole/Resource
  SpaceApiAccount1ADAEF20:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - SpaceApiCloudWatchRole2811DDE0
          - Arn
    DependsOn:
      - SpaceApi1B373D2B
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Account
  SpaceApiDeploymentA2B9E7654d0feb89297c9e7ee08770d1da8c3ab5:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: SpaceApi1B373D2B
      Description: Automatically created by the RestApi construct
    DependsOn:
      - SpaceApireservationsDELETE1A253DBD
      - SpaceApireservationsGET1C010D4D
      - SpaceApireservationsOPTIONSCA5D4517
      - SpaceApireservationsPOSTFA20A69F
      - SpaceApireservationsPUT6C758D78
      - SpaceApireservationsB5924C00
      - SpaceApispacesDELETEC413A31B
      - SpaceApispacesGET6C083CB2
      - SpaceApispacesOPTIONS8D15CDB5
      - SpaceApispacesPOST1DDB27B3
      - SpaceApispacesPUTD4F9CA05
      - SpaceApispacesD5EE855F
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Deployment/Resource
  SpaceApiDeploymentStageprodBB8A31FE:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: SpaceApi1B373D2B
      DeploymentId:
        Ref: SpaceApiDeploymentA2B9E7654d0feb89297c9e7ee08770d1da8c3ab5
      StageName: prod
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/DeploymentStage.prod/Resource
  SpaceApispacesD5EE855F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - SpaceApi1B373D2B
          - RootResourceId
      PathPart: spaces
      RestApiId:
        Ref: SpaceApi1B373D2B
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/Resource
  SpaceApispacesOPTIONS8D15CDB5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: SpaceApispacesD5EE855F
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/OPTIONS/Resource
  SpaceApispacesPOSTApiPermissionSpacefinderSpaceApi0274A94DPOSTspaces246FCAB9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesCreate8758AB74
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /POST/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/POST/ApiPermission.SpacefinderSpaceApi0274A94D.POST..spaces
  SpaceApispacesPOSTApiPermissionTestSpacefinderSpaceApi0274A94DPOSTspaces76ACB000:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesCreate8758AB74
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/POST/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/POST/ApiPermission.Test.SpacefinderSpaceApi0274A94D.POST..spaces
  SpaceApispacesPOST1DDB27B3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: SpaceApispacesD5EE855F
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - SpacesCreate8758AB74
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/POST/Resource
  SpaceApispacesGETApiPermissionSpacefinderSpaceApi0274A94DGETspacesE422E840:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesReadECCA6C11
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /GET/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/GET/ApiPermission.SpacefinderSpaceApi0274A94D.GET..spaces
  SpaceApispacesGETApiPermissionTestSpacefinderSpaceApi0274A94DGETspaces5EC9FF18:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesReadECCA6C11
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/GET/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/GET/ApiPermission.Test.SpacefinderSpaceApi0274A94D.GET..spaces
  SpaceApispacesGET6C083CB2:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: SpaceApispacesD5EE855F
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - SpacesReadECCA6C11
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/GET/Resource
  SpaceApispacesPUTApiPermissionSpacefinderSpaceApi0274A94DPUTspacesEEAD7E00:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesUpdateD81511B9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /PUT/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/PUT/ApiPermission.SpacefinderSpaceApi0274A94D.PUT..spaces
  SpaceApispacesPUTApiPermissionTestSpacefinderSpaceApi0274A94DPUTspacesE6E089FE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesUpdateD81511B9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/PUT/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/PUT/ApiPermission.Test.SpacefinderSpaceApi0274A94D.PUT..spaces
  SpaceApispacesPUTD4F9CA05:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: SpaceApispacesD5EE855F
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - SpacesUpdateD81511B9
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/PUT/Resource
  SpaceApispacesDELETEApiPermissionSpacefinderSpaceApi0274A94DDELETEspaces6BB660C2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesDeleteC3E50CE7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /DELETE/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/DELETE/ApiPermission.SpacefinderSpaceApi0274A94D.DELETE..spaces
  SpaceApispacesDELETEApiPermissionTestSpacefinderSpaceApi0274A94DDELETEspacesBB6271A7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SpacesDeleteC3E50CE7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/DELETE/spaces
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/DELETE/ApiPermission.Test.SpacefinderSpaceApi0274A94D.DELETE..spaces
  SpaceApispacesDELETEC413A31B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: SpaceApispacesD5EE855F
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - SpacesDeleteC3E50CE7
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/spaces/DELETE/Resource
  SpaceApireservationsB5924C00:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - SpaceApi1B373D2B
          - RootResourceId
      PathPart: reservations
      RestApiId:
        Ref: SpaceApi1B373D2B
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/Resource
  SpaceApireservationsOPTIONSCA5D4517:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: SpaceApireservationsB5924C00
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/OPTIONS/Resource
  SpaceApireservationsPOSTApiPermissionSpacefinderSpaceApi0274A94DPOSTreservationsFA8A7DF5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableCreateDA6AD5A5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /POST/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/POST/ApiPermission.SpacefinderSpaceApi0274A94D.POST..reservations
  SpaceApireservationsPOSTApiPermissionTestSpacefinderSpaceApi0274A94DPOSTreservations6D7FBD45:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableCreateDA6AD5A5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/POST/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/POST/ApiPermission.Test.SpacefinderSpaceApi0274A94D.POST..reservations
  SpaceApireservationsPOSTFA20A69F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: SpaceApireservationsB5924C00
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ReservationsTableCreateDA6AD5A5
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/POST/Resource
  SpaceApireservationsGETApiPermissionSpacefinderSpaceApi0274A94DGETreservations96BDE862:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableReadDF878FF1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /GET/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/GET/ApiPermission.SpacefinderSpaceApi0274A94D.GET..reservations
  SpaceApireservationsGETApiPermissionTestSpacefinderSpaceApi0274A94DGETreservations592010F2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableReadDF878FF1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/GET/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/GET/ApiPermission.Test.SpacefinderSpaceApi0274A94D.GET..reservations
  SpaceApireservationsGET1C010D4D:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: SpaceApireservationsB5924C00
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ReservationsTableReadDF878FF1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/GET/Resource
  SpaceApireservationsPUTApiPermissionSpacefinderSpaceApi0274A94DPUTreservations47665075:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableUpdate469C44E2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /PUT/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/PUT/ApiPermission.SpacefinderSpaceApi0274A94D.PUT..reservations
  SpaceApireservationsPUTApiPermissionTestSpacefinderSpaceApi0274A94DPUTreservationsE9B28374:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableUpdate469C44E2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/PUT/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/PUT/ApiPermission.Test.SpacefinderSpaceApi0274A94D.PUT..reservations
  SpaceApireservationsPUT6C758D78:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: SpaceApireservationsB5924C00
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ReservationsTableUpdate469C44E2
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/PUT/Resource
  SpaceApireservationsDELETEApiPermissionSpacefinderSpaceApi0274A94DDELETEreservationsAA49D41C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableDeleteC5569EE8
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /
            - Ref: SpaceApiDeploymentStageprodBB8A31FE
            - /DELETE/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/DELETE/ApiPermission.SpacefinderSpaceApi0274A94D.DELETE..reservations
  SpaceApireservationsDELETEApiPermissionTestSpacefinderSpaceApi0274A94DDELETEreservations560F6606:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ReservationsTableDeleteC5569EE8
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SpaceApi1B373D2B
            - /test-invoke-stage/DELETE/reservations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/DELETE/ApiPermission.Test.SpacefinderSpaceApi0274A94D.DELETE..reservations
  SpaceApireservationsDELETE1A253DBD:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: SpaceApireservationsB5924C00
      RestApiId:
        Ref: SpaceApi1B373D2B
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: SpaceUserAuthorizer401AE1AA
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ReservationsTableDeleteC5569EE8
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Space-finder/SpaceApi/Default/reservations/DELETE/Resource
  SpacesAE8EB89E:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: SpaceID
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: SpaceID
          AttributeType: S
        - AttributeName: location
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: location
          KeySchema:
            - AttributeName: location
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: Spaces
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Space-finder/Spaces/Resource
  SpacesCreateServiceRoleB3169358:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Create/ServiceRole/Resource
  SpacesCreateServiceRoleDefaultPolicy0143BA2E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SpacesAE8EB89E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SpacesAE8EB89E
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: SpacesCreateServiceRoleDefaultPolicy0143BA2E
      Roles:
        - Ref: SpacesCreateServiceRoleB3169358
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Create/ServiceRole/DefaultPolicy/Resource
  SpacesCreate8758AB74:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 3a0e5dcf149af0ec8af875f51577fafae06a2ebce8e49d516923aa04956b0c20.zip
      Role:
        Fn::GetAtt:
          - SpacesCreateServiceRoleB3169358
          - Arn
      Environment:
        Variables:
          TABLE_NAME: Spaces
          PRIMARY_KEY: SpaceID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: Spaces-Create
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - SpacesCreateServiceRoleDefaultPolicy0143BA2E
      - SpacesCreateServiceRoleB3169358
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Create/Resource
      aws:asset:path: asset.3a0e5dcf149af0ec8af875f51577fafae06a2ebce8e49d516923aa04956b0c20
      aws:asset:property: Code
  SpacesReadServiceRole4CA4D727:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Read/ServiceRole/Resource
  SpacesReadServiceRoleDefaultPolicyEA9A43C5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SpacesAE8EB89E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SpacesAE8EB89E
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: SpacesReadServiceRoleDefaultPolicyEA9A43C5
      Roles:
        - Ref: SpacesReadServiceRole4CA4D727
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Read/ServiceRole/DefaultPolicy/Resource
  SpacesReadECCA6C11:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 503f9358b34a4ae909039325d5d6cb1f4b1378bd04bd7d7eb0910420f277e00e.zip
      Role:
        Fn::GetAtt:
          - SpacesReadServiceRole4CA4D727
          - Arn
      Environment:
        Variables:
          TABLE_NAME: Spaces
          PRIMARY_KEY: SpaceID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: Spaces-Read
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - SpacesReadServiceRoleDefaultPolicyEA9A43C5
      - SpacesReadServiceRole4CA4D727
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Read/Resource
      aws:asset:path: asset.503f9358b34a4ae909039325d5d6cb1f4b1378bd04bd7d7eb0910420f277e00e
      aws:asset:property: Code
  SpacesUpdateServiceRole0947F617:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Update/ServiceRole/Resource
  SpacesUpdateServiceRoleDefaultPolicyF0B653D0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SpacesAE8EB89E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SpacesAE8EB89E
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: SpacesUpdateServiceRoleDefaultPolicyF0B653D0
      Roles:
        - Ref: SpacesUpdateServiceRole0947F617
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Update/ServiceRole/DefaultPolicy/Resource
  SpacesUpdateD81511B9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f62ee5491dfaf290c3d84fd421b380c86adf9fb5965080eef1ce7cfe7cea0970.zip
      Role:
        Fn::GetAtt:
          - SpacesUpdateServiceRole0947F617
          - Arn
      Environment:
        Variables:
          TABLE_NAME: Spaces
          PRIMARY_KEY: SpaceID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: Spaces-Update
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - SpacesUpdateServiceRoleDefaultPolicyF0B653D0
      - SpacesUpdateServiceRole0947F617
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Update/Resource
      aws:asset:path: asset.f62ee5491dfaf290c3d84fd421b380c86adf9fb5965080eef1ce7cfe7cea0970
      aws:asset:property: Code
  SpacesDeleteServiceRole99256B94:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Delete/ServiceRole/Resource
  SpacesDeleteServiceRoleDefaultPolicy7AE41251:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SpacesAE8EB89E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SpacesAE8EB89E
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: SpacesDeleteServiceRoleDefaultPolicy7AE41251
      Roles:
        - Ref: SpacesDeleteServiceRole99256B94
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Delete/ServiceRole/DefaultPolicy/Resource
  SpacesDeleteC3E50CE7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 283905730c14d775d0a2df2888d04f98ef7605bcf9e0ebb44c0e77e66e96a83e.zip
      Role:
        Fn::GetAtt:
          - SpacesDeleteServiceRole99256B94
          - Arn
      Environment:
        Variables:
          TABLE_NAME: Spaces
          PRIMARY_KEY: SpaceID
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: Spaces-Delete
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - SpacesDeleteServiceRoleDefaultPolicy7AE41251
      - SpacesDeleteServiceRole99256B94
    Metadata:
      aws:cdk:path: Space-finder/Spaces-Delete/Resource
      aws:asset:path: asset.283905730c14d775d0a2df2888d04f98ef7605bcf9e0ebb44c0e77e66e96a83e
      aws:asset:property: Code
  ReservationsTableD1629A9C:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: reservatrionId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: reservatrionId
          AttributeType: S
        - AttributeName: user
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: user
          KeySchema:
            - AttributeName: user
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: ReservationsTable
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable/Resource
  ReservationsTableCreateServiceRoleC82ED7E5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Create/ServiceRole/Resource
  ReservationsTableCreateServiceRoleDefaultPolicy5EA2C139:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ReservationsTableD1629A9C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ReservationsTableD1629A9C
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: ReservationsTableCreateServiceRoleDefaultPolicy5EA2C139
      Roles:
        - Ref: ReservationsTableCreateServiceRoleC82ED7E5
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Create/ServiceRole/DefaultPolicy/Resource
  ReservationsTableCreateDA6AD5A5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 77b3ca13285242b4ff19674a93dd31588b592f16705e38906096163d77309499.zip
      Role:
        Fn::GetAtt:
          - ReservationsTableCreateServiceRoleC82ED7E5
          - Arn
      Environment:
        Variables:
          TABLE_NAME: ReservationsTable
          PRIMARY_KEY: reservatrionId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: ReservationsTable-Create
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - ReservationsTableCreateServiceRoleDefaultPolicy5EA2C139
      - ReservationsTableCreateServiceRoleC82ED7E5
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Create/Resource
      aws:asset:path: asset.77b3ca13285242b4ff19674a93dd31588b592f16705e38906096163d77309499
      aws:asset:property: Code
  ReservationsTableReadServiceRole5571AFE2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Read/ServiceRole/Resource
  ReservationsTableReadServiceRoleDefaultPolicy2F2874D4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ReservationsTableD1629A9C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ReservationsTableD1629A9C
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: ReservationsTableReadServiceRoleDefaultPolicy2F2874D4
      Roles:
        - Ref: ReservationsTableReadServiceRole5571AFE2
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Read/ServiceRole/DefaultPolicy/Resource
  ReservationsTableReadDF878FF1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d971332958af65f0708dc82d6935e559cbc2d67759090fa8853f1d4c22006437.zip
      Role:
        Fn::GetAtt:
          - ReservationsTableReadServiceRole5571AFE2
          - Arn
      Environment:
        Variables:
          TABLE_NAME: ReservationsTable
          PRIMARY_KEY: reservatrionId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: ReservationsTable-Read
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - ReservationsTableReadServiceRoleDefaultPolicy2F2874D4
      - ReservationsTableReadServiceRole5571AFE2
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Read/Resource
      aws:asset:path: asset.d971332958af65f0708dc82d6935e559cbc2d67759090fa8853f1d4c22006437
      aws:asset:property: Code
  ReservationsTableUpdateServiceRole2CB05F09:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Update/ServiceRole/Resource
  ReservationsTableUpdateServiceRoleDefaultPolicyDC400F96:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ReservationsTableD1629A9C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ReservationsTableD1629A9C
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: ReservationsTableUpdateServiceRoleDefaultPolicyDC400F96
      Roles:
        - Ref: ReservationsTableUpdateServiceRole2CB05F09
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Update/ServiceRole/DefaultPolicy/Resource
  ReservationsTableUpdate469C44E2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1e301b2029fd124b7995fc8e6688f67f3aecbd3b8ea1743be589de98dd840616.zip
      Role:
        Fn::GetAtt:
          - ReservationsTableUpdateServiceRole2CB05F09
          - Arn
      Environment:
        Variables:
          TABLE_NAME: ReservationsTable
          PRIMARY_KEY: reservatrionId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: ReservationsTable-Update
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - ReservationsTableUpdateServiceRoleDefaultPolicyDC400F96
      - ReservationsTableUpdateServiceRole2CB05F09
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Update/Resource
      aws:asset:path: asset.1e301b2029fd124b7995fc8e6688f67f3aecbd3b8ea1743be589de98dd840616
      aws:asset:property: Code
  ReservationsTableDeleteServiceRoleC14AA229:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Delete/ServiceRole/Resource
  ReservationsTableDeleteServiceRoleDefaultPolicy678F6C43:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ReservationsTableD1629A9C
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ReservationsTableD1629A9C
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: ReservationsTableDeleteServiceRoleDefaultPolicy678F6C43
      Roles:
        - Ref: ReservationsTableDeleteServiceRoleC14AA229
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Delete/ServiceRole/DefaultPolicy/Resource
  ReservationsTableDeleteC5569EE8:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 836f817523e526f7367d5530744ba81f34dc444ccf44b2c2ecc0dc6c6acc9c12.zip
      Role:
        Fn::GetAtt:
          - ReservationsTableDeleteServiceRoleC14AA229
          - Arn
      Environment:
        Variables:
          TABLE_NAME: ReservationsTable
          PRIMARY_KEY: reservatrionId
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: ReservationsTable-Delete
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - ReservationsTableDeleteServiceRoleDefaultPolicy678F6C43
      - ReservationsTableDeleteServiceRoleC14AA229
    Metadata:
      aws:cdk:path: Space-finder/ReservationsTable-Delete/Resource
      aws:asset:path: asset.836f817523e526f7367d5530744ba81f34dc444ccf44b2c2ecc0dc6c6acc9c12
      aws:asset:property: Code
  spacesphotos2389D37E:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - spaces-photos-
            - Fn::Select:
                - 4
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 2
                        - Fn::Split:
                            - /
                            - Ref: AWS::StackId
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - HEAD
              - GET
              - PUT
            AllowedOrigins:
              - "*"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Space-finder/spaces-photos/Resource
  profilephotosD546CD2A:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - ""
          - - profile-photos-
            - Fn::Select:
                - 4
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 2
                        - Fn::Split:
                            - /
                            - Ref: AWS::StackId
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - HEAD
              - GET
              - PUT
            AllowedOrigins:
              - "*"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Space-finder/profile-photos/Resource
  SpaceUserPool6AB542DC:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      SmsVerificationMessage: The verification code to your new account is {####}
      UserPoolName: SpaceUserPool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Space-finder/SpaceUserPool/Resource
  SpaceUserPoolSpaceUserPoolclient4839E5E8:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: SpaceUserPool6AB542DC
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ClientName: SpaceUserPool-client
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: Space-finder/SpaceUserPool/SpaceUserPool-client/Resource
  SpaceUserAuthorizer401AE1AA:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: SpaceApi1B373D2B
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      Name: SpaceUserAuthorizer
      ProviderARNs:
        - Fn::GetAtt:
            - SpaceUserPool6AB542DC
            - Arn
    Metadata:
      aws:cdk:path: Space-finder/SpaceUserAuthorizer/Resource
  SpaceFinderIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: SpaceUserPoolSpaceUserPoolclient4839E5E8
          ProviderName:
            Fn::GetAtt:
              - SpaceUserPool6AB542DC
              - ProviderName
    Metadata:
      aws:cdk:path: Space-finder/SpaceFinderIdentityPool
  CognitoDefaultAuthenticatedRoleC5D5C31E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: SpaceFinderIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Space-finder/CognitoDefaultAuthenticatedRole/Resource
  CognitoDefaultAuthenticatedRoleDefaultPolicy4C5EB799:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:PutObjectAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - profilephotosD546CD2A
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: CognitoDefaultAuthenticatedRoleDefaultPolicy4C5EB799
      Roles:
        - Ref: CognitoDefaultAuthenticatedRoleC5D5C31E
    Metadata:
      aws:cdk:path: Space-finder/CognitoDefaultAuthenticatedRole/DefaultPolicy/Resource
  CognitoDefaultUnAuthenticatedRole6CA311FD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: SpaceFinderIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Space-finder/CognitoDefaultUnAuthenticatedRole/Resource
  CognitoAdminRole4C10FBA4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: SpaceFinderIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Space-finder/CognitoAdminRole/Resource
  CognitoAdminRoleDefaultPolicyBC6192E4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:PutObjectAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - spacesphotos2389D37E
                      - Arn
                  - /*
          - Action:
              - s3:PutObject
              - s3:PutObjectAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - profilephotosD546CD2A
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: CognitoAdminRoleDefaultPolicyBC6192E4
      Roles:
        - Ref: CognitoAdminRole4C10FBA4
    Metadata:
      aws:cdk:path: Space-finder/CognitoAdminRole/DefaultPolicy/Resource
  RolesAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: SpaceFinderIdentityPool
      RoleMappings:
        adminsMapping:
          AmbiguousRoleResolution: AuthenticatedRole
          IdentityProvider:
            Fn::Join:
              - ""
              - - Fn::GetAtt:
                    - SpaceUserPool6AB542DC
                    - ProviderName
                - ":"
                - Ref: SpaceUserPoolSpaceUserPoolclient4839E5E8
          Type: Token
      Roles:
        authenticated:
          Fn::GetAtt:
            - CognitoDefaultAuthenticatedRoleC5D5C31E
            - Arn
        unauthenticated:
          Fn::GetAtt:
            - CognitoDefaultUnAuthenticatedRole6CA311FD
            - Arn
    Metadata:
      aws:cdk:path: Space-finder/RolesAttachment
  admins:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId:
        Ref: SpaceUserPool6AB542DC
      GroupName: admins
      RoleArn:
        Fn::GetAtt:
          - CognitoAdminRole4C10FBA4
          - Arn
    Metadata:
      aws:cdk:path: Space-finder/admins
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE2WSTVPCMBCGfwv3NFK86LHg6HhQGdQzE5JYFpJsJx8ytdP/btJQQDzt877p7uxHZ3RKp4XltLyfsIMruNgXCja0e/eM70m01h1roGZeHlhLu5V0vmqALL7MBVacYzCePMhGYatlxOheqFitlsnLEFMxWC7nzJ3FsWbmF+m3KJI1EtYGPH46aZeIylUh2hZ+pB0aOKmeANOxT1S5YIpLVMDbJDP1RDG9EYx2yZJWg3OAJn3wGAz3kXsiWsM0iriKD7bJxQYYk9cGhdw5+jqEMY+42zVzTnpHqxSipt088L30w7AZU7FMPeF5MNqNo6XHE4+wUHDc6n/nWUQA347JlzrNX/l4y62+yn+yGJq+T9Zb8E3w50MMnadLgan/XCXyAo2AvKG0ALpzN9/lHS1ntJzsHEBh448AWtJVjr/SEMkTYQIAAA==
    Metadata:
      aws:cdk:path: Space-finder/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  SpaceApiEndpointDA7E4050:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: SpaceApi1B373D2B
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: SpaceApiDeploymentStageprodBB8A31FE
          - /
  spacesphotosbucketname:
    Value:
      Ref: spacesphotos2389D37E
  profilephotosbucketname:
    Value:
      Ref: profilephotosD546CD2A
  UserPoolId:
    Value:
      Ref: SpaceUserPool6AB542DC
  UserPoolClientId:
    Value:
      Ref: SpaceUserPoolSpaceUserPoolclient4839E5E8
  IdentityPoolId:
    Value:
      Ref: SpaceFinderIdentityPool
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store.
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

