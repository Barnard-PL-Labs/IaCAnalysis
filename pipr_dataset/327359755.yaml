Resources:
  ECSVPC8821F697:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/18
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/Resource
  ECSVPCPublicSubnet1Subnet98E478AD:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/20
      VpcId:
        Ref: ECSVPC8821F697
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet1/Subnet
  ECSVPCPublicSubnet1RouteTable9EFC54B7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ECSVPC8821F697
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet1/RouteTable
  ECSVPCPublicSubnet1RouteTableAssociation7DE07902:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ECSVPCPublicSubnet1RouteTable9EFC54B7
      SubnetId:
        Ref: ECSVPCPublicSubnet1Subnet98E478AD
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet1/RouteTableAssociation
  ECSVPCPublicSubnet1DefaultRoute37A2EA84:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ECSVPCPublicSubnet1RouteTable9EFC54B7
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ECSVPCIGWA0F67A93
    DependsOn:
      - ECSVPCVPCGW60608BDA
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet1/DefaultRoute
  ECSVPCPublicSubnet1EIPCAE81C97:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet1/EIP
  ECSVPCPublicSubnet1NATGateway96A6053D:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ECSVPCPublicSubnet1EIPCAE81C97
          - AllocationId
      SubnetId:
        Ref: ECSVPCPublicSubnet1Subnet98E478AD
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet1/NATGateway
  ECSVPCPublicSubnet2Subnet92E49871:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.16.0/20
      VpcId:
        Ref: ECSVPC8821F697
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet2/Subnet
  ECSVPCPublicSubnet2RouteTable09834091:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ECSVPC8821F697
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet2/RouteTable
  ECSVPCPublicSubnet2RouteTableAssociation68BBC329:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ECSVPCPublicSubnet2RouteTable09834091
      SubnetId:
        Ref: ECSVPCPublicSubnet2Subnet92E49871
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet2/RouteTableAssociation
  ECSVPCPublicSubnet2DefaultRouteE83A9923:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ECSVPCPublicSubnet2RouteTable09834091
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ECSVPCIGWA0F67A93
    DependsOn:
      - ECSVPCVPCGW60608BDA
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PublicSubnet2/DefaultRoute
  ECSVPCPrivateSubnet1SubnetAD9F3920:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.32.0/20
      VpcId:
        Ref: ECSVPC8821F697
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet1/Subnet
  ECSVPCPrivateSubnet1RouteTable615E5F56:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ECSVPC8821F697
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet1/RouteTable
  ECSVPCPrivateSubnet1RouteTableAssociation9E3C52D9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ECSVPCPrivateSubnet1RouteTable615E5F56
      SubnetId:
        Ref: ECSVPCPrivateSubnet1SubnetAD9F3920
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet1/RouteTableAssociation
  ECSVPCPrivateSubnet1DefaultRouteFF3C9DE5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ECSVPCPrivateSubnet1RouteTable615E5F56
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ECSVPCPublicSubnet1NATGateway96A6053D
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet1/DefaultRoute
  ECSVPCPrivateSubnet2Subnet5E180D80:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.48.0/20
      VpcId:
        Ref: ECSVPC8821F697
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet2/Subnet
  ECSVPCPrivateSubnet2RouteTable60E18105:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ECSVPC8821F697
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet2/RouteTable
  ECSVPCPrivateSubnet2RouteTableAssociation399B4AC1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ECSVPCPrivateSubnet2RouteTable60E18105
      SubnetId:
        Ref: ECSVPCPrivateSubnet2Subnet5E180D80
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet2/RouteTableAssociation
  ECSVPCPrivateSubnet2DefaultRoute34185DAE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ECSVPCPrivateSubnet2RouteTable60E18105
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ECSVPCPublicSubnet1NATGateway96A6053D
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/PrivateSubnet2/DefaultRoute
  ECSVPCIGWA0F67A93:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: EcsFargateStack/ECS-VPC
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/IGW
  ECSVPCVPCGW60608BDA:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: ECSVPC8821F697
      InternetGatewayId:
        Ref: ECSVPCIGWA0F67A93
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-VPC/VPCGW
  ClusterAdminRole047D4FCA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ClusterAdminRole/Resource
  ClusterAdminFFB4911C:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Metadata:
      aws:cdk:path: EcsFargateStack/ClusterAdmin/Resource
  ApplicationLoadBalancerSecurityGroupAFC6346E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EcsFargateStack/ApplicationLoadBalancerSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: ECSVPC8821F697
    Metadata:
      aws:cdk:path: EcsFargateStack/ApplicationLoadBalancerSecurityGroup/Resource
  EcsFargateServiceSecurityGroupDE021DC8:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EcsFargateStack/EcsFargateServiceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ECSVPC8821F697
    Metadata:
      aws:cdk:path: EcsFargateStack/EcsFargateServiceSecurityGroup/Resource
  EcsFargateServiceSecurityGroupfromEcsFargateStackApplicationLoadBalancerSecurityGroupD345AFCA8080191C6C4E:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from EcsFargateStackApplicationLoadBalancerSecurityGroupD345AFCA:8080
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - EcsFargateServiceSecurityGroupDE021DC8
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ApplicationLoadBalancerSecurityGroupAFC6346E
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: EcsFargateStack/EcsFargateServiceSecurityGroup/from EcsFargateStackApplicationLoadBalancerSecurityGroupD345AFCA:8080
  ECRRepositoryF3A3832E:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EcsFargateStack/ECRRepository/Resource
  ApplicationLoadBalancerFD56DEE1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ApplicationLoadBalancerSecurityGroupAFC6346E
            - GroupId
      Subnets:
        - Ref: ECSVPCPublicSubnet1Subnet98E478AD
        - Ref: ECSVPCPublicSubnet2Subnet92E49871
      Type: application
    DependsOn:
      - ECSVPCPublicSubnet1DefaultRoute37A2EA84
      - ECSVPCPublicSubnet2DefaultRouteE83A9923
    Metadata:
      aws:cdk:path: EcsFargateStack/ApplicationLoadBalancer/Resource
  ApplicationLoadBalancerHttpListener075DDBFE:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ECSFargateServiceTargetGroup1EBF1559
          Type: forward
      LoadBalancerArn:
        Ref: ApplicationLoadBalancerFD56DEE1
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: EcsFargateStack/ApplicationLoadBalancer/HttpListener/Resource
  ecstaskRoleEcsFargateStackBE1A1D36:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      RoleName: ecs-taskRole-EcsFargateStack
    Metadata:
      aws:cdk:path: EcsFargateStack/ecs-taskRole-EcsFargateStack/Resource
  ECSFargateTaskDefinition5352328B:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: amazon/amazon-ecs-sample
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: ECSFargateTaskDefinitionECSTaskSpringBootLogGroup8A734D75
              awslogs-stream-prefix: EcsFargateStackECSContainerLog
              awslogs-region:
                Ref: AWS::Region
          Name: ECS-Task-SpringBoot
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - ECSFargateTaskDefinitionExecutionRole68AF5C03
          - Arn
      Family: EcsFargateStackECSFargateTaskDefinition0295CE39
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - ecstaskRoleEcsFargateStackBE1A1D36
          - Arn
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSFargateTaskDefinition/Resource
  ECSFargateTaskDefinitionExecutionRole68AF5C03:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSFargateTaskDefinition/ExecutionRole/Resource
  ECSFargateTaskDefinitionExecutionRoleDefaultPolicyDE9A2272:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecs:DescribeCluster
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSFargateTaskDefinitionECSTaskSpringBootLogGroup8A734D75
                - Arn
        Version: "2012-10-17"
      PolicyName: ECSFargateTaskDefinitionExecutionRoleDefaultPolicyDE9A2272
      Roles:
        - Ref: ECSFargateTaskDefinitionExecutionRole68AF5C03
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSFargateTaskDefinition/ExecutionRole/DefaultPolicy/Resource
  ECSFargateTaskDefinitionECSTaskSpringBootLogGroup8A734D75:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSFargateTaskDefinition/ECS-Task-SpringBoot/LogGroup/Resource
  ECSFargateServiceTargetGroup1EBF1559:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckPort: "8080"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 45
      Matcher:
        HttpCode: 200,301,302
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "true"
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: "604800"
      TargetType: ip
      UnhealthyThresholdCount: 5
      VpcId:
        Ref: ECSVPC8821F697
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSFargateServiceTargetGroup/Resource
  ECSFargateService443DBFA5:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterAdminFFB4911C
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      DesiredCount: 2
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: ECS-Task-SpringBoot
          ContainerPort: 8080
          TargetGroupArn:
            Ref: ECSFargateServiceTargetGroup1EBF1559
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - EcsFargateServiceSecurityGroupDE021DC8
                - GroupId
          Subnets:
            - Ref: ECSVPCPrivateSubnet1SubnetAD9F3920
            - Ref: ECSVPCPrivateSubnet2Subnet5E180D80
      PlatformVersion: 1.4.0
      TaskDefinition:
        Ref: ECSFargateTaskDefinition5352328B
    DependsOn:
      - ApplicationLoadBalancerHttpListener075DDBFE
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSFargateService/Service
  ecsFargateServiceScalingRoleC623397C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ecsFargateServiceScaling/Role/Resource
  ecsFargateServiceScaling362ABB0A:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 12
      MinCapacity: 2
      ResourceId:
        Fn::Join:
          - ""
          - - service/
            - Ref: ClusterAdminFFB4911C
            - /
            - Fn::GetAtt:
                - ECSFargateService443DBFA5
                - Name
      RoleARN:
        Fn::GetAtt:
          - ecsFargateServiceScalingRoleC623397C
          - Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    Metadata:
      aws:cdk:path: EcsFargateStack/ecsFargateServiceScaling/Resource
  ecsFargateServiceScalingscaleCPUD73F51ED:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: EcsFargateStackecsFargateServiceScalingscaleCPU257B78BC
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: ecsFargateServiceScaling362ABB0A
      TargetTrackingScalingPolicyConfiguration:
        CustomizedMetricSpecification:
          Dimensions:
            - Name: ClusterName
              Value:
                Ref: ClusterAdminFFB4911C
            - Name: ServiceName
              Value:
                Fn::GetAtt:
                  - ECSFargateService443DBFA5
                  - Name
          MetricName: CPUUtilization
          Namespace: AWS/ECS
          Statistic: Average
        ScaleInCooldown: 60
        ScaleOutCooldown: 180
        TargetValue: 70
    Metadata:
      aws:cdk:path: EcsFargateStack/ecsFargateServiceScaling/scaleCPU/Resource
  CodeRepositoryDemoEEBA65AB:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: WebSpringBoot
    Metadata:
      aws:cdk:path: EcsFargateStack/CodeRepositoryDemo/Resource
  CodeRepositoryDemoEcsFargateStackECSPipeline44303A45EventRule9F790688:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        resources:
          - Fn::GetAtt:
              - CodeRepositoryDemoEEBA65AB
              - Arn
        detail-type:
          - CodeCommit Repository State Change
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: ECSPipeline51F5ADBB
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - ECSPipelineEventsRole9AC23B85
              - Arn
    Metadata:
      aws:cdk:path: EcsFargateStack/CodeRepositoryDemo/EcsFargateStackECSPipeline44303A45EventRule/Resource
  ECSCodeBuildProjectRole3356ADD4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-CodeBuild-Project/Role/Resource
  ECSCodeBuildProjectRoleDefaultPolicyAE512976:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codecommit:GitPull
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeRepositoryDemoEEBA65AB
                - Arn
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ECSCodeBuildProjectAFF5A7C5
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ECSCodeBuildProjectAFF5A7C5
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: ECSCodeBuildProjectAFF5A7C5
                  - -*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ECSPipelineArtifactsBucketB3509859
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ECSPipelineArtifactsBucketB3509859
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
                - Arn
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRRepositoryF3A3832E
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRRepositoryF3A3832E
                - Arn
          - Action:
              - ecs:DescribeCluster
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ClusterAdminFFB4911C
                - Arn
        Version: "2012-10-17"
      PolicyName: ECSCodeBuildProjectRoleDefaultPolicyAE512976
      Roles:
        - Ref: ECSCodeBuildProjectRole3356ADD4
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-CodeBuild-Project/Role/DefaultPolicy/Resource
  ECSCodeBuildProjectAFF5A7C5:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: CLUSTER_NAME
            Type: PLAINTEXT
            Value:
              Ref: ClusterAdminFFB4911C
          - Name: ECR_REPO_URI
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ""
                - - Fn::Select:
                      - 4
                      - Fn::Split:
                          - ":"
                          - Fn::GetAtt:
                              - ECRRepositoryF3A3832E
                              - Arn
                  - .dkr.ecr.
                  - Fn::Select:
                      - 3
                      - Fn::Split:
                          - ":"
                          - Fn::GetAtt:
                              - ECRRepositoryF3A3832E
                              - Arn
                  - "."
                  - Ref: AWS::URLSuffix
                  - /
                  - Ref: ECRRepositoryF3A3832E
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - ECSCodeBuildProjectRole3356ADD4
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "pre_build": {
                "commands": [
                  "env",
                  "COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)",
                  "TAG=${COMMIT_HASH:=latest}"
                ]
              },
              "build": {
                "commands": [
                  "echo Build $ECR_REPO_URI",
                  "mvn compile -DskipTests",
                  "mvn package -DskipTests",
                  "echo Building the Docker image...",
                  "docker build -t $ECR_REPO_URI:latest .",
                  "docker tag $ECR_REPO_URI:latest $ECR_REPO_URI:$TAG",
                  "$(aws ecr get-login --no-include-email)",
                  "docker push $ECR_REPO_URI:latest",
                  "docker push $ECR_REPO_URI:$TAG"
                ]
              },
              "post_build": {
                "commands": [
                  "echo \"In Post-Build Stage\"",
                  "printf '[{\"name\":\"ECS-Task-SpringBoot\",\"imageUri\":\"%s\"}]' $ECR_REPO_URI:$TAG > imagedefinitions.json",
                  "pwd; ls -al; cat imagedefinitions.json"
                ]
              }
            },
            "artifacts": {
              "files": [
                "imagedefinitions.json"
              ]
            }
          }
        Location:
          Fn::GetAtt:
            - CodeRepositoryDemoEEBA65AB
            - CloneUrlHttp
        Type: CODECOMMIT
      EncryptionKey:
        Fn::GetAtt:
          - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
          - Arn
      Name: EcsFargateStack
    Metadata:
      aws:cdk:path: EcsFargateStack/ECS-CodeBuild-Project/Resource
  ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/ArtifactsBucketEncryptionKey/Resource
  ECSPipelineArtifactsBucketEncryptionKeyAlias51004201:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-ecsfargatestackecspipeline44303a45
      TargetKeyId:
        Fn::GetAtt:
          - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  ECSPipelineArtifactsBucketB3509859:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/ArtifactsBucket/Resource
  ECSPipelineRoleF59B8524:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Role/Resource
  ECSPipelineRoleDefaultPolicyB2EF5B87:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ECSPipelineArtifactsBucketB3509859
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ECSPipelineArtifactsBucketB3509859
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineSourceCodeCommitCodePipelineActionRoleE8D7C306
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineBuildCodeBuildCodePipelineActionRole90BDF0A7
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineApproveCodePipelineActionRole1F77A04C
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineDeploytoECSDeployActionCodePipelineActionRole74222676
                - Arn
        Version: "2012-10-17"
      PolicyName: ECSPipelineRoleDefaultPolicyB2EF5B87
      Roles:
        - Ref: ECSPipelineRoleF59B8524
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Role/DefaultPolicy/Resource
  ECSPipeline51F5ADBB:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - ECSPipelineRoleF59B8524
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                RepositoryName:
                  Fn::GetAtt:
                    - CodeRepositoryDemoEEBA65AB
                    - Name
                BranchName: master
                PollForSourceChanges: false
              Name: CodeCommit
              OutputArtifacts:
                - Name: Artifact_Source_CodeCommit
              RoleArn:
                Fn::GetAtt:
                  - ECSPipelineSourceCodeCommitCodePipelineActionRoleE8D7C306
                  - Arn
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: ECSCodeBuildProjectAFF5A7C5
              InputArtifacts:
                - Name: Artifact_Source_CodeCommit
              Name: CodeBuild
              OutputArtifacts:
                - Name: Artifact_Build_CodeBuild
              RoleArn:
                Fn::GetAtt:
                  - ECSPipelineBuildCodeBuildCodePipelineActionRole90BDF0A7
                  - Arn
              RunOrder: 1
          Name: Build
        - Actions:
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Name: Approve
              RoleArn:
                Fn::GetAtt:
                  - ECSPipelineApproveCodePipelineActionRole1F77A04C
                  - Arn
              RunOrder: 1
          Name: Approve
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: "1"
              Configuration:
                ClusterName:
                  Ref: ClusterAdminFFB4911C
                ServiceName:
                  Fn::GetAtt:
                    - ECSFargateService443DBFA5
                    - Name
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: Artifact_Build_CodeBuild
              Name: DeployAction
              RoleArn:
                Fn::GetAtt:
                  - ECSPipelineDeploytoECSDeployActionCodePipelineActionRole74222676
                  - Arn
              RunOrder: 1
          Name: Deploy-to-ECS
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
              - Arn
          Type: KMS
        Location:
          Ref: ECSPipelineArtifactsBucketB3509859
        Type: S3
    DependsOn:
      - ECSPipelineRoleDefaultPolicyB2EF5B87
      - ECSPipelineRoleF59B8524
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Resource
  ECSPipelineSourceCodeCommitCodePipelineActionRoleE8D7C306:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Source/CodeCommit/CodePipelineActionRole/Resource
  ECSPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy255DB993:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ECSPipelineArtifactsBucketB3509859
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ECSPipelineArtifactsBucketB3509859
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
                - Arn
          - Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:UploadArchive
              - codecommit:GetUploadArchiveStatus
              - codecommit:CancelUploadArchive
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeRepositoryDemoEEBA65AB
                - Arn
        Version: "2012-10-17"
      PolicyName: ECSPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy255DB993
      Roles:
        - Ref: ECSPipelineSourceCodeCommitCodePipelineActionRoleE8D7C306
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Source/CodeCommit/CodePipelineActionRole/DefaultPolicy/Resource
  ECSPipelineEventsRole9AC23B85:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/EventsRole/Resource
  ECSPipelineEventsRoleDefaultPolicy858EBACD:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codepipeline:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: ECSPipeline51F5ADBB
        Version: "2012-10-17"
      PolicyName: ECSPipelineEventsRoleDefaultPolicy858EBACD
      Roles:
        - Ref: ECSPipelineEventsRole9AC23B85
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/EventsRole/DefaultPolicy/Resource
  ECSPipelineBuildCodeBuildCodePipelineActionRole90BDF0A7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Build/CodeBuild/CodePipelineActionRole/Resource
  ECSPipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicyFAEE96DF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSCodeBuildProjectAFF5A7C5
                - Arn
        Version: "2012-10-17"
      PolicyName: ECSPipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicyFAEE96DF
      Roles:
        - Ref: ECSPipelineBuildCodeBuildCodePipelineActionRole90BDF0A7
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Build/CodeBuild/CodePipelineActionRole/DefaultPolicy/Resource
  ECSPipelineApproveCodePipelineActionRole1F77A04C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Approve/Approve/CodePipelineActionRole/Resource
  ECSPipelineDeploytoECSDeployActionCodePipelineActionRole74222676:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Deploy-to-ECS/DeployAction/CodePipelineActionRole/Resource
  ECSPipelineDeploytoECSDeployActionCodePipelineActionRoleDefaultPolicyC605445C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecs:DescribeServices
              - ecs:DescribeTaskDefinition
              - ecs:DescribeTasks
              - ecs:ListTasks
              - ecs:RegisterTaskDefinition
              - ecs:UpdateService
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ECSPipelineArtifactsBucketB3509859
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ECSPipelineArtifactsBucketB3509859
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSPipelineArtifactsBucketEncryptionKey5C7C2BF4
                - Arn
        Version: "2012-10-17"
      PolicyName: ECSPipelineDeploytoECSDeployActionCodePipelineActionRoleDefaultPolicyC605445C
      Roles:
        - Ref: ECSPipelineDeploytoECSDeployActionCodePipelineActionRole74222676
    Metadata:
      aws:cdk:path: EcsFargateStack/ECSPipeline/Deploy-to-ECS/DeployAction/CodePipelineActionRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.82.0,@aws-cdk/aws-applicationautoscaling=1.82.0,@aws-cdk/aws-autoscaling=1.82.0,@aws-cdk/aws-autoscaling-common=1.82.0,@aws-cdk/aws-autoscaling-hooktargets=1.82.0,@aws-cdk/aws-cloudformation=1.82.0,@aws-cdk/aws-cloudwatch=1.82.0,@aws-cdk/aws-codebuild=1.82.0,@aws-cdk/aws-codecommit=1.82.0,@aws-cdk/aws-codeguruprofiler=1.82.0,@aws-cdk/aws-codepipeline=1.82.0,@aws-cdk/aws-codepipeline-actions=1.82.0,@aws-cdk/aws-ec2=1.82.0,@aws-cdk/aws-ecr=1.82.0,@aws-cdk/aws-ecr-assets=1.82.0,@aws-cdk/aws-ecs=1.82.0,@aws-cdk/aws-elasticloadbalancingv2=1.82.0,@aws-cdk/aws-events=1.82.0,@aws-cdk/aws-events-targets=1.82.0,@aws-cdk/aws-iam=1.82.0,@aws-cdk/aws-kms=1.82.0,@aws-cdk/aws-lambda=1.82.0,@aws-cdk/aws-logs=1.82.0,@aws-cdk/aws-s3=1.82.0,@aws-cdk/aws-s3-assets=1.82.0,@aws-cdk/aws-servicediscovery=1.82.0,@aws-cdk/aws-sns=1.82.0,@aws-cdk/aws-sns-subscriptions=1.82.0,@aws-cdk/aws-sqs=1.82.0,@aws-cdk/aws-ssm=1.82.0,@aws-cdk/cloud-assembly-schema=1.82.0,@aws-cdk/core=1.82.0,@aws-cdk/custom-resources=1.82.0,@aws-cdk/cx-api=1.82.0,@aws-cdk/region-info=1.82.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: EcsFargateStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  LoadBalancerDNS:
    Value:
      Fn::GetAtt:
        - ApplicationLoadBalancerFD56DEE1
        - DNSName
  codecommituri:
    Value:
      Fn::GetAtt:
        - CodeRepositoryDemoEEBA65AB
        - CloneUrlHttp
    Export:
      Name: CodeCommitURL
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

