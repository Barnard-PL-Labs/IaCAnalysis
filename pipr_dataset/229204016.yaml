Resources:
  ClusterEcsCluster496B3877:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Resource
  ClusterEcsClusterVpcDC1E8209:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/Resource
  ClusterEcsClusterVpcPublicSubnet1SubnetD3BCCB02:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1/Subnet
  ClusterEcsClusterVpcPublicSubnet1RouteTable8AF5E2CA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1/RouteTable
  ClusterEcsClusterVpcPublicSubnet1RouteTableAssociation93ECC701:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPublicSubnet1RouteTable8AF5E2CA
      SubnetId:
        Ref: ClusterEcsClusterVpcPublicSubnet1SubnetD3BCCB02
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1/RouteTableAssociation
  ClusterEcsClusterVpcPublicSubnet1DefaultRoute08F153A8:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPublicSubnet1RouteTable8AF5E2CA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ClusterEcsClusterVpcIGWC71457AC
    DependsOn:
      - ClusterEcsClusterVpcVPCGW5B79BC56
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1/DefaultRoute
  ClusterEcsClusterVpcPublicSubnet1EIP9DF66D11:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1/EIP
  ClusterEcsClusterVpcPublicSubnet1NATGateway25BC66EB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ClusterEcsClusterVpcPublicSubnet1EIP9DF66D11
          - AllocationId
      SubnetId:
        Ref: ClusterEcsClusterVpcPublicSubnet1SubnetD3BCCB02
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet1/NATGateway
  ClusterEcsClusterVpcPublicSubnet2Subnet0E844456:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2/Subnet
  ClusterEcsClusterVpcPublicSubnet2RouteTableF28A1DC6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2/RouteTable
  ClusterEcsClusterVpcPublicSubnet2RouteTableAssociation3E7F4112:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPublicSubnet2RouteTableF28A1DC6
      SubnetId:
        Ref: ClusterEcsClusterVpcPublicSubnet2Subnet0E844456
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2/RouteTableAssociation
  ClusterEcsClusterVpcPublicSubnet2DefaultRouteBFDC06A0:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPublicSubnet2RouteTableF28A1DC6
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ClusterEcsClusterVpcIGWC71457AC
    DependsOn:
      - ClusterEcsClusterVpcVPCGW5B79BC56
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2/DefaultRoute
  ClusterEcsClusterVpcPublicSubnet2EIP2EF57F95:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2/EIP
  ClusterEcsClusterVpcPublicSubnet2NATGateway8A676C68:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ClusterEcsClusterVpcPublicSubnet2EIP2EF57F95
          - AllocationId
      SubnetId:
        Ref: ClusterEcsClusterVpcPublicSubnet2Subnet0E844456
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PublicSubnet2/NATGateway
  ClusterEcsClusterVpcPrivateSubnet1Subnet81F71331:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet1
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet1/Subnet
  ClusterEcsClusterVpcPrivateSubnet1RouteTableAD3B2153:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet1/RouteTable
  ClusterEcsClusterVpcPrivateSubnet1RouteTableAssociationC4E2FDF4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPrivateSubnet1RouteTableAD3B2153
      SubnetId:
        Ref: ClusterEcsClusterVpcPrivateSubnet1Subnet81F71331
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet1/RouteTableAssociation
  ClusterEcsClusterVpcPrivateSubnet1DefaultRoute619BC856:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPrivateSubnet1RouteTableAD3B2153
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ClusterEcsClusterVpcPublicSubnet1NATGateway25BC66EB
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet1/DefaultRoute
  ClusterEcsClusterVpcPrivateSubnet2Subnet10AE5377:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet2
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet2/Subnet
  ClusterEcsClusterVpcPrivateSubnet2RouteTable08F9E443:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet2/RouteTable
  ClusterEcsClusterVpcPrivateSubnet2RouteTableAssociation150786E2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPrivateSubnet2RouteTable08F9E443
      SubnetId:
        Ref: ClusterEcsClusterVpcPrivateSubnet2Subnet10AE5377
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet2/RouteTableAssociation
  ClusterEcsClusterVpcPrivateSubnet2DefaultRoute7577EBF9:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ClusterEcsClusterVpcPrivateSubnet2RouteTable08F9E443
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ClusterEcsClusterVpcPublicSubnet2NATGateway8A676C68
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/PrivateSubnet2/DefaultRoute
  ClusterEcsClusterVpcIGWC71457AC:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyWebStack/Cluster/EcsCluster/Vpc
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/IGW
  ClusterEcsClusterVpcVPCGW5B79BC56:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
      InternetGatewayId:
        Ref: ClusterEcsClusterVpcIGWC71457AC
    Metadata:
      aws:cdk:path: MyWebStack/Cluster/EcsCluster/Vpc/VPCGW
  WebAppECRRepo3C3F6B12:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/ECRRepo/Resource
  WebAppSessionsE3ECC6CD:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Sessions/Resource
  WebAppServiceLBD2919275:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - WebAppServiceLBSecurityGroup1C1DC0C7
            - GroupId
      Subnets:
        - Ref: ClusterEcsClusterVpcPublicSubnet1SubnetD3BCCB02
        - Ref: ClusterEcsClusterVpcPublicSubnet2Subnet0E844456
      Type: application
    DependsOn:
      - ClusterEcsClusterVpcPublicSubnet1DefaultRoute08F153A8
      - ClusterEcsClusterVpcPublicSubnet2DefaultRouteBFDC06A0
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/LB/Resource
  WebAppServiceLBSecurityGroup1C1DC0C7:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB MyWebStackWebAppServiceLB765937AA
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/LB/SecurityGroup/Resource
  WebAppServiceLBSecurityGrouptoMyWebStackWebAppServiceSecurityGroup873FAF5680C5366822:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - WebAppServiceLBSecurityGroup1C1DC0C7
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - WebAppServiceSecurityGroup640F1197
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/LB/SecurityGroup/to MyWebStackWebAppServiceSecurityGroup873FAF56:80
  WebAppServiceLBPublicListener5A2F703F:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: WebAppServiceLBPublicListenerECSGroup7ADBFB80
          Type: forward
      LoadBalancerArn:
        Ref: WebAppServiceLBD2919275
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/LB/PublicListener/Resource
  WebAppServiceLBPublicListenerECSGroup7ADBFB80:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/LB/PublicListener/ECSGroup/Resource
  WebAppServiceTaskDefTaskRole66E5DFE5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/TaskDef/TaskRole/Resource
  WebAppServiceTaskDefTaskRoleDefaultPolicy9473F000:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - WebAppSessionsE3ECC6CD
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: WebAppServiceTaskDefTaskRoleDefaultPolicy9473F000
      Roles:
        - Ref: WebAppServiceTaskDefTaskRole66E5DFE5
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/TaskDef/TaskRole/DefaultPolicy/Resource
  WebAppServiceTaskDefFBDD6A5E:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: AWS_REGION
              Value:
                Ref: AWS::Region
            - Name: DYNAMODB_SESSION_TABLE_NAME
              Value:
                Ref: WebAppSessionsE3ECC6CD
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:b5737bb840c34b7e9d98b3d5006fdde8829d129e0d75c662d41fcb715284077d
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: WebAppServiceTaskDefwebLogGroup142CB8F0
              awslogs-stream-prefix: Service
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - WebAppServiceTaskDefExecutionRole226804EE
          - Arn
      Family: MyWebStackWebAppServiceTaskDef98D5050B
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - WebAppServiceTaskDefTaskRole66E5DFE5
          - Arn
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/TaskDef/Resource
  WebAppServiceTaskDefwebLogGroup142CB8F0:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/TaskDef/web/LogGroup/Resource
  WebAppServiceTaskDefExecutionRole226804EE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/TaskDef/ExecutionRole/Resource
  WebAppServiceTaskDefExecutionRoleDefaultPolicy9B33BA9F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - WebAppServiceTaskDefwebLogGroup142CB8F0
                - Arn
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - WebAppECRRepo3C3F6B12
                - Arn
        Version: "2012-10-17"
      PolicyName: WebAppServiceTaskDefExecutionRoleDefaultPolicy9B33BA9F
      Roles:
        - Ref: WebAppServiceTaskDefExecutionRole226804EE
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/TaskDef/ExecutionRole/DefaultPolicy/Resource
  WebAppService1894AE39:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ClusterEcsCluster496B3877
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: WebAppServiceLBPublicListenerECSGroup7ADBFB80
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - WebAppServiceSecurityGroup640F1197
                - GroupId
          Subnets:
            - Ref: ClusterEcsClusterVpcPrivateSubnet1Subnet81F71331
            - Ref: ClusterEcsClusterVpcPrivateSubnet2Subnet10AE5377
      TaskDefinition:
        Ref: WebAppServiceTaskDefFBDD6A5E
    DependsOn:
      - WebAppServiceLBPublicListenerECSGroup7ADBFB80
      - WebAppServiceLBPublicListener5A2F703F
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/Service/Service
  WebAppServiceSecurityGroup640F1197:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MyWebStack/WebApp/Service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ClusterEcsClusterVpcDC1E8209
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/Service/SecurityGroup/Resource
  WebAppServiceSecurityGroupfromMyWebStackWebAppServiceLBSecurityGroup268AD3838079480ED8:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - WebAppServiceSecurityGroup640F1197
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - WebAppServiceLBSecurityGroup1C1DC0C7
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/Service/SecurityGroup/from MyWebStackWebAppServiceLBSecurityGroup268AD383:80
  WebAppServiceTaskCountTarget896014D4:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 2
      ResourceId:
        Fn::Join:
          - ""
          - - service/
            - Ref: ClusterEcsCluster496B3877
            - /
            - Fn::GetAtt:
                - WebAppService1894AE39
                - Name
      RoleARN:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":iam::"
            - Ref: AWS::AccountId
            - :role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/Service/TaskCount/Target/Resource
  WebAppServiceTaskCountTargetCpuScaling5316F1F3:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: MyWebStackWebAppServiceTaskCountTargetCpuScalingADCB18AE
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: WebAppServiceTaskCountTarget896014D4
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 50
    Metadata:
      aws:cdk:path: MyWebStack/WebApp/Service/Service/TaskCount/Target/CpuScaling/Resource
  PipelineProjectRole186217BE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Project/Role/Resource
  PipelineProjectRoleDefaultPolicyC3E66349:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: PipelineProject0322184D
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: PipelineProject0322184D
                    - :*
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - WebAppECRRepo3C3F6B12
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - WebAppECRRepo3C3F6B12
                - Arn
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucketAEA9A052
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucketAEA9A052
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKeyF5BF0670
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKeyF5BF0670
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineProjectRoleDefaultPolicyC3E66349
      Roles:
        - Ref: PipelineProjectRole186217BE
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Project/Role/DefaultPolicy/Resource
  PipelineProject0322184D:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: REPOSITORY_URI
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ""
                - - Fn::Select:
                      - 4
                      - Fn::Split:
                          - ":"
                          - Fn::GetAtt:
                              - WebAppECRRepo3C3F6B12
                              - Arn
                  - .dkr.ecr.
                  - Fn::Select:
                      - 3
                      - Fn::Split:
                          - ":"
                          - Fn::GetAtt:
                              - WebAppECRRepo3C3F6B12
                              - Arn
                  - "."
                  - Ref: AWS::URLSuffix
                  - /
                  - Ref: WebAppECRRepo3C3F6B12
          - Name: CONTAINER_NAME
            Type: PLAINTEXT
            Value: web
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - PipelineProjectRole186217BE
          - Arn
      Source:
        Type: CODEPIPELINE
      EncryptionKey:
        Fn::GetAtt:
          - PipelineArtifactsBucketEncryptionKeyF5BF0670
          - Arn
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Project/Resource
  PipelineArtifactsBucketEncryptionKeyF5BF0670:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey
              - kms:TagResource
              - kms:UntagResource
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PipelineRoleB27FAA37
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PipelineProjectRole186217BE
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PipelineProjectRole186217BE
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PipelineDeployECSDeployActionCodePipelineActionRoleA78C715E
                  - Arn
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/ArtifactsBucketEncryptionKey/Resource
  PipelineArtifactsBucketAEA9A052:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - PipelineArtifactsBucketEncryptionKeyF5BF0670
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/ArtifactsBucket/Resource
  PipelineArtifactsBucketEncryptionKeyAlias94A07392:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-mywebstackpipelinef60ef278
      TargetKeyId:
        Fn::GetAtt:
          - PipelineArtifactsBucketEncryptionKeyF5BF0670
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  PipelineRoleB27FAA37:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Role/Resource
  PipelineRoleDefaultPolicy7BDC1ABB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucketAEA9A052
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucketAEA9A052
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKeyF5BF0670
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineBuildCodeBuildActionCodePipelineActionRole5FBA91DC
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineDeployECSDeployActionCodePipelineActionRoleA78C715E
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineRoleDefaultPolicy7BDC1ABB
      Roles:
        - Ref: PipelineRoleB27FAA37
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Role/DefaultPolicy/Resource
  Pipeline9850B417:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - PipelineRoleB27FAA37
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner:
                  Ref: SsmParameterValueapp1prodGITHUBOWNERC96584B6F00A464EAD1953AFF4B05118Parameter
                Repo:
                  Ref: SsmParameterValueapp1prodGITHUBREPOC96584B6F00A464EAD1953AFF4B05118Parameter
                Branch: master
                OAuthToken: "{{resolve:secretsmanager:/app1/prod/GITHUB_OAUTH_TOKEN:SecretString:::}}"
                PollForSourceChanges: false
              Name: Github_Source
              OutputArtifacts:
                - Name: Artifact_Source_Github_Source
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: PipelineProject0322184D
              InputArtifacts:
                - Name: Artifact_Source_Github_Source
              Name: CodeBuild_Action
              OutputArtifacts:
                - Name: Artifact_Build_CodeBuild_Action
              RoleArn:
                Fn::GetAtt:
                  - PipelineBuildCodeBuildActionCodePipelineActionRole5FBA91DC
                  - Arn
              RunOrder: 1
          Name: Build
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: "1"
              Configuration:
                ClusterName:
                  Ref: ClusterEcsCluster496B3877
                ServiceName:
                  Fn::GetAtt:
                    - WebAppService1894AE39
                    - Name
              InputArtifacts:
                - Name: Artifact_Build_CodeBuild_Action
              Name: ECSDeploy_Action
              RoleArn:
                Fn::GetAtt:
                  - PipelineDeployECSDeployActionCodePipelineActionRoleA78C715E
                  - Arn
              RunOrder: 1
          Name: Deploy
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - PipelineArtifactsBucketEncryptionKeyF5BF0670
              - Arn
          Type: KMS
        Location:
          Ref: PipelineArtifactsBucketAEA9A052
        Type: S3
    DependsOn:
      - PipelineRoleDefaultPolicy7BDC1ABB
      - PipelineRoleB27FAA37
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Resource
  PipelineSourceGithubSourceWebhookResource0C148F73:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:/app1/prod/GITHUB_OAUTH_TOKEN:SecretString:::}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetAction: Github_Source
      TargetPipeline:
        Ref: Pipeline9850B417
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Source/Github_Source/WebhookResource
  PipelineBuildCodeBuildActionCodePipelineActionRole5FBA91DC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Build/CodeBuild_Action/CodePipelineActionRole/Resource
  PipelineBuildCodeBuildActionCodePipelineActionRoleDefaultPolicyED1EDE43:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineProject0322184D
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineBuildCodeBuildActionCodePipelineActionRoleDefaultPolicyED1EDE43
      Roles:
        - Ref: PipelineBuildCodeBuildActionCodePipelineActionRole5FBA91DC
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Build/CodeBuild_Action/CodePipelineActionRole/DefaultPolicy/Resource
  PipelineDeployECSDeployActionCodePipelineActionRoleA78C715E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Deploy/ECSDeploy_Action/CodePipelineActionRole/Resource
  PipelineDeployECSDeployActionCodePipelineActionRoleDefaultPolicy9A901628:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecs:DescribeServices
              - ecs:DescribeTaskDefinition
              - ecs:DescribeTasks
              - ecs:ListTasks
              - ecs:RegisterTaskDefinition
              - ecs:UpdateService
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucketAEA9A052
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucketAEA9A052
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKeyF5BF0670
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineDeployECSDeployActionCodePipelineActionRoleDefaultPolicy9A901628
      Roles:
        - Ref: PipelineDeployECSDeployActionCodePipelineActionRoleA78C715E
    Metadata:
      aws:cdk:path: MyWebStack/Pipeline/Pipeline/Deploy/ECSDeploy_Action/CodePipelineActionRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.31.0,@aws-cdk/aws-applicationautoscaling=1.31.0,@aws-cdk/aws-autoscaling=1.31.0,@aws-cdk/aws-autoscaling-common=1.31.0,@aws-cdk/aws-autoscaling-hooktargets=1.31.0,@aws-cdk/aws-certificatemanager=1.31.0,@aws-cdk/aws-cloudformation=1.31.0,@aws-cdk/aws-cloudwatch=1.31.0,@aws-cdk/aws-codebuild=1.31.0,@aws-cdk/aws-codepipeline=1.31.0,@aws-cdk/aws-codepipeline-actions=1.31.0,@aws-cdk/aws-dynamodb=1.31.0,@aws-cdk/aws-ec2=1.31.0,@aws-cdk/aws-ecr=1.31.0,@aws-cdk/aws-ecr-assets=1.31.0,@aws-cdk/aws-ecs=1.31.0,@aws-cdk/aws-ecs-patterns=1.31.0,@aws-cdk/aws-elasticloadbalancingv2=1.31.0,@aws-cdk/aws-events=1.31.0,@aws-cdk/aws-events-targets=1.31.0,@aws-cdk/aws-iam=1.31.0,@aws-cdk/aws-kms=1.31.0,@aws-cdk/aws-lambda=1.31.0,@aws-cdk/aws-logs=1.31.0,@aws-cdk/aws-route53=1.31.0,@aws-cdk/aws-route53-targets=1.31.0,@aws-cdk/aws-s3=1.31.0,@aws-cdk/aws-s3-assets=1.31.0,@aws-cdk/aws-servicediscovery=1.31.0,@aws-cdk/aws-sns=1.31.0,@aws-cdk/aws-sns-subscriptions=1.31.0,@aws-cdk/aws-sqs=1.31.0,@aws-cdk/aws-ssm=1.31.0,@aws-cdk/aws-stepfunctions=1.31.0,@aws-cdk/aws-stepfunctions-tasks=1.31.0,@aws-cdk/core=1.31.0,@aws-cdk/custom-resources=1.31.0,@aws-cdk/cx-api=1.31.0,@aws-cdk/region-info=1.31.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Outputs:
  ClusterECSClusterARN659590E8:
    Value:
      Fn::GetAtt:
        - ClusterEcsCluster496B3877
        - Arn
  WebAppServiceLoadBalancerDNSC0C06892:
    Value:
      Fn::GetAtt:
        - WebAppServiceLBD2919275
        - DNSName
  WebAppServiceServiceURLA0D38F9D:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - WebAppServiceLBD2919275
              - DNSName
  WebAppECRRepoURIE4284B99:
    Value:
      Fn::Join:
        - ""
        - - Fn::Select:
              - 4
              - Fn::Split:
                  - ":"
                  - Fn::GetAtt:
                      - WebAppECRRepo3C3F6B12
                      - Arn
          - .dkr.ecr.
          - Fn::Select:
              - 3
              - Fn::Split:
                  - ":"
                  - Fn::GetAtt:
                      - WebAppECRRepo3C3F6B12
                      - Arn
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: WebAppECRRepo3C3F6B12
  WebAppServiceNameF43FA484:
    Value:
      Fn::GetAtt:
        - WebAppService1894AE39
        - Name
  WebAppContainerName77CD5962:
    Value: web
  WebAppSessionTableNameB954524F:
    Value:
      Ref: WebAppSessionsE3ECC6CD
  PipelinePipelineARN35CB2A83:
    Value:
      Fn::Join:
        - ""
        - - "arn:"
          - Ref: AWS::Partition
          - ":codepipeline:"
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: Pipeline9850B417
Parameters:
  SsmParameterValueapp1prodGITHUBREPOC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app1/prod/GITHUB_REPO
  SsmParameterValueapp1prodGITHUBOWNERC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /app1/prod/GITHUB_OWNER
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

