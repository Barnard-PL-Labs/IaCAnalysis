Resources:
  BaseResourcesVpc0648B605:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/Resource
  BaseResourcesVpcPublicSubnet1Subnet4BA27E87:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1/Subnet
  BaseResourcesVpcPublicSubnet1RouteTable977676F4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1/RouteTable
  BaseResourcesVpcPublicSubnet1RouteTableAssociationB04B20F0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPublicSubnet1RouteTable977676F4
      SubnetId:
        Ref: BaseResourcesVpcPublicSubnet1Subnet4BA27E87
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1/RouteTableAssociation
  BaseResourcesVpcPublicSubnet1DefaultRoute5E783030:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPublicSubnet1RouteTable977676F4
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: BaseResourcesVpcIGWBB1BF9A5
    DependsOn:
      - BaseResourcesVpcVPCGWDE804E2B
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1/DefaultRoute
  BaseResourcesVpcPublicSubnet1EIP74C2D241:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1/EIP
  BaseResourcesVpcPublicSubnet1NATGatewayE8EDC13D:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: BaseResourcesVpcPublicSubnet1Subnet4BA27E87
      AllocationId:
        Fn::GetAtt:
          - BaseResourcesVpcPublicSubnet1EIP74C2D241
          - AllocationId
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet1/NATGateway
  BaseResourcesVpcPublicSubnet2SubnetED75EB89:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet2/Subnet
  BaseResourcesVpcPublicSubnet2RouteTable5B240A83:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet2/RouteTable
  BaseResourcesVpcPublicSubnet2RouteTableAssociationB31A0570:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPublicSubnet2RouteTable5B240A83
      SubnetId:
        Ref: BaseResourcesVpcPublicSubnet2SubnetED75EB89
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet2/RouteTableAssociation
  BaseResourcesVpcPublicSubnet2DefaultRoute3003D4DE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPublicSubnet2RouteTable5B240A83
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: BaseResourcesVpcIGWBB1BF9A5
    DependsOn:
      - BaseResourcesVpcVPCGWDE804E2B
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PublicSubnet2/DefaultRoute
  BaseResourcesVpcPrivateSubnet1Subnet6A9C8590:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.1.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet1/Subnet
  BaseResourcesVpcPrivateSubnet1RouteTableD7B7487E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet1/RouteTable
  BaseResourcesVpcPrivateSubnet1RouteTableAssociation725AA848:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPrivateSubnet1RouteTableD7B7487E
      SubnetId:
        Ref: BaseResourcesVpcPrivateSubnet1Subnet6A9C8590
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet1/RouteTableAssociation
  BaseResourcesVpcPrivateSubnet1DefaultRoute1C3B05B5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPrivateSubnet1RouteTableD7B7487E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: BaseResourcesVpcPublicSubnet1NATGatewayE8EDC13D
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet1/DefaultRoute
  BaseResourcesVpcPrivateSubnet2SubnetCD401338:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.1.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet2/Subnet
  BaseResourcesVpcPrivateSubnet2RouteTable08FC6A9F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet2/RouteTable
  BaseResourcesVpcPrivateSubnet2RouteTableAssociationAD19E071:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPrivateSubnet2RouteTable08FC6A9F
      SubnetId:
        Ref: BaseResourcesVpcPrivateSubnet2SubnetCD401338
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet2/RouteTableAssociation
  BaseResourcesVpcPrivateSubnet2DefaultRouteD34F7843:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: BaseResourcesVpcPrivateSubnet2RouteTable08FC6A9F
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: BaseResourcesVpcPublicSubnet1NATGatewayE8EDC13D
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/PrivateSubnet2/DefaultRoute
  BaseResourcesVpcIGWBB1BF9A5:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: App-Infrastructure/Base-Resources/Vpc
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/IGW
  BaseResourcesVpcVPCGWDE804E2B:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: BaseResourcesVpc0648B605
      InternetGatewayId:
        Ref: BaseResourcesVpcIGWBB1BF9A5
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/Vpc/VPCGW
  BaseResourcesAppLoadbalancer767D43D4:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - BaseResourcesAppLoadbalancerSecurityGroup4A741194
            - GroupId
      Subnets:
        - Ref: BaseResourcesVpcPublicSubnet1Subnet4BA27E87
        - Ref: BaseResourcesVpcPublicSubnet2SubnetED75EB89
      Type: application
    DependsOn:
      - BaseResourcesVpcPublicSubnet1DefaultRoute5E783030
      - BaseResourcesVpcPublicSubnet2DefaultRoute3003D4DE
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/App-Loadbalancer/Resource
  BaseResourcesAppLoadbalancerSecurityGroup4A741194:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB AppInfrastructureBaseResourcesAppLoadbalancer269B33DA
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 8080
          FromPort: 8080
          IpProtocol: tcp
          ToPort: 8080
      VpcId:
        Ref: BaseResourcesVpc0648B605
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/App-Loadbalancer/SecurityGroup/Resource
  BaseResourcesAppLoadbalancerSecurityGrouptoAppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F280BE26C3F4:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - BaseResourcesAppLoadbalancerSecurityGroup4A741194
          - GroupId
      IpProtocol: tcp
      Description: to AppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F2:80
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/App-Loadbalancer/SecurityGroup/to AppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F2:80
  BaseResourcesAppLoadbalancerSecurityGrouptoAppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F280807AC40B3C:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - BaseResourcesAppLoadbalancerSecurityGroup4A741194
          - GroupId
      IpProtocol: tcp
      Description: to AppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F2:8080
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144
          - GroupId
      FromPort: 8080
      ToPort: 8080
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/App-Loadbalancer/SecurityGroup/to AppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F2:8080
  BaseResourcesAppLoadbalancerSecurityGrouptoAppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F2327686553538A49962:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - BaseResourcesAppLoadbalancerSecurityGroup4A741194
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144
          - GroupId
      FromPort: 32768
      ToPort: 65535
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/App-Loadbalancer/SecurityGroup/to AppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup504A03F2:32768-65535
  BaseResourcesAppLoadbalancerProductionListener06FA748F:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: EcsServiceTargetGroupBlueGroupB5C2FFF6
          Type: forward
      LoadBalancerArn:
        Ref: BaseResourcesAppLoadbalancer767D43D4
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/App-Loadbalancer/Production-Listener/Resource
  BaseResourcesAppLoadbalancerTestListenerEF1EA5E6:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: EcsServiceTargetGroupGreenGroupF86EDF21
          Type: forward
      LoadBalancerArn:
        Ref: BaseResourcesAppLoadbalancer767D43D4
      Port: 8080
      Protocol: HTTP
    Metadata:
      aws:cdk:path: App-Infrastructure/Base-Resources/App-Loadbalancer/Test-Listener/Resource
  EcsServiceTargetGroupBlueGroupB5C2FFF6:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 10
      Matcher:
        HttpCode: 200,404
      Name: Blue-Group
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: instance
      VpcId:
        Ref: BaseResourcesVpc0648B605
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Target-Group/Blue-Group/Resource
  EcsServiceTargetGroupGreenGroupF86EDF21:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 10
      Matcher:
        HttpCode: 200,404
      Name: Green-Group
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: instance
      VpcId:
        Ref: BaseResourcesVpc0648B605
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Target-Group/Green-Group/Resource
  EcsServiceEcsCluster9F065380:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: Ecs_Cluster
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup
      VpcId:
        Ref: BaseResourcesVpc0648B605
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroupfromAppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB808655D838:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from AppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB:80
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - BaseResourcesAppLoadbalancerSecurityGroup4A741194
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from AppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB:80
  EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroupfromAppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB8080C5E57AE3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from AppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB:8080
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - BaseResourcesAppLoadbalancerSecurityGroup4A741194
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from AppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB:8080
  EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroupfromAppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB3276865535A2E11FA7:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 32768
      GroupId:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - BaseResourcesAppLoadbalancerSecurityGroup4A741194
          - GroupId
      ToPort: 65535
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from AppInfrastructureBaseResourcesAppLoadbalancerSecurityGroupFCC9C4CB:32768-65535
  EcsServiceEcsClusterDefaultAutoScalingGroupInstanceRoleF856DC9C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceRole/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy869AC7A2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecs:DeregisterContainerInstance
              - ecs:RegisterContainerInstance
              - ecs:Submit*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - EcsServiceEcsCluster9F065380
                - Arn
          - Action:
              - ecs:Poll
              - ecs:StartTelemetrySession
            Condition:
              ArnEquals:
                ecs:cluster:
                  Fn::GetAtt:
                    - EcsServiceEcsCluster9F065380
                    - Arn
            Effect: Allow
            Resource: "*"
          - Action:
              - ecs:DiscoverPollEndpoint
              - ecr:GetAuthorizationToken
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: EcsServiceEcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy869AC7A2
      Roles:
        - Ref: EcsServiceEcsClusterDefaultAutoScalingGroupInstanceRoleF856DC9C
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupInstanceProfileCCBA3753:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: EcsServiceEcsClusterDefaultAutoScalingGroupInstanceRoleF856DC9C
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/InstanceProfile
  EcsServiceEcsClusterDefaultAutoScalingGroupLaunchConfig0F9FAF24:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.small
      IamInstanceProfile:
        Ref: EcsServiceEcsClusterDefaultAutoScalingGroupInstanceProfileCCBA3753
      SecurityGroups:
        - Fn::GetAtt:
            - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceSecurityGroup71B37144
            - GroupId
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash
                echo ECS_CLUSTER=
              - Ref: EcsServiceEcsCluster9F065380
              - |-2
                 >> /etc/ecs/ecs.config
                sudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP
                sudo service iptables save
                echo ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config
    DependsOn:
      - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy869AC7A2
      - EcsServiceEcsClusterDefaultAutoScalingGroupInstanceRoleF856DC9C
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/LaunchConfig
  EcsServiceEcsClusterDefaultAutoScalingGroupASGE7812465:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      LaunchConfigurationName:
        Ref: EcsServiceEcsClusterDefaultAutoScalingGroupLaunchConfig0F9FAF24
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup
      VPCZoneIdentifier:
        - Ref: BaseResourcesVpcPrivateSubnet1Subnet6A9C8590
        - Ref: BaseResourcesVpcPrivateSubnet2SubnetCD401338
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/ASG
  EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole1A5B5BE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: Name
          Value: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy8BF07877:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeInstanceAttribute
              - ec2:DescribeInstanceStatus
              - ec2:DescribeHosts
            Effect: Allow
            Resource: "*"
          - Action: autoscaling:CompleteLifecycleAction
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":autoscaling:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :autoScalingGroup:*:autoScalingGroupName/
                  - Ref: EcsServiceEcsClusterDefaultAutoScalingGroupASGE7812465
          - Action:
              - ecs:DescribeContainerInstances
              - ecs:DescribeTasks
            Condition:
              ArnEquals:
                ecs:cluster:
                  Fn::GetAtt:
                    - EcsServiceEcsCluster9F065380
                    - Arn
            Effect: Allow
            Resource: "*"
          - Action:
              - ecs:ListContainerInstances
              - ecs:SubmitContainerStateChange
              - ecs:SubmitTaskStateChange
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - EcsServiceEcsCluster9F065380
                - Arn
          - Action:
              - ecs:UpdateContainerInstancesState
              - ecs:ListTasks
            Condition:
              ArnEquals:
                ecs:cluster:
                  Fn::GetAtt:
                    - EcsServiceEcsCluster9F065380
                    - Arn
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy8BF07877
      Roles:
        - Ref: EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole1A5B5BE0
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunction6B11D8C3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3, json, os, time

          ecs = boto3.client('ecs')
          autoscaling = boto3.client('autoscaling')


          def lambda_handler(event, context):
            print(json.dumps(dict(event, ResponseURL='...')))
            cluster = os.environ['CLUSTER']
            snsTopicArn = event['Records'][0]['Sns']['TopicArn']
            lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])
            instance_id = lifecycle_event.get('EC2InstanceId')
            if not instance_id:
              print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))
              return

            instance_arn = container_instance_arn(cluster, instance_id)
            print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))

            if not instance_arn:
              return

            task_arns = container_instance_task_arns(cluster, instance_arn)

            if task_arns:
              print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))

            while has_tasks(cluster, instance_arn, task_arns):
              time.sleep(10)

            try:
              print('Terminating instance %s' % instance_id)
              autoscaling.complete_lifecycle_action(
                  LifecycleActionResult='CONTINUE',
                  **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))
            except Exception as e:
              # Lifecycle action may have already completed.
              print(str(e))


          def container_instance_arn(cluster, instance_id):
            """Turn an instance ID into a container instance ARN."""
            arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']
            if not arns:
              return None
            return arns[0]

          def container_instance_task_arns(cluster, instance_arn):
            """Fetch tasks for a container instance ARN."""
            arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']
            return arns

          def has_tasks(cluster, instance_arn, task_arns):
            """Return True if the instance is running tasks for the given cluster."""
            instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']
            if not instances:
              return False
            instance = instances[0]

            if instance['status'] == 'ACTIVE':
              # Start draining, then try again later
              set_container_instance_to_draining(cluster, instance_arn)
              return True

            task_count = None

            if task_arns:
              # Fetch details for tasks running on the container instance
              tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']
              if tasks:
                # Consider any non-stopped tasks as running
                task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']

            if not task_count:
              # Fallback to instance task counts if detailed task information is unavailable
              task_count = instance['runningTasksCount'] + instance['pendingTasksCount']

            print('Instance %s has %s tasks' % (instance_arn, task_count))

            return task_count > 0

          def set_container_instance_to_draining(cluster, instance_arn):
            ecs.update_container_instances_state(
                cluster=cluster,
                containerInstances=[instance_arn], status='DRAINING')


          def pick(dct, *keys):
            """Pick a subset of a dict."""
            return {k: v for k, v in dct.items() if k in keys}
      Role:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole1A5B5BE0
          - Arn
      Environment:
        Variables:
          CLUSTER:
            Ref: EcsServiceEcsCluster9F065380
      Handler: index.lambda_handler
      Runtime: python3.9
      Tags:
        - Key: Name
          Value: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup
      Timeout: 310
    DependsOn:
      - EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy8BF07877
      - EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole1A5B5BE0
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionAllowInvokeAppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicBCFDA1C045CE703B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunction6B11D8C3
          - Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic3522E482
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:AppInfrastructureEcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicBCFDA1C0
  EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunctionTopicEA9F2EB5:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic3522E482
      Endpoint:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupDrainECSHookFunction6B11D8C3
          - Arn
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic3522E482:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: Name
          Value: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole1FDB03D0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: autoscaling.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyF7D4EA5B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic3522E482
        Version: "2012-10-17"
      PolicyName: EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyF7D4EA5B
      Roles:
        - Ref: EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole1FDB03D0
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource
  EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHook2FB64DE5:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      AutoScalingGroupName:
        Ref: EcsServiceEcsClusterDefaultAutoScalingGroupASGE7812465
      LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
      DefaultResult: CONTINUE
      HeartbeatTimeout: 300
      NotificationTargetARN:
        Ref: EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic3522E482
      RoleARN:
        Fn::GetAtt:
          - EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole1FDB03D0
          - Arn
    DependsOn:
      - EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyF7D4EA5B
      - EcsServiceEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole1FDB03D0
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource
  EcsServiceEcsTaskRole6AA4F549:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-TaskRole/Resource
  EcsServiceEcsTaskRoleDefaultPolicy40261A6E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/backend
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: EcsServiceEcsTaskRoleDefaultPolicy40261A6E
      Roles:
        - Ref: EcsServiceEcsTaskRole6AA4F549
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-TaskRole/DefaultPolicy/Resource
  EcsServiceEcsTaskDef8616FF80:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: 1
          DockerLabels:
            name: demo-app
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /backend:latest
          Memory: 512
          Name: sampleAppContainer
          PortMappings:
            - ContainerPort: 80
              HostPort: 0
              Protocol: tcp
      ExecutionRoleArn:
        Fn::GetAtt:
          - EcsServiceEcsTaskRole6AA4F549
          - Arn
      Family: demo-app
      NetworkMode: bridge
      RequiresCompatibilities:
        - EC2
      TaskRoleArn:
        Fn::GetAtt:
          - EcsServiceEcsTaskRole6AA4F549
          - Arn
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-TaskDef/Resource
  EcsServiceEcsTaskDefContainerLogGroup14F1AA0B:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: ecs/demo-app
      RetentionInDays: 731
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-TaskDef/Container-LogGroup/Resource
  EcsServiceB8E205FD:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: EcsServiceEcsCluster9F065380
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: CODE_DEPLOY
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 10800
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: sampleAppContainer
          ContainerPort: 80
          TargetGroupArn:
            Ref: EcsServiceTargetGroupBlueGroupB5C2FFF6
      SchedulingStrategy: REPLICA
      ServiceName: demo-app
      TaskDefinition:
        Ref: EcsServiceEcsTaskDef8616FF80
    DependsOn:
      - BaseResourcesAppLoadbalancerProductionListener06FA748F
    Metadata:
      aws:cdk:path: App-Infrastructure/Ecs-Service/Ecs-Service/Service
  CdkPipelineCdkPipelineRole0570DD2A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/CdkPipeline-Role/Resource
  CdkPipelineCdkPipelineRoleDefaultPolicyEDEACB2F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudformation:*
              - sts:*
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CdkPipelineProjectF1CF1AE3
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CdkPipelineProjectF1CF1AE3
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CdkPipelineProjectF1CF1AE3
                  - -*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CdkPipelineArtifactsBucket38E56048
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CdkPipelineArtifactsBucket38E56048
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CdkPipelineArtifactsBucketEncryptionKey656CFF48
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CdkPipelineArtifactsBucketEncryptionKey656CFF48
                - Arn
        Version: "2012-10-17"
      PolicyName: CdkPipelineCdkPipelineRoleDefaultPolicyEDEACB2F
      Roles:
        - Ref: CdkPipelineCdkPipelineRole0570DD2A
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/CdkPipeline-Role/DefaultPolicy/Resource
  CdkPipelineProjectF1CF1AE3:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CdkPipelineCdkPipelineRole0570DD2A
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "install": {
                "commands": [
                  "npm install"
                ]
              },
              "build": {
                "commands": [
                  "npx cdk synth",
                  "npx cdk deploy --all --require-approval=never"
                ]
              }
            }
          }
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey:
        Fn::GetAtt:
          - CdkPipelineArtifactsBucketEncryptionKey656CFF48
          - Arn
      Name: Project
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Project/Resource
  CdkPipelineArtifactsBucketEncryptionKey656CFF48:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/ArtifactsBucketEncryptionKey/Resource
  CdkPipelineArtifactsBucketEncryptionKeyAlias2BBE2A89:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-appinfrastructurecdkpipeline7282e72c
      TargetKeyId:
        Fn::GetAtt:
          - CdkPipelineArtifactsBucketEncryptionKey656CFF48
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  CdkPipelineArtifactsBucket38E56048:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - CdkPipelineArtifactsBucketEncryptionKey656CFF48
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/ArtifactsBucket/Resource
  CdkPipelineArtifactsBucketPolicyC0B46BE6:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CdkPipelineArtifactsBucket38E56048
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - CdkPipelineArtifactsBucket38E56048
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CdkPipelineArtifactsBucket38E56048
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/ArtifactsBucket/Policy/Resource
  CdkPipelineRole7D72AB91:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/Role/Resource
  CdkPipelineRoleDefaultPolicyEEA1A181:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CdkPipelineArtifactsBucket38E56048
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CdkPipelineArtifactsBucket38E56048
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CdkPipelineArtifactsBucketEncryptionKey656CFF48
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CdkPipelineBuildActionGitHubSourceCodePipelineActionRole89746282
                - Arn
        Version: "2012-10-17"
      PolicyName: CdkPipelineRoleDefaultPolicyEEA1A181
      Roles:
        - Ref: CdkPipelineRole7D72AB91
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/Role/DefaultPolicy/Resource
  CdkPipeline138F6691:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - CdkPipelineRole7D72AB91
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: edo92
                Repo: Aws-Ecs-BlueGreen-Deployment
                Branch: main
                OAuthToken: "{{resolve:secretsmanager:demoapp/gitSourcetoken:SecretString:::}}"
                PollForSourceChanges: false
              Name: GitHub-Source
              OutputArtifacts:
                - Name: Artifact_Source_GitHub-Source
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CdkPipelineProjectF1CF1AE3
              InputArtifacts:
                - Name: Artifact_Source_GitHub-Source
              Name: GitHub-Source
              OutputArtifacts:
                - Name: Artifact_BuildAction_GitHub-Source
              RoleArn:
                Fn::GetAtt:
                  - CdkPipelineBuildActionGitHubSourceCodePipelineActionRole89746282
                  - Arn
              RunOrder: 1
          Name: BuildAction
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - CdkPipelineArtifactsBucketEncryptionKey656CFF48
              - Arn
          Type: KMS
        Location:
          Ref: CdkPipelineArtifactsBucket38E56048
        Type: S3
      Name: Cdk-Pipeline
    DependsOn:
      - CdkPipelineRoleDefaultPolicyEEA1A181
      - CdkPipelineRole7D72AB91
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/Resource
  CdkPipelineSourceGitHubSourceWebhookResourceC22B190A:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:demoapp/gitSourcetoken:SecretString:::}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetAction: GitHub-Source
      TargetPipeline:
        Ref: CdkPipeline138F6691
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/Source/GitHub-Source/WebhookResource
  CdkPipelineBuildActionGitHubSourceCodePipelineActionRole89746282:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/BuildAction/GitHub-Source/CodePipelineActionRole/Resource
  CdkPipelineBuildActionGitHubSourceCodePipelineActionRoleDefaultPolicy52BA0CC6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CdkPipelineProjectF1CF1AE3
                - Arn
        Version: "2012-10-17"
      PolicyName: CdkPipelineBuildActionGitHubSourceCodePipelineActionRoleDefaultPolicy52BA0CC6
      Roles:
        - Ref: CdkPipelineBuildActionGitHubSourceCodePipelineActionRole89746282
    Metadata:
      aws:cdk:path: App-Infrastructure/Cdk-Pipeline/Cdk-Pipeline/BuildAction/GitHub-Source/CodePipelineActionRole/DefaultPolicy/Resource
  ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/Lambda-Role/Resource
  ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:PassRole
              - sts:AssumeRole
              - codedeploy:List*
              - codedeploy:Get*
              - codedeploy:UpdateDeploymentGroup
              - codedeploy:CreateDeploymentGroup
              - codedeploy:DeleteDeploymentGroup
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      Roles:
        - Ref: ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/Lambda-Role/DefaultPolicy/Resource
  ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::FindInMap:
                  - ServiceprincipalMap
                  - Ref: AWS::Region
                  - codedeploy
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSCodeDeployRoleForECS
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/CodeDeploy-Role/Resource
  ServicePipelineCodedeployDeploymentCodedeployApp31BB2340:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: demo-app
      ComputePlatform: ECS
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/Codedeploy-App/Resource
  ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 0ddd7a6582a11cdca9d754e4147c0df8ee93fcc61939a826429449c6cc98bf5a.zip
      Role:
        Fn::GetAtt:
          - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
          - Arn
      Description: Custom resource to create deployment group
      Handler: create_deployment_group.handler
      MemorySize: 128
      Runtime: python3.8
      Timeout: 60
    DependsOn:
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/Create-DeploymentGroup/Resource
      aws:asset:path: asset.0ddd7a6582a11cdca9d754e4147c0df8ee93fcc61939a826429449c6cc98bf5a
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmDescription: CloudWatch Alarm for the 4xx errors of Blue target group
      AlarmName: Blue_4xx_Alarm
      Dimensions:
        - Name: LoadBalancer
          Value: app/Ecs-P-AppLo-EOZKIEO7PC8G/2623aa771c10760a
        - Name: TargetGroup
          Value: targetgroup/Blue-Group/c636ee69f1c01097
      MetricName: HTTPCode_Target_4XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 1
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/CloudWatch-BlueGreenAlarm/blue4xxErrors/Resource
  ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmDescription: CloudWatch Alarm for the 4xx errors of Green target group
      AlarmName: Green_4xx_Alarm
      Dimensions:
        - Name: LoadBalancer
          Value: app/Ecs-P-AppLo-EOZKIEO7PC8G/2623aa771c10760a
        - Name: TargetGroup
          Value: targetgroup/Green-Group/bdb11d27439c803e
      MetricName: HTTPCode_Target_4XX_Count
      Namespace: AWS/ApplicationELB
      Period: 60
      Statistic: Sum
      Threshold: 1
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/CloudWatch-BlueGreenAlarm/green4xxErrors/Resource
  ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
          - Arn
      ApplicationName: demo-app
      DeploymentGroupName: demo-app
      DeploymentConfigName: CodeDeployDefault.ECSLinear10PercentEvery1Minutes
      ServiceRoleArn:
        Fn::GetAtt:
          - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
          - Arn
      BlueTargetGroup: Blue-Group
      GreenTargetGroup: Green-Group
      ProdListenerArn:
        Ref: BaseResourcesAppLoadbalancerProductionListener06FA748F
      TestListenerArn:
        Ref: BaseResourcesAppLoadbalancerTestListenerEF1EA5E6
      EcsClusterName: Ecs_Cluster
      EcsServiceName: demo-app
      BlueGroupAlarm:
        Ref: ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      GreenGroupAlarm:
        Ref: ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      TerminationWaitTime: 5
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Codedeploy-Deployment/CodeDeploy-Application/Default
  ServicePipelineProjectPipelineProjectRoleBFD9A17A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Project-Role/Resource
  ServicePipelineProjectPipelineProjectRoleDefaultPolicyB9645F76:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudformation:*
              - sts:*
              - secretsmanager:*
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ServicePipelineProjectPipelineB04EE928
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ServicePipelineProjectPipelineB04EE928
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: ServicePipelineProjectPipelineB04EE928
                  - -*
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/backend
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/backend
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
                - Arn
        Version: "2012-10-17"
      PolicyName: ServicePipelineProjectPipelineProjectRoleDefaultPolicyB9645F76
      Roles:
        - Ref: ServicePipelineProjectPipelineProjectRoleBFD9A17A
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Project-Role/DefaultPolicy/Resource
  ServicePipelineProjectPipelineB04EE928:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: FAMILY
            Type: PLAINTEXT
            Value: demo-app
          - Name: TASK_ARN
            Type: PLAINTEXT
            Value:
              Fn::GetAtt:
                - EcsServiceEcsTaskRole6AA4F549
                - Arn
          - Name: TASK_EXEC_ARN
            Type: PLAINTEXT
            Value:
              Fn::GetAtt:
                - EcsServiceEcsTaskRole6AA4F549
                - Arn
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value:
              Ref: AWS::AccountId
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value:
              Ref: AWS::Region
          - Name: TASK_FAMILY
            Type: PLAINTEXT
            Value: demo-app
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - ServicePipelineProjectPipelineProjectRoleBFD9A17A
          - Arn
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey:
        Fn::GetAtt:
          - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
          - Arn
      TimeoutInMinutes: 15
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Project-Pipeline/Resource
  ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
        Version: "2012-10-17"
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/ArtifactsBucketEncryptionKey/Resource
  ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKeyAlias2B30AA02:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-appinfrastructureservicepipelineprojectpipelinepipelinestage61ee4727
      TargetKeyId:
        Fn::GetAtt:
          - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
          - Arn
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/ArtifactsBucketEncryptionKeyAlias/Resource
  ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/ArtifactsBucket/Resource
  ServicePipelineProjectPipelinePipelineStageArtifactsBucketPolicy0922E46E:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                        - Arn
                    - /*
        Version: "2012-10-17"
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/ArtifactsBucket/Policy/Resource
  ServicePipelineProjectPipelinePipelineStageRole1BA7BAD3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Role/Resource
  ServicePipelineProjectPipelinePipelineStageRoleDefaultPolicy86F03BF3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServicePipelineProjectPipelinePipelineStageBuildDeploymentCodePipelineActionRole52181B47
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServicePipelineProjectPipelinePipelineStageDeployEcsDeploymentActionCodePipelineActionRole1E552877
                - Arn
        Version: "2012-10-17"
      PolicyName: ServicePipelineProjectPipelinePipelineStageRoleDefaultPolicy86F03BF3
      Roles:
        - Ref: ServicePipelineProjectPipelinePipelineStageRole1BA7BAD3
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Role/DefaultPolicy/Resource
  ServicePipelineProjectPipelinePipelineStage680C249A:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - ServicePipelineProjectPipelinePipelineStageRole1BA7BAD3
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: edo92
                Repo: Simple-Express-Server
                Branch: main
                OAuthToken: "{{resolve:secretsmanager:demoapp/gitSourcetoken:SecretString:::}}"
                PollForSourceChanges: false
              Name: GitHub-Source
              OutputArtifacts:
                - Name: Artifact_Source_GitHub-Source
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: ServicePipelineProjectPipelineB04EE928
              InputArtifacts:
                - Name: Artifact_Source_GitHub-Source
              Name: Deployment
              OutputArtifacts:
                - Name: Artifact_Build_Deployment
              RoleArn:
                Fn::GetAtt:
                  - ServicePipelineProjectPipelinePipelineStageBuildDeploymentCodePipelineActionRole52181B47
                  - Arn
              RunOrder: 1
          Name: Build
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeployToECS
                Version: "1"
              Configuration:
                ApplicationName: demo-app
                DeploymentGroupName: demo-app
                TaskDefinitionTemplateArtifact: Artifact_Build_Deployment
                TaskDefinitionTemplatePath: taskdef.json
                AppSpecTemplateArtifact: Artifact_Build_Deployment
                AppSpecTemplatePath: appspec.yaml
                Image1ArtifactName: Artifact_Build_Deployment
                Image1ContainerName: TASK_DEFINITION
              InputArtifacts:
                - Name: Artifact_Build_Deployment
              Name: Ecs-Deployment-Action
              RoleArn:
                Fn::GetAtt:
                  - ServicePipelineProjectPipelinePipelineStageDeployEcsDeploymentActionCodePipelineActionRole1E552877
                  - Arn
              RunOrder: 1
          Name: Deploy
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
              - Arn
          Type: KMS
        Location:
          Ref: ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
        Type: S3
      Name: pipeline
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
      - ServicePipelineProjectPipelinePipelineStageRoleDefaultPolicy86F03BF3
      - ServicePipelineProjectPipelinePipelineStageRole1BA7BAD3
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Resource
  ServicePipelineProjectPipelinePipelineStageSourceGitHubSourceWebhookResource2D343C3E:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:demoapp/gitSourcetoken:SecretString:::}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetAction: GitHub-Source
      TargetPipeline:
        Ref: ServicePipelineProjectPipelinePipelineStage680C249A
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Source/GitHub-Source/WebhookResource
  ServicePipelineProjectPipelinePipelineStageBuildDeploymentCodePipelineActionRole52181B47:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Build/Deployment/CodePipelineActionRole/Resource
  ServicePipelineProjectPipelinePipelineStageBuildDeploymentCodePipelineActionRoleDefaultPolicy05C68582:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServicePipelineProjectPipelineB04EE928
                - Arn
        Version: "2012-10-17"
      PolicyName: ServicePipelineProjectPipelinePipelineStageBuildDeploymentCodePipelineActionRoleDefaultPolicy05C68582
      Roles:
        - Ref: ServicePipelineProjectPipelinePipelineStageBuildDeploymentCodePipelineActionRole52181B47
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Build/Deployment/CodePipelineActionRole/DefaultPolicy/Resource
  ServicePipelineProjectPipelinePipelineStageDeployEcsDeploymentActionCodePipelineActionRole1E552877:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Deploy/Ecs-Deployment-Action/CodePipelineActionRole/Resource
  ServicePipelineProjectPipelinePipelineStageDeployEcsDeploymentActionCodePipelineActionRoleDefaultPolicy7FF236C7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:RegisterApplicationRevision
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codedeploy:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :application:demo-app
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetDeployment
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codedeploy:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :deploymentgroup:demo-app/demo-app
          - Action: codedeploy:GetDeploymentConfig
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:codedeploy:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :deploymentconfig:CodeDeployDefault.ECSLinear10PercentEvery1Minutes
          - Action: ecs:RegisterTaskDefinition
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - ecs-tasks.amazonaws.com
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ServicePipelineProjectPipelinePipelineStageArtifactsBucket13A0E5A5
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ServicePipelineProjectPipelinePipelineStageArtifactsBucketEncryptionKey79AD7450
                - Arn
        Version: "2012-10-17"
      PolicyName: ServicePipelineProjectPipelinePipelineStageDeployEcsDeploymentActionCodePipelineActionRoleDefaultPolicy7FF236C7
      Roles:
        - Ref: ServicePipelineProjectPipelinePipelineStageDeployEcsDeploymentActionCodePipelineActionRole1E552877
    DependsOn:
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmblue4xxErrors42E52E8D
      - ServicePipelineCodedeployDeploymentCloudWatchBlueGreenAlarmgreen4xxErrors2D267B61
      - ServicePipelineCodedeployDeploymentCodedeployApp31BB2340
      - ServicePipelineCodedeployDeploymentCodeDeployApplicationA9D8B464
      - ServicePipelineCodedeployDeploymentCodeDeployRoleDDCEA948
      - ServicePipelineCodedeployDeploymentCreateDeploymentGroup5EAE0851
      - ServicePipelineCodedeployDeploymentLambdaRoleDefaultPolicyCF1A618C
      - ServicePipelineCodedeployDeploymentLambdaRole3C2DEE4F
    Metadata:
      aws:cdk:path: App-Infrastructure/Service-Pipeline/Project-Pipeline/Pipeline-Stage/Deploy/Ecs-Deployment-Action/CodePipelineActionRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31UTXPaMBD9LbkrSqA99FhCacqUth5gkvNaXkAgSx59wDAe//euJBw7zUxPevuh3bdPa0/49PEzf7z7Chd3L6rTQyuMRd5uPIgTmxvtvA3CszU6E6xANt/pP8E3wUdUgIUaPVo2cw49XdpLvWfz4Lypx1fGmIpW0kujo/ELmoaudCz2b1FMefvSiBh5KeasCKWSYhNKjanfgNYmeNxCqXDwDz5iY4SEvkkKRLBYFvH4Df4ZPF7gygorzwSHwktN4xDuEzKTmzXzJMuhRu3ZBkWw0l+frQlN4vBfx2Jv0bkP7qVO/o6hAuelUAaqEhRoQaKcSYxZ05ACaZIVxZ5SjPSmQu/scZ50HvUtp8ej+BbsnubraY5MoiEcb+eK3i/f7+FCTLfgTt9wJ/Xb2/3rMdqDpGYjH93boD3L/PI3SI8dvHECFA1JI5KxycYbqRUELQ5UcSf3wb495IfUldyhuAqFP4w55YFHjo5JqHm7NnlL0lkY0iE964CWtOVRxsKanVTET0FdVsDb78Si7z3GBdpaOkdWx5wmyWh/nLCy6RPe2VvTyLTSCUSRLV9jY5z0xl6fwCFTZk9VVmakwA13TJgKyyBVxdtCNkjDR6JHFPkTzDCnNbf4kJlSRvgVy0NS5lRTw5+Y5o/HTElI+5kAjfWJt09BnPJXcUP5GIR7Z2cjjpPJEB1lrrxdCDfavtRiMGOje4g/D8fTP4TRNxCqC3hxoNVQYOtMikDXdUxTYX50D+fJFz6Z8snd0Ul5b4P2ska+zudf0ctJd9UEAAA=
    Metadata:
      aws:cdk:path: App-Infrastructure/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  EcsServiceLoadBalancerListenersProdListenerArnOutputA4B3923C:
    Description: Production Listener Arn
    Value:
      Ref: BaseResourcesAppLoadbalancerProductionListener06FA748F
    Export:
      Name: prodListenerArn
  EcsServiceLoadBalancerListenersTestListenerArnOutput6818FB17:
    Description: Test Listener Arn
    Value:
      Ref: BaseResourcesAppLoadbalancerTestListenerEF1EA5E6
    Export:
      Name: testListenerArn
Parameters:
  SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Mappings:
  ServiceprincipalMap:
    af-south-1:
      codedeploy: codedeploy.af-south-1.amazonaws.com
    ap-east-1:
      codedeploy: codedeploy.ap-east-1.amazonaws.com
    ap-northeast-1:
      codedeploy: codedeploy.ap-northeast-1.amazonaws.com
    ap-northeast-2:
      codedeploy: codedeploy.ap-northeast-2.amazonaws.com
    ap-northeast-3:
      codedeploy: codedeploy.ap-northeast-3.amazonaws.com
    ap-south-1:
      codedeploy: codedeploy.ap-south-1.amazonaws.com
    ap-southeast-1:
      codedeploy: codedeploy.ap-southeast-1.amazonaws.com
    ap-southeast-2:
      codedeploy: codedeploy.ap-southeast-2.amazonaws.com
    ap-southeast-3:
      codedeploy: codedeploy.ap-southeast-3.amazonaws.com
    ca-central-1:
      codedeploy: codedeploy.ca-central-1.amazonaws.com
    cn-north-1:
      codedeploy: codedeploy.cn-north-1.amazonaws.com.cn
    cn-northwest-1:
      codedeploy: codedeploy.cn-northwest-1.amazonaws.com.cn
    eu-central-1:
      codedeploy: codedeploy.eu-central-1.amazonaws.com
    eu-north-1:
      codedeploy: codedeploy.eu-north-1.amazonaws.com
    eu-south-1:
      codedeploy: codedeploy.eu-south-1.amazonaws.com
    eu-south-2:
      codedeploy: codedeploy.eu-south-2.amazonaws.com
    eu-west-1:
      codedeploy: codedeploy.eu-west-1.amazonaws.com
    eu-west-2:
      codedeploy: codedeploy.eu-west-2.amazonaws.com
    eu-west-3:
      codedeploy: codedeploy.eu-west-3.amazonaws.com
    me-south-1:
      codedeploy: codedeploy.me-south-1.amazonaws.com
    sa-east-1:
      codedeploy: codedeploy.sa-east-1.amazonaws.com
    us-east-1:
      codedeploy: codedeploy.us-east-1.amazonaws.com
    us-east-2:
      codedeploy: codedeploy.us-east-2.amazonaws.com
    us-gov-east-1:
      codedeploy: codedeploy.us-gov-east-1.amazonaws.com
    us-gov-west-1:
      codedeploy: codedeploy.us-gov-west-1.amazonaws.com
    us-iso-east-1:
      codedeploy: codedeploy.amazonaws.com
    us-iso-west-1:
      codedeploy: codedeploy.amazonaws.com
    us-isob-east-1:
      codedeploy: codedeploy.amazonaws.com
    us-west-1:
      codedeploy: codedeploy.us-west-1.amazonaws.com
    us-west-2:
      codedeploy: codedeploy.us-west-2.amazonaws.com
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

