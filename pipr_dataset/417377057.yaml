Resources:
  PlacementGroupDemoEKSDefaultVpc72B7515D:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/Resource
  PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1/Subnet
  PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableD258D29F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1/RouteTable
  PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableAssociation435CF700:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableD258D29F
      SubnetId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1/RouteTableAssociation
  PlacementGroupDemoEKSDefaultVpcPublicSubnet1DefaultRoute3D9D3D76:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableD258D29F
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: PlacementGroupDemoEKSDefaultVpcIGWB1BB36FF
    DependsOn:
      - PlacementGroupDemoEKSDefaultVpcVPCGW876A8074
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1/DefaultRoute
  PlacementGroupDemoEKSDefaultVpcPublicSubnet1EIP3E0F64FC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1/EIP
  PlacementGroupDemoEKSDefaultVpcPublicSubnet1NATGateway2A0054C2:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
      AllocationId:
        Fn::GetAtt:
          - PlacementGroupDemoEKSDefaultVpcPublicSubnet1EIP3E0F64FC
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet1/NATGateway
  PlacementGroupDemoEKSDefaultVpcPublicSubnet2Subnet37DCCC3D:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2/Subnet
  PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableF28DD3CB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2/RouteTable
  PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableAssociation034DF291:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableF28DD3CB
      SubnetId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet2Subnet37DCCC3D
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2/RouteTableAssociation
  PlacementGroupDemoEKSDefaultVpcPublicSubnet2DefaultRouteFBFF3047:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableF28DD3CB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: PlacementGroupDemoEKSDefaultVpcIGWB1BB36FF
    DependsOn:
      - PlacementGroupDemoEKSDefaultVpcVPCGW876A8074
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2/DefaultRoute
  PlacementGroupDemoEKSDefaultVpcPublicSubnet2EIPF99E2BBD:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2/EIP
  PlacementGroupDemoEKSDefaultVpcPublicSubnet2NATGateway16094DC4:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet2Subnet37DCCC3D
      AllocationId:
        Fn::GetAtt:
          - PlacementGroupDemoEKSDefaultVpcPublicSubnet2EIPF99E2BBD
          - AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PublicSubnet2/NATGateway
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet1SubnetD3F368EE:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet1/Subnet
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTable37083A62:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet1/RouteTable
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTableAssociation5E5AE5FA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTable37083A62
      SubnetId:
        Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet1SubnetD3F368EE
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet1/RouteTableAssociation
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet1DefaultRoute821ECADE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTable37083A62
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1NATGateway2A0054C2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet1/DefaultRoute
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet2SubnetE347EEE9:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet2/Subnet
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableBFEFE8C7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet2/RouteTable
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableAssociation165F506F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableBFEFE8C7
      SubnetId:
        Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet2SubnetE347EEE9
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet2/RouteTableAssociation
  PlacementGroupDemoEKSDefaultVpcPrivateSubnet2DefaultRouteFBD46DFF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableBFEFE8C7
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet2NATGateway16094DC4
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/PrivateSubnet2/DefaultRoute
  PlacementGroupDemoEKSDefaultVpcIGWB1BB36FF:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/IGW
  PlacementGroupDemoEKSDefaultVpcVPCGW876A8074:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
      InternetGatewayId:
        Ref: PlacementGroupDemoEKSDefaultVpcIGWB1BB36FF
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/DefaultVpc/VPCGW
  PlacementGroupDemoEKSRoleE23E134C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/Role/Resource
  PlacementGroupDemoEKSControlPlaneSecurityGroupC9621633:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: PlacementGroupDemoEKSDefaultVpc72B7515D
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/ControlPlaneSecurityGroup/Resource
  PlacementGroupDemoEKSCreationRole4CA48561:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    DependsOn:
      - PlacementGroupDemoEKSDefaultVpcIGWB1BB36FF
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1DefaultRoute821ECADE
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTable37083A62
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTableAssociation5E5AE5FA
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1SubnetD3F368EE
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2DefaultRouteFBD46DFF
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableBFEFE8C7
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableAssociation165F506F
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2SubnetE347EEE9
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1DefaultRoute3D9D3D76
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1EIP3E0F64FC
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1NATGateway2A0054C2
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableD258D29F
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableAssociation435CF700
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2DefaultRouteFBFF3047
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2EIPF99E2BBD
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2NATGateway16094DC4
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableF28DD3CB
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableAssociation034DF291
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2Subnet37DCCC3D
      - PlacementGroupDemoEKSDefaultVpc72B7515D
      - PlacementGroupDemoEKSDefaultVpcVPCGW876A8074
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/Resource/CreationRole/Resource
  PlacementGroupDemoEKSCreationRoleDefaultPolicy2AE941D2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PlacementGroupDemoEKSRoleE23E134C
                - Arn
          - Action:
              - eks:CreateCluster
              - eks:DescribeCluster
              - eks:DescribeUpdate
              - eks:DeleteCluster
              - eks:UpdateClusterVersion
              - eks:UpdateClusterConfig
              - eks:CreateFargateProfile
              - eks:TagResource
              - eks:UntagResource
            Effect: Allow
            Resource:
              - "*"
          - Action:
              - eks:DescribeFargateProfile
              - eks:DeleteFargateProfile
            Effect: Allow
            Resource: "*"
          - Action:
              - iam:GetRole
              - iam:listAttachedRolePolicies
            Effect: Allow
            Resource: "*"
          - Action: iam:CreateServiceLinkedRole
            Effect: Allow
            Resource: "*"
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeRouteTables
              - ec2:DescribeDhcpOptions
              - ec2:DescribeVpcs
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: PlacementGroupDemoEKSCreationRoleDefaultPolicy2AE941D2
      Roles:
        - Ref: PlacementGroupDemoEKSCreationRole4CA48561
    DependsOn:
      - PlacementGroupDemoEKSDefaultVpcIGWB1BB36FF
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1DefaultRoute821ECADE
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTable37083A62
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTableAssociation5E5AE5FA
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1SubnetD3F368EE
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2DefaultRouteFBD46DFF
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableBFEFE8C7
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableAssociation165F506F
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2SubnetE347EEE9
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1DefaultRoute3D9D3D76
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1EIP3E0F64FC
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1NATGateway2A0054C2
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableD258D29F
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableAssociation435CF700
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2DefaultRouteFBFF3047
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2EIPF99E2BBD
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2NATGateway16094DC4
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableF28DD3CB
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableAssociation034DF291
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2Subnet37DCCC3D
      - PlacementGroupDemoEKSDefaultVpc72B7515D
      - PlacementGroupDemoEKSDefaultVpcVPCGW876A8074
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/Resource/CreationRole/DefaultPolicy/Resource
  PlacementGroupDemoEKS22DD6187:
    Type: Custom::AWSCDK-EKS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.PlacementGroupDemoEksStackawscdkawseksClusterResourceProviderframeworkonEventA24FF47BArn
      Config:
        version: "1.21"
        roleArn:
          Fn::GetAtt:
            - PlacementGroupDemoEKSRoleE23E134C
            - Arn
        resourcesVpcConfig:
          subnetIds:
            - Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
            - Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet2Subnet37DCCC3D
            - Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet1SubnetD3F368EE
            - Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet2SubnetE347EEE9
          securityGroupIds:
            - Fn::GetAtt:
                - PlacementGroupDemoEKSControlPlaneSecurityGroupC9621633
                - GroupId
          endpointPublicAccess: true
          endpointPrivateAccess: true
      AssumeRoleArn:
        Fn::GetAtt:
          - PlacementGroupDemoEKSCreationRole4CA48561
          - Arn
      AttributesRevision: 2
    DependsOn:
      - PlacementGroupDemoEKSDefaultVpcIGWB1BB36FF
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1DefaultRoute821ECADE
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTable37083A62
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1RouteTableAssociation5E5AE5FA
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet1SubnetD3F368EE
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2DefaultRouteFBD46DFF
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableBFEFE8C7
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2RouteTableAssociation165F506F
      - PlacementGroupDemoEKSDefaultVpcPrivateSubnet2SubnetE347EEE9
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1DefaultRoute3D9D3D76
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1EIP3E0F64FC
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1NATGateway2A0054C2
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableD258D29F
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1RouteTableAssociation435CF700
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2DefaultRouteFBFF3047
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2EIPF99E2BBD
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2NATGateway16094DC4
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableF28DD3CB
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2RouteTableAssociation034DF291
      - PlacementGroupDemoEKSDefaultVpcPublicSubnet2Subnet37DCCC3D
      - PlacementGroupDemoEKSDefaultVpc72B7515D
      - PlacementGroupDemoEKSDefaultVpcVPCGW876A8074
      - PlacementGroupDemoEKSCreationRoleDefaultPolicy2AE941D2
      - PlacementGroupDemoEKSCreationRole4CA48561
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/Resource/Resource/Default
  PlacementGroupDemoEKSKubectlReadyBarrierDEFECF92:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: aws:cdk:eks:kubectl-ready
    DependsOn:
      - PlacementGroupDemoEKSCreationRoleDefaultPolicy2AE941D2
      - PlacementGroupDemoEKSCreationRole4CA48561
      - PlacementGroupDemoEKS22DD6187
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/KubectlReadyBarrier
  PlacementGroupDemoEKSMastersRole57D87E43:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/MastersRole/Resource
  PlacementGroupDemoEKSAwsAuthmanifestACB364B8:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.PlacementGroupDemoEksStackawscdkawseksKubectlProviderframeworkonEventC2035FDFArn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-auth","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c85d8a844576267f294e1ecd59f2cef32a870fac3f":""}},"data":{"mapRoles":"[{\"rolearn\":\"'
            - Fn::GetAtt:
                - PlacementGroupDemoEKSMastersRole57D87E43
                - Arn
            - \",\"username\":\"
            - Fn::GetAtt:
                - PlacementGroupDemoEKSMastersRole57D87E43
                - Arn
            - \",\"groups\":[\"system:masters\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - PlacementGroupDemoEKSNodegroupNgTruePlacementGroupNodeGroupRole3CE97174
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - PlacementGroupDemoEKSNodegroupNgFalsePlacementGroupNodeGroupRoleFC4F80B7
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]}]","mapUsers":"[]","mapAccounts":"[]"}}]
      ClusterName:
        Ref: PlacementGroupDemoEKS22DD6187
      RoleArn:
        Fn::GetAtt:
          - PlacementGroupDemoEKSCreationRole4CA48561
          - Arn
      PruneLabel: aws.cdk.eks/prune-c85d8a844576267f294e1ecd59f2cef32a870fac3f
      Overwrite: true
    DependsOn:
      - PlacementGroupDemoEKSKubectlReadyBarrierDEFECF92
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/AwsAuth/manifest/Resource/Default
  PlacementGroupDemoEKSNodegroupNgTruePlacementGroupNodeGroupRole3CE97174:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSWorkerNodePolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKS_CNI_Policy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/NodegroupNgTruePlacementGroup/NodeGroupRole/Resource
  PlacementGroupDemoEKSNodegroupNgTruePlacementGroup53E569A9:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: PlacementGroupDemoEKS22DD6187
      NodeRole:
        Fn::GetAtt:
          - PlacementGroupDemoEKSNodegroupNgTruePlacementGroupNodeGroupRole3CE97174
          - Arn
      Subnets:
        - Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
      ForceUpdateEnabled: true
      InstanceTypes:
        - c5.large
      Labels:
        placementGroup: "true"
      LaunchTemplate:
        Id:
          Ref: PlacementGroupLaunchTemplate5659C37C
        Version:
          Fn::GetAtt:
            - PlacementGroupLaunchTemplate5659C37C
            - LatestVersionNumber
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 2
        MinSize: 2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/NodegroupNgTruePlacementGroup/Resource
  PlacementGroupDemoEKSNodegroupNgFalsePlacementGroupNodeGroupRoleFC4F80B7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSWorkerNodePolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKS_CNI_Policy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/NodegroupNgFalsePlacementGroup/NodeGroupRole/Resource
  PlacementGroupDemoEKSNodegroupNgFalsePlacementGroup4B288A5A:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: PlacementGroupDemoEKS22DD6187
      NodeRole:
        Fn::GetAtt:
          - PlacementGroupDemoEKSNodegroupNgFalsePlacementGroupNodeGroupRoleFC4F80B7
          - Arn
      Subnets:
        - Ref: PlacementGroupDemoEKSDefaultVpcPublicSubnet1Subnet790EAA78
      AmiType: AL2_x86_64
      ForceUpdateEnabled: true
      InstanceTypes:
        - c5.large
      Labels:
        placementGroup: "false"
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 2
        MinSize: 2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupDemoEKS/NodegroupNgFalsePlacementGroup/Resource
  awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /4489f3cb76a3d5abbb22e5fc065309b3e873d9e519555daa41c563a93ad49fa7.json
      Parameters:
        referencetoPlacementGroupDemoEksStackPlacementGroupDemoEKSCreationRole165E6298Arn:
          Fn::GetAtt:
            - PlacementGroupDemoEKSCreationRole4CA48561
            - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource
  awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
            - /b681e78942f48a4f75c107b368617504aa388a20668a9bb7116d5c20c6570d98.json
      Parameters:
        referencetoPlacementGroupDemoEksStackPlacementGroupDemoEKS764F09EEArn:
          Fn::GetAtt:
            - PlacementGroupDemoEKS22DD6187
            - Arn
        referencetoPlacementGroupDemoEksStackPlacementGroupDemoEKSCreationRole165E6298Arn:
          Fn::GetAtt:
            - PlacementGroupDemoEKSCreationRole4CA48561
            - Arn
        referencetoPlacementGroupDemoEksStackPlacementGroupDemoEKSDefaultVpcPrivateSubnet1Subnet6E6ECB4ERef:
          Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet1SubnetD3F368EE
        referencetoPlacementGroupDemoEksStackPlacementGroupDemoEKSDefaultVpcPrivateSubnet2Subnet721E7C87Ref:
          Ref: PlacementGroupDemoEKSDefaultVpcPrivateSubnet2SubnetE347EEE9
        referencetoPlacementGroupDemoEksStackPlacementGroupDemoEKS764F09EEClusterSecurityGroupId:
          Fn::GetAtt:
            - PlacementGroupDemoEKS22DD6187
            - ClusterSecurityGroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource
  PlacementGroup:
    Type: AWS::EC2::PlacementGroup
    Properties:
      Strategy: cluster
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroup
  PlacementGroupLaunchTemplate5659C37C:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        Placement:
          GroupName:
            Ref: PlacementGroup
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: PlacementGroupDemoEksStack/PlacementGroupLaunchTemplate
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: PlacementGroupDemoEksStack/PlacementGroupLaunchTemplate
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/PlacementGroupLaunchTemplate/Resource
  ClusterLogsEnablerCustomResourcePolicyBE4AA329:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:UpdateClusterConfig
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - PlacementGroupDemoEKS22DD6187
                      - Arn
                  - /update-config
        Version: "2012-10-17"
      PolicyName: ClusterLogsEnablerCustomResourcePolicyBE4AA329
      Roles:
        - Ref: AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/ClusterLogsEnabler/CustomResourcePolicy/Resource
  ClusterLogsEnablerD85801E8:
    Type: Custom::AWS
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        Fn::Join:
          - ""
          - - '{"physicalResourceId":{"id":"'
            - Fn::GetAtt:
                - PlacementGroupDemoEKS22DD6187
                - Arn
            - /LogsEnabler"},"service":"EKS","action":"updateClusterConfig","region":"
            - Ref: AWS::Region
            - '","parameters":{"name":"'
            - Ref: PlacementGroupDemoEKS22DD6187
            - '","logging":{"clusterLogging":[{"enabled":true,"types":["api","audit","authenticator","controllerManager","scheduler"]}]}}}'
      Delete:
        Fn::Join:
          - ""
          - - '{"physicalResourceId":{"id":"'
            - Fn::GetAtt:
                - PlacementGroupDemoEKS22DD6187
                - Arn
            - /LogsEnabler"},"service":"EKS","action":"updateClusterConfig","region":"
            - Ref: AWS::Region
            - '","parameters":{"name":"'
            - Ref: PlacementGroupDemoEKS22DD6187
            - '","logging":{"clusterLogging":[{"enabled":false,"types":["api","audit","authenticator","controllerManager","scheduler"]}]}}}'
      InstallLatestAwsSdk: true
    DependsOn:
      - ClusterLogsEnablerCustomResourcePolicyBE4AA329
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/ClusterLogsEnabler/Resource/Default
  AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 4074092ab8b435c90a773e082601fa36def54c91cadfae59451bd0beda547cbc.zip
      Role:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
          - Arn
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 120
    DependsOn:
      - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.4074092ab8b435c90a773e082601fa36def54c91cadfae59451bd0beda547cbc
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2VSy26DMBD8ltyNU9JLeyuJ2ijqC5Eod2M2iQPYyF4HRYh/7xryaNWTZ8fL7CzjmMezZ/4weRGti2RRTjtpLPBujUKWLANnvJXAFkY7tF4iW3iHpr5f7PRv/O2x8RjQKJA4B0hwr/Q+sKRTKFRG9ywM7KB0vFtUpAmWJa1LPB7Yu8/BakBwn0KrHThkX6aAvTW+CSK3omcgZ7zbNjLQ23TBUp9XSq59Tp8PLm4oMx5hI/IK7vydI59GKhGc3ZoDeF2lw0SBS4HQijNLrToRvAuvNA5urw2jk0uVIP2GQw0a2RqktwrPy+sa/4i0EhJC78h8CK/lYQN1U4nRzV+mZ0rUvMvMuNJwpobWHzyMqGeVqPNCUKCUQAVo9BtpDHveAHVfcc/cYyRCaI4P2VHN516WgHPhaKQc4o/sJXPqat3fJ9EzTfnwo5ue4id6XTyeHJ1SkfUaVQ08G88fZ98uPnkCAAA=
    Metadata:
      aws:cdk:path: PlacementGroupDemoEksStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  PlacementGroupDemoEKSConfigCommand53CB05BE:
    Value:
      Fn::Join:
        - ""
        - - "aws eks update-kubeconfig --name "
          - Ref: PlacementGroupDemoEKS22DD6187
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - PlacementGroupDemoEKSMastersRole57D87E43
              - Arn
  PlacementGroupDemoEKSGetTokenCommand9E638807:
    Value:
      Fn::Join:
        - ""
        - - "aws eks get-token --cluster-name "
          - Ref: PlacementGroupDemoEKS22DD6187
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - PlacementGroupDemoEKSMastersRole57D87E43
              - Arn
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store.
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

