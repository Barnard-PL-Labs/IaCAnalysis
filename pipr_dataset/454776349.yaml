Resources:
  StateMachineSampleStateMachineRole6E348165:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: StepFunctionsTestingStack/StateMachine/SampleStateMachine/Role/Resource
  StateMachineSampleStateMachineRoleDefaultPolicyD1EBBF6F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource: arn:aws:lambda:us-west-2:123456789012:function:my-function
          - Action: sqs:SendMessage
            Effect: Allow
            Resource: arn:aws:sqs:us-west-2:444455556666:queue1
        Version: "2012-10-17"
      PolicyName: StateMachineSampleStateMachineRoleDefaultPolicyD1EBBF6F
      Roles:
        - Ref: StateMachineSampleStateMachineRole6E348165
    Metadata:
      aws:cdk:path: StepFunctionsTestingStack/StateMachine/SampleStateMachine/Role/DefaultPolicy/Resource
  StateMachineSampleStateMachine2DD77801:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - StateMachineSampleStateMachineRole6E348165
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"LambdaState","States":{"LambdaState":{"Next":"SQSState","Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":2,"MaxAttempts":3,"BackoffRate":2}],"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - ':states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-west-2:123456789012:function:my-function","Payload":{"Payload.$":"$","FunctionName":"HelloWorldFunction"}}},"SQSState":{"End":true,"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::sqs:sendMessage","Parameters":{"QueueUrl":"https://sqs.us-west-2.
            - Ref: AWS::URLSuffix
            - /444455556666/queue1","MessageBody.$":"$"}}}}
    DependsOn:
      - StateMachineSampleStateMachineRoleDefaultPolicyD1EBBF6F
      - StateMachineSampleStateMachineRole6E348165
    Metadata:
      aws:cdk:path: StepFunctionsTestingStack/StateMachine/SampleStateMachine/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2VNzQ4BMRB+FvfusHtyJpFISLAPIKMdjN2dYloim747ykHi9P3PVFCOYDTAuxbWNUXLO+jrgLYxL2vbt9jtHMIsig3sZYJKRgOd919DtwG1UegXuTiXm2/I1BetSdySVPFAyehFYR0p0v8+fwu0RHtkITPdy69OhrGDfuPbHGVc+Zbt4y0/LKUckfp4tbk29eL4fT0Z8Y7gpMNbOYaygnJwUubiGiVwR7D54BNjEae/BAEAAA==
    Metadata:
      aws:cdk:path: StepFunctionsTestingStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

