Resources:
  textractStackApi64B523B1:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Textract Stack API
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Resource
  textractStackApiCloudWatchRoleEA364EAB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/CloudWatchRole/Resource
  textractStackApiAccount8AEEEE18:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - textractStackApiCloudWatchRoleEA364EAB
          - Arn
    DependsOn:
      - textractStackApi64B523B1
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Account
  textractStackApiDeployment08D79218e7c438e3c8b431e36186dbd1b1d00fc5:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: textractStackApi64B523B1
      Description: Automatically created by the RestApi construct
    DependsOn:
      - textractStackApiGET4C4CB397
      - textractStackApiOPTIONS85A698AE
      - textractStackApiPOSTCD23BC24
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Deployment/Resource
  textractStackApiDeploymentStageprodA48B925A:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: textractStackApi64B523B1
      DeploymentId:
        Ref: textractStackApiDeployment08D79218e7c438e3c8b431e36186dbd1b1d00fc5
      StageName: prod
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/DeploymentStage.prod/Resource
  textractStackApiOPTIONS85A698AE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - textractStackApi64B523B1
          - RootResourceId
      RestApiId:
        Ref: textractStackApi64B523B1
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Default/OPTIONS/Resource
  textractStackApiPOSTApiPermissionAwsStacktextractStackApi65EE5BD9POSTF9544549:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetJobStatusService6B8AAD06
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: textractStackApi64B523B1
            - /
            - Ref: textractStackApiDeploymentStageprodA48B925A
            - /POST/
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Default/POST/ApiPermission.AwsStacktextractStackApi65EE5BD9.POST..
  textractStackApiPOSTApiPermissionTestAwsStacktextractStackApi65EE5BD9POST2F869470:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetJobStatusService6B8AAD06
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: textractStackApi64B523B1
            - /test-invoke-stage/POST/
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Default/POST/ApiPermission.Test.AwsStacktextractStackApi65EE5BD9.POST..
  textractStackApiPOSTCD23BC24:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Fn::GetAtt:
          - textractStackApi64B523B1
          - RootResourceId
      RestApiId:
        Ref: textractStackApi64B523B1
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetJobStatusService6B8AAD06
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Default/POST/Resource
  textractStackApiGETApiPermissionAwsStacktextractStackApi65EE5BD9GETEE774D0B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SignedUrlService55A97F81
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: textractStackApi64B523B1
            - /
            - Ref: textractStackApiDeploymentStageprodA48B925A
            - /GET/
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Default/GET/ApiPermission.AwsStacktextractStackApi65EE5BD9.GET..
  textractStackApiGETApiPermissionTestAwsStacktextractStackApi65EE5BD9GET0E16EE46:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SignedUrlService55A97F81
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: textractStackApi64B523B1
            - /test-invoke-stage/GET/
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Default/GET/ApiPermission.Test.AwsStacktextractStackApi65EE5BD9.GET..
  textractStackApiGET4C4CB397:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Fn::GetAtt:
          - textractStackApi64B523B1
          - RootResourceId
      RestApiId:
        Ref: textractStackApi64B523B1
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - SignedUrlService55A97F81
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/Default/GET/Resource
  textractStackApiapiKey71F6631A:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Enabled: true
      StageKeys:
        - RestApiId:
            Ref: textractStackApi64B523B1
          StageName:
            Ref: textractStackApiDeploymentStageprodA48B925A
    Metadata:
      aws:cdk:path: AwsStack/textractStackApi/apiKey/Resource
  pocBucket44A903DE:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
            AllowedOrigins:
              - "*"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsStack/pocBucket/Resource
  pocBucketNotifications99B48640:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: pocBucket44A903DE
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - S3TriggerServiceEA1B30E7
                - Arn
    DependsOn:
      - S3TriggerServiceAllowBucketNotificationsFromAwsStackpocBucket7292DE7C81DB5307
    Metadata:
      aws:cdk:path: AwsStack/pocBucket/Notifications/Resource
  textractTopicF512CE76:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: AwsStack/textractTopic/Resource
  textractManagedBB4538A3:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: textractTopicF512CE76
        Version: "2012-10-17"
      Description: ""
      ManagedPolicyName: AmazonTextractServiceRole
      Path: /
    Metadata:
      aws:cdk:path: AwsStack/textractManaged/Resource
  textractRoleBA192673:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: textract.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: textractManagedBB4538A3
    Metadata:
      aws:cdk:path: AwsStack/textractRole/Resource
  textractRoleDefaultPolicyBE008EFB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: textractTopicF512CE76
        Version: "2012-10-17"
      PolicyName: textractRoleDefaultPolicyBE008EFB
      Roles:
        - Ref: textractRoleBA192673
    Metadata:
      aws:cdk:path: AwsStack/textractRole/DefaultPolicy/Resource
  textractTopicPolicyAC2A82B2:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Subscribe
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - textractRoleBA192673
                    - Arn
              StringEquals:
                aws:SourceAccount:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal: "*"
            Resource:
              Ref: textractTopicF512CE76
            Sid: "0"
        Version: "2012-10-17"
      Topics:
        - Ref: textractTopicF512CE76
    Metadata:
      aws:cdk:path: AwsStack/textractTopicPolicy/Resource
  textractResultQueueD70BDF61:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
    Metadata:
      aws:cdk:path: AwsStack/textractResultQueue/Resource
  queuePolicy90FF2D56:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: SQS:SendMessage
            Condition:
              ArnLike:
                aws:SourceArn:
                  Ref: textractTopicF512CE76
              StringEquals:
                aws:SourceAccount:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal: "*"
            Resource:
              Fn::GetAtt:
                - textractResultQueueD70BDF61
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: textractResultQueueD70BDF61
    Metadata:
      aws:cdk:path: AwsStack/queuePolicy/Resource
  sqsSubscription919F3A4E:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn:
        Ref: textractTopicF512CE76
      Endpoint:
        Fn::GetAtt:
          - textractResultQueueD70BDF61
          - Arn
    Metadata:
      aws:cdk:path: AwsStack/sqsSubscription/Resource
  messagesTable7489632E:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsStack/messagesTable/Resource
  GetJobStatusServiceServiceRole10CDE29A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/GetJobStatusService/ServiceRole/Resource
  GetJobStatusServiceServiceRoleDefaultPolicyC38D73E3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - messagesTable7489632E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: GetJobStatusServiceServiceRoleDefaultPolicyC38D73E3
      Roles:
        - Ref: GetJobStatusServiceServiceRole10CDE29A
    Metadata:
      aws:cdk:path: AwsStack/GetJobStatusService/ServiceRole/DefaultPolicy/Resource
  GetJobStatusService6B8AAD06:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3Bucket8E7DA09D
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
      Handler: getJobStatus.handler
      Role:
        Fn::GetAtt:
          - GetJobStatusServiceServiceRole10CDE29A
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: messagesTable7489632E
      MemorySize: 128
      Timeout: 60
    DependsOn:
      - GetJobStatusServiceServiceRoleDefaultPolicyC38D73E3
      - GetJobStatusServiceServiceRole10CDE29A
    Metadata:
      aws:cdk:path: AwsStack/GetJobStatusService/Resource
      aws:asset:path: asset.6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00ef
      aws:asset:property: Code
  SignedUrlServiceServiceRoleFBBF6B7F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/SignedUrlService/ServiceRole/Resource
  SignedUrlServiceServiceRoleDefaultPolicy13E02966:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - pocBucket44A903DE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - pocBucket44A903DE
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - messagesTable7489632E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: SignedUrlServiceServiceRoleDefaultPolicy13E02966
      Roles:
        - Ref: SignedUrlServiceServiceRoleFBBF6B7F
    Metadata:
      aws:cdk:path: AwsStack/SignedUrlService/ServiceRole/DefaultPolicy/Resource
  SignedUrlService55A97F81:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3Bucket8E7DA09D
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
      Handler: getSignedUrl.handler
      Role:
        Fn::GetAtt:
          - SignedUrlServiceServiceRoleFBBF6B7F
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: pocBucket44A903DE
          TABLE_NAME:
            Ref: messagesTable7489632E
      MemorySize: 128
      Timeout: 60
    DependsOn:
      - SignedUrlServiceServiceRoleDefaultPolicy13E02966
      - SignedUrlServiceServiceRoleFBBF6B7F
    Metadata:
      aws:cdk:path: AwsStack/SignedUrlService/Resource
      aws:asset:path: asset.6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00ef
      aws:asset:property: Code
  AnalyzeTextServiceServiceRole35E647F0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/AnalyzeTextService/ServiceRole/Resource
  AnalyzeTextServiceServiceRoleDefaultPolicy4AE65CA1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: textract:*
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - messagesTable7489632E
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - sqs:ReceiveMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueUrl
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - textractResultQueueD70BDF61
                - Arn
        Version: "2012-10-17"
      PolicyName: AnalyzeTextServiceServiceRoleDefaultPolicy4AE65CA1
      Roles:
        - Ref: AnalyzeTextServiceServiceRole35E647F0
    Metadata:
      aws:cdk:path: AwsStack/AnalyzeTextService/ServiceRole/DefaultPolicy/Resource
  AnalyzeTextService4D16E217:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3Bucket8E7DA09D
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
      Handler: analyzeTextService.handler
      Role:
        Fn::GetAtt:
          - AnalyzeTextServiceServiceRole35E647F0
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: messagesTable7489632E
      MemorySize: 128
      Timeout: 120
    DependsOn:
      - AnalyzeTextServiceServiceRoleDefaultPolicy4AE65CA1
      - AnalyzeTextServiceServiceRole35E647F0
    Metadata:
      aws:cdk:path: AwsStack/AnalyzeTextService/Resource
      aws:asset:path: asset.6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00ef
      aws:asset:property: Code
  AnalyzeTextServiceSqsEventSourceAwsStacktextractResultQueueDA51033BE35CD42C:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - textractResultQueueD70BDF61
          - Arn
      FunctionName:
        Ref: AnalyzeTextService4D16E217
    Metadata:
      aws:cdk:path: AwsStack/AnalyzeTextService/SqsEventSource:AwsStacktextractResultQueueDA51033B/Resource
  S3TriggerServiceServiceRole036D3D4E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/S3TriggerService/ServiceRole/Resource
  S3TriggerServiceServiceRoleDefaultPolicyB1C1AAAC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: textract:*
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - pocBucket44A903DE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - pocBucket44A903DE
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: S3TriggerServiceServiceRoleDefaultPolicyB1C1AAAC
      Roles:
        - Ref: S3TriggerServiceServiceRole036D3D4E
    Metadata:
      aws:cdk:path: AwsStack/S3TriggerService/ServiceRole/DefaultPolicy/Resource
  S3TriggerServiceEA1B30E7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3Bucket8E7DA09D
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E
      Handler: s3triggerService.handler
      Role:
        Fn::GetAtt:
          - S3TriggerServiceServiceRole036D3D4E
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          SNS_TOPIC:
            Ref: textractTopicF512CE76
          TEXTRACT_SNS_ROLE:
            Fn::GetAtt:
              - textractRoleBA192673
              - Arn
      MemorySize: 128
      Timeout: 60
    DependsOn:
      - S3TriggerServiceServiceRoleDefaultPolicyB1C1AAAC
      - S3TriggerServiceServiceRole036D3D4E
    Metadata:
      aws:cdk:path: AwsStack/S3TriggerService/Resource
      aws:asset:path: asset.6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00ef
      aws:asset:property: Code
  S3TriggerServiceAllowBucketNotificationsFromAwsStackpocBucket7292DE7C81DB5307:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - S3TriggerServiceEA1B30E7
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - pocBucket44A903DE
          - Arn
    Metadata:
      aws:cdk:path: AwsStack/S3TriggerService/AllowBucketNotificationsFromAwsStackpocBucket7292DE7C
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: AwsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require('https');
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require('url');
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration,
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse('FAILED', err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse('SUCCESS');
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // tslint:disable-next-line:max-line-length
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error messge as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: 'PUT',
                      headers: {
                          'content-type': '',
                          'content-length': responseBody.length,
                      },
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on('error', (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs10.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: AwsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.46.0,@aws-cdk/aws-apigateway=1.46.0,@aws-cdk/aws-applicationautoscaling=1.46.0,@aws-cdk/aws-autoscaling-common=1.46.0,@aws-cdk/aws-cloudwatch=1.46.0,@aws-cdk/aws-dynamodb=1.46.0,@aws-cdk/aws-ec2=1.46.0,@aws-cdk/aws-events=1.46.0,@aws-cdk/aws-iam=1.46.0,@aws-cdk/aws-kms=1.46.0,@aws-cdk/aws-lambda=1.46.0,@aws-cdk/aws-lambda-event-sources=1.46.0,@aws-cdk/aws-logs=1.46.0,@aws-cdk/aws-s3=1.46.0,@aws-cdk/aws-s3-assets=1.46.0,@aws-cdk/aws-s3-notifications=1.46.0,@aws-cdk/aws-sns=1.46.0,@aws-cdk/aws-sns-subscriptions=1.46.0,@aws-cdk/aws-sqs=1.46.0,@aws-cdk/aws-ssm=1.46.0,@aws-cdk/cdk-assets-schema=1.46.0,@aws-cdk/cloud-assembly-schema=1.46.0,@aws-cdk/core=1.46.0,@aws-cdk/custom-resources=1.46.0,@aws-cdk/cx-api=1.46.0,@aws-cdk/region-info=1.46.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Outputs:
  textractStackApiEndpointAEBFC00F:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: textractStackApi64B523B1
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: textractStackApiDeploymentStageprodA48B925A
          - /
Parameters:
  AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3Bucket8E7DA09D:
    Type: String
    Description: S3 bucket for asset "6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00ef"
  AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efS3VersionKey14BEC56E:
    Type: String
    Description: S3 key for asset version "6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00ef"
  AssetParameters6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00efArtifactHashC14A3501:
    Type: String
    Description: Artifact hash for asset "6bc7bc02cde712a815ba389de1659c2e75dabf6da9ff8067edbad6febdef00ef"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

