Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AwsTF/Vpc
    Metadata:
      aws:cdk:path: AwsTF/Vpc/Resource
  VpcpublicSubnet1Subnet2BB74ED7:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsTF/Vpc/publicSubnet1
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet1/Subnet
  VpcpublicSubnet1RouteTable15C15F8E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/publicSubnet1
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet1/RouteTable
  VpcpublicSubnet1RouteTableAssociation4E83B6E4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet1RouteTable15C15F8E
      SubnetId:
        Ref: VpcpublicSubnet1Subnet2BB74ED7
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet1/RouteTableAssociation
  VpcpublicSubnet1DefaultRouteB88F9E93:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet1RouteTable15C15F8E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet1/DefaultRoute
  VpcpublicSubnet1NatInstanceInstanceProfileBFDE842A:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet1/NatInstance/InstanceProfile
  VpcpublicSubnet1NatInstance6B5DA608:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-northeast-2a
      IamInstanceProfile:
        Ref: VpcpublicSubnet1NatInstanceInstanceProfileBFDE842A
      ImageId: ami-0e046f0c741e508db
      InstanceType: t3.small
      SecurityGroupIds:
        - Fn::GetAtt:
            - VpcNatSecurityGroup8DA26EDC
            - GroupId
      SourceDestCheck: false
      SubnetId:
        Ref: VpcpublicSubnet1Subnet2BB74ED7
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/publicSubnet1/NatInstance
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - VpcNatRoleA1B5D171
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet1/NatInstance/Resource
  VpcpublicSubnet2SubnetE34B022A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsTF/Vpc/publicSubnet2
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet2/Subnet
  VpcpublicSubnet2RouteTableC5A6DF77:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/publicSubnet2
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet2/RouteTable
  VpcpublicSubnet2RouteTableAssociationCCE257FF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet2RouteTableC5A6DF77
      SubnetId:
        Ref: VpcpublicSubnet2SubnetE34B022A
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet2/RouteTableAssociation
  VpcpublicSubnet2DefaultRoute732F0BEB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet2RouteTableC5A6DF77
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet2/DefaultRoute
  VpcpublicSubnet3SubnetDFEF064A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsTF/Vpc/publicSubnet3
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet3/Subnet
  VpcpublicSubnet3RouteTable80517A9C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/publicSubnet3
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet3/RouteTable
  VpcpublicSubnet3RouteTableAssociation61C43F88:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet3RouteTable80517A9C
      SubnetId:
        Ref: VpcpublicSubnet3SubnetDFEF064A
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet3/RouteTableAssociation
  VpcpublicSubnet3DefaultRouteA3904BF0:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet3RouteTable80517A9C
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: AwsTF/Vpc/publicSubnet3/DefaultRoute
  VpcprivateSubnet1SubnetCEAD3716:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.8.0/21
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsTF/Vpc/privateSubnet1
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet1/Subnet
  VpcprivateSubnet1RouteTable1979EACB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/privateSubnet1
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet1/RouteTable
  VpcprivateSubnet1RouteTableAssociationEEBD93CE:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet1RouteTable1979EACB
      SubnetId:
        Ref: VpcprivateSubnet1SubnetCEAD3716
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet1/RouteTableAssociation
  VpcprivateSubnet1DefaultRouteB506891A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet1RouteTable1979EACB
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: VpcpublicSubnet1NatInstance6B5DA608
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet1/DefaultRoute
  VpcprivateSubnet2Subnet2DE7549C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.16.0/21
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsTF/Vpc/privateSubnet2
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet2/Subnet
  VpcprivateSubnet2RouteTable4D0FFC8C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/privateSubnet2
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet2/RouteTable
  VpcprivateSubnet2RouteTableAssociationB691E645:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet2RouteTable4D0FFC8C
      SubnetId:
        Ref: VpcprivateSubnet2Subnet2DE7549C
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet2/RouteTableAssociation
  VpcprivateSubnet2DefaultRouteBAC3C1C3:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet2RouteTable4D0FFC8C
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: VpcpublicSubnet1NatInstance6B5DA608
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet2/DefaultRoute
  VpcprivateSubnet3SubnetA5AC68D9:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.24.0/21
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsTF/Vpc/privateSubnet3
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet3/Subnet
  VpcprivateSubnet3RouteTableAF0D9985:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/privateSubnet3
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet3/RouteTable
  VpcprivateSubnet3RouteTableAssociation88A12983:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet3RouteTableAF0D9985
      SubnetId:
        Ref: VpcprivateSubnet3SubnetA5AC68D9
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet3/RouteTableAssociation
  VpcprivateSubnet3DefaultRoute5028F7A1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcprivateSubnet3RouteTableAF0D9985
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId:
        Ref: VpcpublicSubnet1NatInstance6B5DA608
    Metadata:
      aws:cdk:path: AwsTF/Vpc/privateSubnet3/DefaultRoute
  VpcdbSubnet1Subnet1B82B149:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.32.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: AwsTF/Vpc/dbSubnet1
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet1/Subnet
  VpcdbSubnet1RouteTable04184FDD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/dbSubnet1
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet1/RouteTable
  VpcdbSubnet1RouteTableAssociation3FF66701:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbSubnet1RouteTable04184FDD
      SubnetId:
        Ref: VpcdbSubnet1Subnet1B82B149
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet1/RouteTableAssociation
  VpcdbSubnet2Subnet01192A3B:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.33.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: AwsTF/Vpc/dbSubnet2
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet2/Subnet
  VpcdbSubnet2RouteTable7BBEF14D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/dbSubnet2
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet2/RouteTable
  VpcdbSubnet2RouteTableAssociation3D000840:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbSubnet2RouteTable7BBEF14D
      SubnetId:
        Ref: VpcdbSubnet2Subnet01192A3B
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet2/RouteTableAssociation
  VpcdbSubnet3Subnet308B0B3E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.34.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone: ap-northeast-2c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: AwsTF/Vpc/dbSubnet3
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet3/Subnet
  VpcdbSubnet3RouteTable0460865D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: AwsTF/Vpc/dbSubnet3
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet3/RouteTable
  VpcdbSubnet3RouteTableAssociation1BA398D0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbSubnet3RouteTable0460865D
      SubnetId:
        Ref: VpcdbSubnet3Subnet308B0B3E
    Metadata:
      aws:cdk:path: AwsTF/Vpc/dbSubnet3/RouteTableAssociation
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AwsTF/Vpc
    Metadata:
      aws:cdk:path: AwsTF/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: AwsTF/Vpc/VPCGW
  VpcNatSecurityGroup8DA26EDC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for NAT instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:ALL TRAFFIC
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: AwsTF/Vpc
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: AwsTF/Vpc/NatSecurityGroup/Resource
  VpcNatRoleA1B5D171:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: AwsTF/Vpc
    Metadata:
      aws:cdk:path: AwsTF/Vpc/NatRole/Resource
  ALBAEE750D2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ALBSecurityGroup8B8624F8
            - GroupId
      Subnets:
        - Ref: VpcpublicSubnet1Subnet2BB74ED7
        - Ref: VpcpublicSubnet2SubnetE34B022A
        - Ref: VpcpublicSubnet3SubnetDFEF064A
      Type: application
    DependsOn:
      - VpcpublicSubnet1DefaultRouteB88F9E93
      - VpcpublicSubnet2DefaultRoute732F0BEB
      - VpcpublicSubnet3DefaultRouteA3904BF0
    Metadata:
      aws:cdk:path: AwsTF/ALB/Resource
  ALBSecurityGroup8B8624F8:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB AwsTFALB1300C6F1
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: AwsTF/ALB/SecurityGroup/Resource
  ALBSecurityGrouptoAwsTFAppServiceSecurityGroup1236C09280806780CC8A:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - ALBSecurityGroup8B8624F8
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - AppServiceSecurityGroupA4191BE9
          - GroupId
      FromPort: 8080
      ToPort: 8080
    Metadata:
      aws:cdk:path: AwsTF/ALB/SecurityGroup/to AwsTFAppServiceSecurityGroup1236C092:8080
  ALBhttp9BA60DBF:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - FixedResponseConfig:
            ContentType: text/plain
            MessageBody: Page cannot be found
            StatusCode: "404"
          Type: fixed-response
      LoadBalancerArn:
        Ref: ALBAEE750D2
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: AwsTF/ALB/http/Resource
  ALBhttpKeycloakRule90C6F6E2:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn:
            Ref: AppKeycloakGroup41273574
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /*
      ListenerArn:
        Ref: ALBhttp9BA60DBF
      Priority: 1000
    Metadata:
      aws:cdk:path: AwsTF/ALB/http/KeycloakRule/Resource
  AppCluster68CC0559:
    Type: AWS::ECS::Cluster
    Properties:
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
    Metadata:
      aws:cdk:path: AwsTF/App/Cluster/Resource
  AppServiceDiscoveryNS84DE5872:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: sk-awstf.internal
      Vpc:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: AwsTF/App/ServiceDiscoveryNS/Resource
  AppTaskDefinitionTaskRole9E8A9437:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AwsTF/App/TaskDefinition/TaskRole/Resource
  AppTaskDefinitionCA96C95D:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: DB_USER
              Value: admin
            - Name: DB_PASSWORD
              Value: admin
            - Name: DB_VENDOR
              Value: h2
            - Name: DB_NAME
              Value: ""
            - Name: DB_SCHEMA
              Value: ""
            - Name: JDBC_PARAMS
              Value: useSSL=false
            - Name: JAVA_OPTS
              Value: -Djboss.bind.address.management=0.0.0.0
          Essential: true
          Image: gazgeek/springboot-helloworld
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AppTaskDefinitioncontainerLogGroup4BA62644
              awslogs-stream-prefix: /cdk-ecs-prefix
              awslogs-region: ap-northeast-2
          Memory: 1024
          MemoryReservation: 819
          Name: container
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
            - ContainerPort: 8443
              Protocol: tcp
            - ContainerPort: 9990
              Protocol: tcp
          Secrets: []
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - AppTaskDefinitionExecutionRole74450CA1
          - Arn
      Family: AwsTFAppTaskDefinitionD940E346
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - AppTaskDefinitionTaskRole9E8A9437
          - Arn
    Metadata:
      aws:cdk:path: AwsTF/App/TaskDefinition/Resource
  AppTaskDefinitioncontainerLogGroup4BA62644:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: AwsTF/App/TaskDefinition/container/LogGroup/Resource
  AppTaskDefinitionExecutionRole74450CA1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AwsTF/App/TaskDefinition/ExecutionRole/Resource
  AppTaskDefinitionExecutionRoleDefaultPolicyEE606390:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AppTaskDefinitioncontainerLogGroup4BA62644
                - Arn
        Version: "2012-10-17"
      PolicyName: AppTaskDefinitionExecutionRoleDefaultPolicyEE606390
      Roles:
        - Ref: AppTaskDefinitionExecutionRole74450CA1
    Metadata:
      aws:cdk:path: AwsTF/App/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  AppService606B9134:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: 100
        - CapacityProvider: FARGATE
          Weight: 1
      Cluster:
        Ref: AppCluster68CC0559
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 120
      LoadBalancers:
        - ContainerName: container
          ContainerPort: 8080
          TargetGroupArn:
            Ref: AppKeycloakGroup41273574
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - AppServiceSecurityGroupA4191BE9
                - GroupId
          Subnets:
            - Ref: VpcprivateSubnet1SubnetCEAD3716
            - Ref: VpcprivateSubnet2Subnet2DE7549C
            - Ref: VpcprivateSubnet3SubnetA5AC68D9
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - AppServiceCloudmapService828333A4
              - Arn
      TaskDefinition:
        Ref: AppTaskDefinitionCA96C95D
    DependsOn:
      - ALBhttpKeycloakRule90C6F6E2
    Metadata:
      aws:cdk:path: AwsTF/App/Service/Service
  AppServiceCloudmapService828333A4:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - AppServiceDiscoveryNS84DE5872
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      NamespaceId:
        Fn::GetAtt:
          - AppServiceDiscoveryNS84DE5872
          - Id
    Metadata:
      aws:cdk:path: AwsTF/App/Service/CloudmapService/Resource
  AppServiceSecurityGroupA4191BE9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsTF/App/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: AwsTF/App/Service/SecurityGroup/Resource
  AppServiceSecurityGroupfromAwsTFAppServiceSecurityGroup1236C092ALLTRAFFIC3317EDA0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "-1"
      Description: from AwsTFAppServiceSecurityGroup1236C092:ALL TRAFFIC
      GroupId:
        Fn::GetAtt:
          - AppServiceSecurityGroupA4191BE9
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AppServiceSecurityGroupA4191BE9
          - GroupId
    Metadata:
      aws:cdk:path: AwsTF/App/Service/SecurityGroup/from AwsTFAppServiceSecurityGroup1236C092:ALL TRAFFIC
  AppServiceSecurityGroupfromAwsTFALBSecurityGroupD76AB072808054D03520:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - AppServiceSecurityGroupA4191BE9
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ALBSecurityGroup8B8624F8
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: AwsTF/App/Service/SecurityGroup/from AwsTFALBSecurityGroupD76AB072:8080
  AppKeycloakGroup41273574:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: AwsTF/App/KeycloakGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31TTW/CMAz9LbuHMDjtOAYbQkJbVRD3EExnKEkVJ0Wo6n+f+wVlQzvl+fk5ebaVkRyNx/L56VWdaaB3x2GhrQNZrLzSRxED2eA0iOnefAWfBS+m1pB3QfuK6/KlqMoL0GNZbDJdpTbRVERhm6Jeha2BWn5DsQ0e1mqbwo2/cRMiq1F5tOYqFgt+V5nGyxVHDnPl4XbxwnhwjOfMntWlddJGE89dfZ/AeLECHRz6y9zZkNUe/iXeEwdEf+iFqflSoDrJomcscnaP3Fxsmw7rM7I8jdpSg0oBqSKPOrVqt1UpF6JJcp7hJMtYUA9gybm3OgeuKr2L+zokD6bVdPhBPg6No7u4p1srl/D4uin0QraribtMA1fW73Twg0Wq2h0dZ7BHg93mfjPWeIX8aI9ra1fgcmyW28JSUAN2SNrm4C6yaNc9M/SpTkCZaioe0Y8uTG3CDSxtcm2vw2VZCmN3IA80zEcv/Cnk6OlAiAMXjMcTyLg5fwCByOX7MAMAAA==
    Metadata:
      aws:cdk:path: AwsTF/CDKMetadata/Default
Outputs:
  AlbAddress:
    Value:
      Fn::Sub:
        - http://${Name}
        - Name:
            Fn::GetAtt:
              - ALBAEE750D2
              - DNSName

