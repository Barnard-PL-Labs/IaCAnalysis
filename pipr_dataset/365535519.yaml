Resources:
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: ac-alert-bucket
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AcAlertStack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AcAlertStack/Bucket/Policy/Resource
  BucketAutoDeleteObjectsCustomResourceBAFD23C2:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: Bucket83908E77
    DependsOn:
      - BucketPolicyE9A3008A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AcAlertStack/Bucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AcAlertStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-036406153779-us-east-1
        S3Key: e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs14.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: Bucket83908E77
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: AcAlertStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca
      aws:asset:property: Code
  HandlerServiceRoleFCDC14AE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AcAlertStack/Handler/ServiceRole/Resource
  HandlerServiceRoleDefaultPolicyCBD0CC91:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :ssm:us-east-1:036406153779:parameter/ac-alert/username
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :ssm:us-east-1:036406153779:parameter/ac-alert/slack-webhook-url
        Version: "2012-10-17"
      PolicyName: HandlerServiceRoleDefaultPolicyCBD0CC91
      Roles:
        - Ref: HandlerServiceRoleFCDC14AE
    Metadata:
      aws:cdk:path: AcAlertStack/Handler/ServiceRole/DefaultPolicy/Resource
  Handler886CB40B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-036406153779-us-east-1
        S3Key: b3b74aefdf48397bba81cdd693964ee731d5ffa92c3b04a2828453ef26cd39a0.zip
      Role:
        Fn::GetAtt:
          - HandlerServiceRoleFCDC14AE
          - Arn
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: Bucket83908E77
          API_URL: https://kenkoooo.com/atcoder/atcoder-api/v3/user/submissions
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 60
    DependsOn:
      - HandlerServiceRoleDefaultPolicyCBD0CC91
      - HandlerServiceRoleFCDC14AE
    Metadata:
      aws:cdk:path: AcAlertStack/Handler/Resource
      aws:asset:path: asset.b3b74aefdf48397bba81cdd693964ee731d5ffa92c3b04a2828453ef26cd39a0
      aws:asset:is-bundled: true
      aws:asset:property: Code
  Rule136483A30:
    Type: AWS::Events::Rule
    Properties:
      Description: rule on 10pm
      Name: ac-alert-rule1
      ScheduleExpression: cron(0/30 13 * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - Handler886CB40B
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: AcAlertStack/Rule1/Resource
  Rule1AllowEventRuleAcAlertStackHandler4BA0E7D7A53FBF89:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Handler886CB40B
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - Rule136483A30
          - Arn
    Metadata:
      aws:cdk:path: AcAlertStack/Rule1/AllowEventRuleAcAlertStackHandler4BA0E7D7
  Rule270732244:
    Type: AWS::Events::Rule
    Properties:
      Description: rule on 11pm
      Name: ac-alert-rule2
      ScheduleExpression: cron(0/11 14 * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - Handler886CB40B
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: AcAlertStack/Rule2/Resource
  Rule2AllowEventRuleAcAlertStackHandler4BA0E7D7DD3B67B4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Handler886CB40B
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - Rule270732244
          - Arn
    Metadata:
      aws:cdk:path: AcAlertStack/Rule2/AllowEventRuleAcAlertStackHandler4BA0E7D7
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VQQWrDMBB8S+7yBseH9JoEegzBfYBR5G1Y25JAK7kEob9XttyEnmZmZ5hl9wDNEeqd/OFK9WM10R3il5dqFHnURW4gnoMa0YvLt9lYgZudSD3f400XcZaMSUxS33vZGdvjwHBd4TMY5ckaQVJDbO2ES8WK78bCkuCmk8zoGU4LbIUQc+TVs8TRaWLOKgmc0eR8bMPWnDElcQnsrW6RbXCqGC/+z7o5O1OPTqwb8yseZB7rEumkRp+dv2gSy2Uw8H6uP6A+5D8OTFS5YDxphLbgL2BUD2pjAQAA
    Metadata:
      aws:cdk:path: AcAlertStack/CDKMetadata/Default
Parameters:
  UserNameSsmParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /ac-alert/username
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

