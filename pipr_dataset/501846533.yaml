Resources:
  AccessLogBucketDA470295:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AccessLogBucket/Resource
  AccessLogBucketPolicyF52D2D01:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: AccessLogBucketDA470295
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - AccessLogBucketDA470295
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AccessLogBucketDA470295
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - AccessLogBucketDA470295
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AccessLogBucketDA470295
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AccessLogBucket/Policy/Resource
  AccessLogBucketAutoDeleteObjectsCustomResource01AB31E8:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: AccessLogBucketDA470295
    DependsOn:
      - AccessLogBucketPolicyF52D2D01
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AccessLogBucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 0758db37a61ce7177f50559cad0340df233a2001b5880615afa517203dd67c21.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: AccessLogBucketDA470295
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.0758db37a61ce7177f50559cad0340df233a2001b5880615afa517203dd67c21
      aws:asset:property: Code
  AuthUserPool8115E87F:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Auth/UserPool/Resource
  AuthUserPoolClientC635291F:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: AuthUserPool8115E87F
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      IdTokenValidity: 1440
      SupportedIdentityProviders:
        - COGNITO
      TokenValidityUnits:
        IdToken: minutes
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Auth/UserPool/Client/Resource
  DatabaseB269D8BB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Database/Default/Resource
  AsyncJobQueue0CD355DA:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: alias/aws/sqs
      VisibilityTimeout: 600
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AsyncJob/Queue/Resource
  AsyncJobHandlerServiceRoleFE9F530F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AsyncJob/Handler/ServiceRole/Resource
  AsyncJobHandlerServiceRoleDefaultPolicy0B2DEDB5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseB269D8BB
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AsyncJobQueue0CD355DA
                - Arn
        Version: "2012-10-17"
      PolicyName: AsyncJobHandlerServiceRoleDefaultPolicy0B2DEDB5
      Roles:
        - Ref: AsyncJobHandlerServiceRoleFE9F530F
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AsyncJob/Handler/ServiceRole/DefaultPolicy/Resource
  AsyncJobHandler438266BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:787d76a1ac13ae58ae693dbbdcbd8040fa85ab4094b0c7a83217423436012400
      Role:
        Fn::GetAtt:
          - AsyncJobHandlerServiceRoleFE9F530F
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseB269D8BB
      ImageConfig:
        Command:
          - handler-job.handler
      MemorySize: 256
      PackageType: Image
      ReservedConcurrentExecutions: 1
      Timeout: 600
    DependsOn:
      - AsyncJobHandlerServiceRoleDefaultPolicy0B2DEDB5
      - AsyncJobHandlerServiceRoleFE9F530F
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AsyncJob/Handler/Resource
      aws:asset:path: asset.787d76a1ac13ae58ae693dbbdcbd8040fa85ab4094b0c7a83217423436012400
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  AsyncJobHandlerSqsEventSourceServerlessFullstackWebappStarterKitStackAsyncJobQueue6AC7B0082DC15784:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName:
        Ref: AsyncJobHandler438266BD
      EventSourceArn:
        Fn::GetAtt:
          - AsyncJobQueue0CD355DA
          - Arn
      MaximumBatchingWindowInSeconds: 5
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/AsyncJob/Handler/SqsEventSource:ServerlessFullstackWebappStarterKitStackAsyncJobQueue6AC7B008/Resource
  BackendApiHandlerServiceRoleD7E0A5D4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Handler/ServiceRole/Resource
  BackendApiHandlerServiceRoleDefaultPolicyED65AEB4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseB269D8BB
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AsyncJobQueue0CD355DA
                - Arn
        Version: "2012-10-17"
      PolicyName: BackendApiHandlerServiceRoleDefaultPolicyED65AEB4
      Roles:
        - Ref: BackendApiHandlerServiceRoleD7E0A5D4
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Handler/ServiceRole/DefaultPolicy/Resource
  BackendApiHandlerF69AE07A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:787d76a1ac13ae58ae693dbbdcbd8040fa85ab4094b0c7a83217423436012400
      Role:
        Fn::GetAtt:
          - BackendApiHandlerServiceRoleD7E0A5D4
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseB269D8BB
          CORS_ALLOW_ORIGINS: "*"
          JOB_QUEUE_NAME:
            Fn::GetAtt:
              - AsyncJobQueue0CD355DA
              - QueueName
      MemorySize: 256
      PackageType: Image
      Timeout: 30
    DependsOn:
      - BackendApiHandlerServiceRoleDefaultPolicyED65AEB4
      - BackendApiHandlerServiceRoleD7E0A5D4
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Handler/Resource
      aws:asset:path: asset.787d76a1ac13ae58ae693dbbdcbd8040fa85ab4094b0c7a83217423436012400
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  BackendApiHandlerPublicServiceRoleB93A19E2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/HandlerPublic/ServiceRole/Resource
  BackendApiHandlerPublicServiceRoleDefaultPolicy78498204:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseB269D8BB
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: BackendApiHandlerPublicServiceRoleDefaultPolicy78498204
      Roles:
        - Ref: BackendApiHandlerPublicServiceRoleB93A19E2
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/HandlerPublic/ServiceRole/DefaultPolicy/Resource
  BackendApiHandlerPublicF3ADF520:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:787d76a1ac13ae58ae693dbbdcbd8040fa85ab4094b0c7a83217423436012400
      Role:
        Fn::GetAtt:
          - BackendApiHandlerPublicServiceRoleB93A19E2
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseB269D8BB
          CORS_ALLOW_ORIGINS: "*"
      ImageConfig:
        Command:
          - handler-public.handler
      MemorySize: 256
      PackageType: Image
      Timeout: 30
    DependsOn:
      - BackendApiHandlerPublicServiceRoleDefaultPolicy78498204
      - BackendApiHandlerPublicServiceRoleB93A19E2
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/HandlerPublic/Resource
      aws:asset:path: asset.787d76a1ac13ae58ae693dbbdcbd8040fa85ab4094b0c7a83217423436012400
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  BackendApiED3D8698:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - "*"
        AllowMethods:
          - GET
          - HEAD
          - OPTIONS
          - POST
          - PUT
        AllowOrigins:
          - "*"
        MaxAge: 864000
      Name: Default
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/Resource
  BackendApiDefaultStage395BF519:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/DefaultStage/Resource
  BackendApiGETproxyIntegration291A9206:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - BackendApiHandlerF69AE07A
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/GET--{proxy+}/Integration/Resource
  BackendApiGETproxyIntegrationPermissionA99552CF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerF69AE07A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/GET--{proxy+}/Integration-Permission
  BackendApiGETproxyFCC836F3:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: GET /{proxy+}
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BackendApiAuthorizerD604C09E
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETproxyIntegration291A9206
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/GET--{proxy+}/Resource
  BackendApiAuthorizerD604C09E:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      AuthorizerType: JWT
      Name: Authorizer
      IdentitySource:
        - $request.header.Authorization
      JwtConfiguration:
        Audience:
          - Ref: AuthUserPoolClientC635291F
        Issuer:
          Fn::Join:
            - ""
            - - https://cognito-idp.
              - Ref: AWS::Region
              - .amazonaws.com/
              - Ref: AuthUserPool8115E87F
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/Authorizer/Resource
  BackendApiPOSTproxyIntegrationPermissionFA8B3572:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerF69AE07A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/POST--{proxy+}/Integration-Permission
  BackendApiPOSTproxy1D699989:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: POST /{proxy+}
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BackendApiAuthorizerD604C09E
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETproxyIntegration291A9206
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/POST--{proxy+}/Resource
  BackendApiPUTproxyIntegrationPermission3DD7AC0F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerF69AE07A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/PUT--{proxy+}/Integration-Permission
  BackendApiPUTproxyDC049326:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: PUT /{proxy+}
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BackendApiAuthorizerD604C09E
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETproxyIntegration291A9206
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/PUT--{proxy+}/Resource
  BackendApiDELETEproxyIntegrationPermission8A59D167:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerF69AE07A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/DELETE--{proxy+}/Integration-Permission
  BackendApiDELETEproxy5E114AEA:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: DELETE /{proxy+}
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BackendApiAuthorizerD604C09E
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETproxyIntegration291A9206
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/DELETE--{proxy+}/Resource
  BackendApiGETpublicproxyPublicIntegration27407C42:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - BackendApiHandlerPublicF3ADF520
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/GET--public--{proxy+}/PublicIntegration/Resource
  BackendApiGETpublicproxyPublicIntegrationPermission42ACEAE2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerPublicF3ADF520
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/public/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/GET--public--{proxy+}/PublicIntegration-Permission
  BackendApiGETpublicproxy5F167DDD:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: GET /public/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETpublicproxyPublicIntegration27407C42
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/GET--public--{proxy+}/Resource
  BackendApiPOSTpublicproxyPublicIntegrationPermissionA34DBA5F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerPublicF3ADF520
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/public/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/POST--public--{proxy+}/PublicIntegration-Permission
  BackendApiPOSTpublicproxy14254C5A:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: POST /public/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETpublicproxyPublicIntegration27407C42
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/POST--public--{proxy+}/Resource
  BackendApiPUTpublicproxyPublicIntegrationPermissionD2C1A814:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerPublicF3ADF520
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/public/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/PUT--public--{proxy+}/PublicIntegration-Permission
  BackendApiPUTpublicproxy1B549058:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: PUT /public/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETpublicproxyPublicIntegration27407C42
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/PUT--public--{proxy+}/Resource
  BackendApiDELETEpublicproxyPublicIntegrationPermission35ACAA42:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiHandlerPublicF3ADF520
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: BackendApiED3D8698
            - /*/*/public/{proxy+}
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/DELETE--public--{proxy+}/PublicIntegration-Permission
  BackendApiDELETEpublicproxy7B293125:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BackendApiED3D8698
      RouteKey: DELETE /public/{proxy+}
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BackendApiGETpublicproxyPublicIntegration27407C42
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/BackendApi/Default/DELETE--public--{proxy+}/Resource
  FrontendAssetBucket3FA96E62:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:38a374c5
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/AssetBucket/Resource
  FrontendAssetBucketPolicyE9D0C32D:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendAssetBucket3FA96E62
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - FrontendAssetBucket3FA96E62
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendAssetBucket3FA96E62
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - FrontendAssetBucket3FA96E62
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendAssetBucket3FA96E62
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - FrontendOriginAccessIdentity15749265
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - FrontendAssetBucket3FA96E62
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/AssetBucket/Policy/Resource
  FrontendAssetBucketAutoDeleteObjectsCustomResource8D0834F0:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: FrontendAssetBucket3FA96E62
    DependsOn:
      - FrontendAssetBucketPolicyE9D0C32D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/AssetBucket/AutoDeleteObjectsCustomResource/Default
  FrontendOriginAccessIdentity15749265:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allows CloudFront to reach the bucket
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/OriginAccessIdentity/Resource
  FrontendDistributionCFDistributionAE9BA647:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket:
            Fn::GetAtt:
              - AccessLogBucketDA470295
              - RegionalDomainName
          IncludeCookies: false
          Prefix: Frontend/
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName:
              Fn::GetAtt:
                - FrontendAssetBucket3FA96E62
                - RegionalDomainName
            Id: origin1
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: FrontendOriginAccessIdentity15749265
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/Distribution/CFDistribution
  FrontendReactBuildE02FF220:
    Type: Custom::CDKNodejsBuild
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8
          - Arn
      sources:
        - sourceBucketName:
            Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
          sourceObjectKey: da4ce6344472cebb6b81cc030e725b400c4830d86291e276ee73afe832052e31.zip
          directoryName: frontend
          commands:
            - npm ci
      destinationBucketName:
        Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
      destinationObjectKey: 526f8084776616653f8abed4c346bb92.zip
      workingDirectory: frontend
      outputSourceDirectory: frontend/dist
      environment:
        VITE_BACKEND_API_URL:
          Fn::GetAtt:
            - BackendApiED3D8698
            - ApiEndpoint
        VITE_USER_POOL_ID:
          Ref: AuthUserPool8115E87F
        VITE_USER_POOL_CLIENT_ID:
          Ref: AuthUserPoolClientC635291F
        VITE_AWS_REGION:
          Ref: AWS::Region
      buildCommands:
        - npm run bundle
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/ReactBuild/Resource/Default
  FrontendReactBuildDeployAwsCliLayer6AE670F6:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 02927fd0ce5bb130cbc8d11f17469e74496526efe5186a9ab36e8a8138e9a557.zip
      Description: /opt/awscli/aws
    DependsOn:
      - FrontendReactBuildE02FF220
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/ReactBuild/Deploy/AwsCliLayer/Resource
      aws:asset:path: asset.02927fd0ce5bb130cbc8d11f17469e74496526efe5186a9ab36e8a8138e9a557.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  FrontendReactBuildDeployCustomResourceA2CE2F1C:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
      SourceObjectKeys:
        - 526f8084776616653f8abed4c346bb92.zip
      DestinationBucketName:
        Ref: FrontendAssetBucket3FA96E62
      Prune: true
      DistributionId:
        Ref: FrontendDistributionCFDistributionAE9BA647
    DependsOn:
      - FrontendReactBuildE02FF220
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Frontend/ReactBuild/Deploy/CustomResource/Default
  NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659/ServiceRole/Resource
  NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
                    - /*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        Version: "2012-10-17"
      PolicyName: NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3
      Roles:
        - Ref: NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659/ServiceRole/DefaultPolicy/Resource
  NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: a0d7698ccf153c5767bc309b3cb409f9daf3dd1508d59964363f62103af809e4.zip
      Role:
        Fn::GetAtt:
          - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6
          - Arn
      EphemeralStorage:
        Size: 5120
      Handler: index.handler
      MemorySize: 1792
      Runtime: nodejs14.x
      Timeout: 600
    DependsOn:
      - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3
      - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659/Resource
      aws:asset:path: asset.a0d7698ccf153c5767bc309b3cb409f9daf3dd1508d59964363f62103af809e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
                    - /*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendAssetBucket3FA96E62
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendAssetBucket3FA96E62
                        - Arn
                    - /*
          - Action:
              - cloudfront:CreateInvalidation
              - cloudfront:GetInvalidation
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Handler: index.handler
      Layers:
        - Ref: FrontendReactBuildDeployAwsCliLayer6AE670F6
      Runtime: python3.7
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21Ty27bMBD8Ft9pxnYO6bGK3aAGGsSV+zgaNLVRNqZIlQ8bKqF/Lx+yrAI57XB2tNzdoVZ09UD9YsYuZs6r01zgkfq9ZfxEAnXw5p76R8dPYMn6VQ4oh50SyLsbPZzz4ZEZ6AlXtUSrqP9pQO+UElE94itYCwRpp6nM9KTqJGtUFVr6wY4CoiSBnpg/hvrvDlwiE+iJYM2xYtRvVGhBbxtWw5OT3KKSUTXiL+dQfa+c5vDM2hZlHdMfszvQDRoTP9sHSoBVclr0G+tA/wKdFNdET5A11Jcq95zibV0Z9QS4PjBjwBo66biITMzRElplwvp0F7dJWIs1s3Bh3XlFfahTtBjLBbfqdM1WWqg1u3ZWKmcTXzj7pjT+BR0cEcpVr1pJS/2LxhplwTkYs63C8GhTf+uoeYqajxVj+jccN2isxqO7Xjo9B5fuD36YMI9VQStU14RKNL+TzUj0PVk7Y1VTgkkmpBlG/F9qp9UZK9AkVY0LGNx6cbZ1loyf5RdxENGkQ3jQXCAtLia8r+RbmlbJCnO7izkT7Ruji9nn4X+4i3G6+EHhv1rbxv3HmA2IKK88oqkXSXvzoCdSVUDfzd15+YkuV3Q5ezeIc+3CfhugZY7/APT1bjaaAwAA
    Metadata:
      aws:cdk:path: ServerlessFullstackWebappStarterKitStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  AuthUserPoolIdC0605E59:
    Value:
      Ref: AuthUserPool8115E87F
  AuthUserPoolClientId8216BF9A:
    Value:
      Ref: AuthUserPoolClientC635291F
  BackendApiBackendApiUrl4A0A7879:
    Value:
      Fn::GetAtt:
        - BackendApiED3D8698
        - ApiEndpoint
  FrontendDomainName:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - FrontendDistributionCFDistributionAE9BA647
              - DomainName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

