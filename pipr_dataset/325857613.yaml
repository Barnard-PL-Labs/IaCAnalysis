Resources:
  ExampleVPC8F37DF5D:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/Resource
  ExampleVPCPublicSubnet1Subnet294FC2B8:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet1/Subnet
  ExampleVPCPublicSubnet1RouteTable5F58AF51:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet1/RouteTable
  ExampleVPCPublicSubnet1RouteTableAssociation68C9A56C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ExampleVPCPublicSubnet1RouteTable5F58AF51
      SubnetId:
        Ref: ExampleVPCPublicSubnet1Subnet294FC2B8
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet1/RouteTableAssociation
  ExampleVPCPublicSubnet1DefaultRouteA6CD80A2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ExampleVPCPublicSubnet1RouteTable5F58AF51
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ExampleVPCIGWBEE6F840
    DependsOn:
      - ExampleVPCVPCGWB46DD980
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet1/DefaultRoute
  ExampleVPCPublicSubnet1EIP29FE0900:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet1/EIP
  ExampleVPCPublicSubnet1NATGateway7BDCDA06:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: ExampleVPCPublicSubnet1Subnet294FC2B8
      AllocationId:
        Fn::GetAtt:
          - ExampleVPCPublicSubnet1EIP29FE0900
          - AllocationId
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet1/NATGateway
  ExampleVPCPublicSubnet2Subnet1BF50990:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet2/Subnet
  ExampleVPCPublicSubnet2RouteTable742BB266:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet2/RouteTable
  ExampleVPCPublicSubnet2RouteTableAssociation6EC04393:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ExampleVPCPublicSubnet2RouteTable742BB266
      SubnetId:
        Ref: ExampleVPCPublicSubnet2Subnet1BF50990
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet2/RouteTableAssociation
  ExampleVPCPublicSubnet2DefaultRoute6A2E25CA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ExampleVPCPublicSubnet2RouteTable742BB266
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ExampleVPCIGWBEE6F840
    DependsOn:
      - ExampleVPCVPCGWB46DD980
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet2/DefaultRoute
  ExampleVPCPublicSubnet2EIP894E28EF:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet2/EIP
  ExampleVPCPublicSubnet2NATGateway3E9981C6:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: ExampleVPCPublicSubnet2Subnet1BF50990
      AllocationId:
        Fn::GetAtt:
          - ExampleVPCPublicSubnet2EIP894E28EF
          - AllocationId
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PublicSubnet2/NATGateway
  ExampleVPCPrivateSubnet1SubnetE2C97492:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ExampleStack/ExampleVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet1/Subnet
  ExampleVPCPrivateSubnet1RouteTable95BEEEE0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet1/RouteTable
  ExampleVPCPrivateSubnet1RouteTableAssociation6020C355:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ExampleVPCPrivateSubnet1RouteTable95BEEEE0
      SubnetId:
        Ref: ExampleVPCPrivateSubnet1SubnetE2C97492
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet1/RouteTableAssociation
  ExampleVPCPrivateSubnet1DefaultRouteECD6FC08:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ExampleVPCPrivateSubnet1RouteTable95BEEEE0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ExampleVPCPublicSubnet1NATGateway7BDCDA06
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet1/DefaultRoute
  ExampleVPCPrivateSubnet2Subnet48274A3D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ExampleStack/ExampleVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet2/Subnet
  ExampleVPCPrivateSubnet2RouteTableC6A0F7FA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet2/RouteTable
  ExampleVPCPrivateSubnet2RouteTableAssociation8A4CC0D6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ExampleVPCPrivateSubnet2RouteTableC6A0F7FA
      SubnetId:
        Ref: ExampleVPCPrivateSubnet2Subnet48274A3D
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet2/RouteTableAssociation
  ExampleVPCPrivateSubnet2DefaultRoute7143D661:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ExampleVPCPrivateSubnet2RouteTableC6A0F7FA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: ExampleVPCPublicSubnet2NATGateway3E9981C6
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/PrivateSubnet2/DefaultRoute
  ExampleVPCIGWBEE6F840:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ExampleStack/ExampleVPC
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/IGW
  ExampleVPCVPCGWB46DD980:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: ExampleVPC8F37DF5D
      InternetGatewayId:
        Ref: ExampleVPCIGWBEE6F840
    Metadata:
      aws:cdk:path: ExampleStack/ExampleVPC/VPCGW
  ServiceClusterFDF828A9:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: ExampleStack/ServiceCluster/Resource
  ServiceClusterDefaultServiceDiscoveryNamespace5100AAC9:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: service.local
      Vpc:
        Ref: ExampleVPC8F37DF5D
    Metadata:
      aws:cdk:path: ExampleStack/ServiceCluster/DefaultServiceDiscoveryNamespace/Resource
  frontendtaskTaskRole61352176:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ExampleStack/frontend-task/TaskRole/Resource
  frontendtask0E3633D6:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: LOCALDOMAIN
              Value: service.local
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:b52df558fd65f4369d38d8dbc2d10a5bd7fa08556155c724f3c5562d449d07cd
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: frontendtaskfrontendLogGroup339D9AFB
              awslogs-stream-prefix: FrontendContainer
              awslogs-region:
                Ref: AWS::Region
          Name: frontend
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - frontendtaskExecutionRole9E569098
          - Arn
      Family: ExampleStackfrontendtaskEDA3EC60
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - frontendtaskTaskRole61352176
          - Arn
    Metadata:
      aws:cdk:path: ExampleStack/frontend-task/Resource
  frontendtaskfrontendLogGroup339D9AFB:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ExampleStack/frontend-task/frontend/LogGroup/Resource
  frontendtaskExecutionRole9E569098:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ExampleStack/frontend-task/ExecutionRole/Resource
  frontendtaskExecutionRoleDefaultPolicyF57CFF02:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - frontendtaskfrontendLogGroup339D9AFB
                - Arn
        Version: "2012-10-17"
      PolicyName: frontendtaskExecutionRoleDefaultPolicyF57CFF02
      Roles:
        - Ref: frontendtaskExecutionRole9E569098
    Metadata:
      aws:cdk:path: ExampleStack/frontend-task/ExecutionRole/DefaultPolicy/Resource
  redistaskTaskRole087AD11F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ExampleStack/redis-task/TaskRole/Resource
  redistask43C98B32:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: LOCALDOMAIN
              Value: service.local
          Essential: true
          Image: redis:alpine
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: redistaskredisLogGroup7AF7BBD0
              awslogs-stream-prefix: RedisContainer
              awslogs-region:
                Ref: AWS::Region
          Name: redis
          PortMappings:
            - ContainerPort: 6379
              HostPort: 6379
              Protocol: tcp
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - redistaskExecutionRoleE8825A4F
          - Arn
      Family: ExampleStackredistask2B6AD626
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - redistaskTaskRole087AD11F
          - Arn
    Metadata:
      aws:cdk:path: ExampleStack/redis-task/Resource
  redistaskredisLogGroup7AF7BBD0:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ExampleStack/redis-task/redis/LogGroup/Resource
  redistaskExecutionRoleE8825A4F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ExampleStack/redis-task/ExecutionRole/Resource
  redistaskExecutionRoleDefaultPolicy91CEF55B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - redistaskredisLogGroup7AF7BBD0
                - Arn
        Version: "2012-10-17"
      PolicyName: redistaskExecutionRoleDefaultPolicy91CEF55B
      Roles:
        - Ref: redistaskExecutionRoleE8825A4F
    Metadata:
      aws:cdk:path: ExampleStack/redis-task/ExecutionRole/DefaultPolicy/Resource
  frontendserviceLBDC5FF021:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      Subnets:
        - Ref: ExampleVPCPublicSubnet1Subnet294FC2B8
        - Ref: ExampleVPCPublicSubnet2Subnet1BF50990
      Type: network
    DependsOn:
      - ExampleVPCPublicSubnet1DefaultRouteA6CD80A2
      - ExampleVPCPublicSubnet2DefaultRoute6A2E25CA
    Metadata:
      aws:cdk:path: ExampleStack/frontend-service/LB/Resource
  frontendserviceLBPublicListenerEC88D73D:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: frontendserviceLBPublicListenerECSGroup2F39BB64
          Type: forward
      LoadBalancerArn:
        Ref: frontendserviceLBDC5FF021
      Port: 80
      Protocol: TCP
    Metadata:
      aws:cdk:path: ExampleStack/frontend-service/LB/PublicListener/Resource
  frontendserviceLBPublicListenerECSGroup2F39BB64:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: ExampleVPC8F37DF5D
    Metadata:
      aws:cdk:path: ExampleStack/frontend-service/LB/PublicListener/ECSGroup/Resource
  frontendserviceServiceF4536804:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ServiceClusterFDF828A9
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 2
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: frontend
          ContainerPort: 3000
          TargetGroupArn:
            Ref: frontendserviceLBPublicListenerECSGroup2F39BB64
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - frontendserviceServiceSecurityGroup40AD8A38
                - GroupId
          Subnets:
            - Ref: ExampleVPCPrivateSubnet1SubnetE2C97492
            - Ref: ExampleVPCPrivateSubnet2Subnet48274A3D
      ServiceName: frontend
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - frontendserviceServiceCloudmapService89F1D8DB
              - Arn
      TaskDefinition:
        Ref: frontendtask0E3633D6
    DependsOn:
      - frontendserviceLBPublicListenerECSGroup2F39BB64
      - frontendserviceLBPublicListenerEC88D73D
    Metadata:
      aws:cdk:path: ExampleStack/frontend-service/Service/Service
  frontendserviceServiceCloudmapService89F1D8DB:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 60
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ServiceClusterDefaultServiceDiscoveryNamespace5100AAC9
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: frontend
      NamespaceId:
        Fn::GetAtt:
          - ServiceClusterDefaultServiceDiscoveryNamespace5100AAC9
          - Id
    Metadata:
      aws:cdk:path: ExampleStack/frontend-service/Service/CloudmapService/Resource
  frontendserviceServiceSecurityGroup40AD8A38:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ExampleStack/frontend-service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: example inbound
          FromPort: 3000
          IpProtocol: tcp
          ToPort: 3000
      VpcId:
        Ref: ExampleVPC8F37DF5D
    Metadata:
      aws:cdk:path: ExampleStack/frontend-service/Service/SecurityGroup/Resource
  redisserviceLB15FAED5F:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internal
      Subnets:
        - Ref: ExampleVPCPrivateSubnet1SubnetE2C97492
        - Ref: ExampleVPCPrivateSubnet2Subnet48274A3D
      Type: network
    Metadata:
      aws:cdk:path: ExampleStack/redis-service/LB/Resource
  redisserviceLBPublicListener5B3558D2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: redisserviceLBPublicListenerECSGroup23E6F602
          Type: forward
      LoadBalancerArn:
        Ref: redisserviceLB15FAED5F
      Port: 6379
      Protocol: TCP
    Metadata:
      aws:cdk:path: ExampleStack/redis-service/LB/PublicListener/Resource
  redisserviceLBPublicListenerECSGroup23E6F602:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: ExampleVPC8F37DF5D
    Metadata:
      aws:cdk:path: ExampleStack/redis-service/LB/PublicListener/ECSGroup/Resource
  redisserviceServiceA7EAF92E:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ServiceClusterFDF828A9
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 2
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: redis
          ContainerPort: 6379
          TargetGroupArn:
            Ref: redisserviceLBPublicListenerECSGroup23E6F602
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - redisserviceServiceSecurityGroup0D3AA8D6
                - GroupId
          Subnets:
            - Ref: ExampleVPCPrivateSubnet1SubnetE2C97492
            - Ref: ExampleVPCPrivateSubnet2Subnet48274A3D
      ServiceName: redis
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - redisserviceServiceCloudmapService40C21F19
              - Arn
      TaskDefinition:
        Ref: redistask43C98B32
    DependsOn:
      - redisserviceLBPublicListenerECSGroup23E6F602
      - redisserviceLBPublicListener5B3558D2
    Metadata:
      aws:cdk:path: ExampleStack/redis-service/Service/Service
  redisserviceServiceCloudmapService40C21F19:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 60
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ServiceClusterDefaultServiceDiscoveryNamespace5100AAC9
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: redis
      NamespaceId:
        Fn::GetAtt:
          - ServiceClusterDefaultServiceDiscoveryNamespace5100AAC9
          - Id
    Metadata:
      aws:cdk:path: ExampleStack/redis-service/Service/CloudmapService/Resource
  redisserviceServiceSecurityGroup0D3AA8D6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ExampleStack/redis-service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: ExampleVPC8F37DF5D
    Metadata:
      aws:cdk:path: ExampleStack/redis-service/Service/SecurityGroup/Resource
  redisserviceServiceSecurityGroupfromExampleStackfrontendserviceServiceSecurityGroup1F397C0B6379027383C2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: example frontend inbound
      FromPort: 6379
      GroupId:
        Fn::GetAtt:
          - redisserviceServiceSecurityGroup0D3AA8D6
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - frontendserviceServiceSecurityGroup40AD8A38
          - GroupId
      ToPort: 6379
    Metadata:
      aws:cdk:path: ExampleStack/redis-service/Service/SecurityGroup/from ExampleStackfrontendserviceServiceSecurityGroup1F397C0B:6379
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31SS2/bMAz+Lb0rahPssOPaZCsCFJmRFL0zMuuxtiVDpBwEhv/7JD+SoCt24seP78dSrx6+6Ye7H3DihcnL+844j7o7CJhS7ZFd8AbVIzNK5AqyhVq/299BmiBq7SyLD0YSd3GOOBpyEnK2Vylxh2alu7fGJNtbtlZZOFZkDuFocYi9or0Lgq9wrPDKX7nYhzMEKfPFOYGf2yyJHcgzCJ7grDJPbYTXxFsr6COeHcZOJu1R4rx/arSiDmiCJzk/exeaoYf/EltbeGTuFRrW3boKHMsMK5jgL/AFpPa53OA7WZqb/8w4K0AW/Q03xR7QtzQudoK94hHkxMa16M+6mybeWN5BjdzAGPEV/VVCNH4B6cysN86U6Lc1FDgcPtn0HhvHJM6fn4BREdS627vxTIPMXDzpsNcR9apyRdzJiysuq5vxsK5FA5JuwnqHcnK+fHGQP0EFNs71aXSsgIVMFT2Og0d8xDb+1L+Rfqxzo88+FO9hJ/uMJ9trrBZfY27zRu37XlmXo/7g+3b5XS9Xenn3wUQLH6xQjXo/yr9CPrm4SgMAAA==
    Metadata:
      aws:cdk:path: ExampleStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  frontendserviceLoadBalancerDNSA6201FFE:
    Value:
      Fn::GetAtt:
        - frontendserviceLBDC5FF021
        - DNSName
  redisserviceLoadBalancerDNSAADD4FFF:
    Value:
      Fn::GetAtt:
        - redisserviceLB15FAED5F
        - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

