Resources:
  CommonVpc492306F5:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/Resource
  CommonVpcPublicSubnet1SubnetB69EA86E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: CommonVpc492306F5
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1/Subnet
  CommonVpcPublicSubnet1RouteTable89177BC1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CommonVpc492306F5
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1/RouteTable
  CommonVpcPublicSubnet1RouteTableAssociation7CAF92E0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CommonVpcPublicSubnet1RouteTable89177BC1
      SubnetId:
        Ref: CommonVpcPublicSubnet1SubnetB69EA86E
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1/RouteTableAssociation
  CommonVpcPublicSubnet1DefaultRoute440E26FF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CommonVpcPublicSubnet1RouteTable89177BC1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: CommonVpcIGWC10A27F5
    DependsOn:
      - CommonVpcVPCGW538CCF77
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1/DefaultRoute
  CommonVpcPublicSubnet1EIP53520DA8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1/EIP
  CommonVpcPublicSubnet1NATGatewayC27717AF:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: CommonVpcPublicSubnet1SubnetB69EA86E
      AllocationId:
        Fn::GetAtt:
          - CommonVpcPublicSubnet1EIP53520DA8
          - AllocationId
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet1/NATGateway
  CommonVpcPublicSubnet2Subnet804AB69C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: CommonVpc492306F5
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2/Subnet
  CommonVpcPublicSubnet2RouteTableF88A5142:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CommonVpc492306F5
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2/RouteTable
  CommonVpcPublicSubnet2RouteTableAssociation659052EC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CommonVpcPublicSubnet2RouteTableF88A5142
      SubnetId:
        Ref: CommonVpcPublicSubnet2Subnet804AB69C
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2/RouteTableAssociation
  CommonVpcPublicSubnet2DefaultRoute097E31E6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CommonVpcPublicSubnet2RouteTableF88A5142
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: CommonVpcIGWC10A27F5
    DependsOn:
      - CommonVpcVPCGW538CCF77
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2/DefaultRoute
  CommonVpcPublicSubnet2EIP23316AC5:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2/EIP
  CommonVpcPublicSubnet2NATGateway5F06BA10:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: CommonVpcPublicSubnet2Subnet804AB69C
      AllocationId:
        Fn::GetAtt:
          - CommonVpcPublicSubnet2EIP23316AC5
          - AllocationId
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PublicSubnet2/NATGateway
  CommonVpcPrivateSubnet1Subnet4E5DF247:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: CommonVpc492306F5
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet1/Subnet
  CommonVpcPrivateSubnet1RouteTableA0CA5E74:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CommonVpc492306F5
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet1/RouteTable
  CommonVpcPrivateSubnet1RouteTableAssociation46780DB6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CommonVpcPrivateSubnet1RouteTableA0CA5E74
      SubnetId:
        Ref: CommonVpcPrivateSubnet1Subnet4E5DF247
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet1/RouteTableAssociation
  CommonVpcPrivateSubnet1DefaultRoute4607A346:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CommonVpcPrivateSubnet1RouteTableA0CA5E74
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: CommonVpcPublicSubnet1NATGatewayC27717AF
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet1/DefaultRoute
  CommonVpcPrivateSubnet2Subnet0C488D2E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: CommonVpc492306F5
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet2/Subnet
  CommonVpcPrivateSubnet2RouteTable1C7EB43F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CommonVpc492306F5
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet2/RouteTable
  CommonVpcPrivateSubnet2RouteTableAssociation2C56A1FF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CommonVpcPrivateSubnet2RouteTable1C7EB43F
      SubnetId:
        Ref: CommonVpcPrivateSubnet2Subnet0C488D2E
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet2/RouteTableAssociation
  CommonVpcPrivateSubnet2DefaultRoute4CF428FB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CommonVpcPrivateSubnet2RouteTable1C7EB43F
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: CommonVpcPublicSubnet2NATGateway5F06BA10
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/PrivateSubnet2/DefaultRoute
  CommonVpcIGWC10A27F5:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/Common/Vpc
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/IGW
  CommonVpcVPCGW538CCF77:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: CommonVpc492306F5
      InternetGatewayId:
        Ref: CommonVpcIGWC10A27F5
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/Vpc/VPCGW
  CommonPrivateHostedZone53A19DAA:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: internal.prod.
      VPCs:
        - VPCId:
            Ref: CommonVpc492306F5
          VPCRegion: ap-southeast-1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/PrivateHostedZone/Resource
  CommonAccessLogBucket0A7C7567:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/AccessLogBucket/Resource
  CommonAccessLogBucketPolicy42B6FABE:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CommonAccessLogBucket0A7C7567
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - CommonAccessLogBucket0A7C7567
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CommonAccessLogBucket0A7C7567
                        - Arn
                    - /*
          - Action:
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :iam::114774131450:root
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - CommonAccessLogBucket0A7C7567
                      - Arn
                  - /app/AWSLogs/
                  - Ref: AWS::AccountId
                  - /*
          - Action:
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :iam::114774131450:root
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - CommonAccessLogBucket0A7C7567
                      - Arn
                  - /varnish/AWSLogs/
                  - Ref: AWS::AccountId
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/AccessLogBucket/Policy/Resource
  CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: CommonAccessLogBucket0A7C7567
    DependsOn:
      - CommonAccessLogBucketPolicy42B6FABE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Common/AccessLogBucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: CommonAccessLogBucket0A7C7567
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
  AppLayerAutoScalingGroupInstanceSecurityGroup1A645FCC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup
      VpcId:
        Ref: CommonVpc492306F5
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/InstanceSecurityGroup/Resource
  AppLayerAutoScalingGroupInstanceSecurityGroupfromAwsSampleVarnishCdkStackAppLayerLoadBalancerSecurityGroup407A38F2800F7C2650:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - AppLayerAutoScalingGroupInstanceSecurityGroup1A645FCC
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AppLayerLoadBalancerSecurityGroup006AB698
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/InstanceSecurityGroup/from AwsSampleVarnishCdkStackAppLayerLoadBalancerSecurityGroup407A38F2:80
  AppLayerAutoScalingGroupInstanceRole159BEFBC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/InstanceRole/Resource
  AppLayerAutoScalingGroupInstanceRoleDefaultPolicy314F0591:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fS3Bucket4B1A9242
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fS3Bucket4B1A9242
                    - /*
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
        Version: "2012-10-17"
      PolicyName: AppLayerAutoScalingGroupInstanceRoleDefaultPolicy314F0591
      Roles:
        - Ref: AppLayerAutoScalingGroupInstanceRole159BEFBC
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/InstanceRole/DefaultPolicy/Resource
  AppLayerAutoScalingGroupInstanceProfile81A59032:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: AppLayerAutoScalingGroupInstanceRole159BEFBC
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/InstanceProfile
  AppLayerAutoScalingGroupLaunchConfigBC484C93:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      IamInstanceProfile:
        Ref: AppLayerAutoScalingGroupInstanceProfile81A59032
      SecurityGroups:
        - Fn::GetAtt:
            - AppLayerAutoScalingGroupInstanceSecurityGroup1A645FCC
            - GroupId
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash
                mkdir -p $(dirname '/tmp/user-data/')
                aws s3 cp 's3://
              - Ref: AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fS3Bucket4B1A9242
              - /
              - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fS3VersionKey9A74860C
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fS3VersionKey9A74860C
              - |-
                ' '/tmp/user-data/'
                unzip /tmp/user-data/*.zip -d /tmp/user-data/
                set -e
                chmod +x '/tmp/user-data/install.sh'
                '/tmp/user-data/install.sh'
    DependsOn:
      - AppLayerAutoScalingGroupInstanceRoleDefaultPolicy314F0591
      - AppLayerAutoScalingGroupInstanceRole159BEFBC
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/LaunchConfig
  AppLayerAutoScalingGroupASG8B74E654:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      LaunchConfigurationName:
        Ref: AppLayerAutoScalingGroupLaunchConfigBC484C93
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup
      TargetGroupARNs:
        - Ref: AppLayerLoadBalancerListenerTargetsGroupB6B65AEB
      VPCZoneIdentifier:
        - Ref: CommonVpcPrivateSubnet1Subnet4E5DF247
        - Ref: CommonVpcPrivateSubnet2Subnet0C488D2E
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AutoScalingGroup/ASG
  AppLayerLoadBalancer0358844B:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
        - Key: access_logs.s3.enabled
          Value: "true"
        - Key: access_logs.s3.bucket
          Value:
            Ref: CommonAccessLogBucket0A7C7567
        - Key: access_logs.s3.prefix
          Value: app
      Scheme: internal
      SecurityGroups:
        - Fn::GetAtt:
            - AppLayerLoadBalancerSecurityGroup006AB698
            - GroupId
      Subnets:
        - Ref: CommonVpcPrivateSubnet1Subnet4E5DF247
        - Ref: CommonVpcPrivateSubnet2Subnet0C488D2E
      Type: application
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/LoadBalancer/Resource
  AppLayerLoadBalancerSecurityGroup006AB698:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB AwsSampleVarnishCdkStackAppLayerLoadBalancerF223437D
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: CommonVpc492306F5
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/LoadBalancer/SecurityGroup/Resource
  AppLayerLoadBalancerSecurityGrouptoAwsSampleVarnishCdkStackAppLayerAutoScalingGroupInstanceSecurityGroupC9923C5D801A6BC97A:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - AppLayerLoadBalancerSecurityGroup006AB698
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - AppLayerAutoScalingGroupInstanceSecurityGroup1A645FCC
          - GroupId
      FromPort: 80
      ToPort: 80
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/LoadBalancer/SecurityGroup/to AwsSampleVarnishCdkStackAppLayerAutoScalingGroupInstanceSecurityGroupC9923C5D:80
  AppLayerLoadBalancerListener9ADEDE3A:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: AppLayerLoadBalancerListenerTargetsGroupB6B65AEB
          Type: forward
      LoadBalancerArn:
        Ref: AppLayerLoadBalancer0358844B
      Port: 80
      Protocol: HTTP
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/LoadBalancer/Listener/Resource
  AppLayerLoadBalancerListenerTargetsGroupB6B65AEB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId:
        Ref: CommonVpc492306F5
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/LoadBalancer/Listener/TargetsGroup/Resource
  AppLayerAliasRecordEAC996DF:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: app.internal.prod.
      Type: A
      AliasTarget:
        DNSName:
          Fn::Join:
            - ""
            - - dualstack.
              - Fn::GetAtt:
                  - AppLayerLoadBalancer0358844B
                  - DNSName
        HostedZoneId:
          Fn::GetAtt:
            - AppLayerLoadBalancer0358844B
            - CanonicalHostedZoneID
      HostedZoneId:
        Ref: CommonPrivateHostedZone53A19DAA
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/AppLayer/AliasRecord/Resource
  VarnishLayerAutoScalingGroupInstanceSecurityGroupB549052A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup
      VpcId:
        Ref: CommonVpc492306F5
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/InstanceSecurityGroup/Resource
  VarnishLayerAutoScalingGroupInstanceSecurityGroupfromAwsSampleVarnishCdkStackVarnishLayerLoadBalancerSecurityGroupA635C83780EA7DB47B:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - VarnishLayerAutoScalingGroupInstanceSecurityGroupB549052A
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - VarnishLayerLoadBalancerSecurityGroup7A877DD0
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/InstanceSecurityGroup/from AwsSampleVarnishCdkStackVarnishLayerLoadBalancerSecurityGroupA635C837:80
  VarnishLayerAutoScalingGroupInstanceRole3E7721A1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/InstanceRole/Resource
  VarnishLayerAutoScalingGroupInstanceRoleDefaultPolicy7E7CD16C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6S3Bucket82F4810C
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6S3Bucket82F4810C
                    - /*
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
        Version: "2012-10-17"
      PolicyName: VarnishLayerAutoScalingGroupInstanceRoleDefaultPolicy7E7CD16C
      Roles:
        - Ref: VarnishLayerAutoScalingGroupInstanceRole3E7721A1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/InstanceRole/DefaultPolicy/Resource
  VarnishLayerAutoScalingGroupInstanceProfileE294CD22:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: VarnishLayerAutoScalingGroupInstanceRole3E7721A1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/InstanceProfile
  VarnishLayerAutoScalingGroupLaunchConfig1AAC7118:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      IamInstanceProfile:
        Ref: VarnishLayerAutoScalingGroupInstanceProfileE294CD22
      SecurityGroups:
        - Fn::GetAtt:
            - VarnishLayerAutoScalingGroupInstanceSecurityGroupB549052A
            - GroupId
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash
                mkdir -p $(dirname '/tmp/user-data/')
                aws s3 cp 's3://
              - Ref: AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6S3Bucket82F4810C
              - /
              - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6S3VersionKeyA3ACF103
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6S3VersionKeyA3ACF103
              - |-
                ' '/tmp/user-data/'
                unzip /tmp/user-data/*.zip -d /tmp/user-data/
                set -e
                chmod +x '/tmp/user-data/install.sh'
                '/tmp/user-data/install.sh'
    DependsOn:
      - VarnishLayerAutoScalingGroupInstanceRoleDefaultPolicy7E7CD16C
      - VarnishLayerAutoScalingGroupInstanceRole3E7721A1
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/LaunchConfig
  VarnishLayerAutoScalingGroupASGBD7FDE10:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      LaunchConfigurationName:
        Ref: VarnishLayerAutoScalingGroupLaunchConfig1AAC7118
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup
      TargetGroupARNs:
        - Ref: VarnishLayerLoadBalancerListenerTargetsGroupC5B42E95
      VPCZoneIdentifier:
        - Ref: CommonVpcPublicSubnet1SubnetB69EA86E
        - Ref: CommonVpcPublicSubnet2Subnet804AB69C
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/AutoScalingGroup/ASG
  VarnishLayerLoadBalancer572D5C33:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
        - Key: access_logs.s3.enabled
          Value: "true"
        - Key: access_logs.s3.bucket
          Value:
            Ref: CommonAccessLogBucket0A7C7567
        - Key: access_logs.s3.prefix
          Value: varnish
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - VarnishLayerLoadBalancerSecurityGroup7A877DD0
            - GroupId
      Subnets:
        - Ref: CommonVpcPublicSubnet1SubnetB69EA86E
        - Ref: CommonVpcPublicSubnet2Subnet804AB69C
      Type: application
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
      - CommonVpcPublicSubnet1DefaultRoute440E26FF
      - CommonVpcPublicSubnet2DefaultRoute097E31E6
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/LoadBalancer/Resource
  VarnishLayerLoadBalancerSecurityGroup7A877DD0:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB AwsSampleVarnishCdkStackVarnishLayerLoadBalancer941B8BB2
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: CommonVpc492306F5
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/LoadBalancer/SecurityGroup/Resource
  VarnishLayerLoadBalancerSecurityGrouptoAwsSampleVarnishCdkStackVarnishLayerAutoScalingGroupInstanceSecurityGroup92D3765D80D59FA876:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - VarnishLayerLoadBalancerSecurityGroup7A877DD0
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - VarnishLayerAutoScalingGroupInstanceSecurityGroupB549052A
          - GroupId
      FromPort: 80
      ToPort: 80
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/LoadBalancer/SecurityGroup/to AwsSampleVarnishCdkStackVarnishLayerAutoScalingGroupInstanceSecurityGroup92D3765D:80
  VarnishLayerLoadBalancerListener7FEA9E1D:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: VarnishLayerLoadBalancerListenerTargetsGroupC5B42E95
          Type: forward
      LoadBalancerArn:
        Ref: VarnishLayerLoadBalancer572D5C33
      Port: 80
      Protocol: HTTP
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/LoadBalancer/Listener/Resource
  VarnishLayerLoadBalancerListenerTargetsGroupC5B42E95:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId:
        Ref: CommonVpc492306F5
    DependsOn:
      - CommonAccessLogBucketAutoDeleteObjectsCustomResourceBA6B7DC5
      - CommonAccessLogBucketPolicy42B6FABE
      - CommonAccessLogBucket0A7C7567
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/VarnishLayer/LoadBalancer/Listener/TargetsGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31TwW7bMAz9lt4Vde5WYMc5QdEFKDYjLnrYjZEZV40tGRKVIjD876MsJ3Y7YCe+R1LUI0Vlss+yb/LLzQ949ytVHW+VdSj7kkAdxcYaTy4oEpuD+R2oCyMqwEGLhC6SHXobnMJBZNn9slAfQY/qTvYvnYqpL8VGFGHfaFWGvcGx1ox2NhA+w77B2T/7cu+t0kDammtyBA/bIppfQI9A+A5nUTh9YjgX3hqWyviSkJRMLCfu9LVFQ6JEFZym86OzoRs1/NexNbVD7//xP4zuQbgo8f6r7CdBP60nrP5YM+pesHyHPPQqDTOiEmkQnk+ugzqmHiaUTGF5hOfZPfFE1uAxnl6B90he5tEICGS9gkabWvY5kzKRa2tPEIx65Qc/6Dq465w/pw5CQyv7nU2vNNpZzoy2vDhgFBbOHnTDgrABT1o1Fqo9NBziiidejbzr+Mx43xPH1mMsbdYHvszTPDoz5VzwIv4MrubXvnS2oMMg0npflna54cGTbefAvNmfQtzSSVfxyjhZ/ig1t/LhWwx8j7EVyjd/e8q+y+xOZjdvXuuVC4Z0i3KX7F8PEzdBfgMAAA==
    Metadata:
      aws:cdk:path: AwsSampleVarnishCdkStack/CDKMetadata/Default
Outputs:
  CommonAccessLogBucketUri4C02D9AE:
    Value:
      Fn::Join:
        - ""
        - - s3://
          - Ref: CommonAccessLogBucket0A7C7567
  AppLayerLoadBalancerURL739EAF7D:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - AppLayerLoadBalancer0358844B
              - DNSName
  VarnishLayerLoadBalancerURL72C6D523:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - VarnishLayerLoadBalancer572D5C33
              - DNSName
Parameters:
  AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F:
    Type: String
    Description: S3 bucket for asset "4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392"
  AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626:
    Type: String
    Description: S3 key for asset version "4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392"
  AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392ArtifactHashE56CD69A:
    Type: String
    Description: Artifact hash for asset "4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392"
  AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fS3Bucket4B1A9242:
    Type: String
    Description: S3 bucket for asset "fc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784f"
  AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fS3VersionKey9A74860C:
    Type: String
    Description: S3 key for asset version "fc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784f"
  AssetParametersfc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784fArtifactHash5BEA57CA:
    Type: String
    Description: Artifact hash for asset "fc16abbea57156fe70780a858c36f68b3de7d8765933905e50a44c8182fa784f"
  AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6S3Bucket82F4810C:
    Type: String
    Description: S3 bucket for asset "104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6"
  AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6S3VersionKeyA3ACF103:
    Type: String
    Description: S3 key for asset version "104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6"
  AssetParameters104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6ArtifactHash2F5780E1:
    Type: String
    Description: Artifact hash for asset "104bcdd8d89cd370c32142a2b3cafc6502f219b81451f8a8a7fb13d8ad1554e6"
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

