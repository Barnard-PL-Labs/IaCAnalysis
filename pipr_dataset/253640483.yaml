Description: Fargate WP deployment 2020
Resources:
  vpcA2121C38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/Resource
  vpcPublicSubnet1Subnet2E65531E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet1/Subnet
  vpcPublicSubnet1RouteTable48A2DF9B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet1/RouteTable
  vpcPublicSubnet1RouteTableAssociation5D3F4579:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet1/RouteTableAssociation
  vpcPublicSubnet1DefaultRoute10708846:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet1/DefaultRoute
  vpcPublicSubnet1EIPDA49DCBE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet1/EIP
  vpcPublicSubnet1NATGateway9C16659E:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet1EIPDA49DCBE
          - AllocationId
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet1/NATGateway
  vpcPublicSubnet2Subnet009B674F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet2/Subnet
  vpcPublicSubnet2RouteTableEB40D4CB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet2/RouteTable
  vpcPublicSubnet2RouteTableAssociation21F81B59:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet2/RouteTableAssociation
  vpcPublicSubnet2DefaultRouteA1EC0F60:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet2/DefaultRoute
  vpcPublicSubnet2EIP9B3743B1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet2/EIP
  vpcPublicSubnet2NATGateway9B8AE11A:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet2EIP9B3743B1
          - AllocationId
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PublicSubnet2/NATGateway
  vpcPrivateSubnet1Subnet934893E8:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: FormsWPStack/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet1/Subnet
  vpcPrivateSubnet1RouteTableB41A48CC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet1/RouteTable
  vpcPrivateSubnet1RouteTableAssociation67945127:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      SubnetId:
        Ref: vpcPrivateSubnet1Subnet934893E8
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet1/RouteTableAssociation
  vpcPrivateSubnet1DefaultRoute1AA8E2E5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet1NATGateway9C16659E
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet1/DefaultRoute
  vpcPrivateSubnet2Subnet7031C2BA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: FormsWPStack/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet2/Subnet
  vpcPrivateSubnet2RouteTable7280F23E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet2/RouteTable
  vpcPrivateSubnet2RouteTableAssociation007E94D3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      SubnetId:
        Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet2/RouteTableAssociation
  vpcPrivateSubnet2DefaultRouteB0E07F99:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet2NATGateway9B8AE11A
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/PrivateSubnet2/DefaultRoute
  vpcIGWE57CBDCA:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: FormsWPStack/vpc
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/IGW
  vpcVPCGW7984C166:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpcA2121C38
      InternetGatewayId:
        Ref: vpcIGWE57CBDCA
    Metadata:
      aws:cdk:path: FormsWPStack/vpc/VPCGW
  wpsgA510BE26:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Wordpress security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: FormsWPStack/wp-sg/Resource
  wpsgfromFormsWPStackwordpressserviceServiceSecurityGroup8193B554NaN6C09F1DE:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from FormsWPStackwordpressserviceServiceSecurityGroup8193B554:NaN
      FromPort: null
      GroupId:
        Fn::GetAtt:
          - wpsgA510BE26
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - wordpressserviceServiceSecurityGroupB3253B62
          - GroupId
      ToPort: null
    Metadata:
      aws:cdk:path: FormsWPStack/wp-sg/from FormsWPStackwordpressserviceServiceSecurityGroup8193B554:NaN
  dbSubnetGroup9730EA00:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for db database
      SubnetIds:
        - Ref: vpcPrivateSubnet1Subnet934893E8
        - Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: FormsWPStack/db/SubnetGroup/Default
  dbSecret8003E3A7:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    Metadata:
      aws:cdk:path: FormsWPStack/db/Secret/Resource
  dbSecretAttachment5D338442:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: dbSecret8003E3A7
      TargetId:
        Ref: dbECC37780
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: FormsWPStack/db/Secret/Attachment/Resource
  dbECC37780:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.m5.large
      AllocatedStorage: "25"
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 3
      CopyTagsToSnapshot: true
      DBSubnetGroupName:
        Ref: dbSubnetGroup9730EA00
      DeletionProtection: false
      Engine: mysql
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: dbSecret8003E3A7
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: dbSecret8003E3A7
            - :SecretString:password::}}
      MultiAZ: false
      Port: "3306"
      StorageEncrypted: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - wpsgA510BE26
            - GroupId
    UpdateReplacePolicy: Snapshot
    Metadata:
      aws:cdk:path: FormsWPStack/db/Resource
  ecscluster7830E7B5:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: FormsWPStack/ecs-cluster/Resource
  wordpressserviceLBFA123F7B:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - wordpressserviceLBSecurityGroup2F729E79
            - GroupId
      Subnets:
        - Ref: vpcPublicSubnet1Subnet2E65531E
        - Ref: vpcPublicSubnet2Subnet009B674F
      Type: application
    DependsOn:
      - vpcPublicSubnet1DefaultRoute10708846
      - vpcPublicSubnet2DefaultRouteA1EC0F60
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/LB/Resource
  wordpressserviceLBSecurityGroup2F729E79:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB FormsWPStackwordpressserviceLBEE90605C
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/LB/SecurityGroup/Resource
  wordpressserviceLBSecurityGrouptoFormsWPStackwordpressserviceServiceSecurityGroup8193B55480A3CA9817:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - wordpressserviceLBSecurityGroup2F729E79
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - wordpressserviceServiceSecurityGroupB3253B62
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/LB/SecurityGroup/to FormsWPStackwordpressserviceServiceSecurityGroup8193B554:80
  wordpressserviceLBPublicListenerA3412F0D:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: wordpressserviceLBPublicListenerECSGroup4B4D75DE
          Type: forward
      LoadBalancerArn:
        Ref: wordpressserviceLBFA123F7B
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/LB/PublicListener/Resource
  wordpressserviceLBPublicListenerECSGroup4B4D75DE:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/LB/PublicListener/ECSGroup/Resource
  wordpressserviceTaskDefTaskRole633BDFCF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/TaskDef/TaskRole/Resource
  wordpressserviceTaskDefC37387B8:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: DB_HOST
            - Name: DB_USER
            - Name: DB_PASSWORD
            - Name: DB_NAME
            - Name: AUTH_KEY
            - Name: SECURE_AUTH_KEY
            - Name: LOGGED_IN_KEY
            - Name: NONCE_KEY
            - Name: AUTH_SALT
            - Name: SECURE_AUTH_SALT
            - Name: LOGGED_IN_SALT
            - Name: NONCE_SALT
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:8d78ce1aedc3cf7bfac2ec85d5d43ad4e0523114da4b581d7459e9563724641a
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: wordpressserviceTaskDefwebLogGroupAA7B3499
              awslogs-stream-prefix: wordpress-service
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - wordpressserviceTaskDefExecutionRole48506EE3
          - Arn
      Family: FormsWPStackwordpressserviceTaskDefAF28B5A1
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - wordpressserviceTaskDefTaskRole633BDFCF
          - Arn
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/TaskDef/Resource
  wordpressserviceTaskDefwebLogGroupAA7B3499:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/TaskDef/web/LogGroup/Resource
  wordpressserviceTaskDefExecutionRole48506EE3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/TaskDef/ExecutionRole/Resource
  wordpressserviceTaskDefExecutionRoleDefaultPolicyC46248A3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - wordpressserviceTaskDefwebLogGroupAA7B3499
                - Arn
        Version: "2012-10-17"
      PolicyName: wordpressserviceTaskDefExecutionRoleDefaultPolicyC46248A3
      Roles:
        - Ref: wordpressserviceTaskDefExecutionRole48506EE3
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/TaskDef/ExecutionRole/DefaultPolicy/Resource
  wordpressserviceService0E63A9FA:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ecscluster7830E7B5
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: wordpressserviceLBPublicListenerECSGroup4B4D75DE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - wordpressserviceServiceSecurityGroupB3253B62
                - GroupId
          Subnets:
            - Ref: vpcPrivateSubnet1Subnet934893E8
            - Ref: vpcPrivateSubnet2Subnet7031C2BA
      TaskDefinition:
        Ref: wordpressserviceTaskDefC37387B8
    DependsOn:
      - wordpressserviceLBPublicListenerECSGroup4B4D75DE
      - wordpressserviceLBPublicListenerA3412F0D
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/Service/Service
  wordpressserviceServiceSecurityGroupB3253B62:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: FormsWPStack/wordpress-service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/Service/SecurityGroup/Resource
  wordpressserviceServiceSecurityGroupfromFormsWPStackwordpressserviceLBSecurityGroup467143B1805D1E0B71:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - wordpressserviceServiceSecurityGroupB3253B62
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - wordpressserviceLBSecurityGroup2F729E79
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: FormsWPStack/wordpress-service/Service/SecurityGroup/from FormsWPStackwordpressserviceLBSecurityGroup467143B1:80
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.65.0,@aws-cdk/aws-applicationautoscaling=1.65.0,@aws-cdk/aws-autoscaling=1.65.0,@aws-cdk/aws-autoscaling-common=1.65.0,@aws-cdk/aws-autoscaling-hooktargets=1.65.0,@aws-cdk/aws-certificatemanager=1.65.0,@aws-cdk/aws-cloudwatch=1.65.0,@aws-cdk/aws-codeguruprofiler=1.65.0,@aws-cdk/aws-ec2=1.65.0,@aws-cdk/aws-ecr=1.65.0,@aws-cdk/aws-ecr-assets=1.65.0,@aws-cdk/aws-ecs=1.65.0,@aws-cdk/aws-ecs-patterns=1.65.0,@aws-cdk/aws-elasticloadbalancingv2=1.65.0,@aws-cdk/aws-events=1.65.0,@aws-cdk/aws-events-targets=1.65.0,@aws-cdk/aws-iam=1.65.0,@aws-cdk/aws-kms=1.65.0,@aws-cdk/aws-lambda=1.65.0,@aws-cdk/aws-logs=1.65.0,@aws-cdk/aws-rds=1.65.0,@aws-cdk/aws-route53=1.65.0,@aws-cdk/aws-route53-targets=1.65.0,@aws-cdk/aws-s3=1.65.0,@aws-cdk/aws-s3-assets=1.65.0,@aws-cdk/aws-sam=1.65.0,@aws-cdk/aws-secretsmanager=1.65.0,@aws-cdk/aws-servicediscovery=1.65.0,@aws-cdk/aws-sns=1.65.0,@aws-cdk/aws-sns-subscriptions=1.65.0,@aws-cdk/aws-sqs=1.65.0,@aws-cdk/aws-ssm=1.65.0,@aws-cdk/cloud-assembly-schema=1.65.0,@aws-cdk/core=1.65.0,@aws-cdk/custom-resources=1.65.0,@aws-cdk/cx-api=1.65.0,@aws-cdk/region-info=1.65.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: FormsWPStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  wordpressserviceLoadBalancerDNSE6A7F3E0:
    Value:
      Fn::GetAtt:
        - wordpressserviceLBFA123F7B
        - DNSName
  wordpressserviceServiceURL3CC0BC5C:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - wordpressserviceLBFA123F7B
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

