Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/Resource
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet1EIPD7E02669:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet1/EIP
  VpcPublicSubnet1NATGateway4D7517AA:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet1EIPD7E02669
          - AllocationId
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet1/NATGateway
  VpcPublicSubnet2Subnet691E08A3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable94F7E489:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociationDD5762D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRoute97F91067:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet2/DefaultRoute
  VpcPublicSubnet2EIP3C605A87:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet2/EIP
  VpcPublicSubnet2NATGateway9182C01D:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet2EIP3C605A87
          - AllocationId
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PublicSubnet2/NATGateway
  VpcPrivateSubnet1Subnet536B997A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: GitOpsStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet1/Subnet
  VpcPrivateSubnet1RouteTableB2C5B500:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet1/RouteTable
  VpcPrivateSubnet1RouteTableAssociation70C59FA6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet1/RouteTableAssociation
  VpcPrivateSubnet1DefaultRouteBE02A9ED:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet1NATGateway4D7517AA
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet1/DefaultRoute
  VpcPrivateSubnet2Subnet3788AAA1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: GitOpsStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet2/Subnet
  VpcPrivateSubnet2RouteTableA678073B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet2/RouteTable
  VpcPrivateSubnet2RouteTableAssociationA89CAD56:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet2/RouteTableAssociation
  VpcPrivateSubnet2DefaultRoute060D2087:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet2NATGateway9182C01D
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/PrivateSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: GitOpsStack/Vpc
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: GitOpsStack/Vpc/VPCGW
  DatabaseDatabaseClusterSubnets60E4C466:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for Database_Cluster database
      SubnetIds:
        - Ref: VpcPrivateSubnet1Subnet536B997A
        - Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/Subnets/Default
  DatabaseDatabaseClusterSecurityGroupAF411CEB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/SecurityGroup/Resource
  DatabaseDatabaseClusterSecurityGroupfromIndirectPeerIndirectPortB809770F:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      CidrIp:
        Fn::GetAtt:
          - Vpc8378EB38
          - CidrBlock
      Description:
        Fn::Join:
          - ""
          - - "from "
            - Fn::GetAtt:
                - Vpc8378EB38
                - CidrBlock
            - :{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DatabaseDatabaseCluster4B9260D6
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DatabaseDatabaseClusterSecurityGroupAF411CEB
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DatabaseDatabaseCluster4B9260D6
          - Endpoint.Port
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/SecurityGroup/from {IndirectPeer}:{IndirectPort}
  DatabaseDatabaseClusterSecretEE22B040:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/Secret/Resource
  DatabaseDatabaseClusterSecretAttachment63FC1B37:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: DatabaseDatabaseClusterSecretEE22B040
      TargetId:
        Ref: DatabaseDatabaseCluster4B9260D6
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/Secret/Attachment/Resource
  DatabaseDatabaseCluster4B9260D6:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      CopyTagsToSnapshot: true
      DatabaseName: gitops_sample
      DBClusterParameterGroupName: default.aurora-mysql8.0
      DBSubnetGroupName:
        Ref: DatabaseDatabaseClusterSubnets60E4C466
      EngineVersion: 8.0.mysql_aurora.3.01.0
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DatabaseDatabaseClusterSecretEE22B040
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DatabaseDatabaseClusterSecretEE22B040
            - :SecretString:password::}}
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - DatabaseDatabaseClusterSecurityGroupAF411CEB
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/Resource
  DatabaseDatabaseClusterInstance19916282E:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier:
        Ref: DatabaseDatabaseCluster4B9260D6
      DBSubnetGroupName:
        Ref: DatabaseDatabaseClusterSubnets60E4C466
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.01.0
      PubliclyAccessible: false
    DependsOn:
      - VpcPrivateSubnet1DefaultRouteBE02A9ED
      - VpcPrivateSubnet2DefaultRoute060D2087
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/Instance1
  DatabaseDatabaseClusterInstance239326780:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier:
        Ref: DatabaseDatabaseCluster4B9260D6
      DBSubnetGroupName:
        Ref: DatabaseDatabaseClusterSubnets60E4C466
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.01.0
      PubliclyAccessible: false
    DependsOn:
      - VpcPrivateSubnet1DefaultRouteBE02A9ED
      - VpcPrivateSubnet2DefaultRoute060D2087
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GitOpsStack/Database/Database_Cluster/Instance2
  Repository22E53BBD:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: gitops-sample
    Metadata:
      aws:cdk:path: GitOpsStack/Repository/Resource
  RepositoryOnCommit439A0504:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        resources:
          - Fn::GetAtt:
              - Repository22E53BBD
              - Arn
        detail-type:
          - CodeCommit Repository State Change
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - main
      State: ENABLED
      Targets:
        - Arn:
            Ref: StateMachine2E01A3A5
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - StateMachineEventsRoleDBCDECD1
              - Arn
    Metadata:
      aws:cdk:path: GitOpsStack/Repository/OnCommit/Resource
  CdkDeployCdkDeployCdkDeployRole9127595E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
    Metadata:
      aws:cdk:path: GitOpsStack/CdkDeploy/CdkDeploy_CdkDeploy/Role/Resource
  CdkDeployCdkDeployCdkDeployRoleDefaultPolicy92248492:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codecommit:GitPull
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Repository22E53BBD
                - Arn
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/
                  - Fn::Sub: cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CdkDeployCdkDeployCdkDeploy9451B6C4
                    - :*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CdkDeployCdkDeployCdkDeploy9451B6C4
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CdkDeployCdkDeployCdkDeploy9451B6C4
                  - -*
        Version: "2012-10-17"
      PolicyName: CdkDeployCdkDeployCdkDeployRoleDefaultPolicy92248492
      Roles:
        - Ref: CdkDeployCdkDeployCdkDeployRole9127595E
    Metadata:
      aws:cdk:path: GitOpsStack/CdkDeploy/CdkDeploy_CdkDeploy/Role/DefaultPolicy/Resource
  CdkDeployCdkDeployCdkDeploy9451B6C4:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:dacc36bf29559c51d5aa5daab2563055e8143503f35c46bd4b182eddce9e74d7
        ImagePullCredentialsType: SERVICE_ROLE
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CdkDeployCdkDeployCdkDeployRole9127595E
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "build": {
                "commands": [
                  "npm install",
                  "npx cdk deploy --require-approval never"
                ]
              }
            }
          }
        Location:
          Fn::GetAtt:
            - Repository22E53BBD
            - CloneUrlHttp
        Type: CODECOMMIT
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      TimeoutInMinutes: 90
    Metadata:
      aws:cdk:path: GitOpsStack/CdkDeploy/CdkDeploy_CdkDeploy/Resource
  SqldefSqldefSqldefRole78515C98:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GitOpsStack/Sqldef/Sqldef_Sqldef/Role/Resource
  SqldefSqldefSqldefRoleDefaultPolicy1A1B99FB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codecommit:GitPull
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Repository22E53BBD
                - Arn
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/
                  - Fn::Sub: cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: DatabaseDatabaseClusterSecretAttachment63FC1B37
          - Action: ec2:CreateNetworkInterfacePermission
            Condition:
              StringEquals:
                ec2:Subnet:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :subnet/
                        - Ref: VpcPrivateSubnet1Subnet536B997A
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :subnet/
                        - Ref: VpcPrivateSubnet2Subnet3788AAA1
                ec2:AuthorizedService: codebuild.amazonaws.com
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ec2:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :network-interface/*
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: SqldefSqldefSqldef731BEA5B
                    - :*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: SqldefSqldefSqldef731BEA5B
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: SqldefSqldefSqldef731BEA5B
                  - -*
        Version: "2012-10-17"
      PolicyName: SqldefSqldefSqldefRoleDefaultPolicy1A1B99FB
      Roles:
        - Ref: SqldefSqldefSqldefRole78515C98
    Metadata:
      aws:cdk:path: GitOpsStack/Sqldef/Sqldef_Sqldef/Role/DefaultPolicy/Resource
  SqldefSqldefSqldefSecurityGroupEB73BA00:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic generated security group for CodeBuild GitOpsStackSqldefSqldefSqldef961D6C56
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: GitOpsStack/Sqldef/Sqldef_Sqldef/SecurityGroup/Resource
  SqldefSqldefSqldef731BEA5B:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: DB_USERNAME
            Type: SECRETS_MANAGER
            Value:
              Fn::Join:
                - ""
                - - Ref: DatabaseDatabaseClusterSecretAttachment63FC1B37
                  - :username
          - Name: DB_PASSWORD
            Type: SECRETS_MANAGER
            Value:
              Fn::Join:
                - ""
                - - Ref: DatabaseDatabaseClusterSecretAttachment63FC1B37
                  - :password
          - Name: DB_HOST
            Type: SECRETS_MANAGER
            Value:
              Fn::Join:
                - ""
                - - Ref: DatabaseDatabaseClusterSecretAttachment63FC1B37
                  - :host
          - Name: DB_NAME
            Type: PLAINTEXT
            Value: gitops_sample
        Image:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:72c3d72e55496e89a701c5facf33c144974caa443a8ebc8df7c939224b26a88c
        ImagePullCredentialsType: SERVICE_ROLE
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - SqldefSqldefSqldefRole78515C98
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "build": {
                "commands": [
                  "./scripts/entrypoint.sh"
                ]
              }
            }
          }
        Location:
          Fn::GetAtt:
            - Repository22E53BBD
            - CloneUrlHttp
        Type: CODECOMMIT
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      TimeoutInMinutes: 10
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - SqldefSqldefSqldefSecurityGroupEB73BA00
              - GroupId
        Subnets:
          - Ref: VpcPrivateSubnet1Subnet536B997A
          - Ref: VpcPrivateSubnet2Subnet3788AAA1
        VpcId:
          Ref: Vpc8378EB38
    DependsOn:
      - SqldefSqldefSqldefPolicyDocument334D9E73
    Metadata:
      aws:cdk:path: GitOpsStack/Sqldef/Sqldef_Sqldef/Resource
  SqldefSqldefSqldefPolicyDocument334D9E73:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DescribeDhcpOptions
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SqldefSqldefSqldefPolicyDocument334D9E73
      Roles:
        - Ref: SqldefSqldefSqldefRole78515C98
    Metadata:
      aws:cdk:path: GitOpsStack/Sqldef/Sqldef_Sqldef/PolicyDocument/Resource
  StateMachineRoleB840431D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GitOpsStack/StateMachine/Role/Resource
  StateMachineRoleDefaultPolicyDF1E6607:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:BatchGetReports
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CdkDeployCdkDeployCdkDeploy9451B6C4
                  - Arn
              - Fn::GetAtt:
                  - SqldefSqldefSqldef731BEA5B
                  - Arn
          - Action:
              - events:DescribeRule
              - events:PutRule
              - events:PutTargets
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":events:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :rule/StepFunctionsGetEventForCodeBuildStartBuildRule
        Version: "2012-10-17"
      PolicyName: StateMachineRoleDefaultPolicyDF1E6607
      Roles:
        - Ref: StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: GitOpsStack/StateMachine/Role/DefaultPolicy/Resource
  StateMachine2E01A3A5:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - StateMachineRoleB840431D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"CdkDeploy_CdkDeployTask","States":{"CdkDeploy_CdkDeployTask":{"Next":"Sqldef_SqldefTask","Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::codebuild:startBuild.sync","Parameters":{"ProjectName":"
            - Ref: CdkDeployCdkDeployCdkDeploy9451B6C4
            - '"}},"Sqldef_SqldefTask":{"End":true,"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::codebuild:startBuild.sync","Parameters":{"ProjectName":"
            - Ref: SqldefSqldefSqldef731BEA5B
            - '"}}},"TimeoutSeconds":7200}'
    DependsOn:
      - StateMachineRoleDefaultPolicyDF1E6607
      - StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: GitOpsStack/StateMachine/Resource
  StateMachineEventsRoleDBCDECD1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GitOpsStack/StateMachine/EventsRole/Resource
  StateMachineEventsRoleDefaultPolicyFB602CA9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: StateMachine2E01A3A5
        Version: "2012-10-17"
      PolicyName: StateMachineEventsRoleDefaultPolicyFB602CA9
      Roles:
        - Ref: StateMachineEventsRoleDBCDECD1
    Metadata:
      aws:cdk:path: GitOpsStack/StateMachine/EventsRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31SPW/jMAz9Ld0V3SVDcWviFIWHKwyn6BrIMutTYkuBSKUoDP/3o6QkTjt04uPj16PElVw9yt8P6gMXuj0uetPIcUdKHwVT+xH0So5vJy2Kd/tWFaIKTW/0LjQWKHIzql0geFVNDzM/c2tEp40i4+wtOYKnsormRdGzIvhQn6Ly5sxwblxaAs/4mpCVXLw1sdZ/A1gSO9DBG/p89i6ckoYfidJ2HhAn4VuU41aRahRC0QfkcSKPv1VuN/fENZn7+axxu7kWJqe0SMpqmASmFByUVR14OWYVsSqbV+U7oLstbgnfI5PQrgXthsGQHGs4OTTkfHqP2ZsEnDmZN6pD/olomdV+rxBZitw6fQRfDixoHZkYk3OHDS+WRjXB9K0cK+8OoJOwC5yEUQMPcJcB0VaOzyJpyYg3Jzi9B6vjl+OeFB5RFtx2E9vyhXlK6Gteuj2Cv7yzsfmQ7vxpEjWgC16DSNI52Bnb5Se4BBgXzrYm9puE5YnygL/Oyz9yuZLLhwMas/DBkhlA1tn+B+hqT1oEAwAA
    Metadata:
      aws:cdk:path: GitOpsStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

