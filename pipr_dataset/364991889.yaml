Resources:
  OctankVPCD84F2243:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/Resource
  OctankVPCPublicSubnet1Subnet0D3DBB2F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: OctankVPCD84F2243
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet1/Subnet
  OctankVPCPublicSubnet1RouteTable25F6D187:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: OctankVPCD84F2243
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet1/RouteTable
  OctankVPCPublicSubnet1RouteTableAssociationECDD13E0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: OctankVPCPublicSubnet1RouteTable25F6D187
      SubnetId:
        Ref: OctankVPCPublicSubnet1Subnet0D3DBB2F
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet1/RouteTableAssociation
  OctankVPCPublicSubnet1DefaultRoute29416567:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: OctankVPCPublicSubnet1RouteTable25F6D187
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: OctankVPCIGW64C3BEF3
    DependsOn:
      - OctankVPCVPCGWABFECA2B
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet1/DefaultRoute
  OctankVPCPublicSubnet1EIPB20B4B12:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet1/EIP
  OctankVPCPublicSubnet1NATGateway5DCE47B3:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - OctankVPCPublicSubnet1EIPB20B4B12
          - AllocationId
      SubnetId:
        Ref: OctankVPCPublicSubnet1Subnet0D3DBB2F
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet1/NATGateway
  OctankVPCPublicSubnet2Subnet05BE712A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: OctankVPCD84F2243
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet2/Subnet
  OctankVPCPublicSubnet2RouteTableD1C14695:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: OctankVPCD84F2243
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet2/RouteTable
  OctankVPCPublicSubnet2RouteTableAssociation67FE63D6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: OctankVPCPublicSubnet2RouteTableD1C14695
      SubnetId:
        Ref: OctankVPCPublicSubnet2Subnet05BE712A
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet2/RouteTableAssociation
  OctankVPCPublicSubnet2DefaultRoute21891765:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: OctankVPCPublicSubnet2RouteTableD1C14695
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: OctankVPCIGW64C3BEF3
    DependsOn:
      - OctankVPCVPCGWABFECA2B
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet2/DefaultRoute
  OctankVPCPublicSubnet2EIP10916435:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet2/EIP
  OctankVPCPublicSubnet2NATGatewayCB2F4B52:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - OctankVPCPublicSubnet2EIP10916435
          - AllocationId
      SubnetId:
        Ref: OctankVPCPublicSubnet2Subnet05BE712A
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PublicSubnet2/NATGateway
  OctankVPCPrivateSubnet1Subnet4ED09C26:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: OctankVPCD84F2243
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: OctankDemo/OctankVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet1/Subnet
  OctankVPCPrivateSubnet1RouteTable73518B17:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: OctankVPCD84F2243
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet1/RouteTable
  OctankVPCPrivateSubnet1RouteTableAssociationE4DF5870:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: OctankVPCPrivateSubnet1RouteTable73518B17
      SubnetId:
        Ref: OctankVPCPrivateSubnet1Subnet4ED09C26
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet1/RouteTableAssociation
  OctankVPCPrivateSubnet1DefaultRoute53291B21:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: OctankVPCPrivateSubnet1RouteTable73518B17
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: OctankVPCPublicSubnet1NATGateway5DCE47B3
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet1/DefaultRoute
  OctankVPCPrivateSubnet2SubnetB00DB9EC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: OctankVPCD84F2243
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: OctankDemo/OctankVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet2/Subnet
  OctankVPCPrivateSubnet2RouteTableD9B422E2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: OctankVPCD84F2243
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet2/RouteTable
  OctankVPCPrivateSubnet2RouteTableAssociationB31476DF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: OctankVPCPrivateSubnet2RouteTableD9B422E2
      SubnetId:
        Ref: OctankVPCPrivateSubnet2SubnetB00DB9EC
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet2/RouteTableAssociation
  OctankVPCPrivateSubnet2DefaultRoute5520E4EE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: OctankVPCPrivateSubnet2RouteTableD9B422E2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: OctankVPCPublicSubnet2NATGatewayCB2F4B52
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/PrivateSubnet2/DefaultRoute
  OctankVPCIGW64C3BEF3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: OctankDemo/OctankVPC
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/IGW
  OctankVPCVPCGWABFECA2B:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: OctankVPCD84F2243
      InternetGatewayId:
        Ref: OctankVPCIGW64C3BEF3
    Metadata:
      aws:cdk:path: OctankDemo/OctankVPC/VPCGW
  OctankExtALB97C0B1FB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - OctankExtALBSecurityGroup806468D4
            - GroupId
      Subnets:
        - Ref: OctankVPCPublicSubnet1Subnet0D3DBB2F
        - Ref: OctankVPCPublicSubnet2Subnet05BE712A
      Type: application
    DependsOn:
      - OctankVPCPublicSubnet1DefaultRoute29416567
      - OctankVPCPublicSubnet2DefaultRoute21891765
    Metadata:
      aws:cdk:path: OctankDemo/OctankExtALB/Resource
  OctankExtALBSecurityGroup806468D4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB OctankDemoOctankExtALB734FB4BC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/OctankExtALB/SecurityGroup/Resource
  OctankExtALBSecurityGrouptoOctankDemoDotnetFrontendSecGrpA7727BB88067CEB842:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - OctankExtALBSecurityGroup806468D4
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - DotnetFrontendSecGrpFC517DBA
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: OctankDemo/OctankExtALB/SecurityGroup/to OctankDemoDotnetFrontendSecGrpA7727BB8:80
  OctankExtALBOctankExtALBListener961DB3B5:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - FixedResponseConfig:
            MessageBody: Invalid URI
            StatusCode: "404"
          Type: fixed-response
      LoadBalancerArn:
        Ref: OctankExtALB97C0B1FB
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: OctankDemo/OctankExtALB/OctankExtALBListener/Resource
  OctankExtALBOctankExtALBListenerDotnetFrontendTargetGroup68FA4F06:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /
      HealthCheckPort: "80"
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/OctankExtALB/OctankExtALBListener/DotnetFrontendTargetGroup/Resource
  OctankExtALBOctankExtALBListenerDotnetFrontendTargetRule34B9248E:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn:
            Ref: OctankExtALBOctankExtALBListenerDotnetFrontendTargetGroup68FA4F06
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /*
      ListenerArn:
        Ref: OctankExtALBOctankExtALBListener961DB3B5
      Priority: 30
    Metadata:
      aws:cdk:path: OctankDemo/OctankExtALB/OctankExtALBListener/DotnetFrontendTargetRule/Resource
  OctankIntALBAB7B1CD1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internal
      SecurityGroups:
        - Fn::GetAtt:
            - OctankIntALBSecurityGroupA2F5DD36
            - GroupId
      Subnets:
        - Ref: OctankVPCPrivateSubnet1Subnet4ED09C26
        - Ref: OctankVPCPrivateSubnet2SubnetB00DB9EC
      Type: application
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/Resource
  OctankIntALBSecurityGroupA2F5DD36:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB OctankDemoOctankIntALB6CA952A2
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/SecurityGroup/Resource
  OctankIntALBSecurityGrouptoOctankDemoNodejsBackendSecGrp5AE1767E300096E8259B:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - OctankIntALBSecurityGroupA2F5DD36
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - NodejsBackendSecGrpF3810EEF
          - GroupId
      FromPort: 3000
      ToPort: 3000
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/SecurityGroup/to OctankDemoNodejsBackendSecGrp5AE1767E:3000
  OctankIntALBSecurityGrouptoOctankDemoSpringBootBackendSecGrp712FEDE880801ED845B5:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - OctankIntALBSecurityGroupA2F5DD36
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - SpringBootBackendSecGrp837A2A53
          - GroupId
      FromPort: 8080
      ToPort: 8080
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/SecurityGroup/to OctankDemoSpringBootBackendSecGrp712FEDE8:8080
  OctankIntALBOctankIntALBListener7264EBA6:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - FixedResponseConfig:
            MessageBody: Invalid URI
            StatusCode: "404"
          Type: fixed-response
      LoadBalancerArn:
        Ref: OctankIntALBAB7B1CD1
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/OctankIntALBListener/Resource
  OctankIntALBOctankIntALBListenerNodejsBackendTargetGroupB2B1D543:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /healthz/
      Port: 3000
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/OctankIntALBListener/NodejsBackendTargetGroup/Resource
  OctankIntALBOctankIntALBListenerNodejsBackendTargetRuleD65CE81E:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn:
            Ref: OctankIntALBOctankIntALBListenerNodejsBackendTargetGroupB2B1D543
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /api/v1/image*
      ListenerArn:
        Ref: OctankIntALBOctankIntALBListener7264EBA6
      Priority: 20
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/OctankIntALBListener/NodejsBackendTargetRule/Resource
  OctankIntALBOctankIntALBListenerSpringBootBackendTargetGroup9F5C6F93:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /actuator/health/
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 3
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/OctankIntALBListener/SpringBootBackendTargetGroup/Resource
  OctankIntALBOctankIntALBListenerSpringBootBackendTargetRuleDA63EFEF:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn:
            Ref: OctankIntALBOctankIntALBListenerSpringBootBackendTargetGroup9F5C6F93
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /api/v1/favorite*
      ListenerArn:
        Ref: OctankIntALBOctankIntALBListener7264EBA6
      Priority: 10
    Metadata:
      aws:cdk:path: OctankDemo/OctankIntALB/OctankIntALBListener/SpringBootBackendTargetRule/Resource
  OctankEC2InstanceRoleD64FCF14:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
    Metadata:
      aws:cdk:path: OctankDemo/OctankEC2InstanceRole/Resource
  OctankEC2InstanceRoleDefaultPolicyD1E6D269:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - OctankNodejsBackendLogGrp801428A7
                - Arn
        Version: "2012-10-17"
      PolicyName: OctankEC2InstanceRoleDefaultPolicyD1E6D269
      Roles:
        - Ref: OctankEC2InstanceRoleD64FCF14
    Metadata:
      aws:cdk:path: OctankDemo/OctankEC2InstanceRole/DefaultPolicy/Resource
  NodejsBackendSecGrpF3810EEF:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OctankDemo/NodejsBackendSecGrp
      GroupName: NodejsBackendSecGrp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/NodejsBackendSecGrp/Resource
  NodejsBackendSecGrpfromOctankDemoNodejsBackendSecGrp5AE1767E3000783FF65C:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from OctankDemoNodejsBackendSecGrp5AE1767E:3000
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - NodejsBackendSecGrpF3810EEF
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - NodejsBackendSecGrpF3810EEF
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: OctankDemo/NodejsBackendSecGrp/from OctankDemoNodejsBackendSecGrp5AE1767E:3000
  NodejsBackendSecGrpfromOctankDemoOctankIntALBSecurityGroup39DC9EF130009CA50015:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - NodejsBackendSecGrpF3810EEF
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - OctankIntALBSecurityGroupA2F5DD36
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: OctankDemo/NodejsBackendSecGrp/from OctankDemoOctankIntALBSecurityGroup39DC9EF1:3000
  OctankNodejsBackendLogGrp801428A7:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /octank/ec2/nodejsbackend
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: OctankDemo/OctankNodejsBackendLogGrp/Resource
  ec2cwagentconfig1F4657AE:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value:
        Fn::Join:
          - ""
          - - |-
              {
                  "agent": {
                      "metrics_collection_interval": 60,
                      "run_as_user": "root"
                  },
                  "logs": {
                      "logs_collected": {
                          "files": {
                              "collect_list": [
                                  {
                                      "file_path": "/var/log/messages",
                                      "log_group_name": "
            - Ref: OctankNodejsBackendLogGrp801428A7
            - |-
              ",
                                      "log_stream_name": "linux-messages/{instance_id}"
                                  },
                                  {
                                      "file_path": "/var/log/secure",
                                      "log_group_name": "
            - Ref: OctankNodejsBackendLogGrp801428A7
            - |-
              ",
                                      "log_stream_name": "linux-secure/{instance_id}"
                                  },
                                  {
                                      "file_path": "/var/log/amazon/amazon-cloudwatch-agent/amazon-cloudwatch-agent.log",
                                      "log_group_name": "
            - Ref: OctankNodejsBackendLogGrp801428A7
            - |-
              ",
                                      "log_stream_name": "cloudwatch-agent/{instance_id}"
                                  },
                                  {
                                      "file_path": "/var/log/xray/xray.log",
                                      "log_group_name": "
            - Ref: OctankNodejsBackendLogGrp801428A7
            - |-
              ",
                                      "log_stream_name": "xray-daemon/{instance_id}"
                                  },
                                  {
                                      "file_path": "/var/log/nodejs-backend/access.log",
                                      "log_group_name": "
            - Ref: OctankNodejsBackendLogGrp801428A7
            - |-
              ",
                                      "log_stream_name": "application/{instance_id}"
                                  }
                              ]
                          }
                      }
                  },
                  "metrics": {
                      "append_dimensions": {
                          "AutoScalingGroupName": "${aws:AutoScalingGroupName}",
                          "ImageId": "${aws:ImageId}",
                          "InstanceId": "${aws:InstanceId}",
                          "InstanceType": "${aws:InstanceType}"
                      },
                      "metrics_collected": {
                          "collectd": {
                              "metrics_aggregation_interval": 0
                          },
                          "disk": {
                              "measurement": [
                                  "used_percent"
                              ],
                              "metrics_collection_interval": 60,
                              "resources": [
                                  "*"
                              ]
                          },
                          "mem": {
                              "measurement": [
                                  "mem_used_percent"
                              ],
                              "metrics_collection_interval": 60
                          },
                          "statsd": {
                              "metrics_aggregation_interval": 0,
                              "metrics_collection_interval": 60,
                              "service_address": ":8125"
                          }
                      }
                  }
              }
      Description: Configuration for the CloudWatch Agent used with EC2
      Name: /OctankDemo/CloudWatch/EC2AgentConfig
    Metadata:
      aws:cdk:path: OctankDemo/ec2-cwagent-config/Resource
  NodejsASGInstanceProfileA0597FCC:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: OctankEC2InstanceRoleD64FCF14
    Metadata:
      aws:cdk:path: OctankDemo/NodejsASG/InstanceProfile
  NodejsASGLaunchConfig3EEEF9F9:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      IamInstanceProfile:
        Ref: NodejsASGInstanceProfileA0597FCC
      InstanceMonitoring: true
      SecurityGroups:
        - Fn::GetAtt:
            - NodejsBackendSecGrpF3810EEF
            - GroupId
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash

                # System Update
                yum update -y
                yum install jq -y

                # Docker Engine
                yum install docker -y
                systemctl enable docker --now

                # X-Ray Daemon
                curl https://s3.us-east-2.amazonaws.com/aws-xray-assets.us-east-2/xray-daemon/aws-xray-daemon-3.x.rpm -o /home/ec2-user/xray.rpm
                yum install -y /home/ec2-user/xray.rpm
                systemctl enable xray --now

                # CloudWatch Agents and CollectD
                yum install amazon-cloudwatch-agent -y
                amazon-linux-extras install collectd -y

                /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:
              - Ref: ec2cwagentconfig1F4657AE
              - |-
                

                # Login to ECR

                export ACCOUNT_ID=$(curl --silent http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .accountId)
                export REGION=$(curl --silent http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)

                aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com

                # Prepare for containized app deployment
                mkdir /var/log/nodejs-backend/ && touch /var/log/nodejs-backend/access.log

                # Run containerized NodeJS Backend component
                docker run -d --restart always --network host --volume /var/log/nodejs-backend/access.log:/usr/src/app/access.log --name nodejs-backend 
              - Ref: AWS::AccountId
              - .dkr.ecr.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /aws-cdk/assets:567eedb35d38baf066eb1f1d55ac042d7153c99d2e1fad22317d2a97d7c2a14e
    DependsOn:
      - OctankEC2InstanceRoleDefaultPolicyD1E6D269
      - OctankEC2InstanceRoleD64FCF14
    Metadata:
      aws:cdk:path: OctankDemo/NodejsASG/LaunchConfig
  NodejsASG4E041D48:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "2"
      MinSize: "1"
      DesiredCapacity: "2"
      LaunchConfigurationName:
        Ref: NodejsASGLaunchConfig3EEEF9F9
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: OctankDemo/NodejsASG
      TargetGroupARNs:
        - Ref: OctankIntALBOctankIntALBListenerNodejsBackendTargetGroupB2B1D543
      VPCZoneIdentifier:
        - Ref: OctankVPCPrivateSubnet1Subnet4ED09C26
        - Ref: OctankVPCPrivateSubnet2SubnetB00DB9EC
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: OctankDemo/NodejsASG/ASG
  DemoCluster8CB095E3:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: democluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Metadata:
      aws:cdk:path: OctankDemo/DemoCluster/Resource
  OctankECSTaskRole8488A0A9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
    Metadata:
      aws:cdk:path: OctankDemo/OctankECSTaskRole/Resource
  OctankECSTaskRoleDefaultPolicyD6BE801E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:DescribeInstances
              - ecs:ListTasks
              - ecs:ListServices
              - ecs:DescribeContainerInstances
              - ecs:DescribeServices
              - ecs:DescribeTasks
              - ecs:DescribeTaskDefinition
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: OctankECSTaskRoleDefaultPolicyD6BE801E
      Roles:
        - Ref: OctankECSTaskRole8488A0A9
    Metadata:
      aws:cdk:path: OctankDemo/OctankECSTaskRole/DefaultPolicy/Resource
  OctankECSExecutionkRole56845DBF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
    Metadata:
      aws:cdk:path: OctankDemo/OctankECSExecutionkRole/Resource
  OctankECSExecutionkRoleDefaultPolicy6FF24F32:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - OctankSpringBootBackendLogGrp5E5F25D8
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: OctankRdsInstanceSecretAttachment984BE8C3
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter
                  - Ref: octankcloudwatchagentconfigAA5DF36A
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter
                  - Ref: octankcloudwatchprometheusconfigAFBDFDFB
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - OctankDotnetFrontendLogGrpA7275317
                - Arn
        Version: "2012-10-17"
      PolicyName: OctankECSExecutionkRoleDefaultPolicy6FF24F32
      Roles:
        - Ref: OctankECSExecutionkRole56845DBF
    Metadata:
      aws:cdk:path: OctankDemo/OctankECSExecutionkRole/DefaultPolicy/Resource
  octankcloudwatchagentconfigAA5DF36A:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: |-
        {
            "agent": {
                "debug": true
            },
            "logs": {
                "metrics_collected": {
                    "prometheus": {
                        "prometheus_config_path": "env:PROMETHEUS_CONFIG_CONTENT",
                        "ecs_service_discovery": {
                            "sd_frequency": "1m",
                            "sd_result_file": "/tmp/cwagent_ecs_auto_sd.yaml",
                            "docker_label": {
                                "sd_port_label": "ECS_PROMETHEUS_EXPORTER_PORT",
                                "sd_metrics_path_label": "ECS_PROMETHEUS_METRICS_PATH",
                                "sd_job_name_label": "ECS_PROMETHEUS_JOB_NAME"
                            }
                        },
                        "emf_processor": {
                            "metric_declaration": [
                                {
                                    "source_labels": [
                                        "JAVA_EMF_EXPORT"
                                    ],
                                    "label_matcher": "^true$",
                                    "dimensions": [
                                        [
                                            "ClusterName",
                                            "TaskDefinitionFamily"
                                        ]
                                    ],
                                    "metric_selectors": [
                                        "^jvm_threads_daemon_threads$",
                                        "^jvm_classes_loaded_classes$",
                                        "^tomcat_sessions_created_sessions_total$",
                                        "^tomcat_sessions_rejected_sessions_total$",
                                        "^jvm_gc_memory_allocated_bytes_total$"
                                    ]
                                },
                                {
                                    "source_labels": [
                                        "JAVA_EMF_EXPORT"
                                    ],
                                    "label_matcher": "^true$",
                                    "dimensions": [
                                        [
                                            "ClusterName",
                                            "TaskDefinitionFamily",
                                            "area",
                                            "id"
                                        ]
                                    ],
                                    "metric_selectors": [
                                        "^jvm_memory_used_bytes$"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "force_flush_interval": 5
            }
        }
      Description: Configuration for the CloudWatch Agent
      Name: /OctankDemo/CloudWatch/ECSAgentConfig
    Metadata:
      aws:cdk:path: OctankDemo/octank-cloudwatch-agent-config/Resource
  octankcloudwatchprometheusconfigAFBDFDFB:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: |-
        global:
          scrape_interval: 1m
          scrape_timeout: 10s
        scrape_configs:
          - job_name: cwagent-ecs-file-sd-config
            sample_limit: 10000
            file_sd_configs:
              - files: ["/tmp/cwagent_ecs_auto_sd.yaml"]
      Description: Configuration for the CloudWatch Prometheus Scrapping
      Name: /OctankDemo/CloudWatch/ECSPrometheusConfig
    Metadata:
      aws:cdk:path: OctankDemo/octank-cloudwatch-prometheus-config/Resource
  RDSSecGrpE172CEDD:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OctankDemo/RDSSecGrp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/RDSSecGrp/Resource
  RDSSecGrpfromOctankDemoRDSSecGrpDDDCC8543306E913C04D:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from OctankDemoRDSSecGrpDDDCC854:3306
      FromPort: 3306
      GroupId:
        Fn::GetAtt:
          - RDSSecGrpE172CEDD
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RDSSecGrpE172CEDD
          - GroupId
      ToPort: 3306
    Metadata:
      aws:cdk:path: OctankDemo/RDSSecGrp/from OctankDemoRDSSecGrpDDDCC854:3306
  RDSSecGrpfromOctankDemoSpringBootBackendSecGrp712FEDE8330695F61365:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from OctankDemoSpringBootBackendSecGrp712FEDE8:3306
      FromPort: 3306
      GroupId:
        Fn::GetAtt:
          - RDSSecGrpE172CEDD
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - SpringBootBackendSecGrp837A2A53
          - GroupId
      ToPort: 3306
    Metadata:
      aws:cdk:path: OctankDemo/RDSSecGrp/from OctankDemoSpringBootBackendSecGrp712FEDE8:3306
  OctankRdsInstanceSubnetGroup1DDDDD77:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for OctankRdsInstance database
      SubnetIds:
        - Ref: OctankVPCPrivateSubnet1Subnet4ED09C26
        - Ref: OctankVPCPrivateSubnet2SubnetB00DB9EC
    Metadata:
      aws:cdk:path: OctankDemo/OctankRdsInstance/SubnetGroup/Default
  OctankRdsInstanceSecret5B771AA5:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    Metadata:
      aws:cdk:path: OctankDemo/OctankRdsInstance/Secret/Resource
  OctankRdsInstanceSecretAttachment984BE8C3:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: OctankRdsInstanceSecret5B771AA5
      TargetId:
        Ref: OctankRdsInstance7BA303E7
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: OctankDemo/OctankRdsInstance/Secret/Attachment/Resource
  OctankRdsInstance7BA303E7:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.micro
      AllocatedStorage: "100"
      CopyTagsToSnapshot: true
      DBName: springboot_db
      DBSubnetGroupName:
        Ref: OctankRdsInstanceSubnetGroup1DDDDD77
      Engine: mysql
      EngineVersion: 5.7.33
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: OctankRdsInstanceSecret5B771AA5
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: OctankRdsInstanceSecret5B771AA5
            - :SecretString:password::}}
      MultiAZ: true
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - RDSSecGrpE172CEDD
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: OctankDemo/OctankRdsInstance/Resource
  OctankSpringBootBackendLogGrp5E5F25D8:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /octank/ecs/service/springbootbackend
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: OctankDemo/OctankSpringBootBackendLogGrp/Resource
  SpringBootBackend663D7A5B:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: false
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:90b6436b8d6e4fcb3e26ecd40b0b789007ab0892f3ab0501c92722521dee4f29
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: OctankSpringBootBackendLogGrp5E5F25D8
              awslogs-stream-prefix: container
              awslogs-region:
                Ref: AWS::Region
          Name: db-init
          Secrets:
            - Name: DATABASE_HOST
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":host::"
            - Name: DATABASE_PORT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":port::"
            - Name: DATABASE_USERNAME
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":username::"
            - Name: DATABASE_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":password::"
            - Name: DATABASE_NAME
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":dbname::"
        - Cpu: 768
          DependsOn:
            - Condition: COMPLETE
              ContainerName: db-init
          DockerLabels:
            ECS_PROMETHEUS_JOB_NAME: SpringBootBackend
            ECS_PROMETHEUS_METRICS_PATH: /actuator/prometheus
            ECS_PROMETHEUS_EXPORTER_PORT: "8080"
            JAVA_EMF_EXPORT: "true"
          Environment:
            - Name: AWS_XRAY_TRACING_NAME
              Value: SpringBootBackend
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:996f33dc059e66987edfaf3920b02d97a3c8fe65b5c1078f206b4a1bae5e2a84
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: OctankSpringBootBackendLogGrp5E5F25D8
              awslogs-stream-prefix: container
              awslogs-region:
                Ref: AWS::Region
          MemoryReservation: 1536
          Name: application
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Secrets:
            - Name: DATABASE_HOST
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":host::"
            - Name: DATABASE_PORT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":port::"
            - Name: DATABASE_USERNAME
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":username::"
            - Name: DATABASE_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":password::"
            - Name: DATABASE_NAME
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: OctankRdsInstanceSecretAttachment984BE8C3
                    - ":dbname::"
        - Cpu: 128
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: OctankSpringBootBackendLogGrp5E5F25D8
              awslogs-stream-prefix: container
              awslogs-region:
                Ref: AWS::Region
          MemoryReservation: 256
          Name: xray-daemon
        - Cpu: 128
          Essential: true
          Image: public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: OctankSpringBootBackendLogGrp5E5F25D8
              awslogs-stream-prefix: container
              awslogs-region:
                Ref: AWS::Region
          MemoryReservation: 256
          Name: cloudwatch-agent
          Secrets:
            - Name: CW_CONFIG_CONTENT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter
                    - Ref: octankcloudwatchagentconfigAA5DF36A
            - Name: PROMETHEUS_CONFIG_CONTENT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter
                    - Ref: octankcloudwatchprometheusconfigAFBDFDFB
      Cpu: "1024"
      ExecutionRoleArn:
        Fn::GetAtt:
          - OctankECSExecutionkRole56845DBF
          - Arn
      Family: OctankDemoSpringBootBackendCC3D82BB
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - OctankECSTaskRole8488A0A9
          - Arn
    Metadata:
      aws:cdk:path: OctankDemo/SpringBootBackend/Resource
  SpringBootBackendSecGrp837A2A53:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OctankDemo/SpringBootBackendSecGrp
      GroupName: SpringBootBackendSecGrp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/SpringBootBackendSecGrp/Resource
  SpringBootBackendSecGrpfromOctankDemoSpringBootBackendSecGrp712FEDE88080852051D2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from OctankDemoSpringBootBackendSecGrp712FEDE8:8080
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - SpringBootBackendSecGrp837A2A53
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - SpringBootBackendSecGrp837A2A53
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: OctankDemo/SpringBootBackendSecGrp/from OctankDemoSpringBootBackendSecGrp712FEDE8:8080
  SpringBootBackendSecGrpfromOctankDemoOctankIntALBSecurityGroup39DC9EF18080B6A84DDC:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - SpringBootBackendSecGrp837A2A53
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - OctankIntALBSecurityGroupA2F5DD36
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: OctankDemo/SpringBootBackendSecGrp/from OctankDemoOctankIntALBSecurityGroup39DC9EF1:8080
  SpringBootBackendSrvServiceFA178677:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: DemoCluster8CB095E3
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 120
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: application
          ContainerPort: 8080
          TargetGroupArn:
            Ref: OctankIntALBOctankIntALBListenerSpringBootBackendTargetGroup9F5C6F93
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - SpringBootBackendSecGrp837A2A53
                - GroupId
          Subnets:
            - Ref: OctankVPCPrivateSubnet1Subnet4ED09C26
            - Ref: OctankVPCPrivateSubnet2SubnetB00DB9EC
      TaskDefinition:
        Ref: SpringBootBackend663D7A5B
    DependsOn:
      - OctankIntALBOctankIntALBListenerSpringBootBackendTargetRuleDA63EFEF
    Metadata:
      aws:cdk:path: OctankDemo/SpringBootBackendSrv/Service
  OctankDotnetFrontendLogGrpA7275317:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /octank/ecs/service/dotnetfrontend
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: OctankDemo/OctankDotnetFrontendLogGrp/Resource
  DotnetFrontendB8CB14B2:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: 128
          Environment:
            - Name: IMAGE_BACKEND
              Value:
                Fn::Join:
                  - ""
                  - - http://
                    - Fn::GetAtt:
                        - OctankIntALBAB7B1CD1
                        - DNSName
                    - /api/v1/image/
            - Name: FAVORITE_BACKEND
              Value:
                Fn::Join:
                  - ""
                  - - http://
                    - Fn::GetAtt:
                        - OctankIntALBAB7B1CD1
                        - DNSName
                    - /api/v1/favorite/
            - Name: AWS_XRAY_TRACING_NAME
              Value: DotnetFrontend
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:8cdb17ce56bd3f34ba6a2cdbe0cb75b8488ea438bc73cef86009391a739d80c9
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: OctankDotnetFrontendLogGrpA7275317
              awslogs-stream-prefix: container
              awslogs-region:
                Ref: AWS::Region
          MemoryReservation: 256
          Name: application
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Cpu: 64
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: OctankDotnetFrontendLogGrpA7275317
              awslogs-stream-prefix: container
              awslogs-region:
                Ref: AWS::Region
          MemoryReservation: 128
          Name: xray-daemon
        - Cpu: 64
          Essential: true
          Image: public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: OctankDotnetFrontendLogGrpA7275317
              awslogs-stream-prefix: container
              awslogs-region:
                Ref: AWS::Region
          MemoryReservation: 128
          Name: cloudwatch-agent
          Secrets:
            - Name: CW_CONFIG_CONTENT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter
                    - Ref: octankcloudwatchagentconfigAA5DF36A
            - Name: PROMETHEUS_CONFIG_CONTENT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter
                    - Ref: octankcloudwatchprometheusconfigAFBDFDFB
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - OctankECSExecutionkRole56845DBF
          - Arn
      Family: OctankDemoDotnetFrontendBE021551
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - OctankECSTaskRole8488A0A9
          - Arn
    Metadata:
      aws:cdk:path: OctankDemo/DotnetFrontend/Resource
  DotnetFrontendSecGrpFC517DBA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OctankDemo/DotnetFrontendSecGrp
      GroupName: DotnetFrontendSecGrp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: OctankVPCD84F2243
    Metadata:
      aws:cdk:path: OctankDemo/DotnetFrontendSecGrp/Resource
  DotnetFrontendSecGrpfromOctankDemoDotnetFrontendSecGrpA7727BB8808F7CC323:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from OctankDemoDotnetFrontendSecGrpA7727BB8:80
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - DotnetFrontendSecGrpFC517DBA
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - DotnetFrontendSecGrpFC517DBA
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: OctankDemo/DotnetFrontendSecGrp/from OctankDemoDotnetFrontendSecGrpA7727BB8:80
  DotnetFrontendSecGrpfromOctankDemoOctankExtALBSecurityGroupF730526080A66BE097:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - DotnetFrontendSecGrpFC517DBA
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - OctankExtALBSecurityGroup806468D4
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: OctankDemo/DotnetFrontendSecGrp/from OctankDemoOctankExtALBSecurityGroupF7305260:80
  DotnetFrontendSrvService0418286C:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: DemoCluster8CB095E3
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 30
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: application
          ContainerPort: 80
          TargetGroupArn:
            Ref: OctankExtALBOctankExtALBListenerDotnetFrontendTargetGroup68FA4F06
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - DotnetFrontendSecGrpFC517DBA
                - GroupId
          Subnets:
            - Ref: OctankVPCPrivateSubnet1Subnet4ED09C26
            - Ref: OctankVPCPrivateSubnet2SubnetB00DB9EC
      TaskDefinition:
        Ref: DotnetFrontendB8CB14B2
    DependsOn:
      - OctankExtALBOctankExtALBListenerDotnetFrontendTargetRule34B9248E
    Metadata:
      aws:cdk:path: OctankDemo/DotnetFrontendSrv/Service
  CanaryRandomArtifactsBucket3F6DE4F4:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: OctankDemo/CanaryRandom/ArtifactsBucket/Resource
  CanaryRandomServiceRole3B0E71AD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: s3:ListAllMyBuckets
                Effect: Allow
                Resource: "*"
              - Action:
                  - s3:PutObject
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - Fn::GetAtt:
                          - CanaryRandomArtifactsBucket3F6DE4F4
                          - Arn
                      - /*
              - Action: cloudwatch:PutMetricData
                Condition:
                  StringEquals:
                    cloudwatch:namespace: CloudWatchSynthetics
                Effect: Allow
                Resource: "*"
              - Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :logs:::*
            Version: "2012-10-17"
          PolicyName: canaryPolicy
    Metadata:
      aws:cdk:path: OctankDemo/CanaryRandom/ServiceRole/Resource
  CanaryRandom45A3D6D5:
    Type: AWS::Synthetics::Canary
    Properties:
      ArtifactS3Location:
        Fn::Join:
          - ""
          - - s3://
            - Ref: CanaryRandomArtifactsBucket3F6DE4F4
      Code:
        Handler: index.handler
        Script:
          Fn::Join:
            - ""
            - - |-
                var synthetics = require('Synthetics');
                const log = require('SyntheticsLogger');

                const pageLoadBlueprint = async function () {

                    // INSERT URL here
                    const URL = "http://
              - Fn::GetAtt:
                  - OctankExtALB97C0B1FB
                  - DNSName
              - |-
                /Home/Random/";

                    let page = await synthetics.getPage();
                    const response = await page.goto(URL, {waitUntil: 'domcontentloaded', timeout: 30000});
                    //Wait for page to render.
                    //Increase or decrease wait time based on endpoint being monitored.
                    await page.waitFor(15000);
                    let pageTitle = await page.title();
                    log.info('Page title: ' + pageTitle);
                    if (response.status() !== 200) {
                        throw "Failed to load page!";
                    }
                };

                exports.handler = async () => {
                    return await pageLoadBlueprint();
                };
      ExecutionRoleArn:
        Fn::GetAtt:
          - CanaryRandomServiceRole3B0E71AD
          - Arn
      Name: canary-random
      RuntimeVersion: syn-nodejs-puppeteer-3.1
      Schedule:
        DurationInSeconds: "0"
        Expression: rate(1 minute)
      StartCanaryAfterCreation: true
    Metadata:
      aws:cdk:path: OctankDemo/CanaryRandom/Resource
  CanaryFavoriteArtifactsBucketFF24DB25:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: OctankDemo/CanaryFavorite/ArtifactsBucket/Resource
  CanaryFavoriteServiceRole342CD935:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: s3:ListAllMyBuckets
                Effect: Allow
                Resource: "*"
              - Action:
                  - s3:PutObject
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - Fn::GetAtt:
                          - CanaryFavoriteArtifactsBucketFF24DB25
                          - Arn
                      - /*
              - Action: cloudwatch:PutMetricData
                Condition:
                  StringEquals:
                    cloudwatch:namespace: CloudWatchSynthetics
                Effect: Allow
                Resource: "*"
              - Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :logs:::*
            Version: "2012-10-17"
          PolicyName: canaryPolicy
    Metadata:
      aws:cdk:path: OctankDemo/CanaryFavorite/ServiceRole/Resource
  CanaryFavorite36A88722:
    Type: AWS::Synthetics::Canary
    Properties:
      ArtifactS3Location:
        Fn::Join:
          - ""
          - - s3://
            - Ref: CanaryFavoriteArtifactsBucketFF24DB25
      Code:
        Handler: index.handler
        Script:
          Fn::Join:
            - ""
            - - |-
                var synthetics = require('Synthetics');
                const log = require('SyntheticsLogger');

                const pageLoadBlueprint = async function () {

                    // INSERT URL here
                    const URL = "http://
              - Fn::GetAtt:
                  - OctankExtALB97C0B1FB
                  - DNSName
              - |-
                /Home/Favorite/";

                    let page = await synthetics.getPage();
                    const response = await page.goto(URL, {waitUntil: 'domcontentloaded', timeout: 30000});
                    //Wait for page to render.
                    //Increase or decrease wait time based on endpoint being monitored.
                    await page.waitFor(15000);
                    let pageTitle = await page.title();
                    log.info('Page title: ' + pageTitle);
                    if (response.status() !== 200) {
                        throw "Failed to load page!";
                    }
                };

                exports.handler = async () => {
                    return await pageLoadBlueprint();
                };
      ExecutionRoleArn:
        Fn::GetAtt:
          - CanaryFavoriteServiceRole342CD935
          - Arn
      Name: canary-favorite
      RuntimeVersion: syn-nodejs-puppeteer-3.1
      Schedule:
        DurationInSeconds: "0"
        Expression: rate(1 minute)
      StartCanaryAfterCreation: true
    Metadata:
      aws:cdk:path: OctankDemo/CanaryFavorite/Resource
  CanaryDontExistArtifactsBucket0177E05B:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: OctankDemo/CanaryDontExist/ArtifactsBucket/Resource
  CanaryDontExistServiceRole41028298:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: s3:ListAllMyBuckets
                Effect: Allow
                Resource: "*"
              - Action:
                  - s3:PutObject
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - Fn::GetAtt:
                          - CanaryDontExistArtifactsBucket0177E05B
                          - Arn
                      - /*
              - Action: cloudwatch:PutMetricData
                Condition:
                  StringEquals:
                    cloudwatch:namespace: CloudWatchSynthetics
                Effect: Allow
                Resource: "*"
              - Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :logs:::*
            Version: "2012-10-17"
          PolicyName: canaryPolicy
    Metadata:
      aws:cdk:path: OctankDemo/CanaryDontExist/ServiceRole/Resource
  CanaryDontExist6A38AED7:
    Type: AWS::Synthetics::Canary
    Properties:
      ArtifactS3Location:
        Fn::Join:
          - ""
          - - s3://
            - Ref: CanaryDontExistArtifactsBucket0177E05B
      Code:
        Handler: index.handler
        Script:
          Fn::Join:
            - ""
            - - |-
                var synthetics = require('Synthetics');
                const log = require('SyntheticsLogger');

                const pageLoadBlueprint = async function () {

                    // INSERT URL here
                    const URL = "http://
              - Fn::GetAtt:
                  - OctankExtALB97C0B1FB
                  - DNSName
              - |-
                /DontExist/";

                    let page = await synthetics.getPage();
                    const response = await page.goto(URL, {waitUntil: 'domcontentloaded', timeout: 30000});
                    //Wait for page to render.
                    //Increase or decrease wait time based on endpoint being monitored.
                    await page.waitFor(15000);
                    let pageTitle = await page.title();
                    log.info('Page title: ' + pageTitle);
                    if (response.status() !== 200) {
                        throw "Failed to load page!";
                    }
                };

                exports.handler = async () => {
                    return await pageLoadBlueprint();
                };
      ExecutionRoleArn:
        Fn::GetAtt:
          - CanaryDontExistServiceRole41028298
          - Arn
      Name: canary-dontexist
      RuntimeVersion: syn-nodejs-puppeteer-3.1
      Schedule:
        DurationInSeconds: "0"
        Expression: rate(5 minutes)
      StartCanaryAfterCreation: true
    Metadata:
      aws:cdk:path: OctankDemo/CanaryDontExist/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31Ty27bMBD8ltwZJk4uPdaPNDAQtIIc5L6m1zJjiRSWpAND0L93SVqy6hY9cXb2weVoNJOzx2f5ePcdvty92h0fOmUJZbfxoI6iRGcDKRRz59AzV2lTieXeFEDQoEcSS2ucp6B8pH8F34aExk7GXLLTXlvTi3hLh+pJdh+tirmPYimKsK212oStwdR7RaUNHt9hW+OVv3K8lFUa4uSxOIKXdRGPn+BfweMXnEVB+sTwOnhteHfGQ0He5BLNPT/+0KDxYoMqkPbnV7KhTTv8l3ipCJ37i16bxPcCa3Beq9rCbgs1GMVynliMeduyAuklb5xbpFwUd/9nPK3TzqO51Ax4kn8Hqvh9w5rT8B9TypAlnsa90NDIrrQ5lc7CcmeS64rWbIC4XkF2r2MbKrqHaBgnV1YdkdYNVJgsFHOyxNY67S2dF+BQ1LZysnuz1bjsgHvhXBO9SKzTxHIT/7GlgrdOQc0lLCQHmxxcp0Ew6sAm3Osq0GiX29K4N++xrIO7XDLAH6wdRM+54wr32uhhxC1jjQfN6k24S+8G6aTz33CBvaAdX7cCD1tWYRBRZI+Oy68WU2KoZndRNvJqMXSyWIl1DRiWm/gpyYaxMB/ZAxN3jwW3GZ51Nv6A7NUoCQ+k9Kkz4uyz7BaBP22akVHf98LYHcpP93CafZOzJzm7+3Ra31MwXjcoy3z+BggTVkVzBAAA
    Metadata:
      aws:cdk:path: OctankDemo/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Outputs:
  ExternalALBfrontend:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - OctankExtALB97C0B1FB
              - DNSName
  InternalALBbackends:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - OctankIntALBAB7B1CD1
              - DNSName
  RDSInstanceURI:
    Value:
      Fn::Join:
        - ""
        - - mysql://
          - Fn::GetAtt:
              - OctankRdsInstance7BA303E7
              - Endpoint.Address
          - ":"
          - Fn::GetAtt:
              - OctankRdsInstance7BA303E7
              - Endpoint.Port
  DotNetFrontendContainerImage:
    Value:
      Fn::Join:
        - ""
        - - Ref: AWS::AccountId
          - .dkr.ecr.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /aws-cdk/assets:8cdb17ce56bd3f34ba6a2cdbe0cb75b8488ea438bc73cef86009391a739d80c9
  NodeJsBackendContainerImage:
    Value:
      Fn::Join:
        - ""
        - - Ref: AWS::AccountId
          - .dkr.ecr.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /aws-cdk/assets:567eedb35d38baf066eb1f1d55ac042d7153c99d2e1fad22317d2a97d7c2a14e
  SpringbootBackendContainerImage:
    Value:
      Fn::Join:
        - ""
        - - Ref: AWS::AccountId
          - .dkr.ecr.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /aws-cdk/assets:996f33dc059e66987edfaf3920b02d97a3c8fe65b5c1078f206b4a1bae5e2a84
  SpringbootDBInitContainerImage:
    Value:
      Fn::Join:
        - ""
        - - Ref: AWS::AccountId
          - .dkr.ecr.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /aws-cdk/assets:90b6436b8d6e4fcb3e26ecd40b0b789007ab0892f3ab0501c92722521dee4f29
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

