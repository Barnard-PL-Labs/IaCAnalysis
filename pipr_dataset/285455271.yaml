Resources:
  StartStateMachineServiceRoleB20BE695:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/StartStateMachine/ServiceRole/Resource
  StartStateMachineServiceRoleDefaultPolicy26B83ABF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:DescribeCluster
            Effect: Allow
            Resource: "*"
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: StateMachine2E01A3A5
        Version: "2012-10-17"
      PolicyName: StartStateMachineServiceRoleDefaultPolicy26B83ABF
      Roles:
        - Ref: StartStateMachineServiceRoleB20BE695
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/StartStateMachine/ServiceRole/DefaultPolicy/Resource
  StartStateMachineA05696C7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3BucketCA5B1FB8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
      Role:
        Fn::GetAtt:
          - StartStateMachineServiceRoleB20BE695
          - Arn
      Environment:
        Variables:
          STATE_MACHINE_ARN:
            Ref: StateMachine2E01A3A5
      Handler: index.startStateMachine
      Runtime: nodejs12.x
      Timeout: 60
    DependsOn:
      - StartStateMachineServiceRoleDefaultPolicy26B83ABF
      - StartStateMachineServiceRoleB20BE695
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/StartStateMachine/Resource
      aws:asset:path: asset.0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551b
      aws:asset:property: Code
  IsClusterReadyServiceRole875C335B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/IsClusterReady/ServiceRole/Resource
  IsClusterReadyServiceRoleDefaultPolicyBF1C231B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:DescribeCluster
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: IsClusterReadyServiceRoleDefaultPolicyBF1C231B
      Roles:
        - Ref: IsClusterReadyServiceRole875C335B
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/IsClusterReady/ServiceRole/DefaultPolicy/Resource
  IsClusterReadyDA15322C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3BucketCA5B1FB8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
      Role:
        Fn::GetAtt:
          - IsClusterReadyServiceRole875C335B
          - Arn
      Handler: index.isClusterReady
      Runtime: nodejs12.x
      Timeout: 60
    DependsOn:
      - IsClusterReadyServiceRoleDefaultPolicyBF1C231B
      - IsClusterReadyServiceRole875C335B
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/IsClusterReady/Resource
      aws:asset:path: asset.0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551b
      aws:asset:property: Code
  CreateOIDCProviderServiceRole996623A3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/CreateOIDCProvider/ServiceRole/Resource
  CreateOIDCProviderServiceRoleDefaultPolicy221A2A09:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:CreateOpenIDConnectProvider
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CreateOIDCProviderServiceRoleDefaultPolicy221A2A09
      Roles:
        - Ref: CreateOIDCProviderServiceRole996623A3
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/CreateOIDCProvider/ServiceRole/DefaultPolicy/Resource
  CreateOIDCProvider56AAA4A4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3BucketCA5B1FB8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
      Role:
        Fn::GetAtt:
          - CreateOIDCProviderServiceRole996623A3
          - Arn
      Handler: index.createOIDCProvider
      Runtime: nodejs12.x
      Timeout: 60
    DependsOn:
      - CreateOIDCProviderServiceRoleDefaultPolicy221A2A09
      - CreateOIDCProviderServiceRole996623A3
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/CreateOIDCProvider/Resource
      aws:asset:path: asset.0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551b
      aws:asset:property: Code
  DeleteIdpFunctionServiceRole19CE1BD2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/DeleteIdpFunction/ServiceRole/Resource
  DeleteIdpFunctionServiceRoleDefaultPolicyACA0DF56:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:DescribeCluster
            Effect: Allow
            Resource: "*"
          - Action:
              - iam:DeleteOpenIDConnectProvider
              - iam:ListOpenIDConnectProviders
              - iam:GetOpenIDConnectProvider
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: DeleteIdpFunctionServiceRoleDefaultPolicyACA0DF56
      Roles:
        - Ref: DeleteIdpFunctionServiceRole19CE1BD2
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/DeleteIdpFunction/ServiceRole/DefaultPolicy/Resource
  DeleteIdpFunction287071E1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3BucketCA5B1FB8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4
      Role:
        Fn::GetAtt:
          - DeleteIdpFunctionServiceRole19CE1BD2
          - Arn
      Handler: index.onDeleteCluster
      Runtime: nodejs12.x
      Timeout: 900
    DependsOn:
      - DeleteIdpFunctionServiceRoleDefaultPolicyACA0DF56
      - DeleteIdpFunctionServiceRole19CE1BD2
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/DeleteIdpFunction/Resource
      aws:asset:path: asset.0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551b
      aws:asset:property: Code
  EksClusterCreatedEvent5C651879:
    Type: AWS::Events::Rule
    Properties:
      Description: Create OpenID Connect Provider when a new EKS Cluster is created
      EventPattern:
        detail:
          eventSource:
            - eks.amazonaws.com
          eventName:
            - CreateCluster
        detail-type:
          - AWS API Call via CloudTrail
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - StartStateMachineA05696C7
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/EksClusterCreatedEvent/Resource
  EksClusterCreatedEventAllowEventRuleEksAutoCreateIdpStackStartStateMachineE1B430BAA3B37F44:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - StartStateMachineA05696C7
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - EksClusterCreatedEvent5C651879
          - Arn
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/EksClusterCreatedEvent/AllowEventRuleEksAutoCreateIdpStackStartStateMachineE1B430BA
  EksClusterDeletedEventD2B4D495:
    Type: AWS::Events::Rule
    Properties:
      Description: Delete OpenID Connect Provider when an EKS Cluster is deleted
      EventPattern:
        detail:
          eventSource:
            - eks.amazonaws.com
          eventName:
            - DeleteCluster
        detail-type:
          - AWS API Call via CloudTrail
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - DeleteIdpFunction287071E1
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/EksClusterDeletedEvent/Resource
  EksClusterDeletedEventAllowEventRuleEksAutoCreateIdpStackDeleteIdpFunction1479C10FE5098E9C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteIdpFunction287071E1
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - EksClusterDeletedEventD2B4D495
          - Arn
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/EksClusterDeletedEvent/AllowEventRuleEksAutoCreateIdpStackDeleteIdpFunction1479C10F
  StateMachineRoleB840431D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/StateMachine/Role/Resource
  StateMachineRoleDefaultPolicyDF1E6607:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - IsClusterReadyDA15322C
                - Arn
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CreateOIDCProvider56AAA4A4
                - Arn
        Version: "2012-10-17"
      PolicyName: StateMachineRoleDefaultPolicyDF1E6607
      Roles:
        - Ref: StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/StateMachine/Role/DefaultPolicy/Resource
  StateMachine2E01A3A5:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - StateMachineRoleB840431D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"IsClusterReadyState","States":{"IsClusterReadyState":{"Next":"CreateOIDCProviderState","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"IntervalSeconds":30,"MaxAttempts":50,"BackoffRate":1}],"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - IsClusterReadyDA15322C
                - Arn
            - '","Payload.$":"$"}},"CreateOIDCProviderState":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - CreateOIDCProvider56AAA4A4
                - Arn
            - '","Payload.$":"$"}}}}'
    DependsOn:
      - StateMachineRoleDefaultPolicyDF1E6607
      - StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/StateMachine/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE1WP0UrEMBBFv2Xf01mrD+qbsiAICqV+wZhO12ybiWSSioT8u0lccH2ae8OZOzc93N/C1e4Bv6TT07JP2nmC9BZQL+pRhEKRR8NHNZK46DWpg2MJPuqgDjMP6NFSIF/NHzJzoSYTjOOsanZa0b5PCOkpsq7PlbnUA3lrRNqCQQtpdGsLanNwq9HfjWsqK7npsNYTaC0VbcTFpDGe18osVKDP+XxFuoCyCLy0Js+8uYX+A+3fgV5RfxhuKZc+56zYTQQn2W/9HfTX0O9OYkznIwdjCcbf+QNwUX7ZVAEAAA==
    Metadata:
      aws:cdk:path: EksAutoCreateIdpStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3BucketCA5B1FB8:
    Type: String
    Description: S3 bucket for asset "0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551b"
  AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bS3VersionKeyE79D62B4:
    Type: String
    Description: S3 key for asset version "0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551b"
  AssetParameters0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551bArtifactHash0EA2AE12:
    Type: String
    Description: Artifact hash for asset "0adf9e7fbd1593cd35fdb4a21302710f36f64a357759cedfd75a9cf5b9ce551b"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

