Parameters:
  domainName:
    Type: String
    Description: The name of the domain that will be CaC enabled
  domainCertificateARN:
    Type: String
    Description: The ARN of the domain SSL certificate that has been imported in AWS certificate Manager
  AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7:
    Type: String
    Description: S3 bucket for asset "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68"
  AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F:
    Type: String
    Description: S3 key for asset version "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68"
  AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68ArtifactHashD9A515C3:
    Type: String
    Description: Artifact hash for asset "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68"
  AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3BucketD1AD544E:
    Type: String
    Description: S3 bucket for asset "a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8"
  AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3VersionKey93A19D70:
    Type: String
    Description: S3 key for asset version "a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8"
  AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8ArtifactHash238275D6:
    Type: String
    Description: Artifact hash for asset "a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8"
  AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2S3BucketB2A3AAA8:
    Type: String
    Description: S3 bucket for asset "b43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2"
  AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2S3VersionKey05497EFC:
    Type: String
    Description: S3 key for asset version "b43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2"
  AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2ArtifactHash39778FFF:
    Type: String
    Description: Artifact hash for asset "b43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2"
Resources:
  truststorebucket7C983BB3:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/truststore-bucket/Resource
  dodtruststoredeploymentAwsCliLayerF7FDDE59:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/dod-truststore-deployment/AwsCliLayer/Resource
      aws:asset:path: asset.e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip
      aws:asset:property: Content
  dodtruststoredeploymentCustomResource27B180C0:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Ref: AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2S3BucketB2A3AAA8
      SourceObjectKeys:
        - Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2S3VersionKey05497EFC
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2S3VersionKey05497EFC
      DestinationBucketName:
        Ref: truststorebucket7C983BB3
      RetainOnDelete: false
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/dod-truststore-deployment/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2S3BucketB2A3AAA8
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersb43c86bbeb018ff2c7b7a59075195cbf340affc5d9fc683c662d99f3300fcca2S3BucketB2A3AAA8
                    - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - truststorebucket7C983BB3
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - truststorebucket7C983BB3
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3BucketD1AD544E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3VersionKey93A19D70
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3VersionKey93A19D70
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Handler: index.handler
      Layers:
        - Ref: dodtruststoredeploymentAwsCliLayerF7FDDE59
      Runtime: python3.6
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8
      aws:asset:property: Code
  CaCEnabledServicesVPC85727BAB:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/Resource
  CaCEnabledServicesVPCPublicSubnet1SubnetD7D1D0DC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1/Subnet
  CaCEnabledServicesVPCPublicSubnet1RouteTable3620D517:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1/RouteTable
  CaCEnabledServicesVPCPublicSubnet1RouteTableAssociation24526A79:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPublicSubnet1RouteTable3620D517
      SubnetId:
        Ref: CaCEnabledServicesVPCPublicSubnet1SubnetD7D1D0DC
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1/RouteTableAssociation
  CaCEnabledServicesVPCPublicSubnet1DefaultRoute621862F9:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPublicSubnet1RouteTable3620D517
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: CaCEnabledServicesVPCIGWB3B571C9
    DependsOn:
      - CaCEnabledServicesVPCVPCGW39A94C62
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1/DefaultRoute
  CaCEnabledServicesVPCPublicSubnet1EIP871E488F:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1/EIP
  CaCEnabledServicesVPCPublicSubnet1NATGateway57906144:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: CaCEnabledServicesVPCPublicSubnet1SubnetD7D1D0DC
      AllocationId:
        Fn::GetAtt:
          - CaCEnabledServicesVPCPublicSubnet1EIP871E488F
          - AllocationId
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet1/NATGateway
  CaCEnabledServicesVPCPublicSubnet2Subnet4557CB74:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2/Subnet
  CaCEnabledServicesVPCPublicSubnet2RouteTable0FEB5F7B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2/RouteTable
  CaCEnabledServicesVPCPublicSubnet2RouteTableAssociation826B3203:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPublicSubnet2RouteTable0FEB5F7B
      SubnetId:
        Ref: CaCEnabledServicesVPCPublicSubnet2Subnet4557CB74
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2/RouteTableAssociation
  CaCEnabledServicesVPCPublicSubnet2DefaultRoute7B1418A8:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPublicSubnet2RouteTable0FEB5F7B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: CaCEnabledServicesVPCIGWB3B571C9
    DependsOn:
      - CaCEnabledServicesVPCVPCGW39A94C62
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2/DefaultRoute
  CaCEnabledServicesVPCPublicSubnet2EIP7EA86F16:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2/EIP
  CaCEnabledServicesVPCPublicSubnet2NATGatewayEC0D64D5:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: CaCEnabledServicesVPCPublicSubnet2Subnet4557CB74
      AllocationId:
        Fn::GetAtt:
          - CaCEnabledServicesVPCPublicSubnet2EIP7EA86F16
          - AllocationId
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PublicSubnet2/NATGateway
  CaCEnabledServicesVPCPrivateSubnet1Subnet34D5DAFB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet1/Subnet
  CaCEnabledServicesVPCPrivateSubnet1RouteTable71EB75B0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet1/RouteTable
  CaCEnabledServicesVPCPrivateSubnet1RouteTableAssociationB7397D48:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPrivateSubnet1RouteTable71EB75B0
      SubnetId:
        Ref: CaCEnabledServicesVPCPrivateSubnet1Subnet34D5DAFB
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet1/RouteTableAssociation
  CaCEnabledServicesVPCPrivateSubnet1DefaultRoute61811D25:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPrivateSubnet1RouteTable71EB75B0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: CaCEnabledServicesVPCPublicSubnet1NATGateway57906144
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet1/DefaultRoute
  CaCEnabledServicesVPCPrivateSubnet2SubnetC509A7AE:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet2/Subnet
  CaCEnabledServicesVPCPrivateSubnet2RouteTable24B74052:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet2/RouteTable
  CaCEnabledServicesVPCPrivateSubnet2RouteTableAssociation19A197EB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPrivateSubnet2RouteTable24B74052
      SubnetId:
        Ref: CaCEnabledServicesVPCPrivateSubnet2SubnetC509A7AE
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet2/RouteTableAssociation
  CaCEnabledServicesVPCPrivateSubnet2DefaultRouteC98F6F63:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: CaCEnabledServicesVPCPrivateSubnet2RouteTable24B74052
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: CaCEnabledServicesVPCPublicSubnet2NATGatewayEC0D64D5
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/PrivateSubnet2/DefaultRoute
  CaCEnabledServicesVPCIGWB3B571C9:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/IGW
  CaCEnabledServicesVPCVPCGW39A94C62:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
      InternetGatewayId:
        Ref: CaCEnabledServicesVPCIGWB3B571C9
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CaCEnabledServicesVPC/VPCGW
  exampleserviceLB006A8217:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internal
      Subnets:
        - Ref: CaCEnabledServicesVPCPrivateSubnet1Subnet34D5DAFB
        - Ref: CaCEnabledServicesVPCPrivateSubnet2SubnetC509A7AE
      Type: network
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/LB/Resource
  exampleserviceLBPublicListener649B66D7:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: exampleserviceLBPublicListenerECSGroupBF1B3B2B
          Type: forward
      LoadBalancerArn:
        Ref: exampleserviceLB006A8217
      Port: 80
      Protocol: TCP
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/LB/PublicListener/Resource
  exampleserviceLBPublicListenerECSGroupBF1B3B2B:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/LB/PublicListener/ECSGroup/Resource
  exampleserviceTaskDefTaskRole10095BF0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/TaskDef/TaskRole/Resource
  exampleserviceTaskDef10E9280F:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: amazon/amazon-ecs-sample
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: exampleserviceTaskDefwebLogGroup678571BD
              awslogs-stream-prefix: example-service
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - exampleserviceTaskDefExecutionRole749460AE
          - Arn
      Family: ServerlessDodPkiExampleStackexampleserviceTaskDefDB903555
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - exampleserviceTaskDefTaskRole10095BF0
          - Arn
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/TaskDef/Resource
  exampleserviceTaskDefwebLogGroup678571BD:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/TaskDef/web/LogGroup/Resource
  exampleserviceTaskDefExecutionRole749460AE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/TaskDef/ExecutionRole/Resource
  exampleserviceTaskDefExecutionRoleDefaultPolicyA65E3300:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - exampleserviceTaskDefwebLogGroup678571BD
                - Arn
        Version: "2012-10-17"
      PolicyName: exampleserviceTaskDefExecutionRoleDefaultPolicyA65E3300
      Roles:
        - Ref: exampleserviceTaskDefExecutionRole749460AE
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/TaskDef/ExecutionRole/DefaultPolicy/Resource
  exampleserviceServiceB2C304C5:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: EcsDefaultClusterMnL3mNNYNCaCEnabledServicesVPCC5AB9FAC
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: exampleserviceLBPublicListenerECSGroupBF1B3B2B
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - exampleserviceServiceSecurityGroup9A7CE5CA
                - GroupId
          Subnets:
            - Ref: CaCEnabledServicesVPCPrivateSubnet1Subnet34D5DAFB
            - Ref: CaCEnabledServicesVPCPrivateSubnet2SubnetC509A7AE
      TaskDefinition:
        Ref: exampleserviceTaskDef10E9280F
    DependsOn:
      - exampleserviceLBPublicListenerECSGroupBF1B3B2B
      - exampleserviceLBPublicListener649B66D7
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/Service/Service
  exampleserviceServiceSecurityGroup9A7CE5CA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ServerlessDodPkiExampleStack/example-service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:ALL TRAFFIC
          IpProtocol: "-1"
      VpcId:
        Ref: CaCEnabledServicesVPC85727BAB
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-service/Service/SecurityGroup/Resource
  EcsDefaultClusterMnL3mNNYNCaCEnabledServicesVPCC5AB9FAC:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/EcsDefaultClusterMnL3mNNYNCaCEnabledServicesVPC/Resource
  exampleapi2D2ED469:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: example-api
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/Resource
  exampleapiCloudWatchRoleD902FE09:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/CloudWatchRole/Resource
  exampleapiAccount448E953D:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - exampleapiCloudWatchRoleD902FE09
          - Arn
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
      - exampleapi2D2ED469
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/Account
  exampleapiDeploymentA1494E3Ba4a1db6a777238a8240c92c099936f5f:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: exampleapi2D2ED469
      Description: Automatically created by the RestApi construct
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
      - exampleapiANYEC166FA8
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/Deployment/Resource
  exampleapiDeploymentStageprodE9D13C13:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: exampleapi2D2ED469
      DeploymentId:
        Ref: exampleapiDeploymentA1494E3Ba4a1db6a777238a8240c92c099936f5f
      StageName: prod
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/DeploymentStage.prod/Resource
  exampleapiCustomDomain5085B196:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName:
        Ref: domainName
      EndpointConfiguration:
        Types:
          - REGIONAL
      MutualTlsAuthentication:
        TruststoreUri:
          Fn::Join:
            - ""
            - - s3://
              - Ref: truststorebucket7C983BB3
              - /truststore.pem
      RegionalCertificateArn:
        Ref: domainCertificateARN
      SecurityPolicy: TLS_1_2
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/CustomDomain/Resource
  exampleapiCustomDomainMapServerlessDodPkiExampleStackexampleapi7D4183F9BC982378:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName:
        Ref: exampleapiCustomDomain5085B196
      RestApiId:
        Ref: exampleapi2D2ED469
      Stage:
        Ref: exampleapiDeploymentStageprodE9D13C13
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/CustomDomain/Map:--=>ServerlessDodPkiExampleStackexampleapi7D4183F9/Resource
  exampleapiANYEC166FA8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - exampleapi2D2ED469
          - RootResourceId
      RestApiId:
        Ref: exampleapi2D2ED469
      AuthorizationType: NONE
      Integration:
        ConnectionId:
          Ref: examplevpclink0F28FB5B
        ConnectionType: VPC_LINK
        IntegrationHttpMethod: ANY
        Type: HTTP_PROXY
        Uri:
          Fn::Join:
            - ""
            - - http://
              - Fn::GetAtt:
                  - exampleserviceLB006A8217
                  - DNSName
    DependsOn:
      - dodtruststoredeploymentAwsCliLayerF7FDDE59
      - dodtruststoredeploymentCustomResource27B180C0
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-api/Default/ANY/Resource
  examplevpclink0F28FB5B:
    Type: AWS::ApiGateway::VpcLink
    Properties:
      Name: ServerlessDodPkiExampleStackexamplevpclink8E02A898
      TargetArns:
        - Ref: exampleserviceLB006A8217
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/example-vpc-link/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2VUUW/iMAz+LXsP2bHppHs8BrdpEuMqQLyb1CsZbVIlDghV/e/npC103FO+fHbtz47dqZw+/ZQ/Hn7D2U9UfnxslHUomw2BOor5p8nAQYWETsyt8eSCIjHzHok9Cm0KMQ+ebLVGb4NTGD+54jH5N1AdKCKOk2vS1rQiJm38s2xegjpisvaoO17AYyv886TJsS7tpUJDsjMtroSAKMfLpKoVJVT7HGTDsZZwQbdD5zmZ2LDYEsma12BUTC+ugF0H3AoNlWzWtuxKiWdmS60uqRkJtQLVk2x2tYrcLpuLLOzZsAl70xVxQ2sbCLew78J1/I1jyVZpGEQkQwR/3rN4rIDegPAMF5E5fWJ4C/xu+E0YDw6dkv42I36+Q2rOBlVwmi5vzoY6aRgTsRQ/qYFiMC9XSGfrjksL+QuUYBTmr+CKmBjdSfNLYgmetCrZY588uKsnbsb/X7qY7Nt98NGe0PT2Afe2LWfjmgato2tSKptezhb8cYGf2uihd/eMNQSaI4+4u1JSL3pY8hB3inrIc2QLzre0xVXNgHlua110neZRQU+zWveDP8CZUjZw+0djyuzoFten05DAwlYsd8Wrlvxut7gCGdDhA+o6rRuvyB01rFnkxQfSwebRrUc8pktt0i73sB2WZFLGBZnwFqpSy9nZz0uddqYVxuYov/zjafqL/xBy+vDltZ44LklXKNfd+Q9g/5jqPQQAAA==
    Metadata:
      aws:cdk:path: ServerlessDodPkiExampleStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  exampleserviceLoadBalancerDNS4839A3D8:
    Value:
      Fn::GetAtt:
        - exampleserviceLB006A8217
        - DNSName
  exampleapiEndpoint9C2B6BF5:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: exampleapi2D2ED469
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: exampleapiDeploymentStageprodE9D13C13
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

