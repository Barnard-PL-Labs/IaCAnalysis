Resources:
  MyDemoLabVPC729B630E:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/Resource
  MyDemoLabVPCPublicSubnet1Subnet5FDAB612:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet1/Subnet
  MyDemoLabVPCPublicSubnet1RouteTableA5FE1637:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet1/RouteTable
  MyDemoLabVPCPublicSubnet1RouteTableAssociation314E497F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPublicSubnet1RouteTableA5FE1637
      SubnetId:
        Ref: MyDemoLabVPCPublicSubnet1Subnet5FDAB612
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet1/RouteTableAssociation
  MyDemoLabVPCPublicSubnet1DefaultRoute35856E7B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPublicSubnet1RouteTableA5FE1637
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyDemoLabVPCIGWCCF3E29D
    DependsOn:
      - MyDemoLabVPCVPCGWCB130645
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet1/DefaultRoute
  MyDemoLabVPCPublicSubnet1EIPD616AFA1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet1/EIP
  MyDemoLabVPCPublicSubnet1NATGateway726C96D9:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyDemoLabVPCPublicSubnet1Subnet5FDAB612
      AllocationId:
        Fn::GetAtt:
          - MyDemoLabVPCPublicSubnet1EIPD616AFA1
          - AllocationId
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet1/NATGateway
  MyDemoLabVPCPublicSubnet2Subnet9AF3C2E2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet2/Subnet
  MyDemoLabVPCPublicSubnet2RouteTable7442A5A8:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet2/RouteTable
  MyDemoLabVPCPublicSubnet2RouteTableAssociation81784313:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPublicSubnet2RouteTable7442A5A8
      SubnetId:
        Ref: MyDemoLabVPCPublicSubnet2Subnet9AF3C2E2
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet2/RouteTableAssociation
  MyDemoLabVPCPublicSubnet2DefaultRoute1E13BCAD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPublicSubnet2RouteTable7442A5A8
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyDemoLabVPCIGWCCF3E29D
    DependsOn:
      - MyDemoLabVPCVPCGWCB130645
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet2/DefaultRoute
  MyDemoLabVPCPublicSubnet2EIPED072784:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet2/EIP
  MyDemoLabVPCPublicSubnet2NATGatewayC1C992E4:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyDemoLabVPCPublicSubnet2Subnet9AF3C2E2
      AllocationId:
        Fn::GetAtt:
          - MyDemoLabVPCPublicSubnet2EIPED072784
          - AllocationId
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PublicSubnet2/NATGateway
  MyDemoLabVPCPrivateSubnet1Subnet6B183BDA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet1/Subnet
  MyDemoLabVPCPrivateSubnet1RouteTableB54A11A8:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet1/RouteTable
  MyDemoLabVPCPrivateSubnet1RouteTableAssociationE14516ED:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPrivateSubnet1RouteTableB54A11A8
      SubnetId:
        Ref: MyDemoLabVPCPrivateSubnet1Subnet6B183BDA
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet1/RouteTableAssociation
  MyDemoLabVPCPrivateSubnet1DefaultRouteAFEF66A1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPrivateSubnet1RouteTableB54A11A8
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyDemoLabVPCPublicSubnet1NATGateway726C96D9
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet1/DefaultRoute
  MyDemoLabVPCPrivateSubnet2SubnetB8D9955D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet2/Subnet
  MyDemoLabVPCPrivateSubnet2RouteTable3B628DAD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet2/RouteTable
  MyDemoLabVPCPrivateSubnet2RouteTableAssociation569798DD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPrivateSubnet2RouteTable3B628DAD
      SubnetId:
        Ref: MyDemoLabVPCPrivateSubnet2SubnetB8D9955D
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet2/RouteTableAssociation
  MyDemoLabVPCPrivateSubnet2DefaultRoute8A7B1EC9:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyDemoLabVPCPrivateSubnet2RouteTable3B628DAD
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyDemoLabVPCPublicSubnet2NATGatewayC1C992E4
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/PrivateSubnet2/DefaultRoute
  MyDemoLabVPCIGWCCF3E29D:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: DemoLab/MyDemoLabVPC
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/IGW
  MyDemoLabVPCVPCGWCB130645:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MyDemoLabVPC729B630E
      InternetGatewayId:
        Ref: MyDemoLabVPCIGWCCF3E29D
    Metadata:
      aws:cdk:path: DemoLab/MyDemoLabVPC/VPCGW
  DemoLabCluster9750DEA1:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: DemoLab/DemoLabCluster/Resource
  DemoLabNginxLBB78C42AD:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - DemoLabNginxLBSecurityGroupACE37D26
            - GroupId
      Subnets:
        - Ref: MyDemoLabVPCPublicSubnet1Subnet5FDAB612
        - Ref: MyDemoLabVPCPublicSubnet2Subnet9AF3C2E2
      Type: application
    DependsOn:
      - MyDemoLabVPCPublicSubnet1DefaultRoute35856E7B
      - MyDemoLabVPCPublicSubnet2DefaultRoute1E13BCAD
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/LB/Resource
  DemoLabNginxLBSecurityGroupACE37D26:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB DemoLabDemoLabNginxLB22150131
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: MyDemoLabVPC729B630E
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/LB/SecurityGroup/Resource
  DemoLabNginxLBSecurityGrouptoDemoLabDemoLabNginxServiceSecurityGroupD754F6CA80115DD4F5:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - DemoLabNginxLBSecurityGroupACE37D26
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - DemoLabNginxServiceSecurityGroup09FEB2B6
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/LB/SecurityGroup/to DemoLabDemoLabNginxServiceSecurityGroupD754F6CA:80
  DemoLabNginxLBPublicListenerF34DB9E9:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: DemoLabNginxLBPublicListenerECSGroupD4420F4C
          Type: forward
      LoadBalancerArn:
        Ref: DemoLabNginxLBB78C42AD
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/LB/PublicListener/Resource
  DemoLabNginxLBPublicListenerECSGroupD4420F4C:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: MyDemoLabVPC729B630E
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/LB/PublicListener/ECSGroup/Resource
  DemoLabNginxTaskDefTaskRoleEAB3FA30:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/TaskDef/TaskRole/Resource
  DemoLabNginxTaskDef25DCF7B9:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: nginx
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: DemoLabNginxTaskDefnginxAppLogGroupCE9CC645
              awslogs-stream-prefix: DemoLabNginx
              awslogs-region:
                Ref: AWS::Region
          Name: nginxApp
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - DemoLabNginxTaskDefExecutionRole3229DC58
          - Arn
      Family: DemoLabDemoLabNginxTaskDefF8AEC025
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - DemoLabNginxTaskDefTaskRoleEAB3FA30
          - Arn
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/TaskDef/Resource
  DemoLabNginxTaskDefnginxAppLogGroupCE9CC645:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/TaskDef/nginxApp/LogGroup/Resource
  DemoLabNginxTaskDefExecutionRole3229DC58:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/TaskDef/ExecutionRole/Resource
  DemoLabNginxTaskDefExecutionRoleDefaultPolicy74203824:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - DemoLabNginxTaskDefnginxAppLogGroupCE9CC645
                - Arn
        Version: "2012-10-17"
      PolicyName: DemoLabNginxTaskDefExecutionRoleDefaultPolicy74203824
      Roles:
        - Ref: DemoLabNginxTaskDefExecutionRole3229DC58
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/TaskDef/ExecutionRole/DefaultPolicy/Resource
  DemoLabNginxService73E105A9:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: DemoLabCluster9750DEA1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: nginxApp
          ContainerPort: 80
          TargetGroupArn:
            Ref: DemoLabNginxLBPublicListenerECSGroupD4420F4C
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - DemoLabNginxServiceSecurityGroup09FEB2B6
                - GroupId
          Subnets:
            - Ref: MyDemoLabVPCPrivateSubnet1Subnet6B183BDA
            - Ref: MyDemoLabVPCPrivateSubnet2SubnetB8D9955D
      TaskDefinition:
        Ref: DemoLabNginxTaskDef25DCF7B9
    DependsOn:
      - DemoLabNginxLBPublicListenerECSGroupD4420F4C
      - DemoLabNginxLBPublicListenerF34DB9E9
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/Service/Service
  DemoLabNginxServiceSecurityGroup09FEB2B6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DemoLab/DemoLabNginx/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyDemoLabVPC729B630E
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/Service/SecurityGroup/Resource
  DemoLabNginxServiceSecurityGroupfromDemoLabDemoLabNginxLBSecurityGroupE6AAF3DB8040626ECB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - DemoLabNginxServiceSecurityGroup09FEB2B6
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - DemoLabNginxLBSecurityGroupACE37D26
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: DemoLab/DemoLabNginx/Service/SecurityGroup/from DemoLabDemoLabNginxLBSecurityGroupE6AAF3DB:80
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31Ry27CMBD8Fu7GPNRDj6UpRUiojQBxd5wlXQh2ZK9BKMq/13ESSGnV045nX57ZCZ+On/h48CIudijT46iU2gAvNyTkka3BamcksGivPh0VjliklSXjJNVcP+8TKRJqVbF6VglyystdIevcLo5Y7JIc5cYlCkLvHa21I9iKJIc7f+dm1mqJop58K67BfBnX4UPQQhBcxJXFBs8e3gcvFYHxuCtoftK+ZuQlfp1AEduAdAbpujDaFeEP/xLzzIC1v+ilCnzFQFpeRrmzfntwpoXvwmSiVmWPb7BHhZ2mR0YrEqjA9Li2dwPmjI3fLQzrhoWgWqrls6LwLge3VlqkryIXSkL60A65sIQy9xVJqECVnf25/u4OIn68+3Xotam2psO9/NZv9hfojOw9K4bixMu1bu4eYqx9XzhUgyqW68y7udLZbUSHq6piSqfAD3Z0njzzyZRPBgeLODROEZ6Ar5v4DVzarTnkAgAA
    Metadata:
      aws:cdk:path: DemoLab/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  DemoLabNginxLoadBalancerDNSA1D1CBB8:
    Value:
      Fn::GetAtt:
        - DemoLabNginxLBB78C42AD
        - DNSName
  DemoLabNginxServiceURLA545D194:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - DemoLabNginxLBB78C42AD
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

