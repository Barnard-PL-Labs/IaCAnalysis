Resources:
  KeystoneNetworkKeystoneVPC2E4A46E3:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/Resource
  KeystoneNetworkKeystoneVPCelbpublicSubnet1Subnet8B640CC0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/19
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: elb_public_
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1/Subnet
  KeystoneNetworkKeystoneVPCelbpublicSubnet1RouteTable06BCAFF4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1/RouteTable
  KeystoneNetworkKeystoneVPCelbpublicSubnet1RouteTableAssociationB508B2D2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet1RouteTable06BCAFF4
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet1Subnet8B640CC0
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1/RouteTableAssociation
  KeystoneNetworkKeystoneVPCelbpublicSubnet1DefaultRouteE11A0040:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet1RouteTable06BCAFF4
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: KeystoneNetworkKeystoneVPCIGWA725606E
    DependsOn:
      - KeystoneNetworkKeystoneVPCVPCGW30572BA2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1/DefaultRoute
  KeystoneNetworkKeystoneVPCelbpublicSubnet1EIP6140DE3C:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1/EIP
  KeystoneNetworkKeystoneVPCelbpublicSubnet1NATGateway4B1B701F:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet1Subnet8B640CC0
      AllocationId:
        Fn::GetAtt:
          - KeystoneNetworkKeystoneVPCelbpublicSubnet1EIP6140DE3C
          - AllocationId
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet1/NATGateway
  KeystoneNetworkKeystoneVPCelbpublicSubnet2Subnet300D85DB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.32.0/19
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: elb_public_
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2/Subnet
  KeystoneNetworkKeystoneVPCelbpublicSubnet2RouteTable0D9A3A39:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2/RouteTable
  KeystoneNetworkKeystoneVPCelbpublicSubnet2RouteTableAssociation99B216F6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet2RouteTable0D9A3A39
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet2Subnet300D85DB
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2/RouteTableAssociation
  KeystoneNetworkKeystoneVPCelbpublicSubnet2DefaultRoute31C74E1E:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet2RouteTable0D9A3A39
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: KeystoneNetworkKeystoneVPCIGWA725606E
    DependsOn:
      - KeystoneNetworkKeystoneVPCVPCGW30572BA2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2/DefaultRoute
  KeystoneNetworkKeystoneVPCelbpublicSubnet2EIP750E2D45:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2/EIP
  KeystoneNetworkKeystoneVPCelbpublicSubnet2NATGatewayC1447ED8:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet2Subnet300D85DB
      AllocationId:
        Fn::GetAtt:
          - KeystoneNetworkKeystoneVPCelbpublicSubnet2EIP750E2D45
          - AllocationId
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/elb_public_Subnet2/NATGateway
  KeystoneNetworkKeystoneVPCecsprivateSubnet1Subnet672F259E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/19
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: ecs_private_
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet1/Subnet
  KeystoneNetworkKeystoneVPCecsprivateSubnet1RouteTableCB416DB4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet1/RouteTable
  KeystoneNetworkKeystoneVPCecsprivateSubnet1RouteTableAssociation46FB74B9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet1RouteTableCB416DB4
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet1Subnet672F259E
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet1/RouteTableAssociation
  KeystoneNetworkKeystoneVPCecsprivateSubnet1DefaultRoute0AA9AB04:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet1RouteTableCB416DB4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet1NATGateway4B1B701F
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet1/DefaultRoute
  KeystoneNetworkKeystoneVPCecsprivateSubnet2Subnet5B1FE0A5:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.96.0/19
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: ecs_private_
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet2/Subnet
  KeystoneNetworkKeystoneVPCecsprivateSubnet2RouteTable4F815FD7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet2/RouteTable
  KeystoneNetworkKeystoneVPCecsprivateSubnet2RouteTableAssociation2FA5CD5C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet2RouteTable4F815FD7
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet2Subnet5B1FE0A5
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet2/RouteTableAssociation
  KeystoneNetworkKeystoneVPCecsprivateSubnet2DefaultRoute5B4EC0EC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet2RouteTable4F815FD7
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet2NATGatewayC1447ED8
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/ecs_private_Subnet2/DefaultRoute
  KeystoneNetworkKeystoneVPCauroraisolatedSubnet1Subnet7DD73A60:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/19
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: aurora_isolated_
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet1/Subnet
  KeystoneNetworkKeystoneVPCauroraisolatedSubnet1RouteTable63C2C742:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet1
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet1/RouteTable
  KeystoneNetworkKeystoneVPCauroraisolatedSubnet1RouteTableAssociationF85E332C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCauroraisolatedSubnet1RouteTable63C2C742
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCauroraisolatedSubnet1Subnet7DD73A60
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet1/RouteTableAssociation
  KeystoneNetworkKeystoneVPCauroraisolatedSubnet2SubnetE40E4A62:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.160.0/19
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: aurora_isolated_
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet2/Subnet
  KeystoneNetworkKeystoneVPCauroraisolatedSubnet2RouteTable452D6069:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet2
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet2/RouteTable
  KeystoneNetworkKeystoneVPCauroraisolatedSubnet2RouteTableAssociationFD5803F2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KeystoneNetworkKeystoneVPCauroraisolatedSubnet2RouteTable452D6069
      SubnetId:
        Ref: KeystoneNetworkKeystoneVPCauroraisolatedSubnet2SubnetE40E4A62
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/aurora_isolated_Subnet2/RouteTableAssociation
  KeystoneNetworkKeystoneVPCIGWA725606E:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: KeystoneJS/KeystoneNetwork/KeystoneVPC
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/IGW
  KeystoneNetworkKeystoneVPCVPCGW30572BA2:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
      InternetGatewayId:
        Ref: KeystoneNetworkKeystoneVPCIGWA725606E
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneVPC/VPCGW
  KeystoneNetworkKeystoneDbSubnetEA6AF34E:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Aurora cluster
      SubnetIds:
        - Ref: KeystoneNetworkKeystoneVPCauroraisolatedSubnet1Subnet7DD73A60
        - Ref: KeystoneNetworkKeystoneVPCauroraisolatedSubnet2SubnetE40E4A62
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneDbSubnet/Default
  KeystoneNetworkKeystoneDbSg0F752E6D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: KeystoneJS/KeystoneNetwork/KeystoneDbSg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 10.0.64.0/19
          Description: from 10.0.64.0/19:5432
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
        - CidrIp: 10.0.96.0/19
          Description: from 10.0.96.0/19:5432
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneNetwork/KeystoneDbSg/Resource
  KeystoneJSKeystoneDatabaseSecretF6C4943E3fdaad7efa858a3daf9490cf0a702aeb:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"keystone"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneDatabase/KeystoneDatabase/Secret/Resource
  KeystoneDatabaseSecretAttachment0675CA71:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: KeystoneJSKeystoneDatabaseSecretF6C4943E3fdaad7efa858a3daf9490cf0a702aeb
      TargetId:
        Ref: KeystoneDatabase9A8C5641
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneDatabase/KeystoneDatabase/Secret/Attachment/Resource
  KeystoneDatabase9A8C5641:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      DatabaseName: keystone
      DBClusterParameterGroupName: default.aurora-postgresql10
      DBSubnetGroupName:
        Ref: KeystoneNetworkKeystoneDbSubnetEA6AF34E
      EngineMode: serverless
      MasterUsername: keystone
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: KeystoneJSKeystoneDatabaseSecretF6C4943E3fdaad7efa858a3daf9490cf0a702aeb
            - :SecretString:password::}}
      ScalingConfiguration:
        AutoPause: true
        SecondsUntilAutoPause: 600
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - KeystoneNetworkKeystoneDbSg0F752E6D
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneDatabase/KeystoneDatabase/Resource
  KeystoneComputeKeystoneClusterDF9AFA30:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneCluster/Resource
  KeystoneComputeSessionSecretAB144B6C:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        PasswordLength: 32
      Name: KeystoneSession
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/SessionSecret/Resource
  KeystoneComputeKeystoneServiceLBC8B1740A:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - KeystoneComputeKeystoneServiceLBSecurityGroup3004E78E
            - GroupId
      Subnets:
        - Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet1Subnet8B640CC0
        - Ref: KeystoneNetworkKeystoneVPCelbpublicSubnet2Subnet300D85DB
      Type: application
    DependsOn:
      - KeystoneNetworkKeystoneVPCelbpublicSubnet1DefaultRouteE11A0040
      - KeystoneNetworkKeystoneVPCelbpublicSubnet2DefaultRoute31C74E1E
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/LB/Resource
  KeystoneComputeKeystoneServiceLBSecurityGroup3004E78E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB KeystoneJSKeystoneComputeKeystoneServiceLB9EC990EB
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/LB/SecurityGroup/Resource
  KeystoneComputeKeystoneServiceLBSecurityGrouptoKeystoneJSKeystoneComputeKeystoneServiceSecurityGroupA9B21C5830009442D210:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - KeystoneComputeKeystoneServiceLBSecurityGroup3004E78E
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - KeystoneComputeKeystoneServiceSecurityGroupFCA2BAB4
          - GroupId
      FromPort: 3000
      ToPort: 3000
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/LB/SecurityGroup/to KeystoneJSKeystoneComputeKeystoneServiceSecurityGroupA9B21C58:3000
  KeystoneComputeKeystoneServiceLBPublicListenerF82CE8ED:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: KeystoneComputeKeystoneServiceLBPublicListenerECSGroup1C780DFD
          Type: forward
      LoadBalancerArn:
        Ref: KeystoneComputeKeystoneServiceLBC8B1740A
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/LB/PublicListener/Resource
  KeystoneComputeKeystoneServiceLBPublicListenerECSGroup1C780DFD:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /_healthcheck
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/LB/PublicListener/ECSGroup/Resource
  KeystoneComputeKeystoneServiceTaskDefTaskRole71D770E4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/TaskDef/TaskRole/Resource
  KeystoneComputeKeystoneServiceTaskDef3E9786FD:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: DATABASE_URL
              Value:
                Fn::Join:
                  - ""
                  - - "postgres://keystone:{{resolve:secretsmanager:"
                    - Ref: KeystoneDatabaseSecretAttachment0675CA71
                    - :SecretString:password::}}@
                    - Fn::GetAtt:
                        - KeystoneDatabase9A8C5641
                        - Endpoint.Address
                    - :5432/keystone?connect_timeout=300
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:6aaa360c78555df9997c6735b6c00454b457e689307704e30d112f99671ab3e6
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: KeystoneComputeKeystoneServiceTaskDefwebLogGroup0EC49B00
              awslogs-stream-prefix: KeystoneService
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          Secrets:
            - Name: SESSION_SECRET
              ValueFrom:
                Ref: KeystoneComputeSessionSecretAB144B6C
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - KeystoneComputeKeystoneServiceTaskDefExecutionRole12373BBE
          - Arn
      Family: KeystoneJSKeystoneComputeKeystoneServiceTaskDefC50875C9
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - KeystoneComputeKeystoneServiceTaskDefTaskRole71D770E4
          - Arn
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/TaskDef/Resource
  KeystoneComputeKeystoneServiceTaskDefwebLogGroup0EC49B00:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/TaskDef/web/LogGroup/Resource
  KeystoneComputeKeystoneServiceTaskDefExecutionRole12373BBE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/TaskDef/ExecutionRole/Resource
  KeystoneComputeKeystoneServiceTaskDefExecutionRoleDefaultPolicy16DCDEDC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - KeystoneComputeKeystoneServiceTaskDefwebLogGroup0EC49B00
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: KeystoneComputeSessionSecretAB144B6C
        Version: "2012-10-17"
      PolicyName: KeystoneComputeKeystoneServiceTaskDefExecutionRoleDefaultPolicy16DCDEDC
      Roles:
        - Ref: KeystoneComputeKeystoneServiceTaskDefExecutionRole12373BBE
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/TaskDef/ExecutionRole/DefaultPolicy/Resource
  KeystoneComputeKeystoneService47B7DC3D:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: KeystoneComputeKeystoneClusterDF9AFA30
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 300
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 3000
          TargetGroupArn:
            Ref: KeystoneComputeKeystoneServiceLBPublicListenerECSGroup1C780DFD
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - KeystoneComputeKeystoneServiceSecurityGroupFCA2BAB4
                - GroupId
          Subnets:
            - Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet1Subnet672F259E
            - Ref: KeystoneNetworkKeystoneVPCecsprivateSubnet2Subnet5B1FE0A5
      TaskDefinition:
        Ref: KeystoneComputeKeystoneServiceTaskDef3E9786FD
    DependsOn:
      - KeystoneComputeKeystoneServiceLBPublicListenerECSGroup1C780DFD
      - KeystoneComputeKeystoneServiceLBPublicListenerF82CE8ED
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/Service/Service
  KeystoneComputeKeystoneServiceSecurityGroupFCA2BAB4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: KeystoneJS/KeystoneCompute/KeystoneService/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: KeystoneNetworkKeystoneVPC2E4A46E3
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/Service/SecurityGroup/Resource
  KeystoneComputeKeystoneServiceSecurityGroupfromKeystoneJSKeystoneComputeKeystoneServiceLBSecurityGroup678768A43000C293AC7A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - KeystoneComputeKeystoneServiceSecurityGroupFCA2BAB4
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KeystoneComputeKeystoneServiceLBSecurityGroup3004E78E
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: KeystoneJS/KeystoneCompute/KeystoneService/Service/SecurityGroup/from KeystoneJSKeystoneComputeKeystoneServiceLBSecurityGroup678768A4:3000
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STW/bMAz9Lb0r6tztsOPy0RUBis1Iit4ZmfXU2JIhUSkCw/99lOQ4bjvsxKfHR4pfhSy+fpNfbn7Am1+o6njbK+tQ9nsCdRRrazy5oEjs0NvgFIql90jsrbWpxfrF/A7UBYpokjDmwEqTtmYQMXGP6k72z52KvudyLcpwaLTah4PBFHtFOxsIn+DQ4JW/cvy7VRpi5kkcwf22jOYX0AMQvsFZlE6fGF4Tbw2hY3wR5ErG15K43z8tGhJ7VMFpOj84G7pUw3+J+9qh95/orUn8IFzleZqpiinBZjUn9uhO6BpWr5vguUixAYIDeOSMLhe/WY2+QfhE+hYM1Ohkn3+OumyewNVIs4YmwSdPpgfBZgFxr15urDqi27acO206+uQOO+s1WXdecVVMcUuXWuOyR/iT80NclD9u8EUbfVnTR8YaAm3QzbgxNs5C5xMaYazOLzqguD0vl13Hh5MO4NFCtYIGjMLqQzg24EmrhhWHpOBjPfEF/js6NfHuPddp7s2Mmgue+fNQp9XOnoPQ0Mp+Z/MpJ1tajku3l9EgGlvzNB9tPaW44GEYhLEVyld/eyq+y+JOFjevXuuFC4Z0i3KX7V9U7XHwxAMAAA==
    Metadata:
      aws:cdk:path: KeystoneJS/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  KeystoneComputeKeystoneServiceLoadBalancerDNS5ABCF523:
    Value:
      Fn::GetAtt:
        - KeystoneComputeKeystoneServiceLBC8B1740A
        - DNSName
  KeystoneComputeKeystoneServiceServiceURL8386C4A5:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - KeystoneComputeKeystoneServiceLBC8B1740A
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

