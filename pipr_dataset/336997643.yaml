Resources:
  MainVPC83A193D2:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/Resource
  MainVPCPublicSubnet1Subnet683F846E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: MainVPC83A193D2
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet1/Subnet
  MainVPCPublicSubnet1RouteTableC491EE97:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainVPC83A193D2
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet1/RouteTable
  MainVPCPublicSubnet1RouteTableAssociation0BF78FEF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainVPCPublicSubnet1RouteTableC491EE97
      SubnetId:
        Ref: MainVPCPublicSubnet1Subnet683F846E
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet1/RouteTableAssociation
  MainVPCPublicSubnet1DefaultRoute8EBD7B09:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainVPCPublicSubnet1RouteTableC491EE97
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MainVPCIGWEFDF0B26
    DependsOn:
      - MainVPCVPCGW7218CC97
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet1/DefaultRoute
  MainVPCPublicSubnet1EIPC4A1E3F4:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet1/EIP
  MainVPCPublicSubnet1NATGateway34D2E1D6:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MainVPCPublicSubnet1EIPC4A1E3F4
          - AllocationId
      SubnetId:
        Ref: MainVPCPublicSubnet1Subnet683F846E
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet1/NATGateway
  MainVPCPublicSubnet2Subnet1D0ECC59:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: MainVPC83A193D2
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet2/Subnet
  MainVPCPublicSubnet2RouteTableF5D62842:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainVPC83A193D2
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet2/RouteTable
  MainVPCPublicSubnet2RouteTableAssociation3B6E249F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainVPCPublicSubnet2RouteTableF5D62842
      SubnetId:
        Ref: MainVPCPublicSubnet2Subnet1D0ECC59
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet2/RouteTableAssociation
  MainVPCPublicSubnet2DefaultRouteC488F430:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainVPCPublicSubnet2RouteTableF5D62842
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MainVPCIGWEFDF0B26
    DependsOn:
      - MainVPCVPCGW7218CC97
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet2/DefaultRoute
  MainVPCPublicSubnet2EIP56B87963:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet2/EIP
  MainVPCPublicSubnet2NATGateway44E17266:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MainVPCPublicSubnet2EIP56B87963
          - AllocationId
      SubnetId:
        Ref: MainVPCPublicSubnet2Subnet1D0ECC59
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PublicSubnet2/NATGateway
  MainVPCPrivateSubnet1SubnetB0B7E51C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: MainVPC83A193D2
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: InfraStack/MainVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet1/Subnet
  MainVPCPrivateSubnet1RouteTable805163B9:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainVPC83A193D2
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet1/RouteTable
  MainVPCPrivateSubnet1RouteTableAssociation70D12248:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainVPCPrivateSubnet1RouteTable805163B9
      SubnetId:
        Ref: MainVPCPrivateSubnet1SubnetB0B7E51C
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet1/RouteTableAssociation
  MainVPCPrivateSubnet1DefaultRoute3342E5AC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainVPCPrivateSubnet1RouteTable805163B9
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MainVPCPublicSubnet1NATGateway34D2E1D6
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet1/DefaultRoute
  MainVPCPrivateSubnet2SubnetC36A4A67:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: MainVPC83A193D2
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: InfraStack/MainVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet2/Subnet
  MainVPCPrivateSubnet2RouteTable3B610791:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainVPC83A193D2
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet2/RouteTable
  MainVPCPrivateSubnet2RouteTableAssociation5033DB41:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainVPCPrivateSubnet2RouteTable3B610791
      SubnetId:
        Ref: MainVPCPrivateSubnet2SubnetC36A4A67
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet2/RouteTableAssociation
  MainVPCPrivateSubnet2DefaultRouteF4EB726C:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainVPCPrivateSubnet2RouteTable3B610791
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MainVPCPublicSubnet2NATGateway44E17266
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/PrivateSubnet2/DefaultRoute
  MainVPCIGWEFDF0B26:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InfraStack/MainVPC
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/IGW
  MainVPCVPCGW7218CC97:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MainVPC83A193D2
      InternetGatewayId:
        Ref: MainVPCIGWEFDF0B26
    Metadata:
      aws:cdk:path: InfraStack/MainVPC/VPCGW
  MainCluster834123E8:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Resource
  MainClusterVpcDED4E9F2:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/Resource
  MainClusterVpcPublicSubnet1SubnetF2F34363:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet1/Subnet
  MainClusterVpcPublicSubnet1RouteTable834F749B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet1/RouteTable
  MainClusterVpcPublicSubnet1RouteTableAssociation1F8A6CAD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPublicSubnet1RouteTable834F749B
      SubnetId:
        Ref: MainClusterVpcPublicSubnet1SubnetF2F34363
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet1/RouteTableAssociation
  MainClusterVpcPublicSubnet1DefaultRoute83A65F1F:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPublicSubnet1RouteTable834F749B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MainClusterVpcIGW3D5B0F62
    DependsOn:
      - MainClusterVpcVPCGW8C25407A
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet1/DefaultRoute
  MainClusterVpcPublicSubnet1EIP1BA0E7D6:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet1/EIP
  MainClusterVpcPublicSubnet1NATGatewayC919E92D:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MainClusterVpcPublicSubnet1EIP1BA0E7D6
          - AllocationId
      SubnetId:
        Ref: MainClusterVpcPublicSubnet1SubnetF2F34363
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet1/NATGateway
  MainClusterVpcPublicSubnet2SubnetB5D5AA49:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet2/Subnet
  MainClusterVpcPublicSubnet2RouteTable8CCE3107:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet2/RouteTable
  MainClusterVpcPublicSubnet2RouteTableAssociationE0A99B7C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPublicSubnet2RouteTable8CCE3107
      SubnetId:
        Ref: MainClusterVpcPublicSubnet2SubnetB5D5AA49
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet2/RouteTableAssociation
  MainClusterVpcPublicSubnet2DefaultRoute6A9D200C:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPublicSubnet2RouteTable8CCE3107
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MainClusterVpcIGW3D5B0F62
    DependsOn:
      - MainClusterVpcVPCGW8C25407A
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet2/DefaultRoute
  MainClusterVpcPublicSubnet2EIP7E55F7BD:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet2/EIP
  MainClusterVpcPublicSubnet2NATGateway3C284E74:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MainClusterVpcPublicSubnet2EIP7E55F7BD
          - AllocationId
      SubnetId:
        Ref: MainClusterVpcPublicSubnet2SubnetB5D5AA49
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PublicSubnet2/NATGateway
  MainClusterVpcPrivateSubnet1SubnetE045FCCF:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet1/Subnet
  MainClusterVpcPrivateSubnet1RouteTableC04DC9B2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet1/RouteTable
  MainClusterVpcPrivateSubnet1RouteTableAssociationD1A778C8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPrivateSubnet1RouteTableC04DC9B2
      SubnetId:
        Ref: MainClusterVpcPrivateSubnet1SubnetE045FCCF
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet1/RouteTableAssociation
  MainClusterVpcPrivateSubnet1DefaultRoute76D566E1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPrivateSubnet1RouteTableC04DC9B2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MainClusterVpcPublicSubnet1NATGatewayC919E92D
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet1/DefaultRoute
  MainClusterVpcPrivateSubnet2Subnet65ECD8E1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet2/Subnet
  MainClusterVpcPrivateSubnet2RouteTableAB4074B4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet2/RouteTable
  MainClusterVpcPrivateSubnet2RouteTableAssociationD3DAB158:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPrivateSubnet2RouteTableAB4074B4
      SubnetId:
        Ref: MainClusterVpcPrivateSubnet2Subnet65ECD8E1
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet2/RouteTableAssociation
  MainClusterVpcPrivateSubnet2DefaultRouteE14C0373:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MainClusterVpcPrivateSubnet2RouteTableAB4074B4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MainClusterVpcPublicSubnet2NATGateway3C284E74
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/PrivateSubnet2/DefaultRoute
  MainClusterVpcIGW3D5B0F62:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InfraStack/MainCluster/Vpc
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/IGW
  MainClusterVpcVPCGW8C25407A:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MainClusterVpcDED4E9F2
      InternetGatewayId:
        Ref: MainClusterVpcIGW3D5B0F62
    Metadata:
      aws:cdk:path: InfraStack/MainCluster/Vpc/VPCGW
  ec2ForEcsTaskInstanceSecurityGroupDD79C8D9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: InfraStack/ec2ForEcsTask/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: InfraStack/ec2ForEcsTask
      VpcId:
        Ref: MainVPC83A193D2
    Metadata:
      aws:cdk:path: InfraStack/ec2ForEcsTask/InstanceSecurityGroup/Resource
  ec2ForEcsTaskInstanceRole1BF8CD4C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: InfraStack/ec2ForEcsTask
    Metadata:
      aws:cdk:path: InfraStack/ec2ForEcsTask/InstanceRole/Resource
  ec2ForEcsTaskInstanceProfile5903FFE5:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2ForEcsTaskInstanceRole1BF8CD4C
    Metadata:
      aws:cdk:path: InfraStack/ec2ForEcsTask/InstanceProfile
  ec2ForEcsTask4CE1D095:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: ec2ForEcsTaskInstanceProfile5903FFE5
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      SecurityGroupIds:
        - Fn::GetAtt:
            - ec2ForEcsTaskInstanceSecurityGroupDD79C8D9
            - GroupId
      SubnetId:
        Ref: MainVPCPrivateSubnet1SubnetB0B7E51C
      Tags:
        - Key: Name
          Value: InfraStack/ec2ForEcsTask
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - ec2ForEcsTaskInstanceRole1BF8CD4C
    Metadata:
      aws:cdk:path: InfraStack/ec2ForEcsTask/Resource
  DiscordBotRepositoryAA4C1BD1:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: InfraStack/DiscordBotRepository/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.88.0,@aws-cdk/aws-applicationautoscaling=1.88.0,@aws-cdk/aws-autoscaling=1.88.0,@aws-cdk/aws-autoscaling-common=1.88.0,@aws-cdk/aws-autoscaling-hooktargets=1.88.0,@aws-cdk/aws-cloudwatch=1.88.0,@aws-cdk/aws-codeguruprofiler=1.88.0,@aws-cdk/aws-ec2=1.88.0,@aws-cdk/aws-ecr=1.88.0,@aws-cdk/aws-ecr-assets=1.88.0,@aws-cdk/aws-ecs=1.88.0,@aws-cdk/aws-elasticloadbalancingv2=1.88.0,@aws-cdk/aws-events=1.88.0,@aws-cdk/aws-iam=1.88.0,@aws-cdk/aws-kms=1.88.0,@aws-cdk/aws-lambda=1.88.0,@aws-cdk/aws-logs=1.88.0,@aws-cdk/aws-s3=1.88.0,@aws-cdk/aws-s3-assets=1.88.0,@aws-cdk/aws-servicediscovery=1.88.0,@aws-cdk/aws-sns=1.88.0,@aws-cdk/aws-sns-subscriptions=1.88.0,@aws-cdk/aws-sqs=1.88.0,@aws-cdk/aws-ssm=1.88.0,@aws-cdk/cloud-assembly-schema=1.88.0,@aws-cdk/core=1.88.0,@aws-cdk/cx-api=1.88.0,@aws-cdk/region-info=1.88.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: InfraStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

