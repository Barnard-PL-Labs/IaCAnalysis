Resources:
  blogIsolationTable230EC315:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: PK1
          AttributeType: S
        - AttributeName: SK1
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: gsi
          KeySchema:
            - AttributeName: PK1
              KeyType: HASH
            - AttributeName: SK1
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: blogIsolationTable
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationTable/Resource
  blogIsolationInitFnServiceRole00037104:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationInitFn/ServiceRole/Resource
  blogIsolationInitFnServiceRoleDefaultPolicy2AAF9324:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - blogIsolationTable230EC315
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - blogIsolationTable230EC315
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: blogIsolationInitFnServiceRoleDefaultPolicy2AAF9324
      Roles:
        - Ref: blogIsolationInitFnServiceRole00037104
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationInitFn/ServiceRole/DefaultPolicy/Resource
  blogIsolationInitFnED4E3DEE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142S3Bucket6EA67ECF
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142S3VersionKey688AF031
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142S3VersionKey688AF031
      Role:
        Fn::GetAtt:
          - blogIsolationInitFnServiceRole00037104
          - Arn
      Environment:
        Variables:
          TableName: blogIsolationTable
          TableArn:
            Fn::GetAtt:
              - blogIsolationTable230EC315
              - Arn
          MainTenant: Tenant#1
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - blogIsolationInitFnServiceRoleDefaultPolicy2AAF9324
      - blogIsolationInitFnServiceRole00037104
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationInitFn/Resource
      aws:asset:path: asset.368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142
      aws:asset:property: Code
  blogIsolationGrantFnServiceRoleD6DE68ED:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationGrantFn/ServiceRole/Resource
  blogIsolationGrantFnServiceRoleDefaultPolicyF1D518F4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - blogIsolationTable230EC315
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - blogIsolationTable230EC315
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: blogIsolationGrantFnServiceRoleDefaultPolicyF1D518F4
      Roles:
        - Ref: blogIsolationGrantFnServiceRoleD6DE68ED
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationGrantFn/ServiceRole/DefaultPolicy/Resource
  blogIsolationGrantFn52BAD062:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3BucketD26CAE44
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3VersionKey33B56106
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3VersionKey33B56106
      Role:
        Fn::GetAtt:
          - blogIsolationGrantFnServiceRoleD6DE68ED
          - Arn
      Environment:
        Variables:
          TableName: blogIsolationTable
          TableArn:
            Fn::GetAtt:
              - blogIsolationTable230EC315
              - Arn
          MainTenant: Tenant#1
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          AuthRole:
            Fn::GetAtt:
              - grantFnRole0FE5CF46
              - Arn
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - blogIsolationGrantFnServiceRoleDefaultPolicyF1D518F4
      - blogIsolationGrantFnServiceRoleD6DE68ED
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationGrantFn/Resource
      aws:asset:path: asset.8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8b
      aws:asset:property: Code
  blogIsolationNoGrantFnServiceRole969F5D11:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationNoGrantFn/ServiceRole/Resource
  blogIsolationNoGrantFn238040C4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3BucketD26CAE44
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3VersionKey33B56106
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3VersionKey33B56106
      Role:
        Fn::GetAtt:
          - blogIsolationNoGrantFnServiceRole969F5D11
          - Arn
      Environment:
        Variables:
          TableName: blogIsolationTable
          TableArn:
            Fn::GetAtt:
              - blogIsolationTable230EC315
              - Arn
          MainTenant: Tenant#1
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          AuthRole:
            Fn::GetAtt:
              - noGrantFnRole423A84D4
              - Arn
      Handler: index.handler
      Runtime: nodejs12.x
    DependsOn:
      - blogIsolationNoGrantFnServiceRole969F5D11
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationNoGrantFn/Resource
      aws:asset:path: asset.8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8b
      aws:asset:property: Code
  grantFnRole0FE5CF46:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - blogIsolationGrantFnServiceRoleD6DE68ED
                  - Arn
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: blogIsolationStack/grantFnRole/Resource
  grantFnRoleDefaultPolicy4FF118C8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - blogIsolationTable230EC315
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - blogIsolationTable230EC315
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: grantFnRoleDefaultPolicy4FF118C8
      Roles:
        - Ref: grantFnRole0FE5CF46
    Metadata:
      aws:cdk:path: blogIsolationStack/grantFnRole/DefaultPolicy/Resource
  noGrantFnRole423A84D4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - blogIsolationNoGrantFnServiceRole969F5D11
                  - Arn
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: blogIsolationStack/noGrantFnRole/Resource
  blogIsolationApi0E03FFD8:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: blogIsolationApi
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Resource
  blogIsolationApiCloudWatchRole1F33D0B1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/CloudWatchRole/Resource
  blogIsolationApiAccountE5BC517D:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - blogIsolationApiCloudWatchRole1F33D0B1
          - Arn
    DependsOn:
      - blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Account
  blogIsolationApiDeployment85E22ED9a935eddb5369b0e031d38aac624e0e40:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
      Description: Automatically created by the RestApi construct
    DependsOn:
      - blogIsolationApigrantwhatgsiGET7659D777
      - blogIsolationApigrantwhatgsi45CCE2E0
      - blogIsolationApigrantwhatGET976140F4
      - blogIsolationApigrantwhatF94B5AB9
      - blogIsolationApigrantF522B891
      - blogIsolationApiinitGET0F14200A
      - blogIsolationApiinitFC4E762D
      - blogIsolationApinoGrantwhatgsiGET4FC1914E
      - blogIsolationApinoGrantwhatgsi474729A5
      - blogIsolationApinoGrantwhatGET27676849
      - blogIsolationApinoGrantwhatC6E7EED7
      - blogIsolationApinoGrant82BFF917
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Deployment/Resource
  blogIsolationApiDeploymentStageprodC5CB1FC6:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
      DeploymentId:
        Ref: blogIsolationApiDeployment85E22ED9a935eddb5369b0e031d38aac624e0e40
      StageName: prod
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/DeploymentStage.prod/Resource
  blogIsolationApiinitFC4E762D:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - blogIsolationApi0E03FFD8
          - RootResourceId
      PathPart: init
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/init/Resource
  blogIsolationApiinitGETApiPermissionblogIsolationStackblogIsolationApi5C32F2FBGETinit52F0B85F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationInitFnED4E3DEE
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /
            - Ref: blogIsolationApiDeploymentStageprodC5CB1FC6
            - /GET/init
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/init/GET/ApiPermission.blogIsolationStackblogIsolationApi5C32F2FB.GET..init
  blogIsolationApiinitGETApiPermissionTestblogIsolationStackblogIsolationApi5C32F2FBGETinit7C746F47:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationInitFnED4E3DEE
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /test-invoke-stage/GET/init
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/init/GET/ApiPermission.Test.blogIsolationStackblogIsolationApi5C32F2FB.GET..init
  blogIsolationApiinitGET0F14200A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: blogIsolationApiinitFC4E762D
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - blogIsolationInitFnED4E3DEE
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/init/GET/Resource
  blogIsolationApigrantF522B891:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - blogIsolationApi0E03FFD8
          - RootResourceId
      PathPart: grant
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/Resource
  blogIsolationApigrantwhatF94B5AB9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: blogIsolationApigrantF522B891
      PathPart: "{what}"
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/Resource
  blogIsolationApigrantwhatGETApiPermissionblogIsolationStackblogIsolationApi5C32F2FBGETgrantwhat4BA777C1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationGrantFn52BAD062
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /
            - Ref: blogIsolationApiDeploymentStageprodC5CB1FC6
            - /GET/grant/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/GET/ApiPermission.blogIsolationStackblogIsolationApi5C32F2FB.GET..grant.{what}
  blogIsolationApigrantwhatGETApiPermissionTestblogIsolationStackblogIsolationApi5C32F2FBGETgrantwhatB12C86FA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationGrantFn52BAD062
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /test-invoke-stage/GET/grant/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/GET/ApiPermission.Test.blogIsolationStackblogIsolationApi5C32F2FB.GET..grant.{what}
  blogIsolationApigrantwhatGET976140F4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: blogIsolationApigrantwhatF94B5AB9
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - blogIsolationGrantFn52BAD062
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/GET/Resource
  blogIsolationApigrantwhatgsi45CCE2E0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: blogIsolationApigrantwhatF94B5AB9
      PathPart: "{gsi}"
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/{gsi}/Resource
  blogIsolationApigrantwhatgsiGETApiPermissionblogIsolationStackblogIsolationApi5C32F2FBGETgrantwhatgsiE726A6E7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationGrantFn52BAD062
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /
            - Ref: blogIsolationApiDeploymentStageprodC5CB1FC6
            - /GET/grant/*/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/{gsi}/GET/ApiPermission.blogIsolationStackblogIsolationApi5C32F2FB.GET..grant.{what}.{gsi}
  blogIsolationApigrantwhatgsiGETApiPermissionTestblogIsolationStackblogIsolationApi5C32F2FBGETgrantwhatgsi8EDA1584:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationGrantFn52BAD062
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /test-invoke-stage/GET/grant/*/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/{gsi}/GET/ApiPermission.Test.blogIsolationStackblogIsolationApi5C32F2FB.GET..grant.{what}.{gsi}
  blogIsolationApigrantwhatgsiGET7659D777:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: blogIsolationApigrantwhatgsi45CCE2E0
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - blogIsolationGrantFn52BAD062
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/grant/{what}/{gsi}/GET/Resource
  blogIsolationApinoGrant82BFF917:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - blogIsolationApi0E03FFD8
          - RootResourceId
      PathPart: noGrant
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/Resource
  blogIsolationApinoGrantwhatC6E7EED7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: blogIsolationApinoGrant82BFF917
      PathPart: "{what}"
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/Resource
  blogIsolationApinoGrantwhatGETApiPermissionblogIsolationStackblogIsolationApi5C32F2FBGETnoGrantwhatA72ADB4C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationNoGrantFn238040C4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /
            - Ref: blogIsolationApiDeploymentStageprodC5CB1FC6
            - /GET/noGrant/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/GET/ApiPermission.blogIsolationStackblogIsolationApi5C32F2FB.GET..noGrant.{what}
  blogIsolationApinoGrantwhatGETApiPermissionTestblogIsolationStackblogIsolationApi5C32F2FBGETnoGrantwhat03D09617:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationNoGrantFn238040C4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /test-invoke-stage/GET/noGrant/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/GET/ApiPermission.Test.blogIsolationStackblogIsolationApi5C32F2FB.GET..noGrant.{what}
  blogIsolationApinoGrantwhatGET27676849:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: blogIsolationApinoGrantwhatC6E7EED7
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - blogIsolationNoGrantFn238040C4
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/GET/Resource
  blogIsolationApinoGrantwhatgsi474729A5:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: blogIsolationApinoGrantwhatC6E7EED7
      PathPart: "{gsi}"
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/{gsi}/Resource
  blogIsolationApinoGrantwhatgsiGETApiPermissionblogIsolationStackblogIsolationApi5C32F2FBGETnoGrantwhatgsi857EACA7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationNoGrantFn238040C4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /
            - Ref: blogIsolationApiDeploymentStageprodC5CB1FC6
            - /GET/noGrant/*/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/{gsi}/GET/ApiPermission.blogIsolationStackblogIsolationApi5C32F2FB.GET..noGrant.{what}.{gsi}
  blogIsolationApinoGrantwhatgsiGETApiPermissionTestblogIsolationStackblogIsolationApi5C32F2FBGETnoGrantwhatgsi679D5856:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - blogIsolationNoGrantFn238040C4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:036406153779:"
            - Ref: blogIsolationApi0E03FFD8
            - /test-invoke-stage/GET/noGrant/*/*
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/{gsi}/GET/ApiPermission.Test.blogIsolationStackblogIsolationApi5C32F2FB.GET..noGrant.{what}.{gsi}
  blogIsolationApinoGrantwhatgsiGET4FC1914E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: blogIsolationApinoGrantwhatgsi474729A5
      RestApiId:
        Ref: blogIsolationApi0E03FFD8
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - blogIsolationNoGrantFn238040C4
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: blogIsolationStack/blogIsolationApi/Default/noGrant/{what}/{gsi}/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.85.0,@aws-cdk/aws-apigateway=1.85.0,@aws-cdk/aws-applicationautoscaling=1.85.0,@aws-cdk/aws-autoscaling-common=1.85.0,@aws-cdk/aws-cloudwatch=1.85.0,@aws-cdk/aws-codeguruprofiler=1.85.0,@aws-cdk/aws-dynamodb=1.85.0,@aws-cdk/aws-ec2=1.85.0,@aws-cdk/aws-ecr=1.85.0,@aws-cdk/aws-ecr-assets=1.85.0,@aws-cdk/aws-events=1.85.0,@aws-cdk/aws-iam=1.85.0,@aws-cdk/aws-kms=1.85.0,@aws-cdk/aws-lambda=1.85.0,@aws-cdk/aws-lambda-nodejs=1.85.0,@aws-cdk/aws-logs=1.85.0,@aws-cdk/aws-s3=1.85.0,@aws-cdk/aws-s3-assets=1.85.0,@aws-cdk/aws-sqs=1.85.0,@aws-cdk/aws-ssm=1.85.0,@aws-cdk/cloud-assembly-schema=1.85.0,@aws-cdk/core=1.85.0,@aws-cdk/custom-resources=1.85.0,@aws-cdk/cx-api=1.85.0,@aws-cdk/region-info=1.85.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: blogIsolationStack/CDKMetadata/Default
Parameters:
  AssetParameters368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142S3Bucket6EA67ECF:
    Type: String
    Description: S3 bucket for asset "368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142"
  AssetParameters368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142S3VersionKey688AF031:
    Type: String
    Description: S3 key for asset version "368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142"
  AssetParameters368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142ArtifactHash64172132:
    Type: String
    Description: Artifact hash for asset "368c59f6adf92e5009581f9c3a2a263f7f705e5568e73134c984973c195b0142"
  AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3BucketD26CAE44:
    Type: String
    Description: S3 bucket for asset "8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8b"
  AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bS3VersionKey33B56106:
    Type: String
    Description: S3 key for asset version "8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8b"
  AssetParameters8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8bArtifactHashB4299449:
    Type: String
    Description: Artifact hash for asset "8fe162411b1e6860bacf78cab835712c74e73df0d3ab6f58692bd9c2ce5f3d8b"
Outputs:
  blogIsolationApiEndpoint237C4FAE:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: blogIsolationApi0E03FFD8
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: blogIsolationApiDeploymentStageprodC5CB1FC6
          - /

