Resources:
  userpoolpostconfirmationServiceRoleA484034D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/post-confirmation/ServiceRole/Resource
  userpoolpostconfirmation42339188:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1
        S3Key: 2e78f11b246ad96d0ec92ff57a00914762d46db8f970b7a8272d8f5e19ee2256.zip
      Role:
        Fn::GetAtt:
          - userpoolpostconfirmationServiceRoleA484034D
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 6
    DependsOn:
      - userpoolpostconfirmationServiceRoleA484034D
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/post-confirmation/Resource
      aws:asset:path: asset.2e78f11b246ad96d0ec92ff57a00914762d46db8f970b7a8272d8f5e19ee2256
      aws:asset:is-bundled: true
      aws:asset:property: Code
  userpoolpostconfirmationPostConfirmationCognito107B19E3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - userpoolpostconfirmation42339188
          - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - userpool8A69F308
          - Arn
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/post-confirmation/PostConfirmationCognito
  userpoolcustommessagesServiceRoleC78F5ABA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/custom-messages/ServiceRole/Resource
  userpoolcustommessages663F434B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1
        S3Key: 4c42dae98dba93b05b63a8b219a78d4f5669e7c07d45432a6624e5fe252eeaa8.zip
      Role:
        Fn::GetAtt:
          - userpoolcustommessagesServiceRoleC78F5ABA
          - Arn
      Environment:
        Variables:
          FRONTEND_BASE_URL: http://localhost:3000
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 6
    DependsOn:
      - userpoolcustommessagesServiceRoleC78F5ABA
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/custom-messages/Resource
      aws:asset:path: asset.4c42dae98dba93b05b63a8b219a78d4f5669e7c07d45432a6624e5fe252eeaa8
      aws:asset:is-bundled: true
      aws:asset:property: Code
  userpoolcustommessagesCustomMessageCognito48C3827B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - userpoolcustommessages663F434B
          - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - userpool8A69F308
          - Arn
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/custom-messages/CustomMessageCognito
  userpool8A69F308:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      LambdaConfig:
        CustomMessage:
          Fn::GetAtt:
            - userpoolcustommessages663F434B
            - Arn
        PostConfirmation:
          Fn::GetAtt:
            - userpoolpostconfirmation42339188
            - Arn
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
      Schema:
        - Mutable: true
          Name: given_name
          Required: true
        - Mutable: true
          Name: family_name
          Required: true
        - AttributeDataType: String
          Mutable: true
          Name: bio
        - AttributeDataType: String
          Mutable: true
          Name: country
        - AttributeDataType: String
          Mutable: true
          Name: city
        - AttributeDataType: String
          Mutable: true
          Name: isAdmin
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      UserPoolName: amplify-react-auth-dev
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/userpool/Resource
  userpoolpostconfirmtriggerpolicy51FD5F2A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: cognito-idp:AdminAddUserToGroup
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - userpool8A69F308
                - Arn
        Version: "2012-10-17"
      PolicyName: userpoolpostconfirmtriggerpolicy51FD5F2A
      Roles:
        - Ref: userpoolpostconfirmationServiceRoleA484034D
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpool/post-confirm-trigger-policy/Resource
  userpoolclientuserpoolclient87E78319:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: userpool8A69F308
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED
      ReadAttributes:
        - address
        - birthdate
        - custom:bio
        - custom:city
        - custom:country
        - custom:isAdmin
        - email
        - email_verified
        - family_name
        - gender
        - given_name
        - locale
        - middle_name
        - name
        - nickname
        - phone_number
        - phone_number_verified
        - picture
        - preferred_username
        - profile
        - updated_at
        - website
        - zoneinfo
      SupportedIdentityProviders:
        - COGNITO
      WriteAttributes:
        - address
        - birthdate
        - custom:bio
        - custom:city
        - custom:country
        - email
        - family_name
        - gender
        - given_name
        - locale
        - middle_name
        - name
        - nickname
        - phone_number
        - picture
        - preferred_username
        - profile
        - updated_at
        - website
        - zoneinfo
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/userpoolclient/userpool-client/Resource
  identitypool51BC8967:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: userpoolclientuserpoolclient87E78319
          ProviderName:
            Fn::GetAtt:
              - userpool8A69F308
              - ProviderName
      IdentityPoolName: amplify-react-auth-dev
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/identitypool/identitypool
  identitypoolusersgrouprole190A0B0E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: identitypool51BC8967
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
      Description: Default role for authenticated users
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/identitypool/users-group-role/Resource
  identitypoolanonymousgrouproleD4DCACB8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: identitypool51BC8967
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
      Description: Default role for anonymous users
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/identitypool/anonymous-group-role/Resource
  identitypooladminsgrouproleC10AF2DB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: identitypool51BC8967
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
      Description: Default role for administrator users
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/identitypool/admins-group-role/Resource
  identitypoolusersgroupE9E80508:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId:
        Ref: userpool8A69F308
      Description: The default group for authenticated users
      GroupName: Users
      Precedence: 3
      RoleArn:
        Fn::GetAtt:
          - identitypoolusersgrouprole190A0B0E
          - Arn
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/identitypool/users-group
  identitypooladminsgroup76F05E9F:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId:
        Ref: userpool8A69F308
      Description: The group for admin users with special privileges
      GroupName: Admins
      Precedence: 2
      RoleArn:
        Fn::GetAtt:
          - identitypooladminsgrouproleC10AF2DB
          - Arn
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/identitypool/admins-group
  identitypoolidentitypoolroleattachmentF427DA81:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: identitypool51BC8967
      RoleMappings:
        mapping:
          AmbiguousRoleResolution: AuthenticatedRole
          IdentityProvider:
            Fn::Join:
              - ""
              - - cognito-idp.us-east-1.amazonaws.com/
                - Ref: userpool8A69F308
                - ":"
                - Ref: userpoolclientuserpoolclient87E78319
          Type: Token
      Roles:
        authenticated:
          Fn::GetAtt:
            - identitypoolusersgrouprole190A0B0E
            - Arn
        unauthenticated:
          Fn::GetAtt:
            - identitypoolanonymousgrouproleD4DCACB8
            - Arn
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/identitypool/identity-pool-role-attachment
  httpapi6913BD52:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
        AllowMethods:
          - OPTIONS
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
        AllowOrigins:
          - http://localhost:3000
      Description: ___dev___ Api for amplify-react-auth
      Name: amplify-react-auth-api-dev
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/http-api/api/Resource
  httpapiDefaultStage2C01D0D2:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: httpapi6913BD52
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/http-api/api/DefaultStage/Resource
  httpapiGETgetpresignedurls3getpresignedurls3integration62E95D84:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: httpapi6913BD52
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - getpresignedurls351D4FCEE
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/http-api/api/GET--get-presigned-url-s3/get-presigned-url-s3-integration/Resource
  httpapiGETgetpresignedurls3getpresignedurls3integrationPermission3FB29DF5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getpresignedurls351D4FCEE
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: httpapi6913BD52
            - /*/*/get-presigned-url-s3
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/http-api/api/GET--get-presigned-url-s3/get-presigned-url-s3-integration-Permission
  httpapiGETgetpresignedurls3AA7A3F8A:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: httpapi6913BD52
      RouteKey: GET /get-presigned-url-s3
      AuthorizationType: JWT
      AuthorizerId:
        Ref: httpapiapicognitoauthorizerCDC9F106
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: httpapiGETgetpresignedurls3getpresignedurls3integration62E95D84
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/http-api/api/GET--get-presigned-url-s3/Resource
  httpapiapicognitoauthorizerCDC9F106:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: httpapi6913BD52
      AuthorizerType: JWT
      Name: api-cognito-authorizer
      IdentitySource:
        - $request.header.Authorization
      JwtConfiguration:
        Audience:
          - Ref: userpoolclientuserpoolclient87E78319
        Issuer:
          Fn::Join:
            - ""
            - - https://cognito-idp.us-east-1.amazonaws.com/
              - Ref: userpool8A69F308
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/http-api/api/api-cognito-authorizer/Resource
  s3bucket5E7B98C4:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - POST
              - PUT
            AllowedOrigins:
              - http://localhost:3000
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/s3-bucket/s3-bucket/Resource
  getpresignedurls3ServiceRole39DE2335:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/get-presigned-url-s3/get-presigned-url-s3/ServiceRole/Resource
  getpresignedurls3ServiceRoleDefaultPolicyC3400D9F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - s3bucket5E7B98C4
                      - Arn
                  - /*
          - Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - s3bucket5E7B98C4
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: getpresignedurls3ServiceRoleDefaultPolicyC3400D9F
      Roles:
        - Ref: getpresignedurls3ServiceRole39DE2335
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/get-presigned-url-s3/get-presigned-url-s3/ServiceRole/DefaultPolicy/Resource
  getpresignedurls351D4FCEE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1
        S3Key: 72674d7e844c08fb0b4d9d55f9e5f474d8d193fbba18ed2ce3e55d46e72675bb.zip
      Role:
        Fn::GetAtt:
          - getpresignedurls3ServiceRole39DE2335
          - Arn
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: userpool8A69F308
          IDENTITY_POOL_ID:
            Ref: identitypool51BC8967
          ACCOUNT_ID:
            Ref: AWS::AccountId
          BUCKET_NAME:
            Ref: s3bucket5E7B98C4
          REGION: us-east-1
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 5
    DependsOn:
      - getpresignedurls3ServiceRoleDefaultPolicyC3400D9F
      - getpresignedurls3ServiceRole39DE2335
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/get-presigned-url-s3/get-presigned-url-s3/Resource
      aws:asset:path: asset.72674d7e844c08fb0b4d9d55f9e5f474d8d193fbba18ed2ce3e55d46e72675bb
      aws:asset:is-bundled: true
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11RwXLCIBD9Fu8EY3rpsdGZtl5aJ52eHSQ0ogQysOhYhn8vS9RmPL23j1328ahoVdJQztjZFbw9FkruaPgCxo8kSdugWL9r2VabVhwc/cjw6jUHaTSRrKehMUqQ1Y/OuDFK8guWI4vEPW2ZcwIcrRFSTcPS86OAJXOCjBQHRhbJuJGGJN0X4X3C9tK5VEXCTaclGBq+nbAbYxQ23PmNrJQUGqZH/8q6TUTC5XH4zRo/PDbgy2pImez7JEbCBtkxEGd2OVXZZz1InEmxdTmKtQbRWXaz3hgPWa897I2Vv8LGSHIcOCJ1h4efHgafzTXCGW+5iKQsmBr2jJazl+sHzRGnBq4d4R1gQB+IoxFk42pkU0+5d+oFv5ce3Py0eKaLii5mBydlYX2KoBe0GfEPltxX1ysCAAA=
    Metadata:
      aws:cdk:path: amplify-react-auth-dev/CDKMetadata/Default
Outputs:
  userPoolId:
    Value:
      Ref: userpool8A69F308
  userPoolClientId:
    Value:
      Ref: userpoolclientuserpoolclient87E78319
  identityPoolId:
    Value:
      Ref: identitypool51BC8967
  region:
    Value: us-east-1
  apiUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: httpapi6913BD52
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
  bucketName:
    Value:
      Ref: s3bucket5E7B98C4
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

