Resources:
  LoggerConsoleServiceRole7FB4FC82:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerConsole/ServiceRole/Resource
  LoggerConsoleServiceRoleDefaultPolicyA729C544:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LoggerConsoleServiceRoleDefaultPolicyA729C544
      Roles:
        - Ref: LoggerConsoleServiceRole7FB4FC82
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerConsole/ServiceRole/DefaultPolicy/Resource
  LoggerConsole82E00D14:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 6511d9c89bcbb94b084dfb82e136b40314d4a87a18b2bb9485521d80498a9b2c.zip
      Role:
        Fn::GetAtt:
          - LoggerConsoleServiceRole7FB4FC82
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: LoggerConsole
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - LoggerConsoleServiceRoleDefaultPolicyA729C544
      - LoggerConsoleServiceRole7FB4FC82
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerConsole/Resource
      aws:asset:path: asset.6511d9c89bcbb94b084dfb82e136b40314d4a87a18b2bb9485521d80498a9b2c
      aws:asset:is-bundled: true
      aws:asset:property: Code
  LoggerConsoleLogRetention6420ED88:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: LoggerConsole82E00D14
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerConsole/LogRetention/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:DeleteRetentionPolicy
              - logs:PutRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ae967c277459e8936ac565a71d34ea5dcff7b98e556466c36a4d6da023a2d9aa.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.ae967c277459e8936ac565a71d34ea5dcff7b98e556466c36a4d6da023a2d9aa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LoggerPowertoolsServiceRoleEF3A31F5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerPowertools/ServiceRole/Resource
  LoggerPowertoolsServiceRoleDefaultPolicy1BD71322:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LoggerPowertoolsServiceRoleDefaultPolicy1BD71322
      Roles:
        - Ref: LoggerPowertoolsServiceRoleEF3A31F5
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerPowertools/ServiceRole/DefaultPolicy/Resource
  LoggerPowertoolsCCA9AAF0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 738e3991ed53e36c53e3f7065cfa7b64d2db8d52b0095e09b0caf76732314d4b.zip
      Role:
        Fn::GetAtt:
          - LoggerPowertoolsServiceRoleEF3A31F5
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: LoggerPowertools
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - LoggerPowertoolsServiceRoleDefaultPolicy1BD71322
      - LoggerPowertoolsServiceRoleEF3A31F5
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerPowertools/Resource
      aws:asset:path: asset.738e3991ed53e36c53e3f7065cfa7b64d2db8d52b0095e09b0caf76732314d4b
      aws:asset:is-bundled: true
      aws:asset:property: Code
  LoggerPowertoolsLogRetention52C8E7EB:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: LoggerPowertoolsCCA9AAF0
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerPowertools/LogRetention/Resource
  LoggerWinstonServiceRoleA8065552:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerWinston/ServiceRole/Resource
  LoggerWinstonServiceRoleDefaultPolicy29C8F6FA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LoggerWinstonServiceRoleDefaultPolicy29C8F6FA
      Roles:
        - Ref: LoggerWinstonServiceRoleA8065552
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerWinston/ServiceRole/DefaultPolicy/Resource
  LoggerWinston532D2976:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f9d437111880e649ff56cf8998e0bf767ca019b42e937825c1e6fdf165e0f3cd.zip
      Role:
        Fn::GetAtt:
          - LoggerWinstonServiceRoleA8065552
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: LoggerWinston
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - LoggerWinstonServiceRoleDefaultPolicy29C8F6FA
      - LoggerWinstonServiceRoleA8065552
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerWinston/Resource
      aws:asset:path: asset.f9d437111880e649ff56cf8998e0bf767ca019b42e937825c1e6fdf165e0f3cd
      aws:asset:is-bundled: true
      aws:asset:property: Code
  LoggerWinstonLogRetention5C78270C:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: LoggerWinston532D2976
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/LoggerWinston/LogRetention/Resource
  MetricsEMFServiceRoleA6A26C37:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsEMF/ServiceRole/Resource
  MetricsEMFServiceRoleDefaultPolicy25165A59:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MetricsEMFServiceRoleDefaultPolicy25165A59
      Roles:
        - Ref: MetricsEMFServiceRoleA6A26C37
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsEMF/ServiceRole/DefaultPolicy/Resource
  MetricsEMF19A7AC03:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: b9387ec7bf8d6dc79a703c273f14618f6268d2f0445b88d0ae96bc4ff459f251.zip
      Role:
        Fn::GetAtt:
          - MetricsEMFServiceRoleA6A26C37
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: MetricsEMF
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - MetricsEMFServiceRoleDefaultPolicy25165A59
      - MetricsEMFServiceRoleA6A26C37
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsEMF/Resource
      aws:asset:path: asset.b9387ec7bf8d6dc79a703c273f14618f6268d2f0445b88d0ae96bc4ff459f251
      aws:asset:is-bundled: true
      aws:asset:property: Code
  MetricsEMFLogRetention570FC35A:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MetricsEMF19A7AC03
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsEMF/LogRetention/Resource
  MetricsNoneServiceRoleB865EB3E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsNone/ServiceRole/Resource
  MetricsNoneServiceRoleDefaultPolicyB667C24F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MetricsNoneServiceRoleDefaultPolicyB667C24F
      Roles:
        - Ref: MetricsNoneServiceRoleB865EB3E
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsNone/ServiceRole/DefaultPolicy/Resource
  MetricsNone99A510C2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 877977f056875728601963cecd3e4383e0b81ab509ce352785126e224ed0c7b8.zip
      Role:
        Fn::GetAtt:
          - MetricsNoneServiceRoleB865EB3E
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: MetricsNone
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - MetricsNoneServiceRoleDefaultPolicyB667C24F
      - MetricsNoneServiceRoleB865EB3E
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsNone/Resource
      aws:asset:path: asset.877977f056875728601963cecd3e4383e0b81ab509ce352785126e224ed0c7b8
      aws:asset:is-bundled: true
      aws:asset:property: Code
  MetricsNoneLogRetention4A0881AE:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MetricsNone99A510C2
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsNone/LogRetention/Resource
  MetricsPowertoolsServiceRole42DEC8A6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsPowertools/ServiceRole/Resource
  MetricsPowertoolsServiceRoleDefaultPolicy3E8061C9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MetricsPowertoolsServiceRoleDefaultPolicy3E8061C9
      Roles:
        - Ref: MetricsPowertoolsServiceRole42DEC8A6
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsPowertools/ServiceRole/DefaultPolicy/Resource
  MetricsPowertools2482673A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 53eac87737ef684821d112a3e2a2643199d5f8806a08391634f3e018daf5959e.zip
      Role:
        Fn::GetAtt:
          - MetricsPowertoolsServiceRole42DEC8A6
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: MetricsPowertools
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - MetricsPowertoolsServiceRoleDefaultPolicy3E8061C9
      - MetricsPowertoolsServiceRole42DEC8A6
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsPowertools/Resource
      aws:asset:path: asset.53eac87737ef684821d112a3e2a2643199d5f8806a08391634f3e018daf5959e
      aws:asset:is-bundled: true
      aws:asset:property: Code
  MetricsPowertoolsLogRetentionC8C9DC24:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MetricsPowertools2482673A
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsPowertools/LogRetention/Resource
  MetricsSdkV3ServiceRole64BA2836:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsSdkV3/ServiceRole/Resource
  MetricsSdkV3ServiceRoleDefaultPolicyB2B49CFF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudwatch:PutMetricData
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MetricsSdkV3ServiceRoleDefaultPolicyB2B49CFF
      Roles:
        - Ref: MetricsSdkV3ServiceRole64BA2836
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsSdkV3/ServiceRole/DefaultPolicy/Resource
  MetricsSdkV33C649AC5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 07a9960e568efff1626d71d828965b1bac1ff161cec99c4b662615dfc424b3d9.zip
      Role:
        Fn::GetAtt:
          - MetricsSdkV3ServiceRole64BA2836
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: MetricsSdkV3
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - MetricsSdkV3ServiceRoleDefaultPolicyB2B49CFF
      - MetricsSdkV3ServiceRole64BA2836
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsSdkV3/Resource
      aws:asset:path: asset.07a9960e568efff1626d71d828965b1bac1ff161cec99c4b662615dfc424b3d9
      aws:asset:is-bundled: true
      aws:asset:property: Code
  MetricsSdkV3LogRetention0B27809C:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MetricsSdkV33C649AC5
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/MetricsSdkV3/LogRetention/Resource
  TracerPowertoolsServiceRole8F26C452:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerPowertools/ServiceRole/Resource
  TracerPowertoolsServiceRoleDefaultPolicyABC8B0B3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - lambda:GetFunction
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: TracerPowertoolsServiceRoleDefaultPolicyABC8B0B3
      Roles:
        - Ref: TracerPowertoolsServiceRole8F26C452
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerPowertools/ServiceRole/DefaultPolicy/Resource
  TracerPowertools32FE6ACE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: be6bbb0cb3555122306a982acd944917805289801b20484cd76ff6de2d288a22.zip
      Role:
        Fn::GetAtt:
          - TracerPowertoolsServiceRole8F26C452
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: TracerPowertools
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - TracerPowertoolsServiceRoleDefaultPolicyABC8B0B3
      - TracerPowertoolsServiceRole8F26C452
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerPowertools/Resource
      aws:asset:path: asset.be6bbb0cb3555122306a982acd944917805289801b20484cd76ff6de2d288a22
      aws:asset:is-bundled: true
      aws:asset:property: Code
  TracerPowertoolsLogRetention514F18D4:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: TracerPowertools32FE6ACE
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerPowertools/LogRetention/Resource
  TracerXRayServiceRoleAB8A143D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerXRay/ServiceRole/Resource
  TracerXRayServiceRoleDefaultPolicy524BDB07:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - lambda:GetFunction
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: TracerXRayServiceRoleDefaultPolicy524BDB07
      Roles:
        - Ref: TracerXRayServiceRoleAB8A143D
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerXRay/ServiceRole/DefaultPolicy/Resource
  TracerXRay112FB351:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d1f8d634c41052fee8962dd986a0dfb8f848508b6db6cd3d9444aa21deb2ce59.zip
      Role:
        Fn::GetAtt:
          - TracerXRayServiceRoleAB8A143D
          - Arn
      Architectures:
        - arm64
      Description: '{"format":"esm","minify":true,"runtime":"nodejs16.x","sdk":"none","sourceType":"ts","xray":false}'
      Environment:
        Variables:
          COLD_STARTER: "2024-01-18T22:42:39.794Z"
          NODE_OPTIONS: --enable-source-maps
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: TracerXRay
      Handler: index.handler
      Runtime: nodejs16.x
      TracingConfig:
        Mode: Active
    DependsOn:
      - TracerXRayServiceRoleDefaultPolicy524BDB07
      - TracerXRayServiceRoleAB8A143D
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerXRay/Resource
      aws:asset:path: asset.d1f8d634c41052fee8962dd986a0dfb8f848508b6db6cd3d9444aa21deb2ce59
      aws:asset:is-bundled: true
      aws:asset:property: Code
  TracerXRayLogRetention7B2607D9:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: TracerXRay112FB351
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/TracerXRay/LogRetention/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/z1Oyw6CMBD8Fu5lFbh4FRJPRg1+ACllJYXSGrbVGMK/25aE0zyyMzs5FAUcE/6lVHRjqmQLy9NyMTJvNYviU9vxRpsOB4JbhIvTwkqjmeQTLLVRyKqXjvgwSopfkBtbGRUNJ0JLcA7gNZROjGhLTsi2evD3e6kyPcHV9DVa1MFZWUz6Ub3UfXyFZNwskO3Em3dn384GVhndyS0ZdsNAh092giyHLBlIynR2vnhCqDf8AyH8tJ4DAQAA
    Metadata:
      aws:cdk:path: PowertoolsBenchmarksStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  LoggerConsoleArn:
    Description: LoggerConsoleArn
    Value:
      Fn::GetAtt:
        - LoggerConsole82E00D14
        - Arn
  LoggerPowertoolsArn:
    Description: LoggerPowertoolsArn
    Value:
      Fn::GetAtt:
        - LoggerPowertoolsCCA9AAF0
        - Arn
  LoggerWinstonArn:
    Description: LoggerWinstonArn
    Value:
      Fn::GetAtt:
        - LoggerWinston532D2976
        - Arn
  MetricsEMFArn:
    Description: MetricsEMFArn
    Value:
      Fn::GetAtt:
        - MetricsEMF19A7AC03
        - Arn
  MetricsNoneArn:
    Description: MetricsNoneArn
    Value:
      Fn::GetAtt:
        - MetricsNone99A510C2
        - Arn
  MetricsPowertoolsArn:
    Description: MetricsPowertoolsArn
    Value:
      Fn::GetAtt:
        - MetricsPowertools2482673A
        - Arn
  MetricsSdkV3Arn:
    Description: MetricsSdkV3Arn
    Value:
      Fn::GetAtt:
        - MetricsSdkV33C649AC5
        - Arn
  TracerPowertoolsArn:
    Description: TracerPowertoolsArn
    Value:
      Fn::GetAtt:
        - TracerPowertools32FE6ACE
        - Arn
  TracerXRayArn:
    Description: TracerXRayArn
    Value:
      Fn::GetAtt:
        - TracerXRay112FB351
        - Arn
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

