Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PublicSubnet2/DefaultRoute
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkEcsFargateSpringSecretsStack/VPC
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/VPC/VPCGW
  ECSCluster7D463CD4:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: dev-ecs-cluster
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/ECSCluster/Resource
  DemoTaskRole5AAFDBD5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/DemoTaskRole/Resource
  DemoTaskRoleDefaultPolicyF26B4311:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/dev/demo/user
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/dev/demo/password
        Version: "2012-10-17"
      PolicyName: DemoTaskRoleDefaultPolicyF26B4311
      Roles:
        - Ref: DemoTaskRole5AAFDBD5
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/DemoTaskRole/DefaultPolicy/Resource
  devdemotaskdefinitionECD400F7:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: USER
              Value:
                Ref: UserParameter
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:3183ecf9f5f965fc5575e48c3fecf574f85352a87c91588f1b03c8366ae6f360
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: devdemotaskdefinitionDemoContainerLogGroup7F233D67
              awslogs-stream-prefix: DemoContainerLogs
              awslogs-region:
                Ref: AWS::Region
          Memory: 512
          Name: DemoContainer
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          Secrets:
            - Name: PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/dev/demo/password
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - devdemotaskdefinitionExecutionRoleA88AF186
          - Arn
      Family: CdkEcsFargateSpringSecretsStackdevdemotaskdefinitionFA4FFFFA
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - DemoTaskRole5AAFDBD5
          - Arn
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-task-definition/Resource
  devdemotaskdefinitionDemoContainerLogGroup7F233D67:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-task-definition/DemoContainer/LogGroup/Resource
  devdemotaskdefinitionExecutionRoleA88AF186:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-task-definition/ExecutionRole/Resource
  devdemotaskdefinitionExecutionRoleDefaultPolicyEBEB07BF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - devdemotaskdefinitionDemoContainerLogGroup7F233D67
                - Arn
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/dev/demo/password
        Version: "2012-10-17"
      PolicyName: devdemotaskdefinitionExecutionRoleDefaultPolicyEBEB07BF
      Roles:
        - Ref: devdemotaskdefinitionExecutionRoleA88AF186
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-task-definition/ExecutionRole/DefaultPolicy/Resource
  devdemoservicewithlbLB8924E95B:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - devdemoservicewithlbLBSecurityGroup9FEF8DB0
            - GroupId
      Subnets:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
      Type: application
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/LB/Resource
  devdemoservicewithlbLBSecurityGroup9FEF8DB0:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB CdkEcsFargateSpringSecretsStackdevdemoservicewithlbLB0323B477
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/LB/SecurityGroup/Resource
  devdemoservicewithlbLBSecurityGrouptoCdkEcsFargateSpringSecretsStackdevdemoservicewithlbServiceSecurityGroup1C755707803EF61C19:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - devdemoservicewithlbLBSecurityGroup9FEF8DB0
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - devdemoservicewithlbServiceSecurityGroupEFB23C7B
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/LB/SecurityGroup/to CdkEcsFargateSpringSecretsStackdevdemoservicewithlbServiceSecurityGroup1C755707:80
  devdemoservicewithlbLBPublicListener58A8867C:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: devdemoservicewithlbLBPublicListenerECSGroupB6BBBAF7
          Type: forward
      LoadBalancerArn:
        Ref: devdemoservicewithlbLB8924E95B
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/LB/PublicListener/Resource
  devdemoservicewithlbLBPublicListenerECSGroupB6BBBAF7:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/LB/PublicListener/ECSGroup/Resource
  devdemoservicewithlbService6476FEFC:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ECSCluster7D463CD4
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: DemoContainer
          ContainerPort: 80
          TargetGroupArn:
            Ref: devdemoservicewithlbLBPublicListenerECSGroupB6BBBAF7
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - devdemoservicewithlbServiceSecurityGroupEFB23C7B
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
      TaskDefinition:
        Ref: devdemotaskdefinitionECD400F7
    DependsOn:
      - devdemoservicewithlbLBPublicListenerECSGroupB6BBBAF7
      - devdemoservicewithlbLBPublicListener58A8867C
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/Service/Service
  devdemoservicewithlbServiceSecurityGroupEFB23C7B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/Service/SecurityGroup/Resource
  devdemoservicewithlbServiceSecurityGroupfromCdkEcsFargateSpringSecretsStackdevdemoservicewithlbLBSecurityGroupD2B4E14480533BDC70:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - devdemoservicewithlbServiceSecurityGroupEFB23C7B
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - devdemoservicewithlbLBSecurityGroup9FEF8DB0
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/dev-demo-service-with-lb/Service/SecurityGroup/from CdkEcsFargateSpringSecretsStackdevdemoservicewithlbLBSecurityGroupD2B4E144:80
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.94.1,@aws-cdk/aws-applicationautoscaling=1.94.1,@aws-cdk/aws-autoscaling=1.94.1,@aws-cdk/aws-autoscaling-common=1.94.1,@aws-cdk/aws-autoscaling-hooktargets=1.94.1,@aws-cdk/aws-certificatemanager=1.94.1,@aws-cdk/aws-cloudwatch=1.94.1,@aws-cdk/aws-codeguruprofiler=1.94.1,@aws-cdk/aws-ec2=1.94.1,@aws-cdk/aws-ecr=1.94.1,@aws-cdk/aws-ecr-assets=1.94.1,@aws-cdk/aws-ecs=1.94.1,@aws-cdk/aws-ecs-patterns=1.94.1,@aws-cdk/aws-elasticloadbalancingv2=1.94.1,@aws-cdk/aws-events=1.94.1,@aws-cdk/aws-events-targets=1.94.1,@aws-cdk/aws-iam=1.94.1,@aws-cdk/aws-kms=1.94.1,@aws-cdk/aws-lambda=1.94.1,@aws-cdk/aws-logs=1.94.1,@aws-cdk/aws-route53=1.94.1,@aws-cdk/aws-route53-targets=1.94.1,@aws-cdk/aws-s3=1.94.1,@aws-cdk/aws-s3-assets=1.94.1,@aws-cdk/aws-servicediscovery=1.94.1,@aws-cdk/aws-sns=1.94.1,@aws-cdk/aws-sns-subscriptions=1.94.1,@aws-cdk/aws-sqs=1.94.1,@aws-cdk/aws-ssm=1.94.1,@aws-cdk/cloud-assembly-schema=1.94.1,@aws-cdk/core=1.94.1,@aws-cdk/custom-resources=1.94.1,@aws-cdk/cx-api=1.94.1,@aws-cdk/region-info=1.94.1,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: CdkEcsFargateSpringSecretsStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  UserParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /dev/demo/user
Outputs:
  devdemoservicewithlbLoadBalancerDNS2BFCC7AE:
    Value:
      Fn::GetAtt:
        - devdemoservicewithlbLB8924E95B
        - DNSName
  devdemoservicewithlbServiceURL3483A9EC:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - devdemoservicewithlbLB8924E95B
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

