Resources:
  playLambdaServiceRole0E4C645C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStack/playLambda/ServiceRole/Resource
  playLambdaA486D95F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "

          exports.handler = async (event, context, callback) => {

          \  console.log('event: ', event);


          \  let index = event.iterator.index;

          \  let step = event.iterator.step;

          \  let count = event.iterator.count;


          \  // do your business


          \  callback(null, {

          \    index,

          \    step,

          \    count,

          \    continue: index < count ? \"CONTINUE\" : \"END\",

          \  });

          };

          \      "
      Role:
        Fn::GetAtt:
          - playLambdaServiceRole0E4C645C
          - Arn
      Description: Lambda function that will be triggered
      Handler: playLambda.handler
      Runtime: nodejs14.x
    DependsOn:
      - playLambdaServiceRole0E4C645C
    Metadata:
      aws:cdk:path: CdkStack/playLambda/Resource
  PlayStateMachineRoleC9FE6DAA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::FindInMap:
                  - ServiceprincipalMap
                  - Ref: AWS::Region
                  - states
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/PlayStateMachine/Role/Resource
  PlayStateMachineRoleDefaultPolicy9663EE87:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - playLambdaA486D95F
                - Arn
        Version: "2012-10-17"
      PolicyName: PlayStateMachineRoleDefaultPolicy9663EE87
      Roles:
        - Ref: PlayStateMachineRoleC9FE6DAA
    Metadata:
      aws:cdk:path: CdkStack/PlayStateMachine/Role/DefaultPolicy/Resource
  PlayStateMachine3F22532D:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - PlayStateMachineRoleC9FE6DAA
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"ConfigureCount","States":{"ConfigureCount":{"Type":"Pass","Result":{"count":20,"index":0,"step":1},"ResultPath":"$.iterator","Next":"PlayTask"},"PlayTask":{"Next":"IsCountReached","Type":"Task","ResultPath":"$.iterator","Resource":"'
            - Fn::GetAtt:
                - playLambdaA486D95F
                - Arn
            - '"},"Wait":{"Type":"Wait","Seconds":3,"Next":"PlayTask"},"IsCountReached":{"Type":"Choice","Comment":"If the count is reached then end the process","Choices":[{"Variable":"$.iterator.continue","StringEquals":"CONTINUE","Next":"Wait"}],"Default":"Done"},"Done":{"Type":"Succeed"}}}'
      StateMachineName: PlayStateMachine
    DependsOn:
      - PlayStateMachineRoleDefaultPolicy9663EE87
      - PlayStateMachineRoleC9FE6DAA
    Metadata:
      aws:cdk:path: CdkStack/PlayStateMachine/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11OTYvCQAz9Ld7TrPW098LCwgqiB48SM3GNbTPFTF1k6H+3rSsse3of5L28FZZLXC7oxwsOddHoEfMuEdcwWofcUHsMhPmjN04aDaqTvfgASi3mbWxksmfcxEb5PsknG8CTdKffhGPekDvsSRPsemaRANU5KguMT5Osic9qc91f/a/lkMhrx69526fdYj1eTAvEY3/lOV5FC/pavKauU/sewGIQvPjbrXzHcoXl4uKqxbW3pK3g9okP8t2ZVxMBAAA=
    Metadata:
      aws:cdk:path: CdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Mappings:
  ServiceprincipalMap:
    af-south-1:
      states: states.af-south-1.amazonaws.com
    ap-east-1:
      states: states.ap-east-1.amazonaws.com
    ap-northeast-1:
      states: states.ap-northeast-1.amazonaws.com
    ap-northeast-2:
      states: states.ap-northeast-2.amazonaws.com
    ap-northeast-3:
      states: states.ap-northeast-3.amazonaws.com
    ap-south-1:
      states: states.ap-south-1.amazonaws.com
    ap-southeast-1:
      states: states.ap-southeast-1.amazonaws.com
    ap-southeast-2:
      states: states.ap-southeast-2.amazonaws.com
    ap-southeast-3:
      states: states.ap-southeast-3.amazonaws.com
    ca-central-1:
      states: states.ca-central-1.amazonaws.com
    cn-north-1:
      states: states.cn-north-1.amazonaws.com
    cn-northwest-1:
      states: states.cn-northwest-1.amazonaws.com
    eu-central-1:
      states: states.eu-central-1.amazonaws.com
    eu-north-1:
      states: states.eu-north-1.amazonaws.com
    eu-south-1:
      states: states.eu-south-1.amazonaws.com
    eu-south-2:
      states: states.eu-south-2.amazonaws.com
    eu-west-1:
      states: states.eu-west-1.amazonaws.com
    eu-west-2:
      states: states.eu-west-2.amazonaws.com
    eu-west-3:
      states: states.eu-west-3.amazonaws.com
    me-south-1:
      states: states.me-south-1.amazonaws.com
    sa-east-1:
      states: states.sa-east-1.amazonaws.com
    us-east-1:
      states: states.us-east-1.amazonaws.com
    us-east-2:
      states: states.us-east-2.amazonaws.com
    us-gov-east-1:
      states: states.us-gov-east-1.amazonaws.com
    us-gov-west-1:
      states: states.us-gov-west-1.amazonaws.com
    us-iso-east-1:
      states: states.amazonaws.com
    us-iso-west-1:
      states: states.amazonaws.com
    us-isob-east-1:
      states: states.amazonaws.com
    us-west-1:
      states: states.us-west-1.amazonaws.com
    us-west-2:
      states: states.us-west-2.amazonaws.com
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

