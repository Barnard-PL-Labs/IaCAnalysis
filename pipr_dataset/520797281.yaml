source bucket name      : my-emr-source453354354
destination bucket name : my-emr-b-destination6486
job bucket name         : my-job-465564
job file name           : SparkSimpleJob-1.0.0.jar
deployment version      : 1
deployment environment  : dev
Resources:
  SourceBucketNotifications0A6F2084:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: SourceBucketDDD2130A
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - HelloEmrFunction2065B814
                - Arn
      Managed: true
    DependsOn:
      - SourceBucketAllowBucketNotificationsToCdkEmrS3TriggerStack1devHelloEmrFunction7F8007B33E442023
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/SourceBucket/Notifications/Resource
  SourceBucketDDD2130A:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-emr-source453354354
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/SourceBucket/Resource
  SourceBucketAllowBucketNotificationsToCdkEmrS3TriggerStack1devHelloEmrFunction7F8007B33E442023:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloEmrFunction2065B814
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - SourceBucketDDD2130A
          - Arn
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/SourceBucket/AllowBucketNotificationsToCdkEmrS3TriggerStack1devHelloEmrFunction7F8007B3
  DestinationBucket4BECDB47:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-emr-b-destination6486
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/DestinationBucket/Resource
  JobBucketE9A239CE:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-job-465564
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/JobBucket/Resource
  UploadSimpleSparkJobAwsCliLayerC6CDC2E8:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/UploadSimpleSparkJob/AwsCliLayer/Resource
      aws:asset:path: asset.e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip
      aws:asset:property: Content
  UploadSimpleSparkJobCustomResource6CCE364C:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Ref: AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddS3BucketE1E693EC
      SourceObjectKeys:
        - Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddS3VersionKey8122204B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddS3VersionKey8122204B
      DestinationBucketName:
        Ref: JobBucketE9A239CE
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/UploadSimpleSparkJob/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddS3BucketE1E693EC
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddS3BucketE1E693EC
                    - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - JobBucketE9A239CE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - JobBucketE9A239CE
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3BucketD1AD544E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3VersionKey93A19D70
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3VersionKey93A19D70
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Handler: index.handler
      Layers:
        - Ref: UploadSimpleSparkJobAwsCliLayerC6CDC2E8
      Runtime: python3.7
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8
      aws:asset:property: Code
  HelloEmrFunctionServiceRole789F4988:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/HelloEmrFunction/ServiceRole/Resource
  HelloEmrFunctionServiceRoleDefaultPolicy7D0E00AF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: elasticmapreduce:RunJobFlow
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:aws:iam::"
                    - Ref: AWS::AccountId
                    - :role/EMR_DefaultRole
              - Fn::Join:
                  - ""
                  - - "arn:aws:iam::"
                    - Ref: AWS::AccountId
                    - :role/EMR_EC2_DefaultRole
        Version: "2012-10-17"
      PolicyName: HelloEmrFunctionServiceRoleDefaultPolicy7D0E00AF
      Roles:
        - Ref: HelloEmrFunctionServiceRole789F4988
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/HelloEmrFunction/ServiceRole/DefaultPolicy/Resource
  HelloEmrFunction2065B814:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11dS3BucketFFAF7FB9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11dS3VersionKey658B6DC8
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11dS3VersionKey658B6DC8
      Role:
        Fn::GetAtt:
          - HelloEmrFunctionServiceRole789F4988
          - Arn
      Environment:
        Variables:
          DESTINATION_BUCKET_NAME: my-emr-b-destination6486
          JOB_BUCKET_NAME: my-job-465564
          JOB_FILE_NAME: SparkSimpleJob-1.0.0.jar
      Handler: hello_emr.lambda_handler
      Runtime: python3.8
    DependsOn:
      - HelloEmrFunctionServiceRoleDefaultPolicy7D0E00AF
      - HelloEmrFunctionServiceRole789F4988
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/HelloEmrFunction/Resource
      aws:asset:path: asset.1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11d
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |
          import boto3  # type: ignore
          import json
          import logging
          import urllib.request

          s3 = boto3.client("s3")

          CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

          def handler(event: dict, context):
              response_status = "SUCCESS"
              error_message = ""
              try:
                  props = event["ResourceProperties"]
                  bucket = props["BucketName"]
                  notification_configuration = props["NotificationConfiguration"]
                  request_type = event["RequestType"]
                  managed = props.get('Managed', 'true').lower() == 'true'
                  stack_id = event['StackId']

                  if managed:
                    config = handle_managed(request_type, notification_configuration)
                  else:
                    config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

                  put_bucket_notification_configuration(bucket, config)
              except Exception as e:
                  logging.exception("Failed to put bucket notification configuration")
                  response_status = "FAILED"
                  error_message = f"Error: {str(e)}. "
              finally:
                  submit_response(event, context, response_status, error_message)


          def handle_managed(request_type, notification_configuration):
            if request_type == 'Delete':
              return {}
            return notification_configuration


          def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):

            # find external notifications
            external_notifications = find_external_notifications(bucket, stack_id)

            # if delete, that's all we need
            if request_type == 'Delete':
              return external_notifications

            def with_id(notification):
              notification['Id'] = f"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}"
              return notification

            # otherwise, merge external with incoming config and augment with id
            notifications = {}
            for t in CONFIGURATION_TYPES:
              external = external_notifications.get(t, [])
              incoming = [with_id(n) for n in notification_configuration.get(t, [])]
              notifications[t] = external + incoming
            return notifications


          def find_external_notifications(bucket, stack_id):
            existing_notifications = get_bucket_notification_configuration(bucket)
            external_notifications = {}
            for t in CONFIGURATION_TYPES:
              # if the notification was created by us, we know what id to expect
              # so we can filter by it.
              external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]

            return external_notifications


          def get_bucket_notification_configuration(bucket):
            return s3.get_bucket_notification_configuration(Bucket=bucket)


          def put_bucket_notification_configuration(bucket, notification_configuration):
            s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)


          def submit_response(event: dict, context, response_status: str, error_message: str):
              response_body = json.dumps(
                  {
                      "Status": response_status,
                      "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
                      "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
                      "StackId": event["StackId"],
                      "RequestId": event["RequestId"],
                      "LogicalResourceId": event["LogicalResourceId"],
                      "NoEcho": False,
                  }
              ).encode("utf-8")
              headers = {"content-type": "", "content-length": str(len(response_body))}
              try:
                  req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
                  with urllib.request.urlopen(req) as response:
                      print(response.read().decode("utf-8"))
                  print("Status code: " + response.reason)
              except Exception as e:
                  print("send(..) failed executing request.urlopen(..): " + str(e))
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: python3.7
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/z1Qy27DIBD8ltzXm7qRqh6bOOqph8iReqd4GxHzqFhoZCH+vYCbnHYWhnnQY//8gk+bN3HjTk7zNknnCdM5CDnD4CwHH2WA4duOxC56SbBnplAIF2UvMEQOzjzuCu8kvDAUyNelKEwqKGczVIfEO0yHKGdqkv9oHQfBlEEL8zUJTFWIvFHM5XHlfoiF/Cf5tp+Ltabg7Hu0ssrDAxTqHWfgXZcm+tFuMWQDrkbHxwGIWoWxNcqghME0Ot1qtHlyWsmltWoo3wN2usbpSiepFe5vPGjVEmawbiK88va3fy2fi/3mykp1PtqgDOG4zj8sRgAteAEAAA==
    Metadata:
      aws:cdk:path: CdkEmrS3TriggerStack-1-dev/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7:
    Type: String
    Description: S3 bucket for asset "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68"
  AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F:
    Type: String
    Description: S3 key for asset version "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68"
  AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68ArtifactHashD9A515C3:
    Type: String
    Description: Artifact hash for asset "e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68"
  AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3BucketD1AD544E:
    Type: String
    Description: S3 bucket for asset "a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8"
  AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8S3VersionKey93A19D70:
    Type: String
    Description: S3 key for asset version "a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8"
  AssetParametersa3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8ArtifactHash238275D6:
    Type: String
    Description: Artifact hash for asset "a3058ccb468d757ebb89df5363a1c20f5307c6911136f29d00e1a68c9b2aa7e8"
  AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddS3BucketE1E693EC:
    Type: String
    Description: S3 bucket for asset "b8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6dd"
  AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddS3VersionKey8122204B:
    Type: String
    Description: S3 key for asset version "b8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6dd"
  AssetParametersb8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6ddArtifactHashCD5B9FC6:
    Type: String
    Description: Artifact hash for asset "b8c346bba48c058a8ca571fbe372db8d476fbd12235a5158198493a811fef6dd"
  AssetParameters1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11dS3BucketFFAF7FB9:
    Type: String
    Description: S3 bucket for asset "1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11d"
  AssetParameters1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11dS3VersionKey658B6DC8:
    Type: String
    Description: S3 key for asset version "1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11d"
  AssetParameters1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11dArtifactHash348B6408:
    Type: String
    Description: Artifact hash for asset "1b0f8c9878d63b2723936030d2aa5927995fad3ef1de3fa0e96d038115a3e11d"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

