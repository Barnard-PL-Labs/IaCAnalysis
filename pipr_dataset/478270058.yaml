Resources:
  airQualityCities85C30966:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
        - AttributeName: CityName
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: "N"
        - AttributeName: CityName
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: airQualityCities
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: FeedApp/airQualityCities/Resource
  airQualityWaqiFeedServiceRole2DE2075B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: FeedApp/airQualityWaqiFeed/ServiceRole/Resource
  airQualityWaqiFeedServiceRoleDefaultPolicyF3C3A0D6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - airQualityCities85C30966
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: airQualityWaqiFeedServiceRoleDefaultPolicyF3C3A0D6
      Roles:
        - Ref: airQualityWaqiFeedServiceRole2DE2075B
    Metadata:
      aws:cdk:path: FeedApp/airQualityWaqiFeed/ServiceRole/DefaultPolicy/Resource
  airQualityWaqiFeed5AEF0B9D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 16bf65f346aa9a97f6303e6cc6a318b8210a24cbb647fb49fa3580b9eac29fdb.zip
      Role:
        Fn::GetAtt:
          - airQualityWaqiFeedServiceRole2DE2075B
          - Arn
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: airQualityCities
          WAQI_TOKEN: ""
          LIST_OF_CITIES: ""
      Handler: main
      MemorySize: 256
      Runtime: go1.x
      Timeout: 300
    DependsOn:
      - airQualityWaqiFeedServiceRoleDefaultPolicyF3C3A0D6
      - airQualityWaqiFeedServiceRole2DE2075B
    Metadata:
      aws:cdk:path: FeedApp/airQualityWaqiFeed/Resource
      aws:asset:path: asset.16bf65f346aa9a97f6303e6cc6a318b8210a24cbb647fb49fa3580b9eac29fdb
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ruleCronEach5Minutes95B01A94:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0/5 * ? * * *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - airQualityWaqiFeed5AEF0B9D
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: FeedApp/ruleCronEach5Minutes/Resource
  ruleCronEach5MinutesAllowEventRuleFeedAppairQualityWaqiFeed4934CB535635AE9A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - airQualityWaqiFeed5AEF0B9D
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - ruleCronEach5Minutes95B01A94
          - Arn
    Metadata:
      aws:cdk:path: FeedApp/ruleCronEach5Minutes/AllowEventRuleFeedAppairQualityWaqiFeed4934CB53
  airQualitySNSTopic31D3FD96:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: New Pollution Data
    Metadata:
      aws:cdk:path: FeedApp/airQualitySNSTopic/Resource
  airQualityFeedProcessorServiceRole062311FB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: FeedApp/airQualityFeedProcessor/ServiceRole/Resource
  airQualityFeedProcessorServiceRoleDefaultPolicy3159CEDA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: dynamodb:ListStreams
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - airQualityCities85C30966
                - StreamArn
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: airQualitySNSTopic31D3FD96
        Version: "2012-10-17"
      PolicyName: airQualityFeedProcessorServiceRoleDefaultPolicy3159CEDA
      Roles:
        - Ref: airQualityFeedProcessorServiceRole062311FB
    Metadata:
      aws:cdk:path: FeedApp/airQualityFeedProcessor/ServiceRole/DefaultPolicy/Resource
  airQualityFeedProcessor0AC3D21A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8862ece7d926d71d156bc471c90ca2a57edeb24f42a14d4e8b31453a68569b2f.zip
      Role:
        Fn::GetAtt:
          - airQualityFeedProcessorServiceRole062311FB
          - Arn
      Environment:
        Variables:
          SNS_TOPIC_ARN:
            Ref: airQualitySNSTopic31D3FD96
      Handler: main
      MemorySize: 256
      Runtime: go1.x
      Timeout: 300
    DependsOn:
      - airQualityFeedProcessorServiceRoleDefaultPolicy3159CEDA
      - airQualityFeedProcessorServiceRole062311FB
    Metadata:
      aws:cdk:path: FeedApp/airQualityFeedProcessor/Resource
      aws:asset:path: asset.8862ece7d926d71d156bc471c90ca2a57edeb24f42a14d4e8b31453a68569b2f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  airQualityFeedProcessorDynamoDBEventSourceFeedAppairQualityCities7E6A68BE2F00F19F:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName:
        Ref: airQualityFeedProcessor0AC3D21A
      BatchSize: 100
      EventSourceArn:
        Fn::GetAtt:
          - airQualityCities85C30966
          - StreamArn
      StartingPosition: LATEST
    Metadata:
      aws:cdk:path: FeedApp/airQualityFeedProcessor/DynamoDBEventSource:FeedAppairQualityCities7E6A68BE/Resource
  airQualityTwitterPublisherServiceRoleCD1DFD69:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: FeedApp/airQualityTwitterPublisher/ServiceRole/Resource
  airQualityTwitterPublisherC7C91C8F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 177e54a781aece034a7739c454ccb9c4f4f4d712c17a3ec58dc5cbed06929def.zip
      Role:
        Fn::GetAtt:
          - airQualityTwitterPublisherServiceRoleCD1DFD69
          - Arn
      Environment:
        Variables:
          TWITTER_ACCESS_TOKEN_KEY: fake
          TWITTER_ACCESS_TOKEN_SECRET: fake
          TWITTER_CONSUMER_KEY: fake
          TWITTER_CONSUMER_SECRET: fake
      Handler: main
      MemorySize: 256
      Runtime: go1.x
      Timeout: 300
    DependsOn:
      - airQualityTwitterPublisherServiceRoleCD1DFD69
    Metadata:
      aws:cdk:path: FeedApp/airQualityTwitterPublisher/Resource
      aws:asset:path: asset.177e54a781aece034a7739c454ccb9c4f4f4d712c17a3ec58dc5cbed06929def
      aws:asset:is-bundled: false
      aws:asset:property: Code
  airQualityTwitterPublisherAllowInvokeFeedAppairQualitySNSTopicEF192B52E428458D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - airQualityTwitterPublisherC7C91C8F
          - Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: airQualitySNSTopic31D3FD96
    Metadata:
      aws:cdk:path: FeedApp/airQualityTwitterPublisher/AllowInvoke:FeedAppairQualitySNSTopicEF192B52
  airQualityTwitterPublisherairQualitySNSTopic2B0342F0:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: airQualitySNSTopic31D3FD96
      Endpoint:
        Fn::GetAtt:
          - airQualityTwitterPublisherC7C91C8F
          - Arn
    Metadata:
      aws:cdk:path: FeedApp/airQualityTwitterPublisher/airQualitySNSTopic/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2VQTW/DIAz9Lb0Tb+ku23Gt1tukKum9csCr3ASIYuhURfnvA9pNlXZ6H4bnB2uo3+B5hd9SadNXA3cwtwF1r5J1nM3VofUmmQfsBlLbL1fIoga0nUGYd9HpwN7l0SPf02RZJKuPC7nQ+jhp+sRxZHfKB/67i2K0MDf+tqjg3g+sryWwsEXJyxFFKAi8Z0gaNlH3FDYopCinSgqJ95CYy4pL1sGPrMsLCmljJ3ri8bfwo14W1ZCUbqpsSV9yuvf+GyS+9c5wuaCcNwRnebrUr1CvoV6dhbmaogtsCZob/gBWmLdXbgEAAA==
    Metadata:
      aws:cdk:path: FeedApp/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

