Resources:
  jaegervpc200CD3CC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/Resource
  jaegervpcPublicSubnet1SubnetD45235B5:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: jaegervpc200CD3CC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet1/Subnet
  jaegervpcPublicSubnet1RouteTable00A3E2AE:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: jaegervpc200CD3CC
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet1/RouteTable
  jaegervpcPublicSubnet1RouteTableAssociationF28D9477:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: jaegervpcPublicSubnet1RouteTable00A3E2AE
      SubnetId:
        Ref: jaegervpcPublicSubnet1SubnetD45235B5
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet1/RouteTableAssociation
  jaegervpcPublicSubnet1DefaultRoute6C604067:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: jaegervpcPublicSubnet1RouteTable00A3E2AE
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: jaegervpcIGWE01D5DBF
    DependsOn:
      - jaegervpcVPCGWE3555320
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet1/DefaultRoute
  jaegervpcPublicSubnet1EIPBECBB011:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet1/EIP
  jaegervpcPublicSubnet1NATGatewayF4FC31D5:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: jaegervpcPublicSubnet1SubnetD45235B5
      AllocationId:
        Fn::GetAtt:
          - jaegervpcPublicSubnet1EIPBECBB011
          - AllocationId
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet1/NATGateway
  jaegervpcPublicSubnet2Subnet3B03D14D:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: jaegervpc200CD3CC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet2/Subnet
  jaegervpcPublicSubnet2RouteTableCF0124FF:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: jaegervpc200CD3CC
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet2/RouteTable
  jaegervpcPublicSubnet2RouteTableAssociationD4DFD52C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: jaegervpcPublicSubnet2RouteTableCF0124FF
      SubnetId:
        Ref: jaegervpcPublicSubnet2Subnet3B03D14D
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet2/RouteTableAssociation
  jaegervpcPublicSubnet2DefaultRouteE7736496:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: jaegervpcPublicSubnet2RouteTableCF0124FF
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: jaegervpcIGWE01D5DBF
    DependsOn:
      - jaegervpcVPCGWE3555320
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet2/DefaultRoute
  jaegervpcPublicSubnet2EIPE4925C19:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet2/EIP
  jaegervpcPublicSubnet2NATGateway904C28A3:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: jaegervpcPublicSubnet2Subnet3B03D14D
      AllocationId:
        Fn::GetAtt:
          - jaegervpcPublicSubnet2EIPE4925C19
          - AllocationId
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PublicSubnet2/NATGateway
  jaegervpcPrivateSubnet1Subnet0D617A46:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: jaegervpc200CD3CC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet1/Subnet
  jaegervpcPrivateSubnet1RouteTable781572F4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: jaegervpc200CD3CC
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet1/RouteTable
  jaegervpcPrivateSubnet1RouteTableAssociationB501B3F9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: jaegervpcPrivateSubnet1RouteTable781572F4
      SubnetId:
        Ref: jaegervpcPrivateSubnet1Subnet0D617A46
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet1/RouteTableAssociation
  jaegervpcPrivateSubnet1DefaultRoute6F61352E:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: jaegervpcPrivateSubnet1RouteTable781572F4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: jaegervpcPublicSubnet1NATGatewayF4FC31D5
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet1/DefaultRoute
  jaegervpcPrivateSubnet2Subnet5C0FA3A0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: jaegervpc200CD3CC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet2/Subnet
  jaegervpcPrivateSubnet2RouteTable9147586C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: jaegervpc200CD3CC
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet2/RouteTable
  jaegervpcPrivateSubnet2RouteTableAssociation6064ECB7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: jaegervpcPrivateSubnet2RouteTable9147586C
      SubnetId:
        Ref: jaegervpcPrivateSubnet2Subnet5C0FA3A0
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet2/RouteTableAssociation
  jaegervpcPrivateSubnet2DefaultRouteDB5F4B94:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: jaegervpcPrivateSubnet2RouteTable9147586C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: jaegervpcPublicSubnet2NATGateway904C28A3
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/PrivateSubnet2/DefaultRoute
  jaegervpcIGWE01D5DBF:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: quickstart-jaeger/jaeger-vpc
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/IGW
  jaegervpcVPCGWE3555320:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: jaegervpc200CD3CC
      InternetGatewayId:
        Ref: jaegervpcIGWE01D5DBF
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger-vpc/VPCGW
  jaegerjaegercluster0CBB2A46:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: jaeger-cluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-cluster/Resource
  jaegerjaegernlbA65E0750:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Name: jaeger-nlb
      Scheme: internet-facing
      Subnets:
        - Ref: jaegervpcPublicSubnet1SubnetD45235B5
        - Ref: jaegervpcPublicSubnet2Subnet3B03D14D
      Type: network
    DependsOn:
      - jaegervpcPublicSubnet1DefaultRoute6C604067
      - jaegervpcPublicSubnet2DefaultRouteE7736496
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/Resource
  jaegerjaegernlbjaeger16686248D1C12:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: jaegerjaegernlbjaeger16686jaeger16686Group57F2A29F
          Type: forward
      LoadBalancerArn:
        Ref: jaegerjaegernlbA65E0750
      Port: 16686
      Protocol: TCP
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-16686/Resource
  jaegerjaegernlbjaeger16686jaeger16686Group57F2A29F:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: jaeger-16686
      Port: 16686
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: jaegervpc200CD3CC
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-16686/jaeger-16686Group/Resource
  jaegerjaegernlbjaeger142509DAE271B:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: jaegerjaegernlbjaeger14250jaeger14250GroupE4693CE5
          Type: forward
      LoadBalancerArn:
        Ref: jaegerjaegernlbA65E0750
      Port: 14250
      Protocol: TCP
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-14250/Resource
  jaegerjaegernlbjaeger14250jaeger14250GroupE4693CE5:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: jaeger-14250
      Port: 14250
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: jaegervpc200CD3CC
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-14250/jaeger-14250Group/Resource
  jaegerjaegernlbjaeger142680BF7AEE0:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: jaegerjaegernlbjaeger14268jaeger14268Group0D22DFB9
          Type: forward
      LoadBalancerArn:
        Ref: jaegerjaegernlbA65E0750
      Port: 14268
      Protocol: TCP
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-14268/Resource
  jaegerjaegernlbjaeger14268jaeger14268Group0D22DFB9:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: jaeger-14268
      Port: 14268
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: jaegervpc200CD3CC
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-14268/jaeger-14268Group/Resource
  jaegerjaegernlbjaeger14269FDEA9833:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: jaegerjaegernlbjaeger14269jaeger14269Group8559F1A9
          Type: forward
      LoadBalancerArn:
        Ref: jaegerjaegernlbA65E0750
      Port: 14269
      Protocol: TCP
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-14269/Resource
  jaegerjaegernlbjaeger14269jaeger14269Group8559F1A9:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: jaeger-14269
      Port: 14269
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: jaegervpc200CD3CC
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-nlb/jaeger-14269/jaeger-14269Group/Resource
  jaegerjaegerallinonetaskdefinitionTaskRole65D1D354:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-all-in-one-task-definition/TaskRole/Resource
  jaegerjaegerallinonetaskdefinition0FF25B4C:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: SPAN_STORAGE_TYPE
              Value: memory
          Essential: true
          Image: jaegertracing/all-in-one:1.32
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: jaegerjaegerallinonetaskdefinitionjaegerallinonecontainerLogGroup78453173
              awslogs-stream-prefix: jaeger-all-in-one
              awslogs-region:
                Ref: AWS::Region
          Name: jaeger-all-in-one
          PortMappings:
            - ContainerPort: 16685
              Protocol: tcp
            - ContainerPort: 16686
              Protocol: tcp
            - ContainerPort: 9411
              Protocol: tcp
            - ContainerPort: 14250
              Protocol: tcp
            - ContainerPort: 14268
              Protocol: tcp
            - ContainerPort: 14269
              Protocol: tcp
      Cpu: "1024"
      ExecutionRoleArn:
        Fn::GetAtt:
          - jaegerjaegerallinonetaskdefinitionExecutionRole9FE2133D
          - Arn
      Family: jaeger-all-in-one-task-definition
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - jaegerjaegerallinonetaskdefinitionTaskRole65D1D354
          - Arn
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-all-in-one-task-definition/Resource
  jaegerjaegerallinonetaskdefinitionjaegerallinonecontainerLogGroup78453173:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-all-in-one-task-definition/jaeger-all-in-one-container/LogGroup/Resource
  jaegerjaegerallinonetaskdefinitionExecutionRole9FE2133D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-all-in-one-task-definition/ExecutionRole/Resource
  jaegerjaegerallinonetaskdefinitionExecutionRoleDefaultPolicy0D1116F1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - jaegerjaegerallinonetaskdefinitionjaegerallinonecontainerLogGroup78453173
                - Arn
        Version: "2012-10-17"
      PolicyName: jaegerjaegerallinonetaskdefinitionExecutionRoleDefaultPolicy0D1116F1
      Roles:
        - Ref: jaegerjaegerallinonetaskdefinitionExecutionRole9FE2133D
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-all-in-one-task-definition/ExecutionRole/DefaultPolicy/Resource
  jaegerjaegerallinoneserviceService1DEA9BF7:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: jaegerjaegercluster0CBB2A46
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: jaeger-all-in-one
          ContainerPort: 16686
          TargetGroupArn:
            Ref: jaegerjaegernlbjaeger16686jaeger16686Group57F2A29F
        - ContainerName: jaeger-all-in-one
          ContainerPort: 14250
          TargetGroupArn:
            Ref: jaegerjaegernlbjaeger14250jaeger14250GroupE4693CE5
        - ContainerName: jaeger-all-in-one
          ContainerPort: 14268
          TargetGroupArn:
            Ref: jaegerjaegernlbjaeger14268jaeger14268Group0D22DFB9
        - ContainerName: jaeger-all-in-one
          ContainerPort: 14269
          TargetGroupArn:
            Ref: jaegerjaegernlbjaeger14269jaeger14269Group8559F1A9
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - jaegerjaegerallinoneserviceSecurityGroup7B876D38
                - GroupId
          Subnets:
            - Ref: jaegervpcPrivateSubnet1Subnet0D617A46
            - Ref: jaegervpcPrivateSubnet2Subnet5C0FA3A0
      ServiceName: jaeger-all-in-one
      TaskDefinition:
        Ref: jaegerjaegerallinonetaskdefinition0FF25B4C
    DependsOn:
      - jaegerjaegernlbjaeger14250jaeger14250GroupE4693CE5
      - jaegerjaegernlbjaeger142509DAE271B
      - jaegerjaegernlbjaeger14268jaeger14268Group0D22DFB9
      - jaegerjaegernlbjaeger142680BF7AEE0
      - jaegerjaegernlbjaeger14269jaeger14269Group8559F1A9
      - jaegerjaegernlbjaeger14269FDEA9833
      - jaegerjaegernlbjaeger16686jaeger16686Group57F2A29F
      - jaegerjaegernlbjaeger16686248D1C12
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-all-in-one-service/Service
  jaegerjaegerallinoneserviceSecurityGroup7B876D38:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: quickstart-jaeger/jaeger/jaeger-all-in-one-service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - jaegervpc200CD3CC
              - CidrBlock
          Description: Allow ECS Service access from within VPC
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      VpcId:
        Ref: jaegervpc200CD3CC
    Metadata:
      aws:cdk:path: quickstart-jaeger/jaeger/jaeger-all-in-one-service/SecurityGroup/Resource
  prometheusexportconfigurationparameter03283A91:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value:
        Fn::Join:
          - ""
          - - |-
              receivers:
                prometheus:
                  config:
                    global:
                      scrape_interval: 15s
                      scrape_timeout: 10s
                    scrape_configs:
                    - job_name: "jaeger"
                      static_configs:
                      - targets: ["
            - Fn::GetAtt:
                - jaegerjaegernlbA65E0750
                - DNSName
            - |-
              :14269"]
                awsecscontainermetrics:
                  collection_interval: 20s

              processors:
                filter:
                  metrics:
                    include:
                      match_type: strict
                      metric_names:
                        - ecs.task.memory.utilized
                        - ecs.task.memory.reserved
                        - ecs.task.cpu.utilized
                        - ecs.task.cpu.reserved
                        - ecs.task.network.rate.rx
                        - ecs.task.network.rate.tx
                        - ecs.task.storage.read_bytes
                        - ecs.task.storage.write_bytes

              exporters:
                awsprometheusremotewrite:
                  endpoint: https://aps-workspaces.eu-west-1.amazonaws.com/workspaces/ws-04b56509-26d8-40e1-9191-4b08d52340f2/api/v1/remote_write
                  aws_auth:
                    region: 
            - Ref: AWS::Region
            - |-2
              
                    service: "aps"
                logging:
                  loglevel: debug
              extensions:
                health_check:
                pprof:
                  endpoint: :1888
                zpages:
                  endpoint: :55679
                  
              service:
                extensions: [pprof, zpages, health_check]
                pipelines:
                  metrics:
                    receivers: [prometheus]
                    exporters: [logging, awsprometheusremotewrite]
                  metrics/ecs:
                    receivers: [awsecscontainermetrics]
                    processors: [filter]
                    exporters: [logging, awsprometheusremotewrite]
      Description: AOT export configuration
      Name: /jaeger/prometheus-export-config
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/configuration-parameter/Resource
  prometheusexporttaskdefinitionTaskRole3E367306:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/task-definition/TaskRole/Resource
  prometheusexporttaskdefinitionTaskRoleDefaultPolicy7CA7E1A3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: aps:RemoteWrite
            Effect: Allow
            Resource: arn:aws:aps:eu-west-1:367215520538:workspace/ws-04b56509-26d8-40e1-9191-4b08d52340f2
          - Action:
              - logs:PutLogEvents
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:DescribeLogGroups
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: prometheusexporttaskdefinitionTaskRoleDefaultPolicy7CA7E1A3
      Roles:
        - Ref: prometheusexporttaskdefinitionTaskRole3E367306
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/task-definition/TaskRole/DefaultPolicy/Resource
  prometheusexporttaskdefinitionF462D344:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: public.ecr.aws/aws-observability/aws-otel-collector:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: prometheusexportloggroupF9ECA1E9
              awslogs-stream-prefix: ecs
              awslogs-region:
                Ref: AWS::Region
          Name: prometheus-export
          Secrets:
            - Name: AOT_CONFIG_CONTENT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter
                    - Ref: prometheusexportconfigurationparameter03283A91
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - prometheusexporttaskdefinitionExecutionRole8BEF8A0F
          - Arn
      Family: prometheus-export-task-definition
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - prometheusexporttaskdefinitionTaskRole3E367306
          - Arn
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/task-definition/Resource
  prometheusexporttaskdefinitionExecutionRole8BEF8A0F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/task-definition/ExecutionRole/Resource
  prometheusexporttaskdefinitionExecutionRoleDefaultPolicyBFA64140:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - prometheusexportloggroupF9ECA1E9
                - Arn
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter
                  - Ref: prometheusexportconfigurationparameter03283A91
        Version: "2012-10-17"
      PolicyName: prometheusexporttaskdefinitionExecutionRoleDefaultPolicyBFA64140
      Roles:
        - Ref: prometheusexporttaskdefinitionExecutionRole8BEF8A0F
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/task-definition/ExecutionRole/DefaultPolicy/Resource
  prometheusexportloggroupF9ECA1E9:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/log-group/Resource
  prometheusexportserviceServiceC10B2BB8:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: jaegerjaegercluster0CBB2A46
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - prometheusexportserviceSecurityGroupF1961E96
                - GroupId
          Subnets:
            - Ref: jaegervpcPrivateSubnet1Subnet0D617A46
            - Ref: jaegervpcPrivateSubnet2Subnet5C0FA3A0
      ServiceName: prometheus-export
      TaskDefinition:
        Ref: prometheusexporttaskdefinitionF462D344
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/service/Service
  prometheusexportserviceSecurityGroupF1961E96:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: quickstart-jaeger/prometheus-export/service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: jaegervpc200CD3CC
    Metadata:
      aws:cdk:path: quickstart-jaeger/prometheus-export/service/SecurityGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11SwW6DMAz9lt3TbPQw7dp1W1WpqhBUvU4muMwlJFUSqCrEvy8QaNlOfn52nOeXLHn0yl+e4GoXIi8XkjLepg5EyTz13aJY8vZ4EWx9Usd4zeI6kyTSOlPoeu6BEl07PEAm8cE/uJW1WhA40ure3IPPbdyHPbgNOLzCjcWGGg8fg7fKofF4aghKxmzlvNafCpVjKYrakLttjK4vg4Y50TEUlrdrWVs/ri9P8AtMAb1MW37giRRNIv8zWjkghWbGjWdTNA2JsHiA/joJ1pGQGvIMJChBqmi8mXt0V23KneffBz6o+ZNPPeQFqrE+4bF28Dd7T6ZdZ2nHCCreJjq8xBBj7V9tsC6gjkldeDt2uriPmHDHrK36T2C84hgMVDg6dk+6jiVodW3CznPsXcoHbzqmdI78bJ+b6I1HSx49nS3RwtTKUYU8CfEXSIMny4ACAAA=
    Metadata:
      aws:cdk:path: quickstart-jaeger/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

