Resources:
  HttpApiF5A9A8A7:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: aws-auth0-cognito-custom-authorizers-api
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/Resource
  HttpApiDefaultStage3EEB07D6:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/DefaultStage/Resource
  HttpApiGETpublicpublicintegrationC59AB194:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - PublicFn6A30F5E5
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/GET--public/public-integration/Resource
  HttpApiGETpublicpublicintegrationPermission321E00A0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PublicFn6A30F5E5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HttpApiF5A9A8A7
            - /*/*/public
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/GET--public/public-integration-Permission
  HttpApiGETpublic3FB86B72:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      RouteKey: GET /public
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpApiGETpublicpublicintegrationC59AB194
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/GET--public/Resource
  HttpApiGETprivateprivateintegrationE5BC760D:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - PrivateFnDA0143ED
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/GET--private/private-integration/Resource
  HttpApiGETprivateprivateintegrationPermissionC8D83233:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PrivateFnDA0143ED
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HttpApiF5A9A8A7
            - /*/*/private
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/GET--private/private-integration-Permission
  HttpApiGETprivate77523DC0:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      RouteKey: GET /private
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HttpApiauthorizerlambda1BDC25DA
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpApiGETprivateprivateintegrationE5BC760D
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/GET--private/Resource
  HttpApiauthorizerlambda1BDC25DA:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      AuthorizerType: REQUEST
      Name: authorizer-lambda
      AuthorizerPayloadFormatVersion: "1.0"
      AuthorizerResultTtlInSeconds: 300
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - AuthorizerBD825682
                - Arn
            - /invocations
      IdentitySource:
        - $request.header.Authorization
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/authorizer-lambda/Resource
  HttpApiCdkStarterStackStackHttpApiauthorizerlambda4B02FA0EPermission6797E27D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AuthorizerBD825682
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HttpApiF5A9A8A7
            - /authorizers/
            - Ref: HttpApiauthorizerlambda1BDC25DA
    Metadata:
      aws:cdk:path: CdkStarterStackStack/HttpApi/CdkStarterStackStackHttpApiauthorizerlambda4B02FA0E-Permission
  PublicFnServiceRoleF3FDF518:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStarterStackStack/PublicFn/ServiceRole/Resource
  PublicFn6A30F5E5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f5fb2867761ede3242e08baed73af0eccf450e4dc71fd47935441a74da6bc62e.zip
      Role:
        Fn::GetAtt:
          - PublicFnServiceRoleF3FDF518
          - Arn
      Handler: handler.publicEndpoint
      Runtime: nodejs14.x
    DependsOn:
      - PublicFnServiceRoleF3FDF518
    Metadata:
      aws:cdk:path: CdkStarterStackStack/PublicFn/Resource
      aws:asset:path: asset.f5fb2867761ede3242e08baed73af0eccf450e4dc71fd47935441a74da6bc62e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  AuthorizerServiceRoleB8F38EC9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStarterStackStack/Authorizer/ServiceRole/Resource
  AuthorizerBD825682:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f5fb2867761ede3242e08baed73af0eccf450e4dc71fd47935441a74da6bc62e.zip
      Role:
        Fn::GetAtt:
          - AuthorizerServiceRoleB8F38EC9
          - Arn
      Environment:
        Variables:
          IIS_URL: https://<url>.com
      Handler: auth.authorize
      Runtime: nodejs14.x
    DependsOn:
      - AuthorizerServiceRoleB8F38EC9
    Metadata:
      aws:cdk:path: CdkStarterStackStack/Authorizer/Resource
      aws:asset:path: asset.f5fb2867761ede3242e08baed73af0eccf450e4dc71fd47935441a74da6bc62e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  PrivateFnServiceRole1408EB86:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStarterStackStack/PrivateFn/ServiceRole/Resource
  PrivateFnDA0143ED:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: f5fb2867761ede3242e08baed73af0eccf450e4dc71fd47935441a74da6bc62e.zip
      Role:
        Fn::GetAtt:
          - PrivateFnServiceRole1408EB86
          - Arn
      Handler: handler.privateEndpoint
      Runtime: nodejs14.x
    DependsOn:
      - PrivateFnServiceRole1408EB86
    Metadata:
      aws:cdk:path: CdkStarterStackStack/PrivateFn/Resource
      aws:asset:path: asset.f5fb2867761ede3242e08baed73af0eccf450e4dc71fd47935441a74da6bc62e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02PwW6DMBBEv4U7bAhceiyJVKWnVvQDog1syQawkb1O1Fr8e7FJ1JxmvJ5Z+xVQluDzBG82a9o+G/gE/kuw6dNldPQ4cYdCN/y5FuD336qaOF1kiXQUzLsS6gwKaxWOtXYS55WTszb8S2ZOBxxPLcb6J5mRrQ3pN6eaR+3h55RxBF/rgdZtA82pLY9oLYmFKshyhp1repId2uU6DsN/WHWh9OFkchLrZLUzTVy116rl9Yk8w2E6I+TJ6x17E/QZ9Z7wB5EpEAddkYNbIYN7po/Zf+o5VboluNjNdfsC2wK2ycUyZ8Yp4ZGgXvUPUU9F3YEBAAA=
    Metadata:
      aws:cdk:path: CdkStarterStackStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  HttpApiUrl:
    Value:
      Fn::GetAtt:
        - HttpApiF5A9A8A7
        - ApiEndpoint
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

