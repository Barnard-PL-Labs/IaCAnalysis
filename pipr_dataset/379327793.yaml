Resources:
  RootStream89352062:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1
      RetentionPeriodHours: 24
      StreamEncryption:
        Fn::If:
          - AwsCdkKinesisEncryptedStreamsUnsupportedRegions
          - Ref: AWS::NoValue
          - EncryptionType: KMS
            KeyId: alias/aws/kinesis
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/RootStream/Resource
  RawDataBucket57F26C03:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/RawDataBucket/Resource
  RawDataBucketPolicyAAD9269B:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: RawDataBucket57F26C03
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - RawDataBucket57F26C03
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RawDataBucket57F26C03
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/RawDataBucket/Policy/Resource
  RawDataBucketAutoDeleteObjectsCustomResource1C0E67FF:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: RawDataBucket57F26C03
    DependsOn:
      - RawDataBucketPolicyAAD9269B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/RawDataBucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: RawDataBucket57F26C03
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
  firehoseRoleE5891AF8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/firehoseRole/Resource
  firehoseRoleDefaultPolicy27F13165:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - kinesis:DescribeStreamSummary
              - kinesis:GetRecords
              - kinesis:GetShardIterator
              - kinesis:ListShards
              - kinesis:SubscribeToShard
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RootStream89352062
                - Arn
          - Action: kinesis:DescribeStream
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RootStream89352062
                - Arn
          - Action:
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RawDataBucket57F26C03
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RawDataBucket57F26C03
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: firehoseRoleDefaultPolicy27F13165
      Roles:
        - Ref: firehoseRoleE5891AF8
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/firehoseRole/DefaultPolicy/Resource
  FirehoseStreamToS3:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: StreamRawToS3
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration:
        KinesisStreamARN:
          Fn::GetAtt:
            - RootStream89352062
            - Arn
        RoleARN:
          Fn::GetAtt:
            - firehoseRoleE5891AF8
            - Arn
      S3DestinationConfiguration:
        BucketARN:
          Fn::GetAtt:
            - RawDataBucket57F26C03
            - Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 64
        CompressionFormat: GZIP
        EncryptionConfiguration:
          NoEncryptionConfig: NoEncryption
        Prefix: raw/
        RoleARN:
          Fn::GetAtt:
            - firehoseRoleE5891AF8
            - Arn
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    DependsOn:
      - firehoseRoleDefaultPolicy27F13165
      - firehoseRoleE5891AF8
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/FirehoseStreamToS3
  AbnormalityTableE981BFF6:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: transactionId
          KeyType: HASH
        - AttributeName: createdAt
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: transactionId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/AbnormalityTable/Resource
  TableViewerRenderedServiceRole6A0ACC7A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/Rendered/ServiceRole/Resource
  TableViewerRenderedServiceRoleDefaultPolicy0A3806E2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AbnormalityTableE981BFF6
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: TableViewerRenderedServiceRoleDefaultPolicy0A3806E2
      Roles:
        - Ref: TableViewerRenderedServiceRole6A0ACC7A
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/Rendered/ServiceRole/DefaultPolicy/Resource
  TableViewerRendered1FC879B1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681S3Bucket8D949544
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681S3VersionKeyEFE93F18
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681S3VersionKeyEFE93F18
      Role:
        Fn::GetAtt:
          - TableViewerRenderedServiceRole6A0ACC7A
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: AbnormalityTableE981BFF6
          TITLE: Real Time High Transaction Table
          SORT_BY: -createdAt
      Handler: index.handler
      Runtime: nodejs12.x
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    DependsOn:
      - TableViewerRenderedServiceRoleDefaultPolicy0A3806E2
      - TableViewerRenderedServiceRole6A0ACC7A
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/Rendered/Resource
      aws:asset:path: asset.ca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681
      aws:asset:property: Code
  TableViewerViewerEndpointA2522EC3:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ViewerEndpoint
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Resource
  TableViewerViewerEndpointCloudWatchRole6D03ABE6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/CloudWatchRole/Resource
  TableViewerViewerEndpointAccount219DA077:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - TableViewerViewerEndpointCloudWatchRole6D03ABE6
          - Arn
    DependsOn:
      - TableViewerViewerEndpointA2522EC3
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Account
  TableViewerViewerEndpointDeployment783218191fd256d22fc50a0531bd625550962150:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: TableViewerViewerEndpointA2522EC3
      Description: Automatically created by the RestApi construct
    DependsOn:
      - TableViewerViewerEndpointproxyANYF58F311A
      - TableViewerViewerEndpointproxy76D30CC8
      - TableViewerViewerEndpointANYFD657945
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Deployment/Resource
  TableViewerViewerEndpointDeploymentStageprodAFC064F2:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: TableViewerViewerEndpointA2522EC3
      DeploymentId:
        Ref: TableViewerViewerEndpointDeployment783218191fd256d22fc50a0531bd625550962150
      StageName: prod
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/DeploymentStage.prod/Resource
  TableViewerViewerEndpointproxy76D30CC8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - TableViewerViewerEndpointA2522EC3
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: TableViewerViewerEndpointA2522EC3
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Default/{proxy+}/Resource
  TableViewerViewerEndpointproxyANYApiPermissionStreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2AANYproxy9950E4A5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TableViewerRendered1FC879B1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: TableViewerViewerEndpointA2522EC3
            - /
            - Ref: TableViewerViewerEndpointDeploymentStageprodAFC064F2
            - /*/*
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Default/{proxy+}/ANY/ApiPermission.StreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2A.ANY..{proxy+}
  TableViewerViewerEndpointproxyANYApiPermissionTestStreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2AANYproxy2C528D9F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TableViewerRendered1FC879B1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: TableViewerViewerEndpointA2522EC3
            - /test-invoke-stage/*/*
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Default/{proxy+}/ANY/ApiPermission.Test.StreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2A.ANY..{proxy+}
  TableViewerViewerEndpointproxyANYF58F311A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Ref: TableViewerViewerEndpointproxy76D30CC8
      RestApiId:
        Ref: TableViewerViewerEndpointA2522EC3
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TableViewerRendered1FC879B1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Default/{proxy+}/ANY/Resource
  TableViewerViewerEndpointANYApiPermissionStreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2AANY9274E225:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TableViewerRendered1FC879B1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: TableViewerViewerEndpointA2522EC3
            - /
            - Ref: TableViewerViewerEndpointDeploymentStageprodAFC064F2
            - /*/
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Default/ANY/ApiPermission.StreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2A.ANY..
  TableViewerViewerEndpointANYApiPermissionTestStreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2AANY81ED2A90:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TableViewerRendered1FC879B1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: TableViewerViewerEndpointA2522EC3
            - /test-invoke-stage/*/
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Default/ANY/ApiPermission.Test.StreamingSolutionWithCdkStackTableViewerViewerEndpoint1501AE2A.ANY..
  TableViewerViewerEndpointANYFD657945:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - TableViewerViewerEndpointA2522EC3
          - RootResourceId
      RestApiId:
        Ref: TableViewerViewerEndpointA2522EC3
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TableViewerRendered1FC879B1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/TableViewer/ViewerEndpoint/Default/ANY/Resource
  AbnormalNotificationCC390218:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Abnormal detected topic
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/AbnormalNotification/Resource
  AbnormalNotificationexampleamazoncom4B65DB9C:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn:
        Ref: AbnormalNotificationCC390218
      Endpoint: example@amazon.com
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/AbnormalNotification/example@amazon.com/Resource
  LambdaFanoutFunctionServiceRole76CF6E05:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/LambdaFanoutFunction/ServiceRole/Resource
  LambdaFanoutFunctionServiceRoleDefaultPolicy9D1EF7DD:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: AbnormalNotificationCC390218
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AbnormalityTableE981BFF6
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: LambdaFanoutFunctionServiceRoleDefaultPolicy9D1EF7DD
      Roles:
        - Ref: LambdaFanoutFunctionServiceRole76CF6E05
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/LambdaFanoutFunction/ServiceRole/DefaultPolicy/Resource
  LambdaFanoutFunctionC9171C1D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1cS3Bucket47321622
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1cS3VersionKey4338468C
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1cS3VersionKey4338468C
      Role:
        Fn::GetAtt:
          - LambdaFanoutFunctionServiceRole76CF6E05
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: AbnormalityTableE981BFF6
          TOPIC_ARN:
            Ref: AbnormalNotificationCC390218
      Handler: fanout.handler
      Runtime: python3.8
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    DependsOn:
      - LambdaFanoutFunctionServiceRoleDefaultPolicy9D1EF7DD
      - LambdaFanoutFunctionServiceRole76CF6E05
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/LambdaFanoutFunction/Resource
      aws:asset:path: asset.27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1c
      aws:asset:property: Code
  streamToAnalyticsRoleCEA9EE61:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: kinesisanalytics.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: date synthesized
          Value: "2024-01-18T07:35:04.437Z"
        - Key: environment
          Value: dev
        - Key: project
          Value: atlas
        - Key: role
          Value: real time streaming and storage
        - Key: version
          Value: "1.0"
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/streamToAnalyticsRole/Resource
  streamToAnalyticsRoleDefaultPolicyCD26D748:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - kinesis:*
              - lambda:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - LambdaFanoutFunctionC9171C1D
                  - Arn
              - Fn::GetAtt:
                  - RootStream89352062
                  - Arn
        Version: "2012-10-17"
      PolicyName: streamToAnalyticsRoleDefaultPolicyCD26D748
      Roles:
        - Ref: streamToAnalyticsRoleCEA9EE61
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/streamToAnalyticsRole/DefaultPolicy/Resource
  KinesisAnalyticsApplication:
    Type: AWS::KinesisAnalytics::Application
    Properties:
      Inputs:
        - InputParallelism:
            Count: 1
          InputSchema:
            RecordColumns:
              - Mapping: $.transactionId
                Name: transactionId
                SqlType: VARCHAR(64)
              - Mapping: $.name
                Name: name
                SqlType: VARCHAR(64)
              - Mapping: $.age
                Name: age
                SqlType: INTEGER
              - Mapping: $.address
                Name: address
                SqlType: VARCHAR(256)
              - Mapping: $.city
                Name: city
                SqlType: VARCHAR(32)
              - Mapping: $.state
                Name: state
                SqlType: VARCHAR(32)
              - Mapping: $.transaction
                Name: transaction
                SqlType: INTEGER
              - Mapping: $.bankId
                Name: bankId
                SqlType: VARCHAR(32)
              - Mapping: $.createdAt
                Name: createdAt
                SqlType: VARCHAR(32)
            RecordEncoding: UTF-8
            RecordFormat:
              MappingParameters:
                JSONMappingParameters:
                  RecordRowPath: $
              RecordFormatType: JSON
          KinesisStreamsInput:
            ResourceARN:
              Fn::GetAtt:
                - RootStream89352062
                - Arn
            RoleARN:
              Fn::GetAtt:
                - streamToAnalyticsRoleCEA9EE61
                - Arn
          NamePrefix: SOURCE_SQL_STREAM
      ApplicationCode: |-
        -- Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
        -- SPDX-License-Identifier: Apache-2.0
        -- ** Continuous Filter ** 
            -- Performs a continuous filter based on a WHERE condition.
            --          .----------.   .----------.   .----------.              
            --          |  SOURCE  |   |  INSERT  |   |  DESTIN. |              
            -- Source-->|  STREAM  |-->| & SELECT |-->|  STREAM  |-->Destination
            --          |          |   |  (PUMP)  |   |          |              
            --          '----------'   '----------'   '----------'               
            -- STREAM (in-application): a continuously updated entity that you can SELECT from and INSERT into like a TABLE
            -- PUMP: an entity used to continuously 'SELECT ... FROM' a source STREAM, and INSERT SQL results into an output STREAM
            -- Create output stream, which can be used to send to a destination
        CREATE OR REPLACE STREAM "DESTINATION_SQL_STREAM" 
        (
            "transactionId"     varchar(64),
            "name"              varchar(64),
            "age"               integer,
            "address"           varchar(256),
            "city"              varchar(32),
            "state"             varchar(32),
            "transaction"       integer,
            "bankId"            varchar(32),
            "createdAt"         varchar(32)
        );
        CREATE OR REPLACE PUMP "STREAM_PUMP" AS INSERT INTO "DESTINATION_SQL_STREAM"
        SELECT STREAM "transactionId", "name", "age", "address", "city", "state", "transaction", "bankId", "createdAt"
            FROM "SOURCE_SQL_STREAM_001"
            WHERE "transaction" > 9000;
      ApplicationName: abnormality-detector
    DependsOn:
      - streamToAnalyticsRoleDefaultPolicyCD26D748
      - streamToAnalyticsRoleCEA9EE61
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/KinesisAnalyticsApplication
  AnalyticsAppOutput:
    Type: AWS::KinesisAnalytics::ApplicationOutput
    Properties:
      ApplicationName: abnormality-detector
      Output:
        DestinationSchema:
          RecordFormatType: JSON
        LambdaOutput:
          ResourceARN:
            Fn::GetAtt:
              - LambdaFanoutFunctionC9171C1D
              - Arn
          RoleARN:
            Fn::GetAtt:
              - streamToAnalyticsRoleCEA9EE61
              - Arn
        Name: DESTINATION_SQL_STREAM
    DependsOn:
      - KinesisAnalyticsApplication
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/AnalyticsAppOutput
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE21Sy27CMBD8Fu7GCKpK7a081FOrIuAHFmeBJbEdeW1oFOXfa8ekUKknz+yO17OTTOXrs5yN3uDKY1WUk1ZZh7LdelClWB7M0pqCPFmTyFfwdfAi1ti7oCIK7K3eINvgFCbJHf9prZ29UIFOzJnRx+lHMsekX4MDjT52Bmknkpe2JINMnKw4BJ20GXWCn2S7CKpEn6o3lI+1rUg193LmnSDQst3YKntM5105aG4vHsjhyTLK2FphRRd0zc1D0RjQttjLdgf7PKsHnahA7wuQ7XswakjrEa/RaWKOLNkfQ0qBZR+GgJqO4PEKjWw/+jkxCj+v6ZbnAOdK2WC8WGFd2Uaj6dd/YClWzEElMAS6AI7rOvvd/PuhPtGfbJFKGUWDJsa+szWpfsMebMOelaN6WOiR/0YHBqrGk4rXk9+6jsHCcOOB5v+o6zphbIHyzJPL9EVOZ3I6OjPR2MU1SaPc5PMHjRbL7qQCAAA=
    Metadata:
      aws:cdk:path: StreamingSolutionWithCdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  AwsCdkKinesisEncryptedStreamsUnsupportedRegions:
    Fn::Or:
      - Fn::Equals:
          - Ref: AWS::Region
          - cn-north-1
      - Fn::Equals:
          - Ref: AWS::Region
          - cn-northwest-1
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Outputs:
  RootStreamName:
    Value:
      Ref: RootStream89352062
  TableViewerViewerEndpointE0298743:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: TableViewerViewerEndpointA2522EC3
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: TableViewerViewerEndpointDeploymentStageprodAFC064F2
          - /
Parameters:
  AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F:
    Type: String
    Description: S3 bucket for asset "4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392"
  AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626:
    Type: String
    Description: S3 key for asset version "4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392"
  AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392ArtifactHashE56CD69A:
    Type: String
    Description: Artifact hash for asset "4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392"
  AssetParametersca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681S3Bucket8D949544:
    Type: String
    Description: S3 bucket for asset "ca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681"
  AssetParametersca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681S3VersionKeyEFE93F18:
    Type: String
    Description: S3 key for asset version "ca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681"
  AssetParametersca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681ArtifactHashF3868D5D:
    Type: String
    Description: Artifact hash for asset "ca3eccc24c488dec9a89af5f5d51e4995df9b38d0124369a6442bdd4b1d2b681"
  AssetParameters27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1cS3Bucket47321622:
    Type: String
    Description: S3 bucket for asset "27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1c"
  AssetParameters27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1cS3VersionKey4338468C:
    Type: String
    Description: S3 key for asset version "27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1c"
  AssetParameters27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1cArtifactHashF0E98E97:
    Type: String
    Description: Artifact hash for asset "27b4abf223baa60c05faa251ac42094108e3886883b14b599eaff1aa56a67a1c"

