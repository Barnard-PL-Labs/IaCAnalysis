Resources:
  vpcA2121C38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/Resource
  vpcPublicSubnet1Subnet2E65531E:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet1/Subnet
  vpcPublicSubnet1RouteTable48A2DF9B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet1/RouteTable
  vpcPublicSubnet1RouteTableAssociation5D3F4579:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet1/RouteTableAssociation
  vpcPublicSubnet1DefaultRoute10708846:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet1/DefaultRoute
  vpcPublicSubnet1EIPDA49DCBE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet1/EIP
  vpcPublicSubnet1NATGateway9C16659E:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet1EIPDA49DCBE
          - AllocationId
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet1/NATGateway
  vpcPublicSubnet2Subnet009B674F:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet2/Subnet
  vpcPublicSubnet2RouteTableEB40D4CB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet2/RouteTable
  vpcPublicSubnet2RouteTableAssociation21F81B59:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet2/RouteTableAssociation
  vpcPublicSubnet2DefaultRouteA1EC0F60:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet2/DefaultRoute
  vpcPublicSubnet2EIP9B3743B1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet2/EIP
  vpcPublicSubnet2NATGateway9B8AE11A:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet2EIP9B3743B1
          - AllocationId
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PublicSubnet2/NATGateway
  vpcPrivateSubnet1Subnet934893E8:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: neptune-gremlin-test/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet1/Subnet
  vpcPrivateSubnet1RouteTableB41A48CC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet1/RouteTable
  vpcPrivateSubnet1RouteTableAssociation67945127:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      SubnetId:
        Ref: vpcPrivateSubnet1Subnet934893E8
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet1/RouteTableAssociation
  vpcPrivateSubnet1DefaultRoute1AA8E2E5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet1NATGateway9C16659E
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet1/DefaultRoute
  vpcPrivateSubnet2Subnet7031C2BA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: neptune-gremlin-test/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet2/Subnet
  vpcPrivateSubnet2RouteTable7280F23E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet2/RouteTable
  vpcPrivateSubnet2RouteTableAssociation007E94D3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      SubnetId:
        Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet2/RouteTableAssociation
  vpcPrivateSubnet2DefaultRouteB0E07F99:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet2NATGateway9B8AE11A
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/PrivateSubnet2/DefaultRoute
  vpcIGWE57CBDCA:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: neptune-gremlin-test/vpc
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/IGW
  vpcVPCGW7984C166:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpcA2121C38
      InternetGatewayId:
        Ref: vpcIGWE57CBDCA
    Metadata:
      aws:cdk:path: neptune-gremlin-test/vpc/VPCGW
  ClusterParams0B94958F:
    Type: AWS::Neptune::DBClusterParameterGroup
    Properties:
      Description: Cluster parameter group
      Family: neptune1
      Parameters:
        neptune_enable_audit_log: "1"
    Metadata:
      aws:cdk:path: neptune-gremlin-test/ClusterParams/Resource
  DbParamsC3A84CD6:
    Type: AWS::Neptune::DBParameterGroup
    Properties:
      Description: Db parameter group
      Family: neptune1
      Parameters:
        neptune_query_timeout: "10000"
    Metadata:
      aws:cdk:path: neptune-gremlin-test/DbParams/Resource
  ClusterSG897EB103:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Neptune Gremlin Test Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: neptune-gremlin-test/ClusterSG/Resource
  ClusterSGfromneptunegremlintestLambdaSG650F4BE1IndirectPortE2FA082A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from neptunegremlintestLambdaSG650F4BE1:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - cluster611F8AFF
          - Port
      GroupId:
        Fn::GetAtt:
          - ClusterSG897EB103
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - LambdaSG9DBFCFB7
          - GroupId
      ToPort:
        Fn::GetAtt:
          - cluster611F8AFF
          - Port
    Metadata:
      aws:cdk:path: neptune-gremlin-test/ClusterSG/from neptunegremlintestLambdaSG650F4BE1:{IndirectPort}
  clusterSubnetsEAB14264:
    Type: AWS::Neptune::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for cluster database
      SubnetIds:
        - Ref: vpcPrivateSubnet1Subnet934893E8
        - Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: neptune-gremlin-test/cluster/Subnets/Resource
  cluster611F8AFF:
    Type: AWS::Neptune::DBCluster
    Properties:
      BackupRetentionPeriod: 7
      DBClusterParameterGroupName:
        Ref: ClusterParams0B94958F
      DBSubnetGroupName:
        Ref: clusterSubnetsEAB14264
      DeletionProtection: true
      IamAuthEnabled: true
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - ClusterSG897EB103
            - GroupId
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: neptune-gremlin-test/cluster/Resource
  clusterInstance183584D40:
    Type: AWS::Neptune::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      AutoMinorVersionUpgrade: false
      DBClusterIdentifier:
        Ref: cluster611F8AFF
      DBParameterGroupName:
        Ref: DbParamsC3A84CD6
    DependsOn:
      - vpcPrivateSubnet1DefaultRoute1AA8E2E5
      - vpcPrivateSubnet2DefaultRouteB0E07F99
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: neptune-gremlin-test/cluster/Instance1
  LambdaSG9DBFCFB7:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Neptune Gremlin Test Lambda Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: neptune-gremlin-test/LambdaSG/Resource
  neptunegremlintestServiceRole70F75EDE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: neptune-gremlin-test/neptune-gremlin-test/ServiceRole/Resource
  neptunegremlintestServiceRoleDefaultPolicy2FA2C436:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: neptune-db:*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":neptune-db:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Fn::GetAtt:
                      - cluster611F8AFF
                      - ClusterResourceId
                  - /*
        Version: "2012-10-17"
      PolicyName: neptunegremlintestServiceRoleDefaultPolicy2FA2C436
      Roles:
        - Ref: neptunegremlintestServiceRole70F75EDE
    Metadata:
      aws:cdk:path: neptune-gremlin-test/neptune-gremlin-test/ServiceRole/DefaultPolicy/Resource
  neptunegremlintest74A06448:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1990cef240f37c6b3a5ab67d78075338c4846c52a0c7c343a544cc03c85e7925.zip
      Role:
        Fn::GetAtt:
          - neptunegremlintestServiceRole70F75EDE
          - Arn
      Environment:
        Variables:
          NEPTUNE_ENDPOINT:
            Fn::GetAtt:
              - cluster611F8AFF
              - Endpoint
          NEPTUNE_PORT:
            Fn::GetAtt:
              - cluster611F8AFF
              - Port
          USE_IAM: "true"
          USE_AWS4: "true"
      Handler: integration-test.handler
      MemorySize: 1536
      Runtime: nodejs14.x
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - LambdaSG9DBFCFB7
              - GroupId
        SubnetIds:
          - Ref: vpcPrivateSubnet1Subnet934893E8
          - Ref: vpcPrivateSubnet2Subnet7031C2BA
    DependsOn:
      - neptunegremlintestServiceRoleDefaultPolicy2FA2C436
      - neptunegremlintestServiceRole70F75EDE
    Metadata:
      aws:cdk:path: neptune-gremlin-test/neptune-gremlin-test/Resource
      aws:asset:path: asset.1990cef240f37c6b3a5ab67d78075338c4846c52a0c7c343a544cc03c85e7925
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31Sy27CMBD8Fu6OadILx5LQolzaKFRc0cbZgiGxo3gNQlH+vc4LUIV6mtnJeHczdsCDBW/8GVyMJ/KTV8iMNxsCcWJO2jUoAt5sK8GiH7VNIpbYrJBiYzOF1Gl3lmpL+A1ZgXf9ri2N0UICSa1u5o68x0kHn0BrILzAlSW1PDt6bxwrwtrxyTBsMlZLcrseSlTENihsLem6rrWt+h3+FWK1r9GYlimsyCrkjXOswqiwxs1LoIYSHbkdXoXPtGHNB2E8PxSxMgRKYMsKKLMcePNhlZhCmHjLJJS8SfUQXY+JdjH3/zqwlpnXHRiDZPiyA1fz0IoTUgjGDUjRaFuLvsOXpcoS633uLvdS7fvGD5ZIq1wOw30PiuoA/GX2Nr6CeYdjLOPH5nkuf8oVEGRunSmEh3RaF7TOkR/N/OwvuB9wf3Y0Unq1VSRL5OmAv+YvL1mRAgAA
    Metadata:
      aws:cdk:path: neptune-gremlin-test/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  WriteEndpointOutput:
    Value:
      Fn::Join:
        - ""
        - - Fn::GetAtt:
              - cluster611F8AFF
              - Endpoint
          - ":"
          - Fn::GetAtt:
              - cluster611F8AFF
              - Port
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

