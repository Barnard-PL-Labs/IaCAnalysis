Resources:
  discordcommandslambdaServiceRole1D2A4A42:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-commands-lambda/ServiceRole/Resource
  discordcommandslambdaServiceRoleDefaultPolicy09F93C78:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: discordbotendpointdiscordbotapikeyAA8DC489
        Version: "2012-10-17"
      PolicyName: discordcommandslambdaServiceRoleDefaultPolicy09F93C78
      Roles:
        - Ref: discordcommandslambdaServiceRole1D2A4A42
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-commands-lambda/ServiceRole/DefaultPolicy/Resource
  discordcommandslambda383AD657:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3Bucket6F7A10FB
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3VersionKey6306666C
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3VersionKey6306666C
      Role:
        Fn::GetAtt:
          - discordcommandslambdaServiceRole1D2A4A42
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          DISCORD_BOT_API_KEY_NAME:
            Fn::Join:
              - "-"
              - - Fn::Select:
                    - 0
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: discordbotendpointdiscordbotapikeyAA8DC489
                - Fn::Select:
                    - 1
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: discordbotendpointdiscordbotapikeyAA8DC489
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 60
    DependsOn:
      - discordcommandslambdaServiceRoleDefaultPolicy09F93C78
      - discordcommandslambdaServiceRole1D2A4A42
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-commands-lambda/Resource
      aws:asset:path: asset.cfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/rest/432488463
      aws:asset:is-bundled: true
      aws:asset:property: Code
  discordbotendpointdiscordbotapikeyAA8DC489:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString: {}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api-key/Resource
  discordbotendpointdiscordbotlambdaServiceRoleE1BA8F0E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-lambda/ServiceRole/Resource
  discordbotendpointdiscordbotlambdaServiceRoleDefaultPolicy23EF68EB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: discordbotendpointdiscordbotapikeyAA8DC489
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - discordcommandslambda383AD657
                - Arn
        Version: "2012-10-17"
      PolicyName: discordbotendpointdiscordbotlambdaServiceRoleDefaultPolicy23EF68EB
      Roles:
        - Ref: discordbotendpointdiscordbotlambdaServiceRoleE1BA8F0E
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-lambda/ServiceRole/DefaultPolicy/Resource
  discordbotendpointdiscordbotlambdaEDF529AC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3Bucket6F7A10FB
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3VersionKey6306666C
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3VersionKey6306666C
      Role:
        Fn::GetAtt:
          - discordbotendpointdiscordbotlambdaServiceRoleE1BA8F0E
          - Arn
      Environment:
        Variables:
          DISCORD_BOT_API_KEY_NAME:
            Fn::Join:
              - "-"
              - - Fn::Select:
                    - 0
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: discordbotendpointdiscordbotapikeyAA8DC489
                - Fn::Select:
                    - 1
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: discordbotendpointdiscordbotapikeyAA8DC489
          COMMAND_LAMBDA_ARN:
            Fn::GetAtt:
              - discordcommandslambda383AD657
              - Arn
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 3
    DependsOn:
      - discordbotendpointdiscordbotlambdaServiceRoleDefaultPolicy23EF68EB
      - discordbotendpointdiscordbotlambdaServiceRoleE1BA8F0E
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-lambda/Resource
      aws:asset:path: asset.cfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/rest/432488463
      aws:asset:is-bundled: true
      aws:asset:property: Code
  discordbotendpointdiscordbotapi9F01A7A8:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: discord-bot-api
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Resource
  discordbotendpointdiscordbotapiCloudWatchRole0681439A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/CloudWatchRole/Resource
  discordbotendpointdiscordbotapiAccount4AD25378:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - discordbotendpointdiscordbotapiCloudWatchRole0681439A
          - Arn
    DependsOn:
      - discordbotendpointdiscordbotapi9F01A7A8
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Account
  discordbotendpointdiscordbotapiDeployment10919DFF17cb2a72d6427cdc03c51ae3cc5d2d66:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: discordbotendpointdiscordbotapi9F01A7A8
      Description: Automatically created by the RestApi construct
    DependsOn:
      - discordbotendpointdiscordbotapivalidator2F5873B0
      - discordbotendpointdiscordbotapieventOPTIONS94181C76
      - discordbotendpointdiscordbotapieventPOSTB34843CC
      - discordbotendpointdiscordbotapievent261096F7
      - discordbotendpointdiscordbotapiOPTIONS7D908FD8
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Deployment/Resource
  discordbotendpointdiscordbotapiDeploymentStageprodF573AD37:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: discordbotendpointdiscordbotapi9F01A7A8
      DeploymentId:
        Ref: discordbotendpointdiscordbotapiDeployment10919DFF17cb2a72d6427cdc03c51ae3cc5d2d66
      StageName: prod
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/DeploymentStage.prod/Resource
  discordbotendpointdiscordbotapiOPTIONS7D908FD8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - discordbotendpointdiscordbotapi9F01A7A8
          - RootResourceId
      RestApiId:
        Ref: discordbotendpointdiscordbotapi9F01A7A8
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Default/OPTIONS/Resource
  discordbotendpointdiscordbotapievent261096F7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - discordbotendpointdiscordbotapi9F01A7A8
          - RootResourceId
      PathPart: event
      RestApiId:
        Ref: discordbotendpointdiscordbotapi9F01A7A8
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Default/event/Resource
  discordbotendpointdiscordbotapieventOPTIONS94181C76:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: discordbotendpointdiscordbotapievent261096F7
      RestApiId:
        Ref: discordbotendpointdiscordbotapi9F01A7A8
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Default/event/OPTIONS/Resource
  discordbotendpointdiscordbotapieventPOSTApiPermissionDiscordPhotoBotStackdiscordbotendpointdiscordbotapi20D8C92DPOSTevent40B0E37E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - discordbotendpointdiscordbotlambdaEDF529AC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: discordbotendpointdiscordbotapi9F01A7A8
            - /
            - Ref: discordbotendpointdiscordbotapiDeploymentStageprodF573AD37
            - /POST/event
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Default/event/POST/ApiPermission.DiscordPhotoBotStackdiscordbotendpointdiscordbotapi20D8C92D.POST..event
  discordbotendpointdiscordbotapieventPOSTApiPermissionTestDiscordPhotoBotStackdiscordbotendpointdiscordbotapi20D8C92DPOSTevent2ECC3596:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - discordbotendpointdiscordbotlambdaEDF529AC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: discordbotendpointdiscordbotapi9F01A7A8
            - /test-invoke-stage/POST/event
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Default/event/POST/ApiPermission.Test.DiscordPhotoBotStackdiscordbotendpointdiscordbotapi20D8C92D.POST..event
  discordbotendpointdiscordbotapieventPOSTB34843CC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: discordbotendpointdiscordbotapievent261096F7
      RestApiId:
        Ref: discordbotendpointdiscordbotapi9F01A7A8
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
          - ResponseTemplates:
              application/json: invalid request signature
            SelectionPattern: .*[UNAUTHORIZED].*
            StatusCode: "401"
        RequestTemplates:
          application/json: "{\r

            \              \"timestamp\": \"$input.params('x-signature-timestamp')\",\r

            \              \"signature\": \"$input.params('x-signature-ed25519')\",\r

            \              \"jsonBody\" : $input.json('$')\r

            \            }"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - discordbotendpointdiscordbotlambdaEDF529AC
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
        - StatusCode: "401"
      RequestValidatorId:
        Ref: discordbotendpointdiscordbotapivalidator2F5873B0
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api/Default/event/POST/Resource
  discordbotendpointdiscordbotapivalidator2F5873B0:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: discordbotendpointdiscordbotapi9F01A7A8
      ValidateRequestBody: true
      ValidateRequestParameters: true
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/discord-bot-endpoint/discord-bot-api-validator/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VQTU/DMAz9LbunGWUcOLINcQOmInE3qenSNkmJHaaq6n8nSbdpnPz88eznV8py8yDvVk9wokLV3XpSzqOcPhhUJ7ZEyBE22jZi7yyxD4rF/tsewINBRp+S98BDyOUKyQWvMOE4X2vWzs4iLZ96MF81FNbV2JJ8y+ElWJVGhAYjp8r1mZnjwfVajflWRrOgTQFJEMmsK+ZyF1SHvANCsayXUyRctyYyeqOJsgxC5SPdgIUGfXwy52lqQVHooBtgPMEY1SDxdtDnty5wq5QLlsUzDr0bDdrMv8mSXfmLBVwcyRpfkY+uTs0zuvXriiv8CfHgJ/S6BnZ+af6vzfMskpOypfVv+SjLe1muWtK68FGdNiirJf4BNhvtieEBAAA=
    Metadata:
      aws:cdk:path: DiscordPhotoBotStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3Bucket6F7A10FB:
    Type: String
    Description: S3 bucket for asset "cfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632"
  AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632S3VersionKey6306666C:
    Type: String
    Description: S3 key for asset version "cfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632"
  AssetParameterscfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632ArtifactHash48B1695D:
    Type: String
    Description: Artifact hash for asset "cfc9e57ae5cb718f5199676ce132235135386a4517282cfddbf257313aab2632"
Outputs:
  discordbotendpointdiscordbotapiEndpoint4DA5A53A:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: discordbotendpointdiscordbotapi9F01A7A8
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: discordbotendpointdiscordbotapiDeploymentStageprodF573AD37
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

