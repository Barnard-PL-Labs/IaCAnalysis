Resources:
  vpcA2121C38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/Resource
  vpcPublicSubnet1Subnet2E65531E:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1/Subnet
  vpcPublicSubnet1RouteTable48A2DF9B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1/RouteTable
  vpcPublicSubnet1RouteTableAssociation5D3F4579:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1/RouteTableAssociation
  vpcPublicSubnet1DefaultRoute10708846:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1/DefaultRoute
  vpcPublicSubnet1EIPDA49DCBE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1/EIP
  vpcPublicSubnet1NATGateway9C16659E:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet1EIPDA49DCBE
          - AllocationId
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet1/NATGateway
  vpcPublicSubnet2Subnet009B674F:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2/Subnet
  vpcPublicSubnet2RouteTableEB40D4CB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2/RouteTable
  vpcPublicSubnet2RouteTableAssociation21F81B59:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2/RouteTableAssociation
  vpcPublicSubnet2DefaultRouteA1EC0F60:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2/DefaultRoute
  vpcPublicSubnet2EIP9B3743B1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2/EIP
  vpcPublicSubnet2NATGateway9B8AE11A:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet2EIP9B3743B1
          - AllocationId
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PublicSubnet2/NATGateway
  vpcPrivateSubnet1Subnet934893E8:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet1/Subnet
  vpcPrivateSubnet1RouteTableB41A48CC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet1/RouteTable
  vpcPrivateSubnet1RouteTableAssociation67945127:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      SubnetId:
        Ref: vpcPrivateSubnet1Subnet934893E8
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet1/RouteTableAssociation
  vpcPrivateSubnet1DefaultRoute1AA8E2E5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet1NATGateway9C16659E
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet1/DefaultRoute
  vpcPrivateSubnet2Subnet7031C2BA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet2/Subnet
  vpcPrivateSubnet2RouteTable7280F23E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet2/RouteTable
  vpcPrivateSubnet2RouteTableAssociation007E94D3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      SubnetId:
        Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet2/RouteTableAssociation
  vpcPrivateSubnet2DefaultRouteB0E07F99:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet2NATGateway9B8AE11A
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/PrivateSubnet2/DefaultRoute
  vpcIGWE57CBDCA:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: sonarqube-on-aws-using-cdk/vpc
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/IGW
  vpcVPCGW7984C166:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpcA2121C38
      InternetGatewayId:
        Ref: vpcIGWE57CBDCA
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/vpc/VPCGW
  cluster611F8AFF:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/cluster/Resource
  sonarqubesgCE66344C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Aurora Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SonarDBAurora
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/sonarqube-sg/Resource
  auroraclusterSubnets83F2551A:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for aurora-cluster database
      SubnetIds:
        - Ref: vpcPrivateSubnet1Subnet934893E8
        - Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/aurora-cluster/Subnets/Default
  sonarqubeonawsusingcdkauroraclusterSecret5E8F80B43fdaad7efa858a3daf9490cf0a702aeb:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"postgres"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/aurora-cluster/Secret/Resource
  auroraclusterSecretAttachmentD6F2F582:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: sonarqubeonawsusingcdkauroraclusterSecret5E8F80B43fdaad7efa858a3daf9490cf0a702aeb
      TargetId:
        Ref: auroraclusterB80EE101
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/aurora-cluster/Secret/Attachment/Resource
  auroraclusterB80EE101:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      DatabaseName: sonarqube
      DBClusterParameterGroupName: default.aurora-postgresql10
      DBSubnetGroupName:
        Ref: auroraclusterSubnets83F2551A
      EngineMode: serverless
      EngineVersion: "10.18"
      MasterUsername: postgres
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: sonarqubeonawsusingcdkauroraclusterSecret5E8F80B43fdaad7efa858a3daf9490cf0a702aeb
            - :SecretString:password::}}
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - sonarqubesgCE66344C
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/aurora-cluster/Resource
  sonarqubetaskTaskRole4C3CDB09:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/sonarqube-task/TaskRole/Resource
  sonarqubetask81AB5144:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - -Dsonar.search.javaAdditionalOpts=-Dnode.store.allow_mmap=false
          Environment:
            - Name: sonar.jdbc.url
              Value:
                Fn::Join:
                  - ""
                  - - jdbc:postgresql://
                    - Fn::GetAtt:
                        - auroraclusterB80EE101
                        - Endpoint.Address
                    - ":"
                    - Fn::GetAtt:
                        - auroraclusterB80EE101
                        - Endpoint.Port
                    - /sonarqube
          Essential: true
          Image: public.ecr.aws/docker/library/sonarqube:community
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: sonarqubetasksonarqubeLogGroup945227E6
              awslogs-stream-prefix: sonarqube
              awslogs-region:
                Ref: AWS::Region
          Memory: 2048
          Name: sonarqube
          PortMappings:
            - ContainerPort: 9000
              Protocol: tcp
          Secrets:
            - Name: sonar.jdbc.password
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: auroraclusterSecretAttachmentD6F2F582
                    - ":password::"
            - Name: sonar.jdbc.username
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: auroraclusterSecretAttachmentD6F2F582
                    - ":username::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
      Cpu: "1024"
      ExecutionRoleArn:
        Fn::GetAtt:
          - sonarqubetaskExecutionRoleABF67147
          - Arn
      Family: sonarqubeonawsusingcdksonarqubetaskEC3DA72C
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - EC2
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - sonarqubetaskTaskRole4C3CDB09
          - Arn
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/sonarqube-task/Resource
  sonarqubetasksonarqubeLogGroup945227E6:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/sonarqube-task/sonarqube/LogGroup/Resource
  sonarqubetaskExecutionRoleABF67147:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/sonarqube-task/ExecutionRole/Resource
  sonarqubetaskExecutionRoleDefaultPolicy7A4FCB37:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - sonarqubetasksonarqubeLogGroup945227E6
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: auroraclusterSecretAttachmentD6F2F582
        Version: "2012-10-17"
      PolicyName: sonarqubetaskExecutionRoleDefaultPolicy7A4FCB37
      Roles:
        - Ref: sonarqubetaskExecutionRoleABF67147
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/sonarqube-task/ExecutionRole/DefaultPolicy/Resource
  albfargateserviceLB8454424E:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - albfargateserviceLBSecurityGroup4AAA56D6
            - GroupId
      Subnets:
        - Ref: vpcPublicSubnet1Subnet2E65531E
        - Ref: vpcPublicSubnet2Subnet009B674F
      Type: application
    DependsOn:
      - vpcPublicSubnet1DefaultRoute10708846
      - vpcPublicSubnet2DefaultRouteA1EC0F60
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/LB/Resource
  albfargateserviceLBSecurityGroup4AAA56D6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB sonarqubeonawsusingcdkalbfargateserviceLB9CAFE23A
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/LB/SecurityGroup/Resource
  albfargateserviceLBSecurityGrouptosonarqubeonawsusingcdkalbfargateserviceServiceSecurityGroup04D6F1829000E9CB4024:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - albfargateserviceLBSecurityGroup4AAA56D6
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - albfargateserviceServiceSecurityGroup97B09155
          - GroupId
      FromPort: 9000
      ToPort: 9000
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/LB/SecurityGroup/to sonarqubeonawsusingcdkalbfargateserviceServiceSecurityGroup04D6F182:9000
  albfargateserviceLBPublicListener63F07851:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: albfargateserviceLBPublicListenerECSGroupBB2879F0
          Type: forward
      LoadBalancerArn:
        Ref: albfargateserviceLB8454424E
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/LB/PublicListener/Resource
  albfargateserviceLBPublicListenerECSGroupBB2879F0:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/LB/PublicListener/ECSGroup/Resource
  albfargateserviceServiceDB203385:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: cluster611F8AFF
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: sonarqube
          ContainerPort: 9000
          TargetGroupArn:
            Ref: albfargateserviceLBPublicListenerECSGroupBB2879F0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - albfargateserviceServiceSecurityGroup97B09155
                - GroupId
          Subnets:
            - Ref: vpcPrivateSubnet1Subnet934893E8
            - Ref: vpcPrivateSubnet2Subnet7031C2BA
      TaskDefinition:
        Ref: sonarqubetask81AB5144
    DependsOn:
      - albfargateserviceLBPublicListenerECSGroupBB2879F0
      - albfargateserviceLBPublicListener63F07851
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/Service/Service
  albfargateserviceServiceSecurityGroup97B09155:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: sonarqube-on-aws-using-cdk/alb-fargate-service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/Service/SecurityGroup/Resource
  albfargateserviceServiceSecurityGroupfromsonarqubeonawsusingcdkalbfargateserviceLBSecurityGroupEB8EECD29000B0D98AEF:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 9000
      GroupId:
        Fn::GetAtt:
          - albfargateserviceServiceSecurityGroup97B09155
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - albfargateserviceLBSecurityGroup4AAA56D6
          - GroupId
      ToPort: 9000
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/alb-fargate-service/Service/SecurityGroup/from sonarqubeonawsusingcdkalbfargateserviceLBSecurityGroupEB8EECD2:9000
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31TyU7DMBD9Fu6uUcuFaxdAlRBEbcUVTZwhTOvakZciFOXf8dKkUUGc5s3Ls2d5zozfzfj0Br7sRFSHiaSSt1sH4sAC9d6imPH2rRFs+aHeiiUrfClJbH2p0EXugjbaO9xBKfHCX7i5tVoQONJqEEfwsC5ieAH3BA6/4JsVhk4BXi5eK4cm4F6QOzlncxd6/TyicmyLwhty309G+yb18C/xUBu09he9VonvGArL26X0NlSPqh7uwB5W+EGK+mGuGa0ckEIz4h7B1HEoNCcSeUEZdsxUoU7M0MhQuC+T5x9aXy3GxAoclGDDfcLkJa0W54Mds4m0R1BQowkzpAmjLodd6AXdaHGD4PpLxwiOvN3o7GmKhQ7+JxMy6pjUdZjgWddDsz1OS3xvwEUDLZ83TTiR3sCzhmoBEpTA6mo3KME6EjIoyqQgVZ/CI/z7tMn1RvlYR2Ej6qzp8eh7nndoe5R2Hdug1d5ks169a3x+5SM2GF0lezumdIV8b29P03s+jf/T3hJNjFeOjsg3Of4ADYisXmsDAAA=
    Metadata:
      aws:cdk:path: sonarqube-on-aws-using-cdk/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  albfargateserviceLoadBalancerDNS6381B9EE:
    Value:
      Fn::GetAtt:
        - albfargateserviceLB8454424E
        - DNSName
  albfargateserviceServiceURL078708AC:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - albfargateserviceLB8454424E
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

