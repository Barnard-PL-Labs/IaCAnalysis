Resources:
  prodvpc9A176720:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/Resource
  prodvpcStudioSubnet1SubnetA2B8C5B3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Studio
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/StudioSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet1/Subnet
  prodvpcStudioSubnet1RouteTable34AECEED:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/StudioSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet1/RouteTable
  prodvpcStudioSubnet1RouteTableAssociationB418BBA3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcStudioSubnet1RouteTable34AECEED
      SubnetId:
        Ref: prodvpcStudioSubnet1SubnetA2B8C5B3
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet1/RouteTableAssociation
  prodvpcStudioSubnet1DefaultRouteA4381114:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: prodvpcStudioSubnet1RouteTable34AECEED
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: prodvpcIGW7569190A
    DependsOn:
      - prodvpcVPCGW596CC609
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet1/DefaultRoute
  prodvpcStudioSubnet2SubnetFE504866:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Studio
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/StudioSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet2/Subnet
  prodvpcStudioSubnet2RouteTableB1F2A7F9:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/StudioSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet2/RouteTable
  prodvpcStudioSubnet2RouteTableAssociation145E8CE7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcStudioSubnet2RouteTableB1F2A7F9
      SubnetId:
        Ref: prodvpcStudioSubnet2SubnetFE504866
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet2/RouteTableAssociation
  prodvpcStudioSubnet2DefaultRoute4CF357BD:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: prodvpcStudioSubnet2RouteTableB1F2A7F9
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: prodvpcIGW7569190A
    DependsOn:
      - prodvpcVPCGW596CC609
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/StudioSubnet2/DefaultRoute
  prodvpcwindowsorchestratorSubnet1Subnet8790F5BC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: windows orchestrator
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet1/Subnet
  prodvpcwindowsorchestratorSubnet1RouteTable8D779BAC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet1/RouteTable
  prodvpcwindowsorchestratorSubnet1RouteTableAssociation2883CEF8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcwindowsorchestratorSubnet1RouteTable8D779BAC
      SubnetId:
        Ref: prodvpcwindowsorchestratorSubnet1Subnet8790F5BC
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet1/RouteTableAssociation
  prodvpcwindowsorchestratorSubnet2Subnet9618BDD7:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: windows orchestrator
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet2/Subnet
  prodvpcwindowsorchestratorSubnet2RouteTable71606A72:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet2/RouteTable
  prodvpcwindowsorchestratorSubnet2RouteTableAssociationBA212158:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcwindowsorchestratorSubnet2RouteTable71606A72
      SubnetId:
        Ref: prodvpcwindowsorchestratorSubnet2Subnet9618BDD7
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/windows orchestratorSubnet2/RouteTableAssociation
  prodvpcHAAorchestratorSubnet1Subnet917E543F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.4.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: HAA orchestrator
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet1/Subnet
  prodvpcHAAorchestratorSubnet1RouteTableA61065B0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet1/RouteTable
  prodvpcHAAorchestratorSubnet1RouteTableAssociationF50E8912:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcHAAorchestratorSubnet1RouteTableA61065B0
      SubnetId:
        Ref: prodvpcHAAorchestratorSubnet1Subnet917E543F
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet1/RouteTableAssociation
  prodvpcHAAorchestratorSubnet2SubnetF98DB1E7:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.5.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: HAA orchestrator
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet2/Subnet
  prodvpcHAAorchestratorSubnet2RouteTable2EEC3F52:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet2/RouteTable
  prodvpcHAAorchestratorSubnet2RouteTableAssociationB9109805:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcHAAorchestratorSubnet2RouteTable2EEC3F52
      SubnetId:
        Ref: prodvpcHAAorchestratorSubnet2SubnetF98DB1E7
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/HAA orchestratorSubnet2/RouteTableAssociation
  prodvpcRDSSQLServerSubnet1SubnetA9908CBF:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.6.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: RDS SQL Server
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet1/Subnet
  prodvpcRDSSQLServerSubnet1RouteTable3F5E2BDA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet1/RouteTable
  prodvpcRDSSQLServerSubnet1RouteTableAssociation39E6980E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcRDSSQLServerSubnet1RouteTable3F5E2BDA
      SubnetId:
        Ref: prodvpcRDSSQLServerSubnet1SubnetA9908CBF
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet1/RouteTableAssociation
  prodvpcRDSSQLServerSubnet2Subnet4A08E7BF:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.7.0/24
      VpcId:
        Ref: prodvpc9A176720
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: RDS SQL Server
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet2/Subnet
  prodvpcRDSSQLServerSubnet2RouteTableACC8EE7B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet2/RouteTable
  prodvpcRDSSQLServerSubnet2RouteTableAssociation143FD13A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: prodvpcRDSSQLServerSubnet2RouteTableACC8EE7B
      SubnetId:
        Ref: prodvpcRDSSQLServerSubnet2Subnet4A08E7BF
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/RDS SQL ServerSubnet2/RouteTableAssociation
  prodvpcIGW7569190A:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/prodvpc
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/IGW
  prodvpcVPCGW596CC609:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: prodvpc9A176720
      InternetGatewayId:
        Ref: prodvpcIGW7569190A
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/prodvpc/VPCGW
  StudioSecurityGroupF50CBE60:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow outbound traffic from ec2 instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: allow http access from anyIpv4
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: allow rdp access from anyIpv4
          FromPort: 3389
          IpProtocol: tcp
          ToPort: 3389
      VpcId:
        Ref: prodvpc9A176720
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/StudioSecurityGroup/Resource
  StudioASGInstanceRole3CE5CBFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/Studio-ASG
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/InstanceRole/Resource
  StudioASGInstanceProfile8D446535:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: StudioASGInstanceRole3CE5CBFB
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/InstanceProfile
  StudioASGLaunchConfigC86187BA:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiwindowslatestWindowsServer2019EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.micro
      IamInstanceProfile:
        Ref: StudioASGInstanceProfile8D446535
      KeyName: MilanKP
      SecurityGroups:
        - Fn::GetAtt:
            - StudioSecurityGroupF50CBE60
            - GroupId
      UserData:
        Fn::Base64: <powershell></powershell>
    DependsOn:
      - StudioASGInstanceRole3CE5CBFB
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/LaunchConfig
  StudioASGD285D34C:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "4"
      MinSize: "1"
      AutoScalingGroupName: Studio-ASG
      DesiredCapacity: "1"
      LaunchConfigurationName:
        Ref: StudioASGLaunchConfigC86187BA
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: UiPathBaseArchitectureStack/Studio-ASG
      VPCZoneIdentifier:
        - Ref: prodvpcStudioSubnet1SubnetA2B8C5B3
        - Ref: prodvpcStudioSubnet2SubnetFE504866
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/ASG
  StudioASGScaleToCPULowerPolicyC352F64F:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName:
        Ref: StudioASGD285D34C
      AdjustmentType: ChangeInCapacity
      MetricAggregationType: Average
      PolicyType: StepScaling
      StepAdjustments:
        - MetricIntervalUpperBound: 0
          ScalingAdjustment: -1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/ScaleToCPU/LowerPolicy/Resource
  StudioASGScaleToCPULowerAlarm28E17BF4:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - Ref: StudioASGScaleToCPULowerPolicyC352F64F
      AlarmDescription: Lower threshold scaling alarm
      MetricName: WorkerUtilization
      Namespace: MyService
      Period: 300
      Statistic: Average
      Threshold: 10
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/ScaleToCPU/LowerAlarm/Resource
  StudioASGScaleToCPUUpperPolicyC883EE5F:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName:
        Ref: StudioASGD285D34C
      AdjustmentType: ChangeInCapacity
      MetricAggregationType: Average
      PolicyType: StepScaling
      StepAdjustments:
        - MetricIntervalLowerBound: 0
          MetricIntervalUpperBound: 20
          ScalingAdjustment: 1
        - MetricIntervalLowerBound: 20
          ScalingAdjustment: 2
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/ScaleToCPU/UpperPolicy/Resource
  StudioASGScaleToCPUUpperAlarm1F1468C3:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - Ref: StudioASGScaleToCPUUpperPolicyC883EE5F
      AlarmDescription: Upper threshold scaling alarm
      MetricName: WorkerUtilization
      Namespace: MyService
      Period: 300
      Statistic: Average
      Threshold: 60
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Studio-ASG/ScaleToCPU/UpperAlarm/Resource
  WinSecurityGroupBD5C7536:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow outbound traffic from winasg ec2 instances
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/24
          Description: allow http access from Studio cidr
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: prodvpc9A176720
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinSecurityGroup/Resource
  WinSecurityGroupfromUiPathBaseArchitectureStackStudioSecurityGroup29AFDD598036C9686A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: allow DIRECT (no NLB) http access from studio instances
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - WinSecurityGroupBD5C7536
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - StudioSecurityGroupF50CBE60
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinSecurityGroup/from UiPathBaseArchitectureStackStudioSecurityGroup29AFDD59:80
  WinSecurityGroupfromUiPathBaseArchitectureStackStudioSecurityGroup29AFDD5933890EA30A31:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: allow DIRECT (no NLB) rdp access from studio instances
      FromPort: 3389
      GroupId:
        Fn::GetAtt:
          - WinSecurityGroupBD5C7536
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - StudioSecurityGroupF50CBE60
          - GroupId
      ToPort: 3389
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinSecurityGroup/from UiPathBaseArchitectureStackStudioSecurityGroup29AFDD59:3389
  WinASGInstanceRole164B14B6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/WinASG
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinASG/InstanceRole/Resource
  WinASGInstanceProfile7E1E887D:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: WinASGInstanceRole164B14B6
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinASG/InstanceProfile
  WinASGLaunchConfig6AFE03CB:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiwindowslatestWindowsServer2019EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.micro
      IamInstanceProfile:
        Ref: WinASGInstanceProfile7E1E887D
      KeyName: MilanKP
      SecurityGroups:
        - Fn::GetAtt:
            - WinSecurityGroupBD5C7536
            - GroupId
      UserData:
        Fn::Base64: <powershell></powershell>
    DependsOn:
      - WinASGInstanceRole164B14B6
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinASG/LaunchConfig
  WinASG145F5C96:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "4"
      MinSize: "1"
      AutoScalingGroupName: WinASG
      DesiredCapacity: "1"
      LaunchConfigurationName:
        Ref: WinASGLaunchConfig6AFE03CB
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: UiPathBaseArchitectureStack/WinASG
      TargetGroupARNs:
        - Ref: WinOrchestratorNLBListenerTargetGroupCFF57CD7
      VPCZoneIdentifier:
        - Ref: prodvpcwindowsorchestratorSubnet1Subnet8790F5BC
        - Ref: prodvpcwindowsorchestratorSubnet2Subnet9618BDD7
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinASG/ASG
  WinASGScalingPolicyKeepSpareCPU5430359D:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName:
        Ref: WinASG145F5C96
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/WinASG/ScalingPolicyKeepSpareCPU/Resource
  WinOrchestratorNLB40474D6F:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
        - Key: load_balancing.cross_zone.enabled
          Value: "true"
      Name: OrchestratorNLB
      Scheme: internal
      Subnets:
        - Ref: prodvpcwindowsorchestratorSubnet1Subnet8790F5BC
        - Ref: prodvpcwindowsorchestratorSubnet2Subnet9618BDD7
      Type: network
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Win Orchestrator NLB/Resource
  WinOrchestratorNLBListener359D53FE:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: WinOrchestratorNLBListenerTargetGroupCFF57CD7
          Type: forward
      LoadBalancerArn:
        Ref: WinOrchestratorNLB40474D6F
      Port: 80
      Protocol: TCP
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Win Orchestrator NLB/Listener/Resource
  WinOrchestratorNLBListenerTargetGroupCFF57CD7:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: WinASG-Target-Group
      Port: 80
      Protocol: TCP
      TargetType: instance
      VpcId:
        Ref: prodvpc9A176720
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/Win Orchestrator NLB/Listener/TargetGroup/Resource
  HAAAustoScalingGgroupInstanceSecurityGroup4A0CB6E5:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup
      VpcId:
        Ref: prodvpc9A176720
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup/InstanceSecurityGroup/Resource
  HAAAustoScalingGgroupInstanceSecurityGroupfromUiPathBaseArchitectureStackWinSecurityGroup8CA9A6DF8071F249DB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from UiPathBaseArchitectureStackWinSecurityGroup8CA9A6DF:80
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - HAAAustoScalingGgroupInstanceSecurityGroup4A0CB6E5
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - WinSecurityGroupBD5C7536
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup/InstanceSecurityGroup/from UiPathBaseArchitectureStackWinSecurityGroup8CA9A6DF:80
  HAAAustoScalingGgroupInstanceRoleEBE501DC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup/InstanceRole/Resource
  HAAAustoScalingGgroupInstanceProfile667E51DC:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: HAAAustoScalingGgroupInstanceRoleEBE501DC
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup/InstanceProfile
  HAAAustoScalingGgroupLaunchConfig2FD16310:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.micro
      IamInstanceProfile:
        Ref: HAAAustoScalingGgroupInstanceProfile667E51DC
      KeyName: MilanKP
      SecurityGroups:
        - Fn::GetAtt:
            - HAAAustoScalingGgroupInstanceSecurityGroup4A0CB6E5
            - GroupId
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - HAAAustoScalingGgroupInstanceRoleEBE501DC
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup/LaunchConfig
  HAAAustoScalingGgroupASG96BF39EB:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "4"
      MinSize: "1"
      AutoScalingGroupName: HAA-ASG
      DesiredCapacity: "1"
      LaunchConfigurationName:
        Ref: HAAAustoScalingGgroupLaunchConfig2FD16310
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup
      VPCZoneIdentifier:
        - Ref: prodvpcHAAorchestratorSubnet1Subnet917E543F
        - Ref: prodvpcHAAorchestratorSubnet2SubnetF98DB1E7
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/HAA-AustoScalingGgroup/ASG
  mssqlrdsinstanceSubnetGroup6CA41F4A:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for mssql-rds-instance database
      SubnetIds:
        - Ref: prodvpcRDSSQLServerSubnet1SubnetA9908CBF
        - Ref: prodvpcRDSSQLServerSubnet2Subnet4A08E7BF
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/mssql-rds-instance/SubnetGroup/Default
  mssqlrdsinstanceSecurityGroupA15C58A5:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for mssql-rds-instance database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: prodvpc9A176720
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/mssql-rds-instance/SecurityGroup/Resource
  mssqlrdsinstanceSecurityGroupfromUiPathBaseArchitectureStackWinSecurityGroup8CA9A6DF14332E94A6C9:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from UiPathBaseArchitectureStackWinSecurityGroup8CA9A6DF:1433
      FromPort: 1433
      GroupId:
        Fn::GetAtt:
          - mssqlrdsinstanceSecurityGroupA15C58A5
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - WinSecurityGroupBD5C7536
          - GroupId
      ToPort: 1433
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/mssql-rds-instance/SecurityGroup/from UiPathBaseArchitectureStackWinSecurityGroup8CA9A6DF:1433
  mssqlrdsinstanceSecretDF588712:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/mssql-rds-instance/Secret/Resource
  mssqlrdsinstanceSecretAttachment2F978537:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: mssqlrdsinstanceSecretDF588712
      TargetId:
        Ref: mssqlrdsinstance915F448E
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/mssql-rds-instance/Secret/Attachment/Resource
  mssqlrdsinstance915F448E:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.xlarge
      AllocatedStorage: "25"
      AutoMinorVersionUpgrade: false
      CopyTagsToSnapshot: true
      DBSubnetGroupName:
        Ref: mssqlrdsinstanceSubnetGroup6CA41F4A
      DeletionProtection: false
      Engine: sqlserver-ee
      LicenseModel: license-included
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: mssqlrdsinstanceSecretDF588712
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: mssqlrdsinstanceSecretDF588712
            - :SecretString:password::}}
      MultiAZ: true
      Port: "1433"
      PubliclyAccessible: false
      StorageEncrypted: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - mssqlrdsinstanceSecurityGroupA15C58A5
            - GroupId
    UpdateReplacePolicy: Snapshot
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/mssql-rds-instance/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.83.0,@aws-cdk/aws-applicationautoscaling=1.83.0,@aws-cdk/aws-autoscaling=1.83.0,@aws-cdk/aws-autoscaling-common=1.83.0,@aws-cdk/aws-cloudwatch=1.83.0,@aws-cdk/aws-codeguruprofiler=1.83.0,@aws-cdk/aws-ec2=1.83.0,@aws-cdk/aws-ecr=1.83.0,@aws-cdk/aws-ecr-assets=1.83.0,@aws-cdk/aws-elasticloadbalancingv2=1.83.0,@aws-cdk/aws-events=1.83.0,@aws-cdk/aws-iam=1.83.0,@aws-cdk/aws-kms=1.83.0,@aws-cdk/aws-lambda=1.83.0,@aws-cdk/aws-logs=1.83.0,@aws-cdk/aws-rds=1.83.0,@aws-cdk/aws-s3=1.83.0,@aws-cdk/aws-s3-assets=1.83.0,@aws-cdk/aws-sam=1.83.0,@aws-cdk/aws-secretsmanager=1.83.0,@aws-cdk/aws-sqs=1.83.0,@aws-cdk/aws-ssm=1.83.0,@aws-cdk/cloud-assembly-schema=1.83.0,@aws-cdk/core=1.83.0,@aws-cdk/cx-api=1.83.0,@aws-cdk/region-info=1.83.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: UiPathBaseArchitectureStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiwindowslatestWindowsServer2019EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base
  SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

