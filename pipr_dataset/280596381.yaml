Resources:
  EKSVpcBAB3E5CC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AcsEksCluster/EKSVpc
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/Resource
  EKSVpcPublicSubnet1Subnet6F739FCA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: EKSVpcBAB3E5CC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet1/Subnet
  EKSVpcPublicSubnet1RouteTable258B7E17:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EKSVpcBAB3E5CC
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet1/RouteTable
  EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EKSVpcPublicSubnet1RouteTable258B7E17
      SubnetId:
        Ref: EKSVpcPublicSubnet1Subnet6F739FCA
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet1/RouteTableAssociation
  EKSVpcPublicSubnet1DefaultRouteF13B673C:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EKSVpcPublicSubnet1RouteTable258B7E17
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EKSVpcIGW6C6D33F8
    DependsOn:
      - EKSVpcVPCGW60CB8A7B
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet1/DefaultRoute
  EKSVpcPublicSubnet1EIPA7436DE4:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet1/EIP
  EKSVpcPublicSubnet1NATGatewayE8A16310:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EKSVpcPublicSubnet1EIPA7436DE4
          - AllocationId
      SubnetId:
        Ref: EKSVpcPublicSubnet1Subnet6F739FCA
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet1/NATGateway
  EKSVpcPublicSubnet2Subnet22F974C4:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: EKSVpcBAB3E5CC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet2/Subnet
  EKSVpcPublicSubnet2RouteTable0AB21A14:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EKSVpcBAB3E5CC
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet2/RouteTable
  EKSVpcPublicSubnet2RouteTableAssociation56EB44CD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EKSVpcPublicSubnet2RouteTable0AB21A14
      SubnetId:
        Ref: EKSVpcPublicSubnet2Subnet22F974C4
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet2/RouteTableAssociation
  EKSVpcPublicSubnet2DefaultRoute6E6CA646:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EKSVpcPublicSubnet2RouteTable0AB21A14
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EKSVpcIGW6C6D33F8
    DependsOn:
      - EKSVpcVPCGW60CB8A7B
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet2/DefaultRoute
  EKSVpcPublicSubnet2EIPBD601F30:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet2/EIP
  EKSVpcPublicSubnet2NATGateway06A389FD:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EKSVpcPublicSubnet2EIPBD601F30
          - AllocationId
      SubnetId:
        Ref: EKSVpcPublicSubnet2Subnet22F974C4
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PublicSubnet2/NATGateway
  EKSVpcPrivateSubnet1SubnetD09A7726:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: EKSVpcBAB3E5CC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet1/Subnet
  EKSVpcPrivateSubnet1RouteTable158AD21B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EKSVpcBAB3E5CC
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet1/RouteTable
  EKSVpcPrivateSubnet1RouteTableAssociation05ED387B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EKSVpcPrivateSubnet1RouteTable158AD21B
      SubnetId:
        Ref: EKSVpcPrivateSubnet1SubnetD09A7726
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet1/RouteTableAssociation
  EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EKSVpcPrivateSubnet1RouteTable158AD21B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EKSVpcPublicSubnet1NATGatewayE8A16310
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet1/DefaultRoute
  EKSVpcPrivateSubnet2Subnet75FE259E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: EKSVpcBAB3E5CC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet2/Subnet
  EKSVpcPrivateSubnet2RouteTable584CB1D6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EKSVpcBAB3E5CC
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: AcsEksCluster/EKSVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet2/RouteTable
  EKSVpcPrivateSubnet2RouteTableAssociation56D711FD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EKSVpcPrivateSubnet2RouteTable584CB1D6
      SubnetId:
        Ref: EKSVpcPrivateSubnet2Subnet75FE259E
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet2/RouteTableAssociation
  EKSVpcPrivateSubnet2DefaultRoute6DA3F959:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EKSVpcPrivateSubnet2RouteTable584CB1D6
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EKSVpcPublicSubnet2NATGateway06A389FD
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/PrivateSubnet2/DefaultRoute
  EKSVpcIGW6C6D33F8:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AcsEksCluster/EKSVpc
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/IGW
  EKSVpcVPCGW60CB8A7B:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: EKSVpcBAB3E5CC
      InternetGatewayId:
        Ref: EKSVpcIGW6C6D33F8
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSVpc/VPCGW
  EKSWorkerRole2A87069F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSWorkerNodePolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKS_CNI_Policy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSWorkerRole/Resource
  EKSWorkerRoleDefaultPolicy7FC01588:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ec2:DescribeVpcs
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: EKSWorkerRoleDefaultPolicy7FC01588
      Roles:
        - Ref: EKSWorkerRole2A87069F
    Metadata:
      aws:cdk:path: AcsEksCluster/EKSWorkerRole/DefaultPolicy/Resource
  eksClusterAdminE955DB57:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AcsEksCluster/eksClusterAdmin/Resource
  clusterAdmin9FD4BDDE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
      RoleName: KubernetesAdmin
    Metadata:
      aws:cdk:path: AcsEksCluster/clusterAdmin/Resource
  developer3716CCE4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
      RoleName: KubernetesDeveloper
    Metadata:
      aws:cdk:path: AcsEksCluster/developer/Resource
  eksadministratorsD051299E:
    Type: AWS::IAM::Group
    Properties:
      GroupName: eks-administrators
    Metadata:
      aws:cdk:path: AcsEksCluster/eks-administrators/Resource
  eksdevelopers99C3B73F:
    Type: AWS::IAM::Group
    Properties:
      GroupName: eks-developers
    Metadata:
      aws:cdk:path: AcsEksCluster/eks-developers/Resource
  assumeEKSAdminRole9A8CED20:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - clusterAdmin9FD4BDDE
                - Arn
        Version: "2012-10-17"
      Description: ""
      Groups:
        - Ref: eksadministratorsD051299E
      ManagedPolicyName: assume-KubernetesAdmin-role
      Path: /
    Metadata:
      aws:cdk:path: AcsEksCluster/assumeEKSAdminRole/Resource
  assumeEKSDeveloperRole87ACDC67:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - developer3716CCE4
                - Arn
        Version: "2012-10-17"
      Description: ""
      Groups:
        - Ref: eksdevelopers99C3B73F
      ManagedPolicyName: assume-KubernetesDeveloper-role
      Path: /
    Metadata:
      aws:cdk:path: AcsEksCluster/assumeEKSDeveloperRole/Resource
  ClusterRoleFA261979:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/Role/Resource
  ClusterControlPlaneSecurityGroupD274242C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: EKSVpcBAB3E5CC
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/ControlPlaneSecurityGroup/Resource
  ClusterControlPlaneSecurityGroupfromAcsEksClusterOnDemandASGInstanceSecurityGroup5892C97F443B3579236:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from AcsEksClusterOnDemandASGInstanceSecurityGroup5892C97F:443
      FromPort: 443
      GroupId:
        Fn::GetAtt:
          - ClusterControlPlaneSecurityGroupD274242C
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - OnDemandASGInstanceSecurityGroup58386299
          - GroupId
      ToPort: 443
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/ControlPlaneSecurityGroup/from AcsEksClusterOnDemandASGInstanceSecurityGroup5892C97F:443
  ClusterCreationRole360249B6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                - Fn::GetAtt:
                    - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
                    - Outputs.AcsEksClusterawscdkawseksClusterResourceProviderOnEventHandlerServiceRoleFD85797FArn
                - Fn::GetAtt:
                    - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
                    - Outputs.AcsEksClusterawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole3764738BArn
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
                  - Outputs.AcsEksClusterawscdkawseksKubectlProviderHandlerServiceRole67A395C6Arn
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/Resource/CreationRole/Resource
  ClusterCreationRoleDefaultPolicyE8BDFC7B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ClusterRoleFA261979
                - Arn
          - Action:
              - ec2:DescribeSubnets
              - ec2:DescribeRouteTables
            Effect: Allow
            Resource: "*"
          - Action:
              - eks:CreateCluster
              - eks:DescribeCluster
              - eks:DescribeUpdate
              - eks:DeleteCluster
              - eks:UpdateClusterVersion
              - eks:UpdateClusterConfig
              - eks:CreateFargateProfile
              - eks:TagResource
              - eks:UntagResource
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":eks:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :cluster/AcsEksCluster
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":eks:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :cluster/AcsEksCluster/*
          - Action:
              - eks:DescribeFargateProfile
              - eks:DeleteFargateProfile
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":eks:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :fargateprofile/AcsEksCluster/*
          - Action:
              - iam:GetRole
              - iam:listAttachedRolePolicies
            Effect: Allow
            Resource: "*"
          - Action: iam:CreateServiceLinkedRole
            Effect: Allow
            Resource: "*"
          - Action: ec2:DescribeVpcs
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ec2:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :vpc/
                  - Ref: EKSVpcBAB3E5CC
        Version: "2012-10-17"
      PolicyName: ClusterCreationRoleDefaultPolicyE8BDFC7B
      Roles:
        - Ref: ClusterCreationRole360249B6
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/Resource/CreationRole/DefaultPolicy/Resource
  Cluster9EE0221C:
    Type: Custom::AWSCDK-EKS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.AcsEksClusterawscdkawseksClusterResourceProviderframeworkonEvent2C304575Arn
      Config:
        name: AcsEksCluster
        roleArn:
          Fn::GetAtt:
            - ClusterRoleFA261979
            - Arn
        version: "1.15"
        resourcesVpcConfig:
          securityGroupIds:
            - Fn::GetAtt:
                - ClusterControlPlaneSecurityGroupD274242C
                - GroupId
          subnetIds:
            - Ref: EKSVpcPublicSubnet1Subnet6F739FCA
            - Ref: EKSVpcPublicSubnet2Subnet22F974C4
            - Ref: EKSVpcPrivateSubnet1SubnetD09A7726
            - Ref: EKSVpcPrivateSubnet2Subnet75FE259E
      AssumeRoleArn:
        Fn::GetAtt:
          - ClusterCreationRole360249B6
          - Arn
      AttributesRevision: 2
    DependsOn:
      - ClusterCreationRoleDefaultPolicyE8BDFC7B
      - ClusterCreationRole360249B6
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/Resource/Resource/Default
  ClusterKubectlReadyBarrier200052AF:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: aws:cdk:eks:kubectl-ready
    DependsOn:
      - ClusterCreationRoleDefaultPolicyE8BDFC7B
      - ClusterCreationRole360249B6
      - Cluster9EE0221C
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/KubectlReadyBarrier
  ClusterAwsAuthmanifestFE51F8AE:
    Type: Custom::AWSCDK-EKS-KubernetesResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B
          - Outputs.AcsEksClusterawscdkawseksKubectlProviderframeworkonEvent9A3B6E29Arn
      Manifest:
        Fn::Join:
          - ""
          - - '[{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-auth","namespace":"kube-system"},"data":{"mapRoles":"[{\"rolearn\":\"'
            - Fn::GetAtt:
                - eksClusterAdminE955DB57
                - Arn
            - \",\"username\":\"
            - Fn::GetAtt:
                - eksClusterAdminE955DB57
                - Arn
            - \",\"groups\":[\"system:masters\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - clusterAdmin9FD4BDDE
                - Arn
            - \",\"username\":\"k8s-cluster-admin-user\",\"groups\":[\"system:masters\"]},{\"rolearn\":\"
            - Fn::GetAtt:
                - EKSWorkerRole2A87069F
                - Arn
            - \",\"username\":\"system:node:{{EC2PrivateDNSName}}\",\"groups\":[\"system:bootstrappers\",\"system:nodes\"]}]","mapUsers":"[]","mapAccounts":"[]"}}]
      ClusterName:
        Ref: Cluster9EE0221C
      RoleArn:
        Fn::GetAtt:
          - ClusterCreationRole360249B6
          - Arn
    DependsOn:
      - ClusterKubectlReadyBarrier200052AF
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AcsEksCluster/Cluster/AwsAuth/manifest/Resource/Default
  awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Ref: AssetParameters9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14dbS3BucketD8C7A666
            - /
            - Fn::Select:
                - 0
                - Fn::Split:
                    - "||"
                    - Ref: AssetParameters9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14dbS3VersionKeyB845DBB9
            - Fn::Select:
                - 1
                - Fn::Split:
                    - "||"
                    - Ref: AssetParameters9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14dbS3VersionKeyB845DBB9
      Parameters:
        referencetoAcsEksClusterAssetParametersc3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687S3BucketFB305E90Ref:
          Ref: AssetParametersc3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687S3Bucket14704681
        referencetoAcsEksClusterAssetParametersc3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687S3VersionKey55EE3B6ERef:
          Ref: AssetParametersc3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687S3VersionKey216BCBBA
        referencetoAcsEksClusterAssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3Bucket051E21D7Ref:
          Ref: AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4
        referencetoAcsEksClusterAssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyECF5390FRef:
          Ref: AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41
    Metadata:
      aws:cdk:path: AcsEksCluster/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource
  awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Ref: AssetParameters8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1S3Bucket7E9B0D22
            - /
            - Fn::Select:
                - 0
                - Fn::Split:
                    - "||"
                    - Ref: AssetParameters8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1S3VersionKey0E0C65EA
            - Fn::Select:
                - 1
                - Fn::Split:
                    - "||"
                    - Ref: AssetParameters8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1S3VersionKey0E0C65EA
      Parameters:
        referencetoAcsEksClusterAssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3Bucket9D9BA5FARef:
          Ref: AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3Bucket0EAA682D
        referencetoAcsEksClusterAssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3VersionKey76DD2370Ref:
          Ref: AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3VersionKeyF3400812
        referencetoAcsEksClusterAssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3Bucket051E21D7Ref:
          Ref: AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4
        referencetoAcsEksClusterAssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyECF5390FRef:
          Ref: AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41
    Metadata:
      aws:cdk:path: AcsEksCluster/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource
  OnDemandASGInstanceSecurityGroup58386299:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AcsEksCluster/OnDemandASG/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key:
            Fn::Join:
              - ""
              - - kubernetes.io/cluster/
                - Ref: Cluster9EE0221C
          Value: owned
        - Key: Name
          Value: AcsEksCluster/OnDemandASG
      VpcId:
        Ref: EKSVpcBAB3E5CC
    Metadata:
      aws:cdk:path: AcsEksCluster/OnDemandASG/InstanceSecurityGroup/Resource
  OnDemandASGInstanceSecurityGroupfromAcsEksClusterOnDemandASGInstanceSecurityGroup5892C97FALLTRAFFICEE7466E2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "-1"
      Description: from AcsEksClusterOnDemandASGInstanceSecurityGroup5892C97F:ALL TRAFFIC
      GroupId:
        Fn::GetAtt:
          - OnDemandASGInstanceSecurityGroup58386299
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - OnDemandASGInstanceSecurityGroup58386299
          - GroupId
    Metadata:
      aws:cdk:path: AcsEksCluster/OnDemandASG/InstanceSecurityGroup/from AcsEksClusterOnDemandASGInstanceSecurityGroup5892C97F:ALL TRAFFIC
  OnDemandASGInstanceSecurityGroupfromAcsEksClusterControlPlaneSecurityGroup9B54A53A443C43AE19D:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from AcsEksClusterControlPlaneSecurityGroup9B54A53A:443
      FromPort: 443
      GroupId:
        Fn::GetAtt:
          - OnDemandASGInstanceSecurityGroup58386299
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ClusterControlPlaneSecurityGroupD274242C
          - GroupId
      ToPort: 443
    Metadata:
      aws:cdk:path: AcsEksCluster/OnDemandASG/InstanceSecurityGroup/from AcsEksClusterControlPlaneSecurityGroup9B54A53A:443
  OnDemandASGInstanceSecurityGroupfromAcsEksClusterControlPlaneSecurityGroup9B54A53A1025655357B83A9F5:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from AcsEksClusterControlPlaneSecurityGroup9B54A53A:1025-65535
      FromPort: 1025
      GroupId:
        Fn::GetAtt:
          - OnDemandASGInstanceSecurityGroup58386299
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ClusterControlPlaneSecurityGroupD274242C
          - GroupId
      ToPort: 65535
    Metadata:
      aws:cdk:path: AcsEksCluster/OnDemandASG/InstanceSecurityGroup/from AcsEksClusterControlPlaneSecurityGroup9B54A53A:1025-65535
  OnDemandASGInstanceProfile0FD1CDE0:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: EKSWorkerRole2A87069F
    Metadata:
      aws:cdk:path: AcsEksCluster/OnDemandASG/InstanceProfile
  OnDemandASGLaunchConfig15AF6999:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceeksoptimizedami114amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.xlarge
      IamInstanceProfile:
        Ref: OnDemandASGInstanceProfile0FD1CDE0
      SecurityGroups:
        - Fn::GetAtt:
            - OnDemandASGInstanceSecurityGroup58386299
            - GroupId
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash
                set -o xtrace
                /etc/eks/bootstrap.sh 
              - Ref: Cluster9EE0221C
              - |-2
                 --kubelet-extra-args "--node-labels lifecycle=OnDemand" --use-max-pods true
                /opt/aws/bin/cfn-signal --exit-code $? --stack AcsEksCluster --resource OnDemandASGC62213FE --region 
              - Ref: AWS::Region
    DependsOn:
      - EKSWorkerRoleDefaultPolicy7FC01588
      - EKSWorkerRole2A87069F
    Metadata:
      aws:cdk:path: AcsEksCluster/OnDemandASG/LaunchConfig
  OnDemandASGC62213FE:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      LaunchConfigurationName:
        Ref: OnDemandASGLaunchConfig15AF6999
      Tags:
        - Key:
            Fn::Join:
              - ""
              - - kubernetes.io/cluster/
                - Ref: Cluster9EE0221C
          PropagateAtLaunch: true
          Value: owned
        - Key: Name
          PropagateAtLaunch: true
          Value: AcsEksCluster/OnDemandASG
      VPCZoneIdentifier:
        - Ref: EKSVpcPrivateSubnet1SubnetD09A7726
        - Ref: EKSVpcPrivateSubnet2Subnet75FE259E
    UpdatePolicy:
      AutoScalingRollingUpdate:
        WaitOnResourceSignals: false
        PauseTime: PT0S
        SuspendProcesses:
          - HealthCheck
          - ReplaceUnhealthy
          - AZRebalance
          - AlarmNotification
          - ScheduledActions
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: AcsEksCluster/OnDemandASG/ASG
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.53.0,@aws-cdk/aws-autoscaling=1.53.0,@aws-cdk/aws-autoscaling-common=1.53.0,@aws-cdk/aws-cloudwatch=1.53.0,@aws-cdk/aws-codeguruprofiler=1.53.0,@aws-cdk/aws-ec2=1.53.0,@aws-cdk/aws-eks=1.53.0,@aws-cdk/aws-elasticloadbalancingv2=1.53.0,@aws-cdk/aws-events=1.53.0,@aws-cdk/aws-iam=1.53.0,@aws-cdk/aws-kms=1.53.0,@aws-cdk/aws-lambda=1.53.0,@aws-cdk/aws-logs=1.53.0,@aws-cdk/aws-s3=1.53.0,@aws-cdk/aws-s3-assets=1.53.0,@aws-cdk/aws-sqs=1.53.0,@aws-cdk/aws-ssm=1.53.0,@aws-cdk/cloud-assembly-schema=1.53.0,@aws-cdk/core=1.53.0,@aws-cdk/custom-resources=1.53.0,@aws-cdk/cx-api=1.53.0,@aws-cdk/region-info=1.53.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Outputs:
  ClusterConfigCommand43AAE40F:
    Value:
      Fn::Join:
        - ""
        - - "aws eks update-kubeconfig --name "
          - Ref: Cluster9EE0221C
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - eksClusterAdminE955DB57
              - Arn
  ClusterGetTokenCommand06AE992E:
    Value:
      Fn::Join:
        - ""
        - - "aws eks get-token --cluster-name "
          - Ref: Cluster9EE0221C
          - " --region "
          - Ref: AWS::Region
          - " --role-arn "
          - Fn::GetAtt:
              - eksClusterAdminE955DB57
              - Arn
Parameters:
  AssetParametersc3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687S3Bucket14704681:
    Type: String
    Description: S3 bucket for asset "c3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687"
  AssetParametersc3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687S3VersionKey216BCBBA:
    Type: String
    Description: S3 key for asset version "c3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687"
  AssetParametersc3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687ArtifactHash0BF714E2:
    Type: String
    Description: Artifact hash for asset "c3d1020b86a8004a5da885c4df3780cff4516a7c0cae64ca6be8204e16f9d687"
  AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4:
    Type: String
    Description: S3 bucket for asset "812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14"
  AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41:
    Type: String
    Description: S3 key for asset version "812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14"
  AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14ArtifactHash47216AA1:
    Type: String
    Description: Artifact hash for asset "812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14"
  AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3Bucket0EAA682D:
    Type: String
    Description: S3 bucket for asset "2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050"
  AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3VersionKeyF3400812:
    Type: String
    Description: S3 key for asset version "2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050"
  AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050ArtifactHashF4CEE19F:
    Type: String
    Description: Artifact hash for asset "2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050"
  AssetParameters9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14dbS3BucketD8C7A666:
    Type: String
    Description: S3 bucket for asset "9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14db"
  AssetParameters9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14dbS3VersionKeyB845DBB9:
    Type: String
    Description: S3 key for asset version "9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14db"
  AssetParameters9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14dbArtifactHashB424F3C6:
    Type: String
    Description: Artifact hash for asset "9838d286e2a93f84d20a2a44d540df6b585b4d281e8e6b7bc07fdc41a81e14db"
  AssetParameters8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1S3Bucket7E9B0D22:
    Type: String
    Description: S3 bucket for asset "8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1"
  AssetParameters8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1S3VersionKey0E0C65EA:
    Type: String
    Description: S3 key for asset version "8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1"
  AssetParameters8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1ArtifactHash1B74B375:
    Type: String
    Description: Artifact hash for asset "8eb833e5817c452c0eeda117ede3b2a10ff69db0177b1f71a9041f5663fa40d1"
  SsmParameterValueawsserviceeksoptimizedami114amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/eks/optimized-ami/1.14/amazon-linux-2/recommended/image_id
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

