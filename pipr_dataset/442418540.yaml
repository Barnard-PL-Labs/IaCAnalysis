Resources:
  appContainerRepoCBCDBB42:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE
      RepositoryName: cdk-fargate-example-app
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/appContainerRepo/Resource
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkFargateExampleStack/Vpc
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/Resource
  VpcpublicSubnet1Subnet2BB74ED7:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/28
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkFargateExampleStack/Vpc/publicSubnet1
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet1/Subnet
  VpcpublicSubnet1RouteTable15C15F8E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CdkFargateExampleStack/Vpc/publicSubnet1
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet1/RouteTable
  VpcpublicSubnet1RouteTableAssociation4E83B6E4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet1RouteTable15C15F8E
      SubnetId:
        Ref: VpcpublicSubnet1Subnet2BB74ED7
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet1/RouteTableAssociation
  VpcpublicSubnet1DefaultRouteB88F9E93:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet1RouteTable15C15F8E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet1/DefaultRoute
  VpcpublicSubnet2SubnetE34B022A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.16/28
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkFargateExampleStack/Vpc/publicSubnet2
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet2/Subnet
  VpcpublicSubnet2RouteTableC5A6DF77:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CdkFargateExampleStack/Vpc/publicSubnet2
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet2/RouteTable
  VpcpublicSubnet2RouteTableAssociationCCE257FF:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet2RouteTableC5A6DF77
      SubnetId:
        Ref: VpcpublicSubnet2SubnetE34B022A
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet2/RouteTableAssociation
  VpcpublicSubnet2DefaultRoute732F0BEB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcpublicSubnet2RouteTableC5A6DF77
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/publicSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkFargateExampleStack/Vpc
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/Vpc/VPCGW
  cluster611F8AFF:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/cluster/Resource
  albSecurityGroup624E032B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkFargateExampleStack/albSecurityGroup
      GroupName: cdk-fargate-example-alb-security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/albSecurityGroup/Resource
  serviceSecurityGroupED3E18CA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkFargateExampleStack/serviceSecurityGroup
      GroupName: cdk-fargate-example-service-security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/serviceSecurityGroup/Resource
  serviceSecurityGroupfromCdkFargateExampleStackalbSecurityGroup9F5AE0B4ALLPORTS035BB502:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from CdkFargateExampleStackalbSecurityGroup9F5AE0B4:ALL PORTS
      FromPort: 0
      GroupId:
        Fn::GetAtt:
          - serviceSecurityGroupED3E18CA
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - albSecurityGroup624E032B
          - GroupId
      ToPort: 65535
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/serviceSecurityGroup/from CdkFargateExampleStackalbSecurityGroup9F5AE0B4:ALL PORTS
  serviceSecurityGroupfromCdkFargateExampleStackalbSecurityGroup9F5AE0B4803C81175C:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - serviceSecurityGroupED3E18CA
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - albSecurityGroup624E032B
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/serviceSecurityGroup/from CdkFargateExampleStackalbSecurityGroup9F5AE0B4:80
  namespace177341A3:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: cdk.ecs.local
      Vpc:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/namespace/Resource
  taskRole4695B131:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/taskRole/Resource
  taskRoleDefaultPolicy8002BF36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
            Sid: allowECSExec
          - Action:
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
            Effect: Allow
            Resource: "*"
          - Action: logs:DescribeLogGroups
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: taskRoleDefaultPolicy8002BF36
      Roles:
        - Ref: taskRole4695B131
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/taskRole/DefaultPolicy/Resource
  taskExecutionRole505FC329:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/taskExecutionRole/Resource
  taskExecutionRoleDefaultPolicyD67C8981:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:us-east-1:"
                  - Ref: AWS::AccountId
                  - :repository/cdk-fargate-example-app
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - logGroup68A52FBE
                - Arn
        Version: "2012-10-17"
      PolicyName: taskExecutionRoleDefaultPolicyD67C8981
      Roles:
        - Ref: taskExecutionRole505FC329
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/taskExecutionRole/DefaultPolicy/Resource
  logGroup68A52FBE:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: cdk-fargate-example
      RetentionInDays: 731
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/logGroup/Resource
  alb8A8B13C2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - albSecurityGroup624E032B
            - GroupId
      Subnets:
        - Ref: VpcpublicSubnet1Subnet2BB74ED7
        - Ref: VpcpublicSubnet2SubnetE34B022A
      Type: application
    DependsOn:
      - VpcpublicSubnet1DefaultRouteB88F9E93
      - VpcpublicSubnet2DefaultRoute732F0BEB
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/alb/Resource
  albalbListenerCCDDDDBE:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: albalbListenerEcsGroup1A4638F4
          Type: forward
      LoadBalancerArn:
        Ref: alb8A8B13C2
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/alb/albListener/Resource
  albalbListenerEcsGroup1A4638F4:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/alb/albListener/EcsGroup/Resource
  taskDefinitionD5BB2FFF:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.us-east-1.
                - Ref: AWS::URLSuffix
                - /cdk-fargate-example-app:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: logGroup68A52FBE
              awslogs-stream-prefix: cdk-fargate-example
              awslogs-region: us-east-1
          Name: app
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - taskExecutionRole505FC329
          - Arn
      Family: CdkFargateExampleStacktaskDefinition050CD244
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - taskRole4695B131
          - Arn
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/taskDefinition/Resource
  fargateServiceCBEE2F3B:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: cluster611F8AFF
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      EnableExecuteCommand: true
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: app
          ContainerPort: 80
          TargetGroupArn:
            Ref: albalbListenerEcsGroup1A4638F4
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::GetAtt:
                - serviceSecurityGroupED3E18CA
                - GroupId
          Subnets:
            - Ref: VpcpublicSubnet1Subnet2BB74ED7
            - Ref: VpcpublicSubnet2SubnetE34B022A
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - fargateServiceCloudmapServiceBF17D7F3
              - Arn
      TaskDefinition:
        Ref: taskDefinitionD5BB2FFF
    DependsOn:
      - albalbListenerEcsGroup1A4638F4
      - albalbListenerCCDDDDBE
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/fargateService/Service
  fargateServiceCloudmapServiceBF17D7F3:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - namespace177341A3
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      NamespaceId:
        Fn::GetAtt:
          - namespace177341A3
          - Id
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/fargateService/CloudmapService/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STW+DMAz9Lb3TbO0uu/ZDqypVEypVr5NJXeYWEhQHKoT47wukFDZVO+X5+Rnbz8zFm3idwI2n8nSdphSLOrIgr4GjvmqURtR7zDWT1aYKVmc1iga4BMYmQDkX9TGXrewYroKwiFOSURErtC03oL0uLB4gTnHgB27BrCWBJa0e4hZslUXjlBuweIPq3uYeLawb+ztDZYMIZWHIVhuji7xr8C+xVYlB5nZ+FvUqLdi1aVU9/ACTQDsbX9d4JkX9ZH8ZrSyQQjPi7rURmpKk39bDJmAPTsRSl2gqUYeGSideK/6EDDkHX/GMfvZBgsxdS3tTuzfU7gCdUR41QaoTt+ROJw8veuz2T4EtyVTDKYYUlCSVlO6kizx3xd09di637HLeol/xWEfOOXXX9HiUPzhb3CH7GUZh07j/inVh/HI9bgKlTygu/FLO3sVsLmaTCxNNTaEsZSj2/v0Bn6vYMs8CAAA=
    Metadata:
      aws:cdk:path: CdkFargateExampleStack/CDKMetadata/Default
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

