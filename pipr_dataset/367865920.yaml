Resources:
  cookiejar729EF98D:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: store
          KeyType: HASH
        - AttributeName: productId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: store
          AttributeType: S
        - AttributeName: productId
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: mms-cookie-jar
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-jar/Resource
  cookieretrieverServiceRoleEA3A3266:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever/ServiceRole/Resource
  cookieretrieverServiceRoleDefaultPolicy2E6A9912:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - cookiejar729EF98D
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: botconstructoculusstartdiscordapikeyA0AF8929
        Version: "2012-10-17"
      PolicyName: cookieretrieverServiceRoleDefaultPolicy2E6A9912
      Roles:
        - Ref: cookieretrieverServiceRoleEA3A3266
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever/ServiceRole/DefaultPolicy/Resource
  cookieretrieverD5E1C8D3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7S3BucketDF8FB19A
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7S3VersionKeyB7119C84
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7S3VersionKeyB7119C84
      Role:
        Fn::GetAtt:
          - cookieretrieverServiceRoleEA3A3266
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: cookiejar729EF98D
          USER_ROLES: ""
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          DISCORD_BOT_API_KEY_NAME:
            Fn::Join:
              - "-"
              - - Fn::Select:
                    - 0
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: botconstructoculusstartdiscordapikeyA0AF8929
                - Fn::Select:
                    - 1
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: botconstructoculusstartdiscordapikeyA0AF8929
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 3
    DependsOn:
      - cookieretrieverServiceRoleDefaultPolicy2E6A9912
      - cookieretrieverServiceRoleEA3A3266
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever/Resource
      aws:asset:path: asset.a1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7
      aws:asset:property: Code
  botconstructoculusstartdiscordapikeyA0AF8929:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString: {}
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/oculus-start-discord-api-key/Resource
  botconstructdiscordbotlambdaServiceRoleB80631A0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-lambda/ServiceRole/Resource
  botconstructdiscordbotlambdaServiceRoleDefaultPolicyE94CFB38:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: botconstructoculusstartdiscordapikeyA0AF8929
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - cookieretrieverD5E1C8D3
                - Arn
        Version: "2012-10-17"
      PolicyName: botconstructdiscordbotlambdaServiceRoleDefaultPolicyE94CFB38
      Roles:
        - Ref: botconstructdiscordbotlambdaServiceRoleB80631A0
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-lambda/ServiceRole/DefaultPolicy/Resource
  botconstructdiscordbotlambda8396F1B3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6S3Bucket817FA6E2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6S3VersionKeyCFEF9A95
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6S3VersionKeyCFEF9A95
      Role:
        Fn::GetAtt:
          - botconstructdiscordbotlambdaServiceRoleB80631A0
          - Arn
      Environment:
        Variables:
          DISCORD_BOT_API_KEY_NAME:
            Fn::Join:
              - "-"
              - - Fn::Select:
                    - 0
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: botconstructoculusstartdiscordapikeyA0AF8929
                - Fn::Select:
                    - 1
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: botconstructoculusstartdiscordapikeyA0AF8929
          COMMAND_LAMBDA_ARN:
            Fn::GetAtt:
              - cookieretrieverD5E1C8D3
              - Arn
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 3
    DependsOn:
      - botconstructdiscordbotlambdaServiceRoleDefaultPolicyE94CFB38
      - botconstructdiscordbotlambdaServiceRoleB80631A0
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-lambda/Resource
      aws:asset:path: asset.755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6
      aws:asset:property: Code
  botconstructdiscordbotapi6B3ECC48:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: discord-bot-api
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Resource
  botconstructdiscordbotapiCloudWatchRole2837F94C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/CloudWatchRole/Resource
  botconstructdiscordbotapiAccount014C3058:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - botconstructdiscordbotapiCloudWatchRole2837F94C
          - Arn
    DependsOn:
      - botconstructdiscordbotapi6B3ECC48
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Account
  botconstructdiscordbotapiDeploymentB10A15563e2fbb29d5a0ea52f62150f76a03fde9:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: botconstructdiscordbotapi6B3ECC48
      Description: Automatically created by the RestApi construct
    DependsOn:
      - botconstructdiscordbotapivalidatorF83A21AD
      - botconstructdiscordbotapieventOPTIONSB4C7EA09
      - botconstructdiscordbotapieventPOSTB4498655
      - botconstructdiscordbotapievent91C85CD7
      - botconstructdiscordbotapiOPTIONSA272D21F
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Deployment/Resource
  botconstructdiscordbotapiDeploymentStageprod0EB2B752:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: botconstructdiscordbotapi6B3ECC48
      DeploymentId:
        Ref: botconstructdiscordbotapiDeploymentB10A15563e2fbb29d5a0ea52f62150f76a03fde9
      StageName: prod
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/DeploymentStage.prod/Resource
  botconstructdiscordbotapiOPTIONSA272D21F:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - botconstructdiscordbotapi6B3ECC48
          - RootResourceId
      RestApiId:
        Ref: botconstructdiscordbotapi6B3ECC48
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Default/OPTIONS/Resource
  botconstructdiscordbotapievent91C85CD7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - botconstructdiscordbotapi6B3ECC48
          - RootResourceId
      PathPart: event
      RestApiId:
        Ref: botconstructdiscordbotapi6B3ECC48
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Default/event/Resource
  botconstructdiscordbotapieventOPTIONSB4C7EA09:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: botconstructdiscordbotapievent91C85CD7
      RestApiId:
        Ref: botconstructdiscordbotapi6B3ECC48
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Default/event/OPTIONS/Resource
  botconstructdiscordbotapieventPOSTApiPermissionCookieMonsterStackbotconstructdiscordbotapiC36DF802POSTevent82DBCB0F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - botconstructdiscordbotlambda8396F1B3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: botconstructdiscordbotapi6B3ECC48
            - /
            - Ref: botconstructdiscordbotapiDeploymentStageprod0EB2B752
            - /POST/event
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Default/event/POST/ApiPermission.CookieMonsterStackbotconstructdiscordbotapiC36DF802.POST..event
  botconstructdiscordbotapieventPOSTApiPermissionTestCookieMonsterStackbotconstructdiscordbotapiC36DF802POSTevent6B7650B4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - botconstructdiscordbotlambda8396F1B3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: botconstructdiscordbotapi6B3ECC48
            - /test-invoke-stage/POST/event
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Default/event/POST/ApiPermission.Test.CookieMonsterStackbotconstructdiscordbotapiC36DF802.POST..event
  botconstructdiscordbotapieventPOSTB4498655:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: botconstructdiscordbotapievent91C85CD7
      RestApiId:
        Ref: botconstructdiscordbotapi6B3ECC48
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
          - ResponseTemplates:
              application/json: invalid request signature
            SelectionPattern: .*[UNAUTHORIZED].*
            StatusCode: "401"
        RequestTemplates:
          application/json: "{\r

            \              \"timestamp\": \"$input.params('x-signature-timestamp')\",\r

            \              \"signature\": \"$input.params('x-signature-ed25519')\",\r

            \              \"jsonBody\" : $input.json('$')\r

            \            }"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - botconstructdiscordbotlambda8396F1B3
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
        - StatusCode: "401"
      RequestValidatorId:
        Ref: botconstructdiscordbotapivalidatorF83A21AD
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api/Default/event/POST/Resource
  botconstructdiscordbotapivalidatorF83A21AD:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: botconstructdiscordbotapi6B3ECC48
      ValidateRequestBody: true
      ValidateRequestParameters: true
    Metadata:
      aws:cdk:path: CookieMonsterStack/bot-construct/discord-bot-api-validator/Resource
  cookieretrieverapi27BDB861:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: This service serves the cookie retriever
      Name: Cookie Retriever Service
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/Resource
  cookieretrieverapiCloudWatchRoleB91C88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/CloudWatchRole/Resource
  cookieretrieverapiAccount640407A6:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - cookieretrieverapiCloudWatchRoleB91C88EC
          - Arn
    DependsOn:
      - cookieretrieverapi27BDB861
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/Account
  cookieretrieverapiDeploymentC5AE7B30fed98c7b14c490fd7915ddcb03c73e34:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: cookieretrieverapi27BDB861
      Description: Automatically created by the RestApi construct
    DependsOn:
      - cookieretrieverapiGETAB263267
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/Deployment/Resource
  cookieretrieverapiDeploymentStageprod8D943FED:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: cookieretrieverapi27BDB861
      DeploymentId:
        Ref: cookieretrieverapiDeploymentC5AE7B30fed98c7b14c490fd7915ddcb03c73e34
      StageName: prod
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/DeploymentStage.prod/Resource
  cookieretrieverapiGETApiPermissionCookieMonsterStackcookieretrieverapi4FB3A3C0GETE70BAAA4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - cookieretrieverD5E1C8D3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: cookieretrieverapi27BDB861
            - /
            - Ref: cookieretrieverapiDeploymentStageprod8D943FED
            - /GET/
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/Default/GET/ApiPermission.CookieMonsterStackcookieretrieverapi4FB3A3C0.GET..
  cookieretrieverapiGETApiPermissionTestCookieMonsterStackcookieretrieverapi4FB3A3C0GET3E9A9A81:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - cookieretrieverD5E1C8D3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: cookieretrieverapi27BDB861
            - /test-invoke-stage/GET/
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/Default/GET/ApiPermission.Test.CookieMonsterStackcookieretrieverapi4FB3A3C0.GET..
  cookieretrieverapiGETAB263267:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Fn::GetAtt:
          - cookieretrieverapi27BDB861
          - RootResourceId
      RestApiId:
        Ref: cookieretrieverapi27BDB861
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        RequestTemplates:
          application/json: '{ "statusCode": "200" }'
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - cookieretrieverD5E1C8D3
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CookieMonsterStack/cookie-retriever-api/Default/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE1VQTU/DMAz9LbunHgUJcWQb4gZMBXH3ElOyNUmJE6aq6n8nSbdpnPz88eznV0Nd38PN4hGPXEl1WI7SeYLxPaA8iIbYRS9JrJgppFqrbSs2znLwUQax+bJb9GgokM/JWwx9LOULM+E0r3TQzk4iXxnVYNE4tYPxA3ddGSlgEh2ancLKOkV7htcSnqOVmSw0GhgbNxNK3LpOy6GoKGgSfFdhlspQFKcc1lEeKKyR6bQexkS4bM1k8kYzF4FM0ie6QYst+eRDyfPUjNILvW4x0BGHpIY4rHp9evgMV1K6aIN4or5zgyFb+FdZNrJ8MYOzV0XjC4Vvp3LzhK6dvOCGfmI6+ImdVhicn5v/a9M0iewk7Hn5Wz9AfQv1Ys9aVz6p04agmeMfQUDl0wQCAAA=
    Metadata:
      aws:cdk:path: CookieMonsterStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersa1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7S3BucketDF8FB19A:
    Type: String
    Description: S3 bucket for asset "a1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7"
  AssetParametersa1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7S3VersionKeyB7119C84:
    Type: String
    Description: S3 key for asset version "a1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7"
  AssetParametersa1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7ArtifactHash264967E2:
    Type: String
    Description: Artifact hash for asset "a1f6440200129f8c7b7adf863959de83a86fc21ec8465120ca93db8e6b19f9e7"
  AssetParameters755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6S3Bucket817FA6E2:
    Type: String
    Description: S3 bucket for asset "755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6"
  AssetParameters755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6S3VersionKeyCFEF9A95:
    Type: String
    Description: S3 key for asset version "755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6"
  AssetParameters755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6ArtifactHashF96B07E7:
    Type: String
    Description: Artifact hash for asset "755e2abc334f00746e194c08d30dd90a85ff88457626bc92d9ec33c95ee953e6"
Outputs:
  botconstructdiscordbotapiEndpoint473B8EDA:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: botconstructdiscordbotapi6B3ECC48
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: botconstructdiscordbotapiDeploymentStageprod0EB2B752
          - /
  cookieretrieverapiEndpointE523CC78:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: cookieretrieverapi27BDB861
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: cookieretrieverapiDeploymentStageprod8D943FED
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

