Resources:
  FooFunctionServiceRole8C4FF696:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkServerlessStack/FooFunction/ServiceRole/Resource
  FooFunctionE711F179:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Join:
            - ""
            - - Ref: AWS::AccountId
              - .dkr.ecr.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /aws-cdk/assets:43a8d097bb92e59374889ad419d09ed9bde098f9375c9bdd68c81297ba34d25f
      Role:
        Fn::GetAtt:
          - FooFunctionServiceRole8C4FF696
          - Arn
      PackageType: Image
    DependsOn:
      - FooFunctionServiceRole8C4FF696
    Metadata:
      aws:cdk:path: CdkServerlessStack/FooFunction/Resource
  CdkServerlessApi1CA6207F:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: CdkServerlessApi
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: CdkServerlessStack/CdkServerlessApi/Resource
  CdkServerlessApiDefaultRouteCdkServerlessStackCdkServerlessApiDefaultRoute62CDD74APermissionE16969F8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - FooFunctionE711F179
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CdkServerlessApi1CA6207F
            - /*/*
    Metadata:
      aws:cdk:path: CdkServerlessStack/CdkServerlessApi/DefaultRoute/CdkServerlessStackCdkServerlessApiDefaultRoute62CDD74A-Permission
  CdkServerlessApiDefaultRouteHttpIntegrationd1a5fc6c4c9be86f91174431420238bcAD8E7007:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: CdkServerlessApi1CA6207F
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - FooFunctionE711F179
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CdkServerlessStack/CdkServerlessApi/DefaultRoute/HttpIntegration-d1a5fc6c4c9be86f91174431420238bc/Resource
  CdkServerlessApiDefaultRoute2F4F4CB3:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: CdkServerlessApi1CA6207F
      RouteKey: $default
      AuthorizationType: JWT
      AuthorizerId:
        Ref: CdkServerlessApiJwtAuthorizer2F068AB3
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: CdkServerlessApiDefaultRouteHttpIntegrationd1a5fc6c4c9be86f91174431420238bcAD8E7007
    Metadata:
      aws:cdk:path: CdkServerlessStack/CdkServerlessApi/DefaultRoute/Resource
  CdkServerlessApiJwtAuthorizer2F068AB3:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: CdkServerlessApi1CA6207F
      AuthorizerType: JWT
      Name: JwtAuthorizer
      IdentitySource:
        - $request.header.Authorization
      JwtConfiguration:
        Audience:
          - <PUT_YOUR_PROJECT_ID_HERE>
        Issuer: https://securetoken.google.com/<PUT_YOUR_PROJECT_ID_HERE>
    Metadata:
      aws:cdk:path: CdkServerlessStack/CdkServerlessApi/JwtAuthorizer/Resource
  CdkServerlessApiDefaultStage6471FBB7:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: CdkServerlessApi1CA6207F
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: CdkServerlessStack/CdkServerlessApi/DefaultStage/Resource
  texFunctionServiceRoleD579109E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkServerlessStack/texFunction/ServiceRole/Resource
  texFunctionF9DDAC24:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Join:
            - ""
            - - Ref: AWS::AccountId
              - .dkr.ecr.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /aws-cdk/assets:2900d3085dec80289f173704d23361eae39fae46211b2d49dc7b13e84313a765
      Role:
        Fn::GetAtt:
          - texFunctionServiceRoleD579109E
          - Arn
      PackageType: Image
    DependsOn:
      - texFunctionServiceRoleD579109E
    Metadata:
      aws:cdk:path: CdkServerlessStack/texFunction/Resource
  texApi504AA217:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: texApi
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: CdkServerlessStack/texApi/Resource
  texApiDefaultRouteCdkServerlessStacktexApiDefaultRoute5B32BB0BPermission2E065C70:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - texFunctionF9DDAC24
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: texApi504AA217
            - /*/*
    Metadata:
      aws:cdk:path: CdkServerlessStack/texApi/DefaultRoute/CdkServerlessStacktexApiDefaultRoute5B32BB0B-Permission
  texApiDefaultRouteHttpIntegrationd8ac099b5bd712d1c0198b7410d8ea3a76E7E3C4:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: texApi504AA217
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - texFunctionF9DDAC24
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: CdkServerlessStack/texApi/DefaultRoute/HttpIntegration-d8ac099b5bd712d1c0198b7410d8ea3a/Resource
  texApiDefaultRoute77242D33:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: texApi504AA217
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: texApiDefaultRouteHttpIntegrationd8ac099b5bd712d1c0198b7410d8ea3a76E7E3C4
    Metadata:
      aws:cdk:path: CdkServerlessStack/texApi/DefaultRoute/Resource
  texApiDefaultStageAA17A31E:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: texApi504AA217
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: CdkServerlessStack/texApi/DefaultStage/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE11QQU7DMBB8S+/OFvcEN0IRojcUXrA4S3DT2JF33apY+TtdI9SK08xoZkejtWDtA9ytHvHEjevHdXExEZR3QTealpnkQgcfBrONgSVlJ2b7GTrimJMj5Rej9+JjWIy2lANOHz1CeY5upLSbcKCXHJwmNH7L3yhNnrneepygdPFQOxUXQy41qBsYbsrqKvWgozmyl5jOT8hkcPYDCp3wfNxAeRWZ29lrm4LKLmahynZBaEj4t+OfvObaLF8x+W9Kteeq1NTP1LWVLMtiQuwJ9rw+2nuwG7CrPXvfpBzETwTdL/4A99FDUXQBAAA=
    Metadata:
      aws:cdk:path: CdkServerlessStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

