Resources:
  meetsapi9714509E:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: meets-api
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Resource
  meetsapiDeploymentCFACADF6edd3b08235b6c2978a91bc871e6f58fb:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      Description: Automatically created by the RestApi construct
    DependsOn:
      - meetsapiCommentRequestModel3EC30E62
      - meetsapicommentValidatorF468E52F
      - meetsapidefget7166E9BA
      - meetsapicommentsOPTIONS9E8D7FCC
      - meetsapicommentsPOST2DE2BCE4
      - meetsapicommentsF923F95D
      - meetsapieventsGET345BDD90
      - meetsapieventsOPTIONS6E40180A
      - meetsapieventsPOSTD4A76867
      - meetsapievents76ACE9AF
      - meetsapiOPTIONSBAFDE222
      - meetsapidefault3B0C0EEE
      - meetsapiusersOPTIONSDE1CCEAA
      - meetsapiusers40E4B344
      - meetsapiEventRequestModelF928B325
      - meetsapiEventResponseModel6E6CE413
      - meetsapiGenericResponseModel1940F6BF
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Deployment/Resource
  meetsapiDeploymentStageprod5FFD0EA2:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      DeploymentId:
        Ref: meetsapiDeploymentCFACADF6edd3b08235b6c2978a91bc871e6f58fb
      StageName: prod
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/DeploymentStage.prod/Resource
  meetsapiCloudWatchRole6D911540:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/CloudWatchRole/Resource
  meetsapiAccount7816DEE9:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - meetsapiCloudWatchRole6D911540
          - Arn
    DependsOn:
      - meetsapi9714509E
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Account
  meetsapiOPTIONSBAFDE222:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - meetsapi9714509E
          - RootResourceId
      RestApiId:
        Ref: meetsapi9714509E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/OPTIONS/Resource
  meetsapievents76ACE9AF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - meetsapi9714509E
          - RootResourceId
      PathPart: events
      RestApiId:
        Ref: meetsapi9714509E
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/events/Resource
  meetsapieventsOPTIONS6E40180A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: meetsapievents76ACE9AF
      RestApiId:
        Ref: meetsapi9714509E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/events/OPTIONS/Resource
  meetsapieventsPOSTApiPermissionMeetsStackmeetsapi63D1C8A2POSTevents6CB07A3D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lMeetsCreate8D33A358
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-2:147730025470:"
            - Ref: meetsapi9714509E
            - /
            - Ref: meetsapiDeploymentStageprod5FFD0EA2
            - /POST/events
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/events/POST/ApiPermission.MeetsStackmeetsapi63D1C8A2.POST..events
  meetsapieventsPOSTD4A76867:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: meetsapievents76ACE9AF
      RestApiId:
        Ref: meetsapi9714509E
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: cognitoAuth
      Integration:
        ConnectionType: INTERNET
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            SelectionPattern: ^$
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: .*"errorMessage".*
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: |-
            #set($inputRoot = $input.path('$'))
                    {
                      "body": {
                        "eventName": "$inputRoot.eventName",
                        "shortDescription": "$inputRoot.shortDescription",
                        "longDescription": "$inputRoot.longDescription",
                        "address1": "$inputRoot.address1",
                        #if($inputRoot.address2 != "")
                            "address2": "$inputRoot.address2",
                        #else
                            "address2": null,
                        #end
                        "city": "$inputRoot.city",
                        "state": "$inputRoot.state",
                        "postal": "$inputRoot.postal",
                        "geoLocation": {
                          "lat": $inputRoot.geoLocation.lat,
                          "lng": $inputRoot.geoLocation.lng
                        },
                        "userId": "$context.authorizer.claims['cognito:username']"
                      }
                    }
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-2:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - lMeetsCreate8D33A358
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: meetsapiGenericResponseModel1940F6BF
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "200"
        - ResponseModels:
            application/json: Error
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: meetsapiEventRequestModelF928B325
      RequestParameters:
        method.request.header.Authorization: true
      RequestValidatorId:
        Ref: meetsapidefault3B0C0EEE
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/events/POST/Resource
  meetsapieventsGETApiPermissionMeetsStackmeetsapi63D1C8A2GETevents6FCCD4DF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lMeetsGetCF4934D9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-2:147730025470:"
            - Ref: meetsapi9714509E
            - /
            - Ref: meetsapiDeploymentStageprod5FFD0EA2
            - /GET/events
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/events/GET/ApiPermission.MeetsStackmeetsapi63D1C8A2.GET..events
  meetsapieventsGET345BDD90:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: meetsapievents76ACE9AF
      RestApiId:
        Ref: meetsapi9714509E
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            SelectionPattern: ^$
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: .*"errorMessage".*
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.querystring.id: method.request.querystring.id
        RequestTemplates:
          application/json: "{\"id\":\"$util.escapeJavaScript($input.params('id'))\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-2:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - lMeetsGetCF4934D9
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: meetsapiEventResponseModel6E6CE413
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "200"
        - ResponseModels:
            application/json: Error
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "400"
      RequestParameters:
        method.request.querystring.id: true
      RequestValidatorId:
        Ref: meetsapidefget7166E9BA
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/events/GET/Resource
  meetsapiusers40E4B344:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - meetsapi9714509E
          - RootResourceId
      PathPart: users
      RestApiId:
        Ref: meetsapi9714509E
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/users/Resource
  meetsapiusersOPTIONSDE1CCEAA:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: meetsapiusers40E4B344
      RestApiId:
        Ref: meetsapi9714509E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/users/OPTIONS/Resource
  meetsapicommentsF923F95D:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - meetsapi9714509E
          - RootResourceId
      PathPart: comments
      RestApiId:
        Ref: meetsapi9714509E
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/comments/Resource
  meetsapicommentsOPTIONS9E8D7FCC:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: meetsapicommentsF923F95D
      RestApiId:
        Ref: meetsapi9714509E
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/comments/OPTIONS/Resource
  meetsapicommentsPOSTApiPermissionMeetsStackmeetsapi63D1C8A2POSTcomments577A4AB4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lMeetsCommentsCreateD94278FB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-east-2:147730025470:"
            - Ref: meetsapi9714509E
            - /
            - Ref: meetsapiDeploymentStageprod5FFD0EA2
            - /POST/comments
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/comments/POST/ApiPermission.MeetsStackmeetsapi63D1C8A2.POST..comments
  meetsapicommentsPOST2DE2BCE4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: meetsapicommentsF923F95D
      RestApiId:
        Ref: meetsapi9714509E
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: cognitoAuth
      Integration:
        ConnectionType: INTERNET
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            SelectionPattern: ^$
            StatusCode: "200"
          - ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            ResponseTemplates:
              application/json: "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
            SelectionPattern: .*"errorMessage".*
            StatusCode: "400"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: "

            \        #set($inputRoot = $input.path('$'))

            \        {

            \          \"commentText\": \"$inputRoot.commentText\",

            \          \"eventId\": \"$inputRoot.eventId\",

            \          \"userId\": \"$context.authorizer.claims['cognito:username']\"

            \        }

            \      "
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:us-east-2:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - lMeetsCommentsCreateD94278FB
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseModels:
            application/json:
              Ref: meetsapiGenericResponseModel1940F6BF
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "200"
        - ResponseModels:
            application/json: Error
          ResponseParameters:
            method.response.header.Content-Type: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "400"
      RequestModels:
        application/json:
          Ref: meetsapiCommentRequestModel3EC30E62
      RequestParameters:
        method.request.header.Authorization: true
      RequestValidatorId:
        Ref: meetsapicommentValidatorF468E52F
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/Default/comments/POST/Resource
  meetsapiGenericResponseModel1940F6BF:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      ContentType: application/json
      Name: GenericIdResponse
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: Generic Id Response
        type: object
        properties:
          id:
            type: string
        required:
          - id
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/GenericResponseModel/Resource
  meetsapiEventRequestModelF928B325:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      ContentType: application/json
      Name: EventPostRequest
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: EventPostRequest
        type: object
        properties:
          eventName:
            type: string
          shortDescription:
            type: string
          longDescription:
            type: string
          address1:
            type: string
          address2:
            type: string
          city:
            type: string
          state:
            type: string
          postal:
            type: string
          geoLocation:
            type: object
            properties:
              lat:
                type: number
              lng:
                type: number
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/EventRequestModel/Resource
  meetsapidefault3B0C0EEE:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      ValidateRequestBody: true
      ValidateRequestParameters: true
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/default/Resource
  meetsapiEventResponseModel6E6CE413:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      ContentType: application/json
      Name: EventGetResponse
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: Event Get Response
        type: object
        properties:
          id:
            type: string
          eventName:
            type: string
          shortDescription:
            type: string
          longDescription:
            type: string
          address1:
            type: string
          address2:
            type: string
          city:
            type: string
          state:
            type: string
          postal:
            type: string
          geoLocation:
            type: object
            properties:
              lat:
                type: number
              lng:
                type: number
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/EventResponseModel/Resource
  meetsapidefget7166E9BA:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      ValidateRequestBody: false
      ValidateRequestParameters: true
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/def-get/Resource
  meetsapiCommentRequestModel3EC30E62:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      ContentType: application/json
      Name: CommentPostRequest
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: Comment Post Request
        type: object
        properties:
          commentText:
            type: string
          eventId:
            type: string
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/CommentRequestModel/Resource
  meetsapicommentValidatorF468E52F:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      ValidateRequestBody: true
      ValidateRequestParameters: true
    Metadata:
      aws:cdk:path: MeetsStack/meets-api/commentValidator/Resource
  cognitoAuth:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: meetsapi9714509E
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      Name: Cognito
      ProviderARNs:
        - arn:aws:cognito-idp:us-east-2:147730025470:userpool/us-east-2_wTghw5Kon
    Metadata:
      aws:cdk:path: MeetsStack/cognitoAuth
  roleC7B7E775:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
    Metadata:
      aws:cdk:path: MeetsStack/role/Resource
  roleDefaultPolicy7C980EBA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource: arn:aws:dynamodb:us-east-2:147730025470:table/Meets
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:us-east-2:147730025470
          - Action: logs:CreateLogGroup
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: roleDefaultPolicy7C980EBA
      Roles:
        - Ref: roleC7B7E775
    Metadata:
      aws:cdk:path: MeetsStack/role/DefaultPolicy/Resource
  lMeetsCreate8D33A358:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3Bucket0140B719
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
      Handler: db.events.create
      Role:
        Fn::GetAtt:
          - roleC7B7E775
          - Arn
      Runtime: python3.8
      FunctionName: Meets-Create
      MemorySize: 128
      Timeout: 60
    DependsOn:
      - roleDefaultPolicy7C980EBA
      - roleC7B7E775
    Metadata:
      aws:cdk:path: MeetsStack/l-Meets-Create/Resource
      aws:asset:path: asset.1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96c
      aws:asset:property: Code
  lMeetsGetCF4934D9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3Bucket0140B719
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
      Handler: db.events.get
      Role:
        Fn::GetAtt:
          - roleC7B7E775
          - Arn
      Runtime: python3.8
      FunctionName: Meets-Get
      MemorySize: 128
      Timeout: 60
    DependsOn:
      - roleDefaultPolicy7C980EBA
      - roleC7B7E775
    Metadata:
      aws:cdk:path: MeetsStack/l-Meets-Get/Resource
      aws:asset:path: asset.1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96c
      aws:asset:property: Code
  lMeetsUsersUpdateFFF05B97:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3Bucket0140B719
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
      Handler: db.users.update_user_properties
      Role:
        Fn::GetAtt:
          - roleC7B7E775
          - Arn
      Runtime: python3.8
      FunctionName: Meets-Users-Update
      MemorySize: 128
      Timeout: 60
    DependsOn:
      - roleDefaultPolicy7C980EBA
      - roleC7B7E775
    Metadata:
      aws:cdk:path: MeetsStack/l-Meets-Users-Update/Resource
      aws:asset:path: asset.1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96c
      aws:asset:property: Code
  lMeetsCommentsCreateD94278FB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3Bucket0140B719
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4
      Handler: db.comments.create
      Role:
        Fn::GetAtt:
          - roleC7B7E775
          - Arn
      Runtime: python3.8
      FunctionName: Meets-Comments-Create
      MemorySize: 128
      Timeout: 60
    DependsOn:
      - roleDefaultPolicy7C980EBA
      - roleC7B7E775
    Metadata:
      aws:cdk:path: MeetsStack/l-Meets-Comments-Create/Resource
      aws:asset:path: asset.1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96c
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.19.0,@aws-cdk/aws-apigateway=1.19.0,@aws-cdk/aws-cloudwatch=1.19.0,@aws-cdk/aws-ec2=1.19.0,@aws-cdk/aws-events=1.19.0,@aws-cdk/aws-iam=1.19.0,@aws-cdk/aws-kms=1.19.0,@aws-cdk/aws-lambda=1.19.0,@aws-cdk/aws-s3=1.19.0,@aws-cdk/aws-s3-assets=1.19.0,@aws-cdk/aws-sqs=1.19.0,@aws-cdk/aws-ssm=1.19.0,@aws-cdk/core=1.19.0,@aws-cdk/cx-api=1.19.0,@aws-cdk/region-info=1.19.0,jsii-runtime=node.js/v18.12.1
Outputs:
  meetsapiEndpoint68BF5EA2:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: meetsapi9714509E
          - .execute-api.us-east-2.
          - Ref: AWS::URLSuffix
          - /
          - Ref: meetsapiDeploymentStageprod5FFD0EA2
          - /
Parameters:
  AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3Bucket0140B719:
    Type: String
    Description: S3 bucket for asset "1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96c"
  AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cS3VersionKeyBD3332D4:
    Type: String
    Description: S3 key for asset version "1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96c"
  AssetParameters1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96cArtifactHash5992C625:
    Type: String
    Description: Artifact hash for asset "1d29dc0acda8dcefa6de7e28627eb308b07819d3ea0fcf256dd1362ba2ecd96c"

