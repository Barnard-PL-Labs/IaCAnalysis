Resources:
  assignCaseFunctionServiceRole56B929C6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStepStack/assignCaseFunction/ServiceRole/Resource
  assignCaseFunction59553755:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 01f0e0fe9031514897abc561ed798ac09acadc1cc49d8a54b5dfa67eb107bfd7.zip
      Role:
        Fn::GetAtt:
          - assignCaseFunctionServiceRole56B929C6
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - assignCaseFunctionServiceRole56B929C6
    Metadata:
      aws:cdk:path: CdkStepStack/assignCaseFunction/Resource
      aws:asset:path: asset.01f0e0fe9031514897abc561ed798ac09acadc1cc49d8a54b5dfa67eb107bfd7
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/230319145
      aws:asset:is-bundled: true
      aws:asset:property: Code
  closeCaseFunctionServiceRole0F6F67D6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStepStack/closeCaseFunction/ServiceRole/Resource
  closeCaseFunctionF5FEF3D0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ffd8440092ccc8b1074f72823c552009a76197999d398d49c35de9e940a3800e.zip
      Role:
        Fn::GetAtt:
          - closeCaseFunctionServiceRole0F6F67D6
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - closeCaseFunctionServiceRole0F6F67D6
    Metadata:
      aws:cdk:path: CdkStepStack/closeCaseFunction/Resource
      aws:asset:path: asset.ffd8440092ccc8b1074f72823c552009a76197999d398d49c35de9e940a3800e
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/230319145
      aws:asset:is-bundled: true
      aws:asset:property: Code
  escalateCaseFunctionServiceRole1BAB0E40:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStepStack/escalateCaseFunction/ServiceRole/Resource
  escalateCaseFunction2DE16F3F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1cb8bf0c772162f6d1e5286e2ac9058ac383b82d3fca9ad0e7ce3b16698e809a.zip
      Role:
        Fn::GetAtt:
          - escalateCaseFunctionServiceRole1BAB0E40
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - escalateCaseFunctionServiceRole1BAB0E40
    Metadata:
      aws:cdk:path: CdkStepStack/escalateCaseFunction/Resource
      aws:asset:path: asset.1cb8bf0c772162f6d1e5286e2ac9058ac383b82d3fca9ad0e7ce3b16698e809a
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/230319145
      aws:asset:is-bundled: true
      aws:asset:property: Code
  openCaseFunctionServiceRole5FA58BBF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStepStack/openCaseFunction/ServiceRole/Resource
  openCaseFunction64DF09DE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ef1b36d26606d1a081af7f4325b521fb8a41bfc6e1c23b1d4f14a7f9d95c3167.zip
      Role:
        Fn::GetAtt:
          - openCaseFunctionServiceRole5FA58BBF
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - openCaseFunctionServiceRole5FA58BBF
    Metadata:
      aws:cdk:path: CdkStepStack/openCaseFunction/Resource
      aws:asset:path: asset.ef1b36d26606d1a081af7f4325b521fb8a41bfc6e1c23b1d4f14a7f9d95c3167
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/230319145
      aws:asset:is-bundled: true
      aws:asset:property: Code
  workOnCaseFunctionServiceRole271B4440:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStepStack/workOnCaseFunction/ServiceRole/Resource
  workOnCaseFunction65F13148:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 26c3316b3a5ed6144759943f006e21a171f59001b12d74cd13e02b1a38d8a6e9.zip
      Role:
        Fn::GetAtt:
          - workOnCaseFunctionServiceRole271B4440
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - workOnCaseFunctionServiceRole271B4440
    Metadata:
      aws:cdk:path: CdkStepStack/workOnCaseFunction/Resource
      aws:asset:path: asset.26c3316b3a5ed6144759943f006e21a171f59001b12d74cd13e02b1a38d8a6e9
      aws:asset:original-path: /Users/lqiao/dev/misc/dataset/230319145
      aws:asset:is-bundled: true
      aws:asset:property: Code
  StateMachineRoleB840431D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStepStack/StateMachine/Role/Resource
  StateMachineRoleDefaultPolicyDF1E6607:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - openCaseFunction64DF09DE
                - Arn
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - assignCaseFunction59553755
                - Arn
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - workOnCaseFunction65F13148
                - Arn
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - closeCaseFunctionF5FEF3D0
                - Arn
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - escalateCaseFunction2DE16F3F
                - Arn
        Version: "2012-10-17"
      PolicyName: StateMachineRoleDefaultPolicyDF1E6607
      Roles:
        - Ref: StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: CdkStepStack/StateMachine/Role/DefaultPolicy/Resource
  StateMachine2E01A3A5:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - StateMachineRoleB840431D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"Open Case","States":{"Open Case":{"Next":"Assign Case","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - openCaseFunction64DF09DE
                - Arn
            - '","Payload.$":"$"}},"Assign Case":{"Next":"Work On Case","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - assignCaseFunction59553755
                - Arn
            - '","Payload.$":"$"}},"Work On Case":{"Next":"Is Case Resolved","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - workOnCaseFunction65F13148
                - Arn
            - '","Payload.$":"$"}},"Is Case Resolved":{"Type":"Choice","Choices":[{"Variable":"$.Status","NumericEquals":1,"Next":"Close Case"},{"Variable":"$.Status","NumericEquals":0,"Next":"Escalate Case"}]},"Close Case":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - closeCaseFunctionF5FEF3D0
                - Arn
            - '","Payload.$":"$"}},"Escalate Case":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - escalateCaseFunction2DE16F3F
                - Arn
            - '","Payload.$":"$"}},"Fail":{"Type":"Fail","Cause":"Engage Tier 2 Support"}}}'
    DependsOn:
      - StateMachineRoleDefaultPolicyDF1E6607
      - StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: CdkStepStack/StateMachine/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WPUWvCQBCEf4vvl9XoS181IBTaIvYHhPWy6uYue8W9KBLy33u5lNI+fTvDMMyuYQWrBT60sI0rPJ9g+IxonUlWPXjsTg3WEhpqFT4y9r3YyEEMYwfDMXgy1VkyD8GzfU5yvkajmxpVKSpsJyQNu946ijtUMnM9pPxvqUb6Ov8IrSOqU3jLsVe5B0f/AzDskb2proEtmTQ80jvaK0ve9FePo8kLkndhueTJpKG/2RytgjQ8VY5mehZaXd7LFyjXUC5aZS5uvUTuCI4zvwH34SFINwEAAA==
    Metadata:
      aws:cdk:path: CdkStepStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

