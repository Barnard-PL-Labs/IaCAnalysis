Resources:
  SimpleClassifierDefinitionsTable7EAAFD09:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: ClassifierDefinitions
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierDefinitionsTable/Resource
  GetAllServiceRole82AB547C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SimpleClassifierStack/GetAll/ServiceRole/Resource
  GetAllServiceRoleDefaultPolicy9A7C7FC7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SimpleClassifierDefinitionsTable7EAAFD09
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: GetAllServiceRoleDefaultPolicy9A7C7FC7
      Roles:
        - Ref: GetAllServiceRole82AB547C
    Metadata:
      aws:cdk:path: SimpleClassifierStack/GetAll/ServiceRole/DefaultPolicy/Resource
  GetAllF134E276:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3BucketD5DC1D20
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
      Handler: getAll.handler
      Role:
        Fn::GetAtt:
          - GetAllServiceRole82AB547C
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: ClassifierDefinitions
          PRIMARY_KEY: id
    DependsOn:
      - GetAllServiceRoleDefaultPolicy9A7C7FC7
      - GetAllServiceRole82AB547C
    Metadata:
      aws:cdk:path: SimpleClassifierStack/GetAll/Resource
      aws:asset:path: asset.7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8
      aws:asset:property: Code
  CreateServiceRole0A9932AB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Create/ServiceRole/Resource
  CreateServiceRoleDefaultPolicy856095D3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SimpleClassifierDefinitionsTable7EAAFD09
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: CreateServiceRoleDefaultPolicy856095D3
      Roles:
        - Ref: CreateServiceRole0A9932AB
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Create/ServiceRole/DefaultPolicy/Resource
  Create6145684B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3BucketD5DC1D20
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
      Handler: create.handler
      Role:
        Fn::GetAtt:
          - CreateServiceRole0A9932AB
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: ClassifierDefinitions
          PRIMARY_KEY: id
    DependsOn:
      - CreateServiceRoleDefaultPolicy856095D3
      - CreateServiceRole0A9932AB
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Create/Resource
      aws:asset:path: asset.7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8
      aws:asset:property: Code
  UpdateServiceRole7144D91B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Update/ServiceRole/Resource
  UpdateServiceRoleDefaultPolicy809F8F3B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SimpleClassifierDefinitionsTable7EAAFD09
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: UpdateServiceRoleDefaultPolicy809F8F3B
      Roles:
        - Ref: UpdateServiceRole7144D91B
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Update/ServiceRole/DefaultPolicy/Resource
  Update5B448F46:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3BucketD5DC1D20
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
      Handler: update.handler
      Role:
        Fn::GetAtt:
          - UpdateServiceRole7144D91B
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: ClassifierDefinitions
          PRIMARY_KEY: id
    DependsOn:
      - UpdateServiceRoleDefaultPolicy809F8F3B
      - UpdateServiceRole7144D91B
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Update/Resource
      aws:asset:path: asset.7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8
      aws:asset:property: Code
  DeleteServiceRoleE1FFD499:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Delete/ServiceRole/Resource
  DeleteServiceRoleDefaultPolicy67A4F99A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SimpleClassifierDefinitionsTable7EAAFD09
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: DeleteServiceRoleDefaultPolicy67A4F99A
      Roles:
        - Ref: DeleteServiceRoleE1FFD499
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Delete/ServiceRole/DefaultPolicy/Resource
  DeleteEE298834:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3BucketD5DC1D20
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
      Handler: delete.handler
      Role:
        Fn::GetAtt:
          - DeleteServiceRoleE1FFD499
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: ClassifierDefinitions
          PRIMARY_KEY: id
    DependsOn:
      - DeleteServiceRoleDefaultPolicy67A4F99A
      - DeleteServiceRoleE1FFD499
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Delete/Resource
      aws:asset:path: asset.7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8
      aws:asset:property: Code
  ClassifyServiceRoleB2CD2CCA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Classify/ServiceRole/Resource
  ClassifyServiceRoleDefaultPolicyD92E83BE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SimpleClassifierDefinitionsTable7EAAFD09
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: ClassifyServiceRoleDefaultPolicyD92E83BE
      Roles:
        - Ref: ClassifyServiceRoleB2CD2CCA
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Classify/ServiceRole/DefaultPolicy/Resource
  Classify5848C28F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3BucketD5DC1D20
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D
      Handler: classify.handler
      Role:
        Fn::GetAtt:
          - ClassifyServiceRoleB2CD2CCA
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: ClassifierDefinitions
          PRIMARY_KEY: id
    DependsOn:
      - ClassifyServiceRoleDefaultPolicyD92E83BE
      - ClassifyServiceRoleB2CD2CCA
    Metadata:
      aws:cdk:path: SimpleClassifierStack/Classify/Resource
      aws:asset:path: asset.7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8
      aws:asset:property: Code
  SimpleClassifierAPI0F8CD6B7:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: SimpleClassifier API
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Resource
  SimpleClassifierAPIDeploymentDDFDF45A5f813d78378a050e495a04e90b9e1f77:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      Description: Automatically created by the RestApi construct
    DependsOn:
      - SimpleClassifierAPIclassifyGET3AE00FD8
      - SimpleClassifierAPIclassifyOPTIONS8AC0DD27
      - SimpleClassifierAPIclassify80C78C72
      - SimpleClassifierAPIlabelsidDELETE39A5A4E5
      - SimpleClassifierAPIlabelsidOPTIONS21CF5295
      - SimpleClassifierAPIlabelsidPUT9A39AD55
      - SimpleClassifierAPIlabelsid0A3BBADD
      - SimpleClassifierAPIlabelsGETEC4B0518
      - SimpleClassifierAPIlabelsOPTIONSE9BC17BE
      - SimpleClassifierAPIlabelsPOSTE155EE39
      - SimpleClassifierAPIlabelsEF4491DF
      - SimpleClassifierAPIOPTIONSA12D1A62
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Deployment/Resource
  SimpleClassifierAPIDeploymentStageprod8AFC322D:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      DeploymentId:
        Ref: SimpleClassifierAPIDeploymentDDFDF45A5f813d78378a050e495a04e90b9e1f77
      StageName: prod
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/DeploymentStage.prod/Resource
  SimpleClassifierAPICloudWatchRole1576E73C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/CloudWatchRole/Resource
  SimpleClassifierAPIAccountC48DD9DD:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - SimpleClassifierAPICloudWatchRole1576E73C
          - Arn
    DependsOn:
      - SimpleClassifierAPI0F8CD6B7
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Account
  SimpleClassifierAPIlabelsEF4491DF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - SimpleClassifierAPI0F8CD6B7
          - RootResourceId
      PathPart: labels
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/Resource
  SimpleClassifierAPIlabelsGETApiPermissionSimpleClassifierStackSimpleClassifierAPIA6C8C719GETlabels4A08E2E3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllF134E276
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /
            - Ref: SimpleClassifierAPIDeploymentStageprod8AFC322D
            - /GET/labels
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/GET/ApiPermission.SimpleClassifierStackSimpleClassifierAPIA6C8C719.GET..labels
  SimpleClassifierAPIlabelsGETApiPermissionTestSimpleClassifierStackSimpleClassifierAPIA6C8C719GETlabels630B1D59:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetAllF134E276
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /test-invoke-stage/GET/labels
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/GET/ApiPermission.Test.SimpleClassifierStackSimpleClassifierAPIA6C8C719.GET..labels
  SimpleClassifierAPIlabelsGETEC4B0518:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: SimpleClassifierAPIlabelsEF4491DF
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetAllF134E276
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/GET/Resource
  SimpleClassifierAPIlabelsPOSTApiPermissionSimpleClassifierStackSimpleClassifierAPIA6C8C719POSTlabels547EDF68:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Create6145684B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /
            - Ref: SimpleClassifierAPIDeploymentStageprod8AFC322D
            - /POST/labels
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/POST/ApiPermission.SimpleClassifierStackSimpleClassifierAPIA6C8C719.POST..labels
  SimpleClassifierAPIlabelsPOSTApiPermissionTestSimpleClassifierStackSimpleClassifierAPIA6C8C719POSTlabelsBC62B3A8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Create6145684B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /test-invoke-stage/POST/labels
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/POST/ApiPermission.Test.SimpleClassifierStackSimpleClassifierAPIA6C8C719.POST..labels
  SimpleClassifierAPIlabelsPOSTE155EE39:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: SimpleClassifierAPIlabelsEF4491DF
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - Create6145684B
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/POST/Resource
  SimpleClassifierAPIlabelsid0A3BBADD:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: SimpleClassifierAPIlabelsEF4491DF
      PathPart: "{id}"
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/Resource
  SimpleClassifierAPIlabelsidDELETEApiPermissionSimpleClassifierStackSimpleClassifierAPIA6C8C719DELETElabelsid534BBFCE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteEE298834
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /
            - Ref: SimpleClassifierAPIDeploymentStageprod8AFC322D
            - /DELETE/labels/{id}
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/DELETE/ApiPermission.SimpleClassifierStackSimpleClassifierAPIA6C8C719.DELETE..labels.{id}
  SimpleClassifierAPIlabelsidDELETEApiPermissionTestSimpleClassifierStackSimpleClassifierAPIA6C8C719DELETElabelsid9364734B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteEE298834
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /test-invoke-stage/DELETE/labels/{id}
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/DELETE/ApiPermission.Test.SimpleClassifierStackSimpleClassifierAPIA6C8C719.DELETE..labels.{id}
  SimpleClassifierAPIlabelsidDELETE39A5A4E5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: SimpleClassifierAPIlabelsid0A3BBADD
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeleteEE298834
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/DELETE/Resource
  SimpleClassifierAPIlabelsidPUTApiPermissionSimpleClassifierStackSimpleClassifierAPIA6C8C719PUTlabelsidEAA7A44D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Update5B448F46
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /
            - Ref: SimpleClassifierAPIDeploymentStageprod8AFC322D
            - /PUT/labels/{id}
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/PUT/ApiPermission.SimpleClassifierStackSimpleClassifierAPIA6C8C719.PUT..labels.{id}
  SimpleClassifierAPIlabelsidPUTApiPermissionTestSimpleClassifierStackSimpleClassifierAPIA6C8C719PUTlabelsid732B3CB7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Update5B448F46
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /test-invoke-stage/PUT/labels/{id}
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/PUT/ApiPermission.Test.SimpleClassifierStackSimpleClassifierAPIA6C8C719.PUT..labels.{id}
  SimpleClassifierAPIlabelsidPUT9A39AD55:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: SimpleClassifierAPIlabelsid0A3BBADD
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - Update5B448F46
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/PUT/Resource
  SimpleClassifierAPIlabelsidOPTIONS21CF5295:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: SimpleClassifierAPIlabelsid0A3BBADD
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,PATCH,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/{id}/OPTIONS/Resource
  SimpleClassifierAPIlabelsOPTIONSE9BC17BE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: SimpleClassifierAPIlabelsEF4491DF
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,PATCH,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/labels/OPTIONS/Resource
  SimpleClassifierAPIclassify80C78C72:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - SimpleClassifierAPI0F8CD6B7
          - RootResourceId
      PathPart: classify
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/classify/Resource
  SimpleClassifierAPIclassifyGETApiPermissionSimpleClassifierStackSimpleClassifierAPIA6C8C719GETclassify81A751BD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Classify5848C28F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /
            - Ref: SimpleClassifierAPIDeploymentStageprod8AFC322D
            - /GET/classify
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/classify/GET/ApiPermission.SimpleClassifierStackSimpleClassifierAPIA6C8C719.GET..classify
  SimpleClassifierAPIclassifyGETApiPermissionTestSimpleClassifierStackSimpleClassifierAPIA6C8C719GETclassifyD45FF7AE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Classify5848C28F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: SimpleClassifierAPI0F8CD6B7
            - /test-invoke-stage/GET/classify
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/classify/GET/ApiPermission.Test.SimpleClassifierStackSimpleClassifierAPIA6C8C719.GET..classify
  SimpleClassifierAPIclassifyGET3AE00FD8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: SimpleClassifierAPIclassify80C78C72
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - Classify5848C28F
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/classify/GET/Resource
  SimpleClassifierAPIclassifyOPTIONS8AC0DD27:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: SimpleClassifierAPIclassify80C78C72
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,PATCH,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/classify/OPTIONS/Resource
  SimpleClassifierAPIOPTIONSA12D1A62:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - SimpleClassifierAPI0F8CD6B7
          - RootResourceId
      RestApiId:
        Ref: SimpleClassifierAPI0F8CD6B7
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,PATCH,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: SimpleClassifierStack/SimpleClassifierAPI/Default/OPTIONS/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.24.0,@aws-cdk/aws-apigateway=1.24.0,@aws-cdk/aws-applicationautoscaling=1.24.0,@aws-cdk/aws-autoscaling=1.24.0,@aws-cdk/aws-autoscaling-common=1.24.0,@aws-cdk/aws-autoscaling-hooktargets=1.24.0,@aws-cdk/aws-cloudformation=1.24.0,@aws-cdk/aws-cloudwatch=1.24.0,@aws-cdk/aws-dynamodb=1.24.0,@aws-cdk/aws-ec2=1.24.0,@aws-cdk/aws-ecr=1.24.0,@aws-cdk/aws-ecr-assets=1.24.0,@aws-cdk/aws-ecs=1.24.0,@aws-cdk/aws-elasticloadbalancingv2=1.24.0,@aws-cdk/aws-events=1.24.0,@aws-cdk/aws-iam=1.24.0,@aws-cdk/aws-kms=1.24.0,@aws-cdk/aws-lambda=1.24.0,@aws-cdk/aws-logs=1.24.0,@aws-cdk/aws-s3=1.24.0,@aws-cdk/aws-s3-assets=1.24.0,@aws-cdk/aws-servicediscovery=1.24.0,@aws-cdk/aws-sns=1.24.0,@aws-cdk/aws-sns-subscriptions=1.24.0,@aws-cdk/aws-sqs=1.24.0,@aws-cdk/aws-ssm=1.24.0,@aws-cdk/aws-stepfunctions=1.24.0,@aws-cdk/aws-stepfunctions-tasks=1.24.0,@aws-cdk/core=1.24.0,@aws-cdk/custom-resources=1.24.0,@aws-cdk/cx-api=1.24.0,@aws-cdk/region-info=1.24.0,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3BucketD5DC1D20:
    Type: String
    Description: S3 bucket for asset "7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8"
  AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8S3VersionKey6E85FD3D:
    Type: String
    Description: S3 key for asset version "7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8"
  AssetParameters7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8ArtifactHash734408A8:
    Type: String
    Description: Artifact hash for asset "7ca37f1ecf81fb9587a3d2d0e6be1cd7ee6e29d482ef2f168875e64d09c6e7e8"
Outputs:
  SimpleClassifierAPIEndpoint03EC64C9:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: SimpleClassifierAPI0F8CD6B7
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: SimpleClassifierAPIDeploymentStageprod8AFC322D
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

