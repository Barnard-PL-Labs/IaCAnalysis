Resources:
  todos19732BDC:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: todoId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: todoId
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: todos
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todos/Resource
  getOneItemFunctionServiceRoleCFD54796:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/Resource
  getOneItemFunctionServiceRoleDefaultPolicy6B743AA8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - todos19732BDC
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getOneItemFunctionServiceRoleDefaultPolicy6B743AA8
      Roles:
        - Ref: getOneItemFunctionServiceRoleCFD54796
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/DefaultPolicy/Resource
  getOneItemFunctionE3257B22:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3Bucket710890D2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
      Handler: get-one.handler
      Role:
        Fn::GetAtt:
          - getOneItemFunctionServiceRoleCFD54796
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: todos19732BDC
          PRIMARY_KEY: todoId
    DependsOn:
      - getOneItemFunctionServiceRoleDefaultPolicy6B743AA8
      - getOneItemFunctionServiceRoleCFD54796
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getOneItemFunction/Resource
      aws:asset:path: asset.832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78de
      aws:asset:property: Code
  getAllItemsFunctionServiceRoleCC084440:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/Resource
  getAllItemsFunctionServiceRoleDefaultPolicyF069C759:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - todos19732BDC
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getAllItemsFunctionServiceRoleDefaultPolicyF069C759
      Roles:
        - Ref: getAllItemsFunctionServiceRoleCC084440
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/DefaultPolicy/Resource
  getAllItemsFunction0B7A913E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3Bucket710890D2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
      Handler: get-all.handler
      Role:
        Fn::GetAtt:
          - getAllItemsFunctionServiceRoleCC084440
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: todos19732BDC
          PRIMARY_KEY: todoId
    DependsOn:
      - getAllItemsFunctionServiceRoleDefaultPolicyF069C759
      - getAllItemsFunctionServiceRoleCC084440
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getAllItemsFunction/Resource
      aws:asset:path: asset.832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78de
      aws:asset:property: Code
  updateItemFunctionServiceRole40035396:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/Resource
  updateItemFunctionServiceRoleDefaultPolicy6A793729:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - todos19732BDC
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: updateItemFunctionServiceRoleDefaultPolicy6A793729
      Roles:
        - Ref: updateItemFunctionServiceRole40035396
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/DefaultPolicy/Resource
  updateItemFunction59415205:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3Bucket710890D2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
      Handler: update-one.handler
      Role:
        Fn::GetAtt:
          - updateItemFunctionServiceRole40035396
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: todos19732BDC
          PRIMARY_KEY: todoId
    DependsOn:
      - updateItemFunctionServiceRoleDefaultPolicy6A793729
      - updateItemFunctionServiceRole40035396
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/updateItemFunction/Resource
      aws:asset:path: asset.832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78de
      aws:asset:property: Code
  deleteItemFunctionServiceRole5C201FCC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/Resource
  deleteItemFunctionServiceRoleDefaultPolicyDCE46F14:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - todos19732BDC
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: deleteItemFunctionServiceRoleDefaultPolicyDCE46F14
      Roles:
        - Ref: deleteItemFunctionServiceRole5C201FCC
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/DefaultPolicy/Resource
  deleteItemFunction2918B1B0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3Bucket710890D2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95
      Handler: delete-one.handler
      Role:
        Fn::GetAtt:
          - deleteItemFunctionServiceRole5C201FCC
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: todos19732BDC
          PRIMARY_KEY: todoId
    DependsOn:
      - deleteItemFunctionServiceRoleDefaultPolicyDCE46F14
      - deleteItemFunctionServiceRole5C201FCC
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/deleteItemFunction/Resource
      aws:asset:path: asset.832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78de
      aws:asset:property: Code
  todosApiD95A1E88:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Items Service
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Resource
  todosApiCloudWatchRole9D5A72D0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/CloudWatchRole/Resource
  todosApiAccount301E931E:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - todosApiCloudWatchRole9D5A72D0
          - Arn
    DependsOn:
      - todosApiD95A1E88
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Account
  todosApiDeployment807AA7811295698fc3378f4de65760acb0e3831a:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: todosApiD95A1E88
      Description: Automatically created by the RestApi construct
    DependsOn:
      - todosApitodosidDELETEC2F428C4
      - todosApitodosidGETEE80002A
      - todosApitodosidOPTIONS10D92B84
      - todosApitodosidE9488510
      - todosApitodosGETC56889CF
      - todosApitodosPUT794C7915
      - todosApitodos825C1164
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Deployment/Resource
  todosApiDeploymentStageprod8AB5460A:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: todosApiD95A1E88
      DeploymentId:
        Ref: todosApiDeployment807AA7811295698fc3378f4de65760acb0e3831a
      StageName: prod
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/DeploymentStage.prod/Resource
  todosApitodos825C1164:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - todosApiD95A1E88
          - RootResourceId
      PathPart: todos
      RestApiId:
        Ref: todosApiD95A1E88
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/Resource
  todosApitodosGETApiPermissionApiLambdaCrudDynamoDBExampletodosApi0C886C39GETtodos569DC330:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllItemsFunction0B7A913E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /
            - Ref: todosApiDeploymentStageprod8AB5460A
            - /GET/todos
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/GET/ApiPermission.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.GET..todos
  todosApitodosGETApiPermissionTestApiLambdaCrudDynamoDBExampletodosApi0C886C39GETtodosFDB2EB51:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllItemsFunction0B7A913E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /test-invoke-stage/GET/todos
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.GET..todos
  todosApitodosGETC56889CF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: todosApitodos825C1164
      RestApiId:
        Ref: todosApiD95A1E88
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getAllItemsFunction0B7A913E
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/GET/Resource
  todosApitodosidE9488510:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: todosApitodos825C1164
      PathPart: "{id}"
      RestApiId:
        Ref: todosApiD95A1E88
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/Resource
  todosApitodosidGETApiPermissionApiLambdaCrudDynamoDBExampletodosApi0C886C39GETtodosid1A56F0DC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getOneItemFunctionE3257B22
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /
            - Ref: todosApiDeploymentStageprod8AB5460A
            - /GET/todos/*
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/GET/ApiPermission.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.GET..todos.{id}
  todosApitodosidGETApiPermissionTestApiLambdaCrudDynamoDBExampletodosApi0C886C39GETtodosidA0360631:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getOneItemFunctionE3257B22
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /test-invoke-stage/GET/todos/*
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.GET..todos.{id}
  todosApitodosidGETEE80002A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: todosApitodosidE9488510
      RestApiId:
        Ref: todosApiD95A1E88
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getOneItemFunctionE3257B22
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/GET/Resource
  todosApitodosidDELETEApiPermissionApiLambdaCrudDynamoDBExampletodosApi0C886C39DELETEtodosidDA8CED1A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - deleteItemFunction2918B1B0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /
            - Ref: todosApiDeploymentStageprod8AB5460A
            - /DELETE/todos/*
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/DELETE/ApiPermission.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.DELETE..todos.{id}
  todosApitodosidDELETEApiPermissionTestApiLambdaCrudDynamoDBExampletodosApi0C886C39DELETEtodosid99AF2EFC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - deleteItemFunction2918B1B0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /test-invoke-stage/DELETE/todos/*
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/DELETE/ApiPermission.Test.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.DELETE..todos.{id}
  todosApitodosidDELETEC2F428C4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: todosApitodosidE9488510
      RestApiId:
        Ref: todosApiD95A1E88
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - deleteItemFunction2918B1B0
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/DELETE/Resource
  todosApitodosidOPTIONS10D92B84:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: todosApitodosidE9488510
      RestApiId:
        Ref: todosApiD95A1E88
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/{id}/OPTIONS/Resource
  todosApitodosPUTApiPermissionApiLambdaCrudDynamoDBExampletodosApi0C886C39PUTtodosF09FCB02:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - updateItemFunction59415205
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /
            - Ref: todosApiDeploymentStageprod8AB5460A
            - /PUT/todos
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/PUT/ApiPermission.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.PUT..todos
  todosApitodosPUTApiPermissionTestApiLambdaCrudDynamoDBExampletodosApi0C886C39PUTtodosF97EC527:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - updateItemFunction59415205
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: todosApiD95A1E88
            - /test-invoke-stage/PUT/todos
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/PUT/ApiPermission.Test.ApiLambdaCrudDynamoDBExampletodosApi0C886C39.PUT..todos
  todosApitodosPUT794C7915:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PUT
      ResourceId:
        Ref: todosApitodos825C1164
      RestApiId:
        Ref: todosApiD95A1E88
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - updateItemFunction59415205
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/todosApi/Default/todos/PUT/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.76.0,@aws-cdk/aws-apigateway=1.76.0,@aws-cdk/aws-applicationautoscaling=1.76.0,@aws-cdk/aws-autoscaling-common=1.76.0,@aws-cdk/aws-cloudwatch=1.76.0,@aws-cdk/aws-codeguruprofiler=1.76.0,@aws-cdk/aws-dynamodb=1.76.0,@aws-cdk/aws-ec2=1.76.0,@aws-cdk/aws-ecr=1.76.0,@aws-cdk/aws-ecr-assets=1.76.0,@aws-cdk/aws-events=1.76.0,@aws-cdk/aws-iam=1.76.0,@aws-cdk/aws-kms=1.76.0,@aws-cdk/aws-lambda=1.76.0,@aws-cdk/aws-logs=1.76.0,@aws-cdk/aws-s3=1.76.0,@aws-cdk/aws-s3-assets=1.76.0,@aws-cdk/aws-sqs=1.76.0,@aws-cdk/aws-ssm=1.76.0,@aws-cdk/cloud-assembly-schema=1.76.0,@aws-cdk/core=1.76.0,@aws-cdk/custom-resources=1.76.0,@aws-cdk/cx-api=1.76.0,@aws-cdk/region-info=1.76.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3Bucket710890D2:
    Type: String
    Description: S3 bucket for asset "832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78de"
  AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deS3VersionKeyBB811C95:
    Type: String
    Description: S3 key for asset version "832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78de"
  AssetParameters832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78deArtifactHash75C65358:
    Type: String
    Description: Artifact hash for asset "832cf1e0ef8bb68d36c23ab73819c673b61642b327e462e790a88210580c78de"
Outputs:
  todosApiEndpoint6153A9B7:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: todosApiD95A1E88
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: todosApiDeploymentStageprod8AB5460A
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

