Resources:
  FileUploadVpcD204E09E:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/Resource
  FileUploadVpcPublicSubnet1Subnet51797956:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: FileUploadVpcD204E09E
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet1/Subnet
  FileUploadVpcPublicSubnet1RouteTableC4A55BF3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: FileUploadVpcD204E09E
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet1/RouteTable
  FileUploadVpcPublicSubnet1RouteTableAssociation6698791C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPublicSubnet1RouteTableC4A55BF3
      SubnetId:
        Ref: FileUploadVpcPublicSubnet1Subnet51797956
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet1/RouteTableAssociation
  FileUploadVpcPublicSubnet1DefaultRoute9F5C4546:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPublicSubnet1RouteTableC4A55BF3
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: FileUploadVpcIGW12A387B2
    DependsOn:
      - FileUploadVpcVPCGW8ACAC94F
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet1/DefaultRoute
  FileUploadVpcPublicSubnet1EIP2AC364AE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet1/EIP
  FileUploadVpcPublicSubnet1NATGatewayE8EF7463:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - FileUploadVpcPublicSubnet1EIP2AC364AE
          - AllocationId
      SubnetId:
        Ref: FileUploadVpcPublicSubnet1Subnet51797956
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet1/NATGateway
  FileUploadVpcPublicSubnet2Subnet553D6A94:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: FileUploadVpcD204E09E
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet2/Subnet
  FileUploadVpcPublicSubnet2RouteTableCCF34DC1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: FileUploadVpcD204E09E
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet2/RouteTable
  FileUploadVpcPublicSubnet2RouteTableAssociation66A39603:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPublicSubnet2RouteTableCCF34DC1
      SubnetId:
        Ref: FileUploadVpcPublicSubnet2Subnet553D6A94
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet2/RouteTableAssociation
  FileUploadVpcPublicSubnet2DefaultRouteF8FF0A76:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPublicSubnet2RouteTableCCF34DC1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: FileUploadVpcIGW12A387B2
    DependsOn:
      - FileUploadVpcVPCGW8ACAC94F
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet2/DefaultRoute
  FileUploadVpcPublicSubnet2EIP69453065:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet2/EIP
  FileUploadVpcPublicSubnet2NATGateway3B17431E:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - FileUploadVpcPublicSubnet2EIP69453065
          - AllocationId
      SubnetId:
        Ref: FileUploadVpcPublicSubnet2Subnet553D6A94
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PublicSubnet2/NATGateway
  FileUploadVpcPrivateSubnet1Subnet1A196295:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: FileUploadVpcD204E09E
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkStack/FileUploadVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet1/Subnet
  FileUploadVpcPrivateSubnet1RouteTable312EA706:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: FileUploadVpcD204E09E
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet1/RouteTable
  FileUploadVpcPrivateSubnet1RouteTableAssociation65502E50:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPrivateSubnet1RouteTable312EA706
      SubnetId:
        Ref: FileUploadVpcPrivateSubnet1Subnet1A196295
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet1/RouteTableAssociation
  FileUploadVpcPrivateSubnet1DefaultRoute9023F922:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPrivateSubnet1RouteTable312EA706
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: FileUploadVpcPublicSubnet1NATGatewayE8EF7463
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet1/DefaultRoute
  FileUploadVpcPrivateSubnet2Subnet2797DFC7:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: FileUploadVpcD204E09E
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkStack/FileUploadVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet2/Subnet
  FileUploadVpcPrivateSubnet2RouteTable977B83E2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: FileUploadVpcD204E09E
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet2/RouteTable
  FileUploadVpcPrivateSubnet2RouteTableAssociation6E72672B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPrivateSubnet2RouteTable977B83E2
      SubnetId:
        Ref: FileUploadVpcPrivateSubnet2Subnet2797DFC7
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet2/RouteTableAssociation
  FileUploadVpcPrivateSubnet2DefaultRouteFCAE2D52:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: FileUploadVpcPrivateSubnet2RouteTable977B83E2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: FileUploadVpcPublicSubnet2NATGateway3B17431E
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/PrivateSubnet2/DefaultRoute
  FileUploadVpcIGW12A387B2:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkStack/FileUploadVpc
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/IGW
  FileUploadVpcVPCGW8ACAC94F:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: FileUploadVpcD204E09E
      InternetGatewayId:
        Ref: FileUploadVpcIGW12A387B2
    Metadata:
      aws:cdk:path: CdkStack/FileUploadVpc/VPCGW
  fileUploadBucketAF5E10C1:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ulikabbq-file-uploader
      MetricsConfigurations:
        - Id: EntireBucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkStack/fileUploadBucket/Resource
  fileUploadBucketNotifications281CDDD8:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: fileUploadBucketAF5E10C1
      NotificationConfiguration:
        TopicConfigurations:
          - Events:
              - s3:ObjectCreated:Put
            TopicArn:
              Ref: FileUpload8EAE93BA
    DependsOn:
      - FileUploadPolicy44F59DA7
      - FileUpload8EAE93BA
    Metadata:
      aws:cdk:path: CdkStack/fileUploadBucket/Notifications/Resource
  logstreamBucketC509E8F1:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ulikabbq-logstream
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkStack/logstreamBucket/Resource
  FileUpload8EAE93BA:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: CdkStack/FileUpload/Resource
  FileUploadPolicy44F59DA7:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - fileUploadBucketAF5E10C1
                    - Arn
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Resource:
              Ref: FileUpload8EAE93BA
            Sid: "0"
        Version: "2012-10-17"
      Topics:
        - Ref: FileUpload8EAE93BA
    Metadata:
      aws:cdk:path: CdkStack/FileUpload/Policy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: CdkStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require('https');
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require('url');
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration,
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse('FAILED', err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse('SUCCESS');
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // eslint-disable-next-line max-len
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error message as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: 'PUT',
                      headers: {
                          'content-type': '',
                          'content-length': responseBody.length,
                      },
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on('error', (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs12.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: CdkStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  CriblCluster6622A37E:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: CdkStack/CriblCluster/Resource
  CriblClusterDefaultServiceDiscoveryNamespaceB1519849:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: cribl.loc
      Vpc:
        Ref: FileUploadVpcD204E09E
    Metadata:
      aws:cdk:path: CdkStack/CriblCluster/DefaultServiceDiscoveryNamespace/Resource
  taskDefCriblTaskRole09E30712:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/taskDefCribl/TaskRole/Resource
  taskDefCriblTaskRoleDefaultPolicy73F93CB9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - logstreamBucketC509E8F1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - logstreamBucketC509E8F1
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: taskDefCriblTaskRoleDefaultPolicy73F93CB9
      Roles:
        - Ref: taskDefCriblTaskRole09E30712
    Metadata:
      aws:cdk:path: CdkStack/taskDefCribl/TaskRole/DefaultPolicy/Resource
  taskDefCribl4F9F0572:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: cribl/cribl:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: containerDefCriblLogGroupBE8E339A
              awslogs-stream-prefix: cribl
              awslogs-region:
                Ref: AWS::Region
          Name: containerDefCribl
          PortMappings:
            - ContainerPort: 9000
              Protocol: tcp
            - ContainerPort: 8088
              Protocol: tcp
      Cpu: "4096"
      ExecutionRoleArn:
        Fn::GetAtt:
          - taskDefCriblExecutionRoleE30ED4D6
          - Arn
      Family: cribl
      Memory: "8192"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - taskDefCriblTaskRole09E30712
          - Arn
    Metadata:
      aws:cdk:path: CdkStack/taskDefCribl/Resource
  taskDefCriblExecutionRoleE30ED4D6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/taskDefCribl/ExecutionRole/Resource
  taskDefCriblExecutionRoleDefaultPolicyCA451404:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - containerDefCriblLogGroupBE8E339A
                - Arn
        Version: "2012-10-17"
      PolicyName: taskDefCriblExecutionRoleDefaultPolicyCA451404
      Roles:
        - Ref: taskDefCriblExecutionRoleE30ED4D6
    Metadata:
      aws:cdk:path: CdkStack/taskDefCribl/ExecutionRole/DefaultPolicy/Resource
  containerDefCriblLogGroupBE8E339A:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkStack/containerDefCribl/LogGroup/Resource
  CriblFargateServiceLB089EAFFE:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - CriblFargateServiceLBSecurityGroup6C96A34B
            - GroupId
      Subnets:
        - Ref: FileUploadVpcPublicSubnet1Subnet51797956
        - Ref: FileUploadVpcPublicSubnet2Subnet553D6A94
      Type: application
    DependsOn:
      - FileUploadVpcPublicSubnet1DefaultRoute9F5C4546
      - FileUploadVpcPublicSubnet2DefaultRouteF8FF0A76
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/LB/Resource
  CriblFargateServiceLBSecurityGroup6C96A34B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB CdkStackCriblFargateServiceLB446A6F2F
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: FileUploadVpcD204E09E
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/LB/SecurityGroup/Resource
  CriblFargateServiceLBSecurityGrouptoCdkStackCriblFargateServiceSecurityGroupB3D138239000B93FC74B:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - CriblFargateServiceLBSecurityGroup6C96A34B
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - CriblFargateServiceSecurityGroup60503E72
          - GroupId
      FromPort: 9000
      ToPort: 9000
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/LB/SecurityGroup/to CdkStackCriblFargateServiceSecurityGroupB3D13823:9000
  CriblFargateServiceLBPublicListener391A6EF5:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: CriblFargateServiceLBPublicListenerECSGroup42606EAF
          Type: forward
      LoadBalancerArn:
        Ref: CriblFargateServiceLB089EAFFE
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/LB/PublicListener/Resource
  CriblFargateServiceLBPublicListenerECSGroup42606EAF:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /api/v1/health
      HealthCheckPort: "9000"
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: FileUploadVpcD204E09E
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/LB/PublicListener/ECSGroup/Resource
  CriblFargateService699B5610:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: CriblCluster6622A37E
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: containerDefCribl
          ContainerPort: 9000
          TargetGroupArn:
            Ref: CriblFargateServiceLBPublicListenerECSGroup42606EAF
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - CriblFargateServiceSecurityGroup60503E72
                - GroupId
          Subnets:
            - Ref: FileUploadVpcPrivateSubnet1Subnet1A196295
            - Ref: FileUploadVpcPrivateSubnet2Subnet2797DFC7
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - CriblFargateServiceCloudmapServiceDE99D396
              - Arn
      TaskDefinition:
        Ref: taskDefCribl4F9F0572
    DependsOn:
      - CriblFargateServiceLBPublicListenerECSGroup42606EAF
      - CriblFargateServiceLBPublicListener391A6EF5
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/Service/Service
  CriblFargateServiceCloudmapServiceDE99D396:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 60
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - CriblClusterDefaultServiceDiscoveryNamespaceB1519849
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: logstream
      NamespaceId:
        Fn::GetAtt:
          - CriblClusterDefaultServiceDiscoveryNamespaceB1519849
          - Id
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/Service/CloudmapService/Resource
  CriblFargateServiceSecurityGroup60503E72:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkStack/CriblFargateService/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: FileUploadVpcD204E09E
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/Service/SecurityGroup/Resource
  CriblFargateServiceSecurityGroupfromCdkStackCriblFargateServiceLBSecurityGroup5D174C6590003F10B379:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 9000
      GroupId:
        Fn::GetAtt:
          - CriblFargateServiceSecurityGroup60503E72
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - CriblFargateServiceLBSecurityGroup6C96A34B
          - GroupId
      ToPort: 9000
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/Service/SecurityGroup/from CdkStackCriblFargateServiceLBSecurityGroup5D174C65:9000
  CriblFargateServiceSecurityGroupfromCdkStackFileUploadFargateServiceSecurityGroupA77739758088EFF59712:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: allow file uploader service
      FromPort: 8088
      GroupId:
        Fn::GetAtt:
          - CriblFargateServiceSecurityGroup60503E72
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - FileUploadFargateServiceSecurityGroup367B4BF4
          - GroupId
      ToPort: 8088
    Metadata:
      aws:cdk:path: CdkStack/CriblFargateService/Service/SecurityGroup/from CdkStackFileUploadFargateServiceSecurityGroupA7773975:8088
  FileUploadClusterDE0C2E4C:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: CdkStack/FileUploadCluster/Resource
  taskDefTaskRole62C7276F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/taskDef/TaskRole/Resource
  taskDefTaskRoleDefaultPolicy0DD42B97:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - fileUploadBucketAF5E10C1
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - fileUploadBucketAF5E10C1
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: taskDefTaskRoleDefaultPolicy0DD42B97
      Roles:
        - Ref: taskDefTaskRole62C7276F
    Metadata:
      aws:cdk:path: CdkStack/taskDef/TaskRole/DefaultPolicy/Resource
  taskDef43A87EA0:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: BUCKET_NAME
              Value:
                Ref: fileUploadBucketAF5E10C1
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Ref: AWS::AccountId
                - .dkr.ecr.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /aws-cdk/assets:91d46e3d41d616c67229ef5d81e858c5ae5378dfbbcd6377ab89aa669a92312b
          LogConfiguration:
            LogDriver: splunk
            Options:
              splunk-token: "{{resolve:secretsmanager:arn:aws:secretsmanager:us-east-1:433223883348:secret:hec-token-kmTvww:SecretString:::}}"
              splunk-url: http://logstream.cribl.loc:8088
          Name: containerDef
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - taskDefExecutionRole9295A8C0
          - Arn
      Family: file-uploader
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - taskDefTaskRole62C7276F
          - Arn
    Metadata:
      aws:cdk:path: CdkStack/taskDef/Resource
  taskDefExecutionRole9295A8C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/taskDef/ExecutionRole/Resource
  taskDefExecutionRoleDefaultPolicy5FB63CF7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/aws-cdk/assets
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: taskDefExecutionRoleDefaultPolicy5FB63CF7
      Roles:
        - Ref: taskDefExecutionRole9295A8C0
    Metadata:
      aws:cdk:path: CdkStack/taskDef/ExecutionRole/DefaultPolicy/Resource
  FileUploadFargateServiceLB6BC092C3:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - FileUploadFargateServiceLBSecurityGroupF3F926EB
            - GroupId
      Subnets:
        - Ref: FileUploadVpcPublicSubnet1Subnet51797956
        - Ref: FileUploadVpcPublicSubnet2Subnet553D6A94
      Type: application
    DependsOn:
      - FileUploadVpcPublicSubnet1DefaultRoute9F5C4546
      - FileUploadVpcPublicSubnet2DefaultRouteF8FF0A76
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/LB/Resource
  FileUploadFargateServiceLBSecurityGroupF3F926EB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB CdkStackFileUploadFargateServiceLBAE13F650
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: FileUploadVpcD204E09E
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/LB/SecurityGroup/Resource
  FileUploadFargateServiceLBSecurityGrouptoCdkStackFileUploadFargateServiceSecurityGroupA77739753000CE1DFC73:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - FileUploadFargateServiceLBSecurityGroupF3F926EB
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - FileUploadFargateServiceSecurityGroup367B4BF4
          - GroupId
      FromPort: 3000
      ToPort: 3000
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/LB/SecurityGroup/to CdkStackFileUploadFargateServiceSecurityGroupA7773975:3000
  FileUploadFargateServiceLBPublicListener35D40623:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: FileUploadFargateServiceLBPublicListenerECSGroup50E14075
          Type: forward
      LoadBalancerArn:
        Ref: FileUploadFargateServiceLB6BC092C3
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/LB/PublicListener/Resource
  FileUploadFargateServiceLBPublicListenerECSGroup50E14075:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /health
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "15"
      TargetType: ip
      VpcId:
        Ref: FileUploadVpcD204E09E
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/LB/PublicListener/ECSGroup/Resource
  FileUploadFargateService439BF22C:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: FileUploadClusterDE0C2E4C
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: containerDef
          ContainerPort: 3000
          TargetGroupArn:
            Ref: FileUploadFargateServiceLBPublicListenerECSGroup50E14075
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - FileUploadFargateServiceSecurityGroup367B4BF4
                - GroupId
          Subnets:
            - Ref: FileUploadVpcPrivateSubnet1Subnet1A196295
            - Ref: FileUploadVpcPrivateSubnet2Subnet2797DFC7
      TaskDefinition:
        Ref: taskDef43A87EA0
    DependsOn:
      - FileUploadFargateServiceLBPublicListenerECSGroup50E14075
      - FileUploadFargateServiceLBPublicListener35D40623
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/Service/Service
  FileUploadFargateServiceSecurityGroup367B4BF4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkStack/FileUploadFargateService/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: FileUploadVpcD204E09E
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/Service/SecurityGroup/Resource
  FileUploadFargateServiceSecurityGroupfromCdkStackFileUploadFargateServiceLBSecurityGroup12B4C98D30000897C8BB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - FileUploadFargateServiceSecurityGroup367B4BF4
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - FileUploadFargateServiceLBSecurityGroupF3F926EB
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: CdkStack/FileUploadFargateService/Service/SecurityGroup/from CdkStackFileUploadFargateServiceLBSecurityGroup12B4C98D:3000
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31TTW/bMAz9Lbs7at3tsN2Wj7YIUHSBE/TOKKyrxpEMUUphGP7voyQ7NtpsF+vp+Ykin8hctL9+iPzbb/igmTwcb6SxKNqtA3nMlkaTs166bPmqCyTjrcSA+cdBOWV0l+W3ubgdj7cBtCjvRPtSy6B92Syzjd9XSm79XmOMNaLCeIc72Fc48iM3JzJSQbjpIg7gfr0JyzO4R3D4AU22serMcAy81g4t40GQMul3c8f1vZ1Qu2yL0lvlmkdrfB1z+C9xX1ok+kKvdeS7jL6LduHlMSWRELOaRLsztYqOJBC/G8O+NBcybbtMwUm0hUmmxHUUDhqUHHNZeeI645v08AFsCcE/Oq7wVWk1uPeZMdqB0mgnXH92i/as0kv3kEtI4KBImjPaRrS95StNz3BCqiGduEZfC1iZkgt4MuXF6AHH2mY1uPCCJOZ1zRXHJngycFhABZoT+ZQrVkBOyYoV+6hQujxzF14/bdN9k/1Up9hI3WsGPPm/45u5sYa0J9uQuZ0BEToSK8OPb9cnKEMfc0PwP1FgbUg5Y5sFELuQxm2crX9N3B/vau+yGIiHs+Tquq7LtDmgeKebc/5T5Hc8x++k1Mx67dQJRZHWvyV9is/kAwAA
    Metadata:
      aws:cdk:path: CdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  CriblFargateServiceLoadBalancerDNS0190A5EE:
    Value:
      Fn::GetAtt:
        - CriblFargateServiceLB089EAFFE
        - DNSName
  CriblFargateServiceServiceURL8AEBFBE2:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - CriblFargateServiceLB089EAFFE
              - DNSName
  FileUploadFargateServiceLoadBalancerDNS17AAB309:
    Value:
      Fn::GetAtt:
        - FileUploadFargateServiceLB6BC092C3
        - DNSName
  FileUploadFargateServiceServiceURL0E8C7B7D:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - FileUploadFargateServiceLB6BC092C3
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

