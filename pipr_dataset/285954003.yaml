Resources:
  items07D08F4B:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: itemId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: itemId
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: items
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/items/Resource
  getOneItemFunctionServiceRoleCFD54796:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/Resource
  getOneItemFunctionServiceRoleDefaultPolicy6B743AA8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - items07D08F4B
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getOneItemFunctionServiceRoleDefaultPolicy6B743AA8
      Roles:
        - Ref: getOneItemFunctionServiceRoleCFD54796
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/DefaultPolicy/Resource
  getOneItemFunctionE3257B22:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3Bucket8FBA5959
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
      Handler: get-one.handler
      Role:
        Fn::GetAtt:
          - getOneItemFunctionServiceRoleCFD54796
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: items07D08F4B
          PRIMARY_KEY: itemId
    DependsOn:
      - getOneItemFunctionServiceRoleDefaultPolicy6B743AA8
      - getOneItemFunctionServiceRoleCFD54796
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getOneItemFunction/Resource
      aws:asset:path: asset.042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01
      aws:asset:property: Code
  getAllItemsFunctionServiceRoleCC084440:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/Resource
  getAllItemsFunctionServiceRoleDefaultPolicyF069C759:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - items07D08F4B
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getAllItemsFunctionServiceRoleDefaultPolicyF069C759
      Roles:
        - Ref: getAllItemsFunctionServiceRoleCC084440
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/DefaultPolicy/Resource
  getAllItemsFunction0B7A913E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3Bucket8FBA5959
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
      Handler: get-all.handler
      Role:
        Fn::GetAtt:
          - getAllItemsFunctionServiceRoleCC084440
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: items07D08F4B
          PRIMARY_KEY: itemId
    DependsOn:
      - getAllItemsFunctionServiceRoleDefaultPolicyF069C759
      - getAllItemsFunctionServiceRoleCC084440
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/getAllItemsFunction/Resource
      aws:asset:path: asset.042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01
      aws:asset:property: Code
  createItemFunctionServiceRole1BBF2178:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/createItemFunction/ServiceRole/Resource
  createItemFunctionServiceRoleDefaultPolicy8FAF1611:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - items07D08F4B
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: createItemFunctionServiceRoleDefaultPolicy8FAF1611
      Roles:
        - Ref: createItemFunctionServiceRole1BBF2178
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/createItemFunction/ServiceRole/DefaultPolicy/Resource
  createItemFunction8D47E48A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3Bucket8FBA5959
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
      Handler: create.handler
      Role:
        Fn::GetAtt:
          - createItemFunctionServiceRole1BBF2178
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: items07D08F4B
          PRIMARY_KEY: itemId
    DependsOn:
      - createItemFunctionServiceRoleDefaultPolicy8FAF1611
      - createItemFunctionServiceRole1BBF2178
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/createItemFunction/Resource
      aws:asset:path: asset.042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01
      aws:asset:property: Code
  updateItemFunctionServiceRole40035396:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/Resource
  updateItemFunctionServiceRoleDefaultPolicy6A793729:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - items07D08F4B
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: updateItemFunctionServiceRoleDefaultPolicy6A793729
      Roles:
        - Ref: updateItemFunctionServiceRole40035396
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/DefaultPolicy/Resource
  updateItemFunction59415205:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3Bucket8FBA5959
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
      Handler: update-one.handler
      Role:
        Fn::GetAtt:
          - updateItemFunctionServiceRole40035396
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: items07D08F4B
          PRIMARY_KEY: itemId
    DependsOn:
      - updateItemFunctionServiceRoleDefaultPolicy6A793729
      - updateItemFunctionServiceRole40035396
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/updateItemFunction/Resource
      aws:asset:path: asset.042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01
      aws:asset:property: Code
  deleteItemFunctionServiceRole5C201FCC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/Resource
  deleteItemFunctionServiceRoleDefaultPolicyDCE46F14:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - items07D08F4B
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: deleteItemFunctionServiceRoleDefaultPolicyDCE46F14
      Roles:
        - Ref: deleteItemFunctionServiceRole5C201FCC
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/DefaultPolicy/Resource
  deleteItemFunction2918B1B0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3Bucket8FBA5959
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA
      Handler: delete-one.handler
      Role:
        Fn::GetAtt:
          - deleteItemFunctionServiceRole5C201FCC
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: items07D08F4B
          PRIMARY_KEY: itemId
    DependsOn:
      - deleteItemFunctionServiceRoleDefaultPolicyDCE46F14
      - deleteItemFunctionServiceRole5C201FCC
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/deleteItemFunction/Resource
      aws:asset:path: asset.042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01
      aws:asset:property: Code
  itemsApi28111E1C:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Items Service
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Resource
  itemsApiDeploymentFEC31BD0463f2f0ae75a8bce473f7bfda7158ff8:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: itemsApi28111E1C
      Description: Automatically created by the RestApi construct
    DependsOn:
      - itemsApiitemsidDELETE21550005
      - itemsApiitemsidGET38A333A8
      - itemsApiitemsidOPTIONS62BD91D0
      - itemsApiitemsidPATCH0548CB6A
      - itemsApiitemsidA29927C2
      - itemsApiitemsGET59B0F78A
      - itemsApiitemsOPTIONSB46B4D53
      - itemsApiitemsPOSTDD3E83D0
      - itemsApiitems9015DBED
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Deployment/Resource
  itemsApiDeploymentStageprodE77B897D:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: itemsApi28111E1C
      DeploymentId:
        Ref: itemsApiDeploymentFEC31BD0463f2f0ae75a8bce473f7bfda7158ff8
      StageName: prod
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/DeploymentStage.prod/Resource
  itemsApiCloudWatchRoleB5C7B431:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/CloudWatchRole/Resource
  itemsApiAccount591BF3E1:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - itemsApiCloudWatchRoleB5C7B431
          - Arn
    DependsOn:
      - itemsApi28111E1C
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Account
  itemsApiitems9015DBED:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - itemsApi28111E1C
          - RootResourceId
      PathPart: items
      RestApiId:
        Ref: itemsApi28111E1C
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/Resource
  itemsApiitemsGETApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitems2A648972:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllItemsFunction0B7A913E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /
            - Ref: itemsApiDeploymentStageprodE77B897D
            - /GET/items
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items
  itemsApiitemsGETApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsF4364FB2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllItemsFunction0B7A913E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /test-invoke-stage/GET/items
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items
  itemsApiitemsGET59B0F78A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: itemsApiitems9015DBED
      RestApiId:
        Ref: itemsApi28111E1C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getAllItemsFunction0B7A913E
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/Resource
  itemsApiitemsPOSTApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132POSTitems7DA2B753:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - createItemFunction8D47E48A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /
            - Ref: itemsApiDeploymentStageprodE77B897D
            - /POST/items
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.POST..items
  itemsApiitemsPOSTApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132POSTitemsAE25CBB6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - createItemFunction8D47E48A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /test-invoke-stage/POST/items
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.POST..items
  itemsApiitemsPOSTDD3E83D0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: itemsApiitems9015DBED
      RestApiId:
        Ref: itemsApi28111E1C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - createItemFunction8D47E48A
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/Resource
  itemsApiitemsOPTIONSB46B4D53:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: itemsApiitems9015DBED
      RestApiId:
        Ref: itemsApi28111E1C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/OPTIONS/Resource
  itemsApiitemsidA29927C2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: itemsApiitems9015DBED
      PathPart: "{id}"
      RestApiId:
        Ref: itemsApi28111E1C
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/Resource
  itemsApiitemsidGETApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsid6D54AF22:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getOneItemFunctionE3257B22
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /
            - Ref: itemsApiDeploymentStageprodE77B897D
            - /GET/items/{id}
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items.{id}
  itemsApiitemsidGETApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsidCA08693A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getOneItemFunctionE3257B22
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /test-invoke-stage/GET/items/{id}
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items.{id}
  itemsApiitemsidGET38A333A8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: itemsApiitemsidA29927C2
      RestApiId:
        Ref: itemsApi28111E1C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getOneItemFunctionE3257B22
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/Resource
  itemsApiitemsidPATCHApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132PATCHitemsidEE9531C0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - updateItemFunction59415205
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /
            - Ref: itemsApiDeploymentStageprodE77B897D
            - /PATCH/items/{id}
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.PATCH..items.{id}
  itemsApiitemsidPATCHApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132PATCHitemsid513A5711:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - updateItemFunction59415205
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /test-invoke-stage/PATCH/items/{id}
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.PATCH..items.{id}
  itemsApiitemsidPATCH0548CB6A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: PATCH
      ResourceId:
        Ref: itemsApiitemsidA29927C2
      RestApiId:
        Ref: itemsApi28111E1C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - updateItemFunction59415205
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/Resource
  itemsApiitemsidDELETEApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132DELETEitemsid056EB521:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - deleteItemFunction2918B1B0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /
            - Ref: itemsApiDeploymentStageprodE77B897D
            - /DELETE/items/{id}
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.DELETE..items.{id}
  itemsApiitemsidDELETEApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132DELETEitemsid4C18D4E2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - deleteItemFunction2918B1B0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: itemsApi28111E1C
            - /test-invoke-stage/DELETE/items/{id}
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.DELETE..items.{id}
  itemsApiitemsidDELETE21550005:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: itemsApiitemsidA29927C2
      RestApiId:
        Ref: itemsApi28111E1C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - deleteItemFunction2918B1B0
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/Resource
  itemsApiitemsidOPTIONS62BD91D0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: itemsApiitemsidA29927C2
      RestApiId:
        Ref: itemsApi28111E1C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/OPTIONS/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.17.1,@aws-cdk/aws-apigateway=1.17.1,@aws-cdk/aws-applicationautoscaling=1.17.1,@aws-cdk/aws-autoscaling-common=1.17.1,@aws-cdk/aws-cloudwatch=1.17.1,@aws-cdk/aws-dynamodb=1.17.1,@aws-cdk/aws-ec2=1.17.1,@aws-cdk/aws-events=1.17.1,@aws-cdk/aws-iam=1.17.1,@aws-cdk/aws-kms=1.17.1,@aws-cdk/aws-lambda=1.17.1,@aws-cdk/aws-s3=1.17.1,@aws-cdk/aws-s3-assets=1.17.1,@aws-cdk/aws-sqs=1.17.1,@aws-cdk/aws-ssm=1.17.1,@aws-cdk/core=1.17.1,@aws-cdk/cx-api=1.17.1,@aws-cdk/region-info=1.17.1,jsii-runtime=node.js/v18.12.1
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3Bucket8FBA5959:
    Type: String
    Description: S3 bucket for asset "042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01"
  AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01S3VersionKeyCE2027CA:
    Type: String
    Description: S3 key for asset version "042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01"
  AssetParameters042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01ArtifactHashDDE7E73B:
    Type: String
    Description: Artifact hash for asset "042525c37b32d38ed1d843b55c7104416913be76b53f50c876e3428091ae9f01"
Outputs:
  itemsApiEndpoint8392E274:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: itemsApi28111E1C
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: itemsApiDeploymentStageprodE77B897D
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

