Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/Resource
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet1EIPD7E02669:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet1/EIP
  VpcPublicSubnet1NATGateway4D7517AA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet1EIPD7E02669
          - AllocationId
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet1/NATGateway
  VpcPublicSubnet2Subnet691E08A3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable94F7E489:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociationDD5762D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRoute97F91067:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet2/DefaultRoute
  VpcPublicSubnet2EIP3C605A87:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet2/EIP
  VpcPublicSubnet2NATGateway9182C01D:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet2EIP3C605A87
          - AllocationId
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PublicSubnet2/NATGateway
  VpcPrivateSubnet1Subnet536B997A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet1/Subnet
  VpcPrivateSubnet1RouteTableB2C5B500:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet1/RouteTable
  VpcPrivateSubnet1RouteTableAssociation70C59FA6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet1/RouteTableAssociation
  VpcPrivateSubnet1DefaultRouteBE02A9ED:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet1NATGateway4D7517AA
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet1/DefaultRoute
  VpcPrivateSubnet2Subnet3788AAA1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet2/Subnet
  VpcPrivateSubnet2RouteTableA678073B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet2/RouteTable
  VpcPrivateSubnet2RouteTableAssociationA89CAD56:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet2/RouteTableAssociation
  VpcPrivateSubnet2DefaultRoute060D2087:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet2NATGateway9182C01D
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/PrivateSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MLInferenceInfraStack/Vpc
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/Vpc/VPCGW
  DefaultSecurityGroupfromMLInferenceInfraStackDetrInferenceEnginedetrInferenceFunctionSecurityGroupF18F2FB7204910FD50F6:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from MLInferenceInfraStackDetrInferenceEnginedetrInferenceFunctionSecurityGroupF18F2FB7:2049
      FromPort: 2049
      GroupId:
        Fn::GetAtt:
          - Vpc8378EB38
          - DefaultSecurityGroup
      SourceSecurityGroupId:
        Fn::GetAtt:
          - DetrInferenceEnginedetrInferenceFunctionSecurityGroupFD054DF7
          - GroupId
      ToPort: 2049
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/DefaultSecurityGroup/from MLInferenceInfraStackDetrInferenceEnginedetrInferenceFunctionSecurityGroupF18F2FB7:2049
  DefaultSecurityGroupfromMLInferenceInfraStackYoloInferenceEngineyoloInferenceFunctionSecurityGroup7A397C2620494EBE8EA2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from MLInferenceInfraStackYoloInferenceEngineyoloInferenceFunctionSecurityGroup7A397C26:2049
      FromPort: 2049
      GroupId:
        Fn::GetAtt:
          - Vpc8378EB38
          - DefaultSecurityGroup
      SourceSecurityGroupId:
        Fn::GetAtt:
          - YoloInferenceEngineyoloInferenceFunctionSecurityGroup452E9F0E
          - GroupId
      ToPort: 2049
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/DefaultSecurityGroup/from MLInferenceInfraStackYoloInferenceEngineyoloInferenceFunctionSecurityGroup7A397C26:2049
  InferenceFileSysteminferenceFs0EC62AB0:
    Type: AWS::EFS::FileSystem
    Properties:
      FileSystemTags:
        - Key: Name
          Value: inference
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/InferenceFileSystem/inferenceFs/Resource
  InferenceFileSysteminferenceFsEfsMountTarget16A1D9659:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: InferenceFileSysteminferenceFs0EC62AB0
      SecurityGroups:
        - Fn::GetAtt:
            - Vpc8378EB38
            - DefaultSecurityGroup
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/InferenceFileSystem/inferenceFs/EfsMountTarget1
  InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: InferenceFileSysteminferenceFs0EC62AB0
      SecurityGroups:
        - Fn::GetAtt:
            - Vpc8378EB38
            - DefaultSecurityGroup
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/InferenceFileSystem/inferenceFs/EfsMountTarget2
  InferenceFileSystemInferenceFsAccessPoint8DAAC0A2:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId:
        Ref: InferenceFileSysteminferenceFs0EC62AB0
      PosixUser:
        Gid: "1001"
        Uid: "1001"
      RootDirectory:
        CreationInfo:
          OwnerGid: "1001"
          OwnerUid: "1001"
          Permissions: "0777"
        Path: /
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/InferenceFileSystem/InferenceFsAccessPoint/Resource
  HttpApi1AA332FB:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Authorization
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowOrigins:
          - "*"
        MaxAge: 864000
      Name: InferenceApi
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/Resource
  HttpApiDefaultStageABD8D0D7:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: HttpApi1AA332FB
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/DefaultStage/Resource
  HttpApiPOSTinferencedetrMLInferenceInfraStackHttpApiPOSTinferencedetr99F4FC71Permission2FF76B37:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DetrInferenceEnginedetrInferenceFunction9AD1527C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HttpApi1AA332FB
            - /*/*/inference/detr
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/POST--inference--detr/MLInferenceInfraStackHttpApiPOSTinferencedetr99F4FC71-Permission
  HttpApiPOSTinferencedetrPOSTinferencedetrIntegration9786B128:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpApi1AA332FB
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - DetrInferenceEnginedetrInferenceFunction9AD1527C
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/POST--inference--detr/POST--inference--detr-Integration/Resource
  HttpApiPOSTinferencedetr169CC0AA:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApi1AA332FB
      RouteKey: POST /inference/detr
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpApiPOSTinferencedetrPOSTinferencedetrIntegration9786B128
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/POST--inference--detr/Resource
  HttpApiPOSTinferenceyoloMLInferenceInfraStackHttpApiPOSTinferenceyoloC54B930CPermission3864F40E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - YoloInferenceEngineyoloInferenceFunctionAAE6EBC0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HttpApi1AA332FB
            - /*/*/inference/yolo
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/POST--inference--yolo/MLInferenceInfraStackHttpApiPOSTinferenceyoloC54B930C-Permission
  HttpApiPOSTinferenceyoloPOSTinferenceyoloIntegration830AC380:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpApi1AA332FB
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - YoloInferenceEngineyoloInferenceFunctionAAE6EBC0
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/POST--inference--yolo/POST--inference--yolo-Integration/Resource
  HttpApiPOSTinferenceyolo1A805101:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApi1AA332FB
      RouteKey: POST /inference/yolo
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpApiPOSTinferenceyoloPOSTinferenceyoloIntegration830AC380
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApi/POST--inference--yolo/Resource
  HttpApiHttpApiStageA4A0BA93:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: HttpApi1AA332FB
      StageName: dev
      AutoDeploy: true
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/HttpApi/HttpApiStage/Resource
  DetrInferenceEnginedetrInferenceFunctionServiceRole91208C75:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/DetrInferenceEngine/detrInferenceFunction/ServiceRole/Resource
  DetrInferenceEnginedetrInferenceFunctionServiceRoleDefaultPolicyDB6B4F42:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: elasticfilesystem:ClientMount
            Condition:
              StringEquals:
                elasticfilesystem:AccessPointArn:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":elasticfilesystem:"
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - :access-point/
                      - Ref: InferenceFileSystemInferenceFsAccessPoint8DAAC0A2
            Effect: Allow
            Resource: "*"
          - Action: elasticfilesystem:ClientWrite
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":elasticfilesystem:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :file-system/
                  - Ref: InferenceFileSysteminferenceFs0EC62AB0
          - Action:
              - elasticfilesystem:ClientMount
              - elasticfilesystem:ClientRootAccess
              - elasticfilesystem:ClientWrite
              - elasticfilesystem:DescribeMountTargets
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              - ec2:AssignPrivateIpAddresses
              - ec2:UnassignPrivateIpAddresses
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: DetrInferenceEnginedetrInferenceFunctionServiceRoleDefaultPolicyDB6B4F42
      Roles:
        - Ref: DetrInferenceEnginedetrInferenceFunctionServiceRole91208C75
    DependsOn:
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/DetrInferenceEngine/detrInferenceFunction/ServiceRole/DefaultPolicy/Resource
  DetrInferenceEnginedetrInferenceFunctionSecurityGroupFD054DF7:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function MLInferenceInfraStackDetrInferenceEnginedetrInferenceFunction659AB4F1
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    DependsOn:
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/DetrInferenceEngine/detrInferenceFunction/SecurityGroup/Resource
  DetrInferenceEnginedetrInferenceFunction9AD1527C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3BucketCE3F30F2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3VersionKeyE9117762
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3VersionKeyE9117762
      Handler: detr.handler
      Role:
        Fn::GetAtt:
          - DetrInferenceEnginedetrInferenceFunctionServiceRole91208C75
          - Arn
      Runtime: python3.7
      Environment:
        Variables:
          PYTHONPATH: /mnt/inference/detr/lib
          TORCH_HOME: /mnt/inference/detr/model
          TF_WEIGHTS: /mnt/inference/detr/model/yolov4-416
      FileSystemConfigs:
        - LocalMountPath: /mnt/inference
          Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":elasticfilesystem:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :access-point/
                - Ref: InferenceFileSystemInferenceFsAccessPoint8DAAC0A2
      FunctionName: detrInferenceFunction
      MemorySize: 10240
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - DetrInferenceEnginedetrInferenceFunctionSecurityGroupFD054DF7
              - GroupId
        SubnetIds:
          - Ref: VpcPrivateSubnet1Subnet536B997A
          - Ref: VpcPrivateSubnet2Subnet3788AAA1
    DependsOn:
      - DetrInferenceEnginedetrInferenceFunctionServiceRoleDefaultPolicyDB6B4F42
      - DetrInferenceEnginedetrInferenceFunctionServiceRole91208C75
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/DetrInferenceEngine/detrInferenceFunction/Resource
      aws:asset:path: asset.632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98
      aws:asset:property: Code
  YoloInferenceEngineyoloInferenceFunctionServiceRole0607F42B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/YoloInferenceEngine/yoloInferenceFunction/ServiceRole/Resource
  YoloInferenceEngineyoloInferenceFunctionServiceRoleDefaultPolicy59605D42:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: elasticfilesystem:ClientMount
            Condition:
              StringEquals:
                elasticfilesystem:AccessPointArn:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":elasticfilesystem:"
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - :access-point/
                      - Ref: InferenceFileSystemInferenceFsAccessPoint8DAAC0A2
            Effect: Allow
            Resource: "*"
          - Action: elasticfilesystem:ClientWrite
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":elasticfilesystem:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :file-system/
                  - Ref: InferenceFileSysteminferenceFs0EC62AB0
          - Action:
              - elasticfilesystem:ClientMount
              - elasticfilesystem:ClientRootAccess
              - elasticfilesystem:ClientWrite
              - elasticfilesystem:DescribeMountTargets
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              - ec2:AssignPrivateIpAddresses
              - ec2:UnassignPrivateIpAddresses
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: YoloInferenceEngineyoloInferenceFunctionServiceRoleDefaultPolicy59605D42
      Roles:
        - Ref: YoloInferenceEngineyoloInferenceFunctionServiceRole0607F42B
    DependsOn:
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/YoloInferenceEngine/yoloInferenceFunction/ServiceRole/DefaultPolicy/Resource
  YoloInferenceEngineyoloInferenceFunctionSecurityGroup452E9F0E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function MLInferenceInfraStackYoloInferenceEngineyoloInferenceFunction2C56BE45
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    DependsOn:
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/YoloInferenceEngine/yoloInferenceFunction/SecurityGroup/Resource
  YoloInferenceEngineyoloInferenceFunctionAAE6EBC0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3BucketCE3F30F2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3VersionKeyE9117762
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3VersionKeyE9117762
      Handler: yolo.handler
      Role:
        Fn::GetAtt:
          - YoloInferenceEngineyoloInferenceFunctionServiceRole0607F42B
          - Arn
      Runtime: python3.7
      Environment:
        Variables:
          PYTHONPATH: /mnt/inference/yolo/lib
          TORCH_HOME: /mnt/inference/yolo/model
          TF_WEIGHTS: /mnt/inference/yolo/model/yolov4-416
      FileSystemConfigs:
        - LocalMountPath: /mnt/inference
          Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":elasticfilesystem:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :access-point/
                - Ref: InferenceFileSystemInferenceFsAccessPoint8DAAC0A2
      FunctionName: yoloInferenceFunction
      MemorySize: 10240
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - YoloInferenceEngineyoloInferenceFunctionSecurityGroup452E9F0E
              - GroupId
        SubnetIds:
          - Ref: VpcPrivateSubnet1Subnet536B997A
          - Ref: VpcPrivateSubnet2Subnet3788AAA1
    DependsOn:
      - InferenceFileSysteminferenceFsEfsMountTarget16A1D9659
      - InferenceFileSysteminferenceFsEfsMountTarget2D78BFE93
      - YoloInferenceEngineyoloInferenceFunctionServiceRoleDefaultPolicy59605D42
      - YoloInferenceEngineyoloInferenceFunctionServiceRole0607F42B
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/YoloInferenceEngine/yoloInferenceFunction/Resource
      aws:asset:path: asset.632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98
      aws:asset:property: Code
  BastionHostBastionHostLinuxInstanceRoleDC6D3E26:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonElasticFileSystemClientFullAccess
        - arn:aws:iam::aws:policy/AmazonElasticFileSystemsUtils
      Tags:
        - Key: Name
          Value: BastionHost
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/BastionHost/BastionHostLinux/Resource/InstanceRole/Resource
  BastionHostBastionHostLinuxInstanceRoleDefaultPolicyD165BFC8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssmmessages:*
              - ssm:UpdateInstanceInformation
              - ec2messages:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BastionHostBastionHostLinuxInstanceRoleDefaultPolicyD165BFC8
      Roles:
        - Ref: BastionHostBastionHostLinuxInstanceRoleDC6D3E26
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/BastionHost/BastionHostLinux/Resource/InstanceRole/DefaultPolicy/Resource
  BastionHostBastionHostLinuxInstanceProfileC18EFB40:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: BastionHostBastionHostLinuxInstanceRoleDC6D3E26
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/BastionHost/BastionHostLinux/Resource/InstanceProfile
  BastionHostBastionHostLinux39D0E0A9:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 64
      IamInstanceProfile:
        Ref: BastionHostBastionHostLinuxInstanceProfileC18EFB40
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: m5.xlarge
      SecurityGroupIds:
        - Fn::GetAtt:
            - Vpc8378EB38
            - DefaultSecurityGroup
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
      Tags:
        - Key: Name
          Value: BastionHost
      UserData:
        Fn::Base64: |-
          #!/bin/bash
          yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
    DependsOn:
      - BastionHostBastionHostLinuxInstanceRoleDefaultPolicyD165BFC8
      - BastionHostBastionHostLinuxInstanceRoleDC6D3E26
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/BastionHost/BastionHostLinux/Resource/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=2.113.0,@aws-cdk/assets=1.76.0,@aws-cdk/aws-apigatewayv2=1.76.0,@aws-cdk/aws-apigatewayv2-integrations=1.76.0,@aws-cdk/aws-applicationautoscaling=1.76.0,@aws-cdk/aws-autoscaling-common=1.76.0,@aws-cdk/aws-cloudwatch=1.76.0,@aws-cdk/aws-codeguruprofiler=1.76.0,@aws-cdk/aws-ec2=1.76.0,@aws-cdk/aws-ecr=1.76.0,@aws-cdk/aws-ecr-assets=1.76.0,@aws-cdk/aws-efs=1.76.0,@aws-cdk/aws-events=1.76.0,@aws-cdk/aws-iam=1.76.0,@aws-cdk/aws-kms=1.76.0,@aws-cdk/aws-lambda=1.76.0,@aws-cdk/aws-logs=1.76.0,@aws-cdk/aws-s3=1.76.0,@aws-cdk/aws-s3-assets=1.76.0,@aws-cdk/aws-sqs=1.76.0,@aws-cdk/aws-ssm=1.76.0,@aws-cdk/cloud-assembly-schema=1.76.0,@aws-cdk/core=1.76.0,@aws-cdk/cx-api=1.76.0,@aws-cdk/region-info=1.76.0,jsii-runtime=node.js/v18.12.1
    Metadata:
      aws:cdk:path: MLInferenceInfraStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  InferenceFileSystemFilesystemId7B8B5760:
    Value:
      Ref: InferenceFileSysteminferenceFs0EC62AB0
    Export:
      Name: FilesystemId
  InferenceFileSystemAccessPointId9A3AED83:
    Value:
      Ref: InferenceFileSystemInferenceFsAccessPoint8DAAC0A2
    Export:
      Name: AccessPointId
  HttpApiHttpApiUrl2400B1F9:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: HttpApi1AA332FB
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /dev
    Export:
      Name: HttpApiUrl
  BastionHostBastionHostLinuxBastionHostId947832E1:
    Description: Instance ID of the bastion host. Use this to connect via SSM Session Manager
    Value:
      Ref: BastionHostBastionHostLinux39D0E0A9
  BastionHostBastionhostId0E0C2782:
    Value:
      Ref: BastionHostBastionHostLinux39D0E0A9
    Export:
      Name: BastionHostId
Parameters:
  AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3BucketCE3F30F2:
    Type: String
    Description: S3 bucket for asset "632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98"
  AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98S3VersionKeyE9117762:
    Type: String
    Description: S3 key for asset version "632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98"
  AssetParameters632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98ArtifactHash97284DFD:
    Type: String
    Description: Artifact hash for asset "632e8ad6e612daa4797eb398023142efc0ae95a3468f75acef8c0331e3207d98"
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

