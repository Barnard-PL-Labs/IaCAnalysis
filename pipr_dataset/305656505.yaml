Resources:
  CiCdPipelineArtifacts5E8EF6DB:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName:
        Fn::Join:
          - ""
          - - ci-cd-pipeline-artifacts-
            - Ref: AWS::AccountId
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipelineArtifacts/Resource
  CiCdPipelineArtifactsPolicyED2F32B6:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CiCdPipelineArtifacts5E8EF6DB
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - CiCdPipelineArtifacts5E8EF6DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CiCdPipelineArtifacts5E8EF6DB
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipelineArtifacts/Policy/Resource
  CiCdPipelineArtifactsAutoDeleteObjectsCustomResource85F0C28D:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: CiCdPipelineArtifacts5E8EF6DB
    DependsOn:
      - CiCdPipelineArtifactsPolicyED2F32B6
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipelineArtifacts/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BooksApiPipeline/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538S3BucketB021608E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538S3VersionKeyC73B105A
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538S3VersionKeyC73B105A
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: CiCdPipelineArtifacts5E8EF6DB
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: BooksApiPipeline/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538
      aws:asset:property: Code
  ApiArtifacts07782394:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName:
        Fn::Join:
          - ""
          - - books-api-artifacts-
            - Ref: AWS::AccountId
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BooksApiPipeline/ApiArtifacts/Resource
  ApiArtifactsPolicy288AAF9E:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ApiArtifacts07782394
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - ApiArtifacts07782394
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiArtifacts07782394
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/ApiArtifacts/Policy/Resource
  ApiArtifactsAutoDeleteObjectsCustomResource4DAF3EC1:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: ApiArtifacts07782394
    DependsOn:
      - ApiArtifactsPolicy288AAF9E
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BooksApiPipeline/ApiArtifacts/AutoDeleteObjectsCustomResource/Default
  CiCdBuildRole1B178F31:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdBuild/Role/Resource
  CiCdBuildRoleDefaultPolicy4D6AE79A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CiCdBuild9AE16324
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CiCdBuild9AE16324
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CiCdBuild9AE16324
                  - -*
          - Action:
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ApiArtifacts07782394
                      - Arn
                  - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CiCdPipelineArtifacts5E8EF6DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CiCdPipelineArtifacts5E8EF6DB
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CiCdBuildRoleDefaultPolicy4D6AE79A
      Roles:
        - Ref: CiCdBuildRole1B178F31
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdBuild/Role/DefaultPolicy/Resource
  CiCdBuild9AE16324:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CiCdBuildRole1B178F31
          - Arn
      Source:
        BuildSpec: pipeline/buildspec.json
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Name: books-api-build
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdBuild/Resource
  CiCdDeployRole84DBA9C8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdDeploy/Role/Resource
  CiCdDeployRoleDefaultPolicy3E76BFA1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CiCdDeploy9806A63D
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CiCdDeploy9806A63D
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CiCdDeploy9806A63D
                  - -*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ApiArtifacts07782394
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiArtifacts07782394
                        - Arn
                    - /*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CiCdPipelineArtifacts5E8EF6DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CiCdPipelineArtifacts5E8EF6DB
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CiCdDeployRoleDefaultPolicy3E76BFA1
      Roles:
        - Ref: CiCdDeployRole84DBA9C8
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdDeploy/Role/DefaultPolicy/Resource
  CiCdDeploy9806A63D:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CiCdDeployRole84DBA9C8
          - Arn
      Source:
        BuildSpec: pipeline/buildspec-deploy.json
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Name: books-api-deploy
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdDeploy/Resource
  CiCdTestRole261BF34D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdTest/Role/Resource
  CiCdTestRoleDefaultPolicyD32404D8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CiCdTestADDC10F8
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CiCdTestADDC10F8
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CiCdTestADDC10F8
                  - -*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CiCdPipelineArtifacts5E8EF6DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CiCdPipelineArtifacts5E8EF6DB
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CiCdTestRoleDefaultPolicyD32404D8
      Roles:
        - Ref: CiCdTestRole261BF34D
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdTest/Role/DefaultPolicy/Resource
  CiCdTestADDC10F8:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CiCdTestRole261BF34D
          - Arn
      Source:
        BuildSpec: pipeline/buildspec-test.json
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Name: books-api-test
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdTest/Resource
  CiCdPipelineRoleAA81A49B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Role/Resource
  CiCdPipelineRoleDefaultPolicy08D0B8E4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CiCdPipelineArtifacts5E8EF6DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CiCdPipelineArtifacts5E8EF6DB
                        - Arn
                    - /*
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdPipelineSourceCodePipelineActionRole2C35E831
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdPipelineBuildCodePipelineActionRole2777B96A
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdPipelineStagingDeployCodePipelineActionRole64C1F00A
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdPipelineStagingTestCodePipelineActionRoleA582AB9E
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdPipelineProductionReviewCodePipelineActionRole226ABF10
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdPipelineProductionDeployCodePipelineActionRole99C4C204
                - Arn
        Version: "2012-10-17"
      PolicyName: CiCdPipelineRoleDefaultPolicy08D0B8E4
      Roles:
        - Ref: CiCdPipelineRoleAA81A49B
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Role/DefaultPolicy/Resource
  CiCdPipelineDD00ABC7:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - CiCdPipelineRoleAA81A49B
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn:
                  Fn::Join:
                    - ""
                    - - "arn:aws:codestar-connections:ap-southeast-1:"
                      - Ref: AWS::AccountId
                      - :connection/XXXXX
                FullRepositoryId: GIT_REPO_OWNER/GIT_REPO_NAME
                BranchName: GIT_BRANCH
              Name: Source
              Namespace: SourceVariables
              OutputArtifacts:
                - Name: Artifact_Source_Source
              RoleArn:
                Fn::GetAtt:
                  - CiCdPipelineSourceCodePipelineActionRole2C35E831
                  - Arn
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CiCdBuild9AE16324
                EnvironmentVariables:
                  Fn::Join:
                    - ""
                    - - '[{"name":"S3_BUCKET","type":"PLAINTEXT","value":"'
                      - Ref: ApiArtifacts07782394
                      - '"},{"name":"GIT_BRANCH","type":"PLAINTEXT","value":"GIT_BRANCH"}]'
              InputArtifacts:
                - Name: Artifact_Source_Source
              Name: Build
              Namespace: BuildVariables
              OutputArtifacts:
                - Name: Artifact_Build_Build
              RoleArn:
                Fn::GetAtt:
                  - CiCdPipelineBuildCodePipelineActionRole2777B96A
                  - Arn
              RunOrder: 1
          Name: Build
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CiCdDeploy9806A63D
                EnvironmentVariables: '[{"name":"STACK_NAME","type":"PLAINTEXT","value":"BooksApiStaging"},{"name":"ENVIRONMENT","type":"PLAINTEXT","value":"staging"},{"name":"ARTIFACTS_PATH","type":"PLAINTEXT","value":"#{BuildVariables.ARTIFACTS_PATH}"}]'
              InputArtifacts:
                - Name: Artifact_Source_Source
              Name: Deploy
              Namespace: StagingVariables
              RoleArn:
                Fn::GetAtt:
                  - CiCdPipelineStagingDeployCodePipelineActionRole64C1F00A
                  - Arn
              RunOrder: 1
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CiCdTestADDC10F8
                EnvironmentVariables: '[{"name":"API_ENDPOINT","type":"PLAINTEXT","value":"#{StagingVariables.API_ENDPOINT}"},{"name":"USER_POOL_ID","type":"PLAINTEXT","value":"#{StagingVariables.USER_POOL_ID}"},{"name":"USER_POOL_CLIENT_ID","type":"PLAINTEXT","value":"#{StagingVariables.USER_POOL_CLIENT_ID}"},{"name":"TABLE","type":"PLAINTEXT","value":"#{StagingVariables.TABLE}"}]'
              InputArtifacts:
                - Name: Artifact_Source_Source
              Name: Test
              RoleArn:
                Fn::GetAtt:
                  - CiCdPipelineStagingTestCodePipelineActionRoleA582AB9E
                  - Arn
              RunOrder: 2
          Name: Staging
        - Actions:
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Configuration:
                CustomData: Ensure Books API works correctly in Staging and release date is agreed with Product Owners
              Name: Review
              RoleArn:
                Fn::GetAtt:
                  - CiCdPipelineProductionReviewCodePipelineActionRole226ABF10
                  - Arn
              RunOrder: 1
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CiCdDeploy9806A63D
                EnvironmentVariables: '[{"name":"STACK_NAME","type":"PLAINTEXT","value":"BooksApiProduction"},{"name":"ENVIRONMENT","type":"PLAINTEXT","value":"production"},{"name":"ARTIFACTS_PATH","type":"PLAINTEXT","value":"#{BuildVariables.ARTIFACTS_PATH}"}]'
              InputArtifacts:
                - Name: Artifact_Source_Source
              Name: Deploy
              RoleArn:
                Fn::GetAtt:
                  - CiCdPipelineProductionDeployCodePipelineActionRole99C4C204
                  - Arn
              RunOrder: 2
          Name: Production
      ArtifactStore:
        Location:
          Ref: CiCdPipelineArtifacts5E8EF6DB
        Type: S3
      Name: BooksApi
    DependsOn:
      - CiCdPipelineRoleDefaultPolicy08D0B8E4
      - CiCdPipelineRoleAA81A49B
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Resource
  CiCdPipelineSourceCodePipelineActionRole2C35E831:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Source/Source/CodePipelineActionRole/Resource
  CiCdPipelineSourceCodePipelineActionRoleDefaultPolicy73208F1B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codestar-connections:UseConnection
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:codestar-connections:ap-southeast-1:"
                  - Ref: AWS::AccountId
                  - :connection/XXXXX
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CiCdPipelineArtifacts5E8EF6DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CiCdPipelineArtifacts5E8EF6DB
                        - Arn
                    - /*
          - Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - CiCdPipelineArtifacts5E8EF6DB
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: CiCdPipelineSourceCodePipelineActionRoleDefaultPolicy73208F1B
      Roles:
        - Ref: CiCdPipelineSourceCodePipelineActionRole2C35E831
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Source/Source/CodePipelineActionRole/DefaultPolicy/Resource
  CiCdPipelineBuildCodePipelineActionRole2777B96A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Build/Build/CodePipelineActionRole/Resource
  CiCdPipelineBuildCodePipelineActionRoleDefaultPolicy7EE26DA2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdBuild9AE16324
                - Arn
        Version: "2012-10-17"
      PolicyName: CiCdPipelineBuildCodePipelineActionRoleDefaultPolicy7EE26DA2
      Roles:
        - Ref: CiCdPipelineBuildCodePipelineActionRole2777B96A
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Build/Build/CodePipelineActionRole/DefaultPolicy/Resource
  CiCdPipelineStagingDeployCodePipelineActionRole64C1F00A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Staging/Deploy/CodePipelineActionRole/Resource
  CiCdPipelineStagingDeployCodePipelineActionRoleDefaultPolicy57D9A4BA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdDeploy9806A63D
                - Arn
        Version: "2012-10-17"
      PolicyName: CiCdPipelineStagingDeployCodePipelineActionRoleDefaultPolicy57D9A4BA
      Roles:
        - Ref: CiCdPipelineStagingDeployCodePipelineActionRole64C1F00A
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Staging/Deploy/CodePipelineActionRole/DefaultPolicy/Resource
  CiCdPipelineStagingTestCodePipelineActionRoleA582AB9E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Staging/Test/CodePipelineActionRole/Resource
  CiCdPipelineStagingTestCodePipelineActionRoleDefaultPolicy840F5672:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdTestADDC10F8
                - Arn
        Version: "2012-10-17"
      PolicyName: CiCdPipelineStagingTestCodePipelineActionRoleDefaultPolicy840F5672
      Roles:
        - Ref: CiCdPipelineStagingTestCodePipelineActionRoleA582AB9E
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Staging/Test/CodePipelineActionRole/DefaultPolicy/Resource
  CiCdPipelineProductionReviewCodePipelineActionRole226ABF10:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Production/Review/CodePipelineActionRole/Resource
  CiCdPipelineProductionDeployCodePipelineActionRole99C4C204:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Production/Deploy/CodePipelineActionRole/Resource
  CiCdPipelineProductionDeployCodePipelineActionRoleDefaultPolicyE32F21ED:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CiCdDeploy9806A63D
                - Arn
        Version: "2012-10-17"
      PolicyName: CiCdPipelineProductionDeployCodePipelineActionRoleDefaultPolicyE32F21ED
      Roles:
        - Ref: CiCdPipelineProductionDeployCodePipelineActionRole99C4C204
    Metadata:
      aws:cdk:path: BooksApiPipeline/CiCdPipeline/Production/Deploy/CodePipelineActionRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VOS04DMQw9S/epSwpILIG5wGg4QUhM5fnEVZwUoSh3J9OMNLB6z34fW4N+eoaHw6v5lqN10ylbDgj5Ixo7qS5J5GVA4RQsqu7L7/yf1Ae+kcOg3kQw1vCF/EV17CWGZOOa7E0wC8bqqUNVHEViX9R6OMsj5PdkJ7xbN9ag55nsz75uc1GWHX4mmh3knq44k1+/GHG71mhRZBbIA8/t+xX3wr9V161jb7s7Nl5KUb66YJTTTb+APoM+jEJ0DMlHWhCGhr8u2kn/UAEAAA==
    Metadata:
      aws:cdk:path: BooksApiPipeline/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538S3BucketB021608E:
    Type: String
    Description: S3 bucket for asset "15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538"
  AssetParameters15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538S3VersionKeyC73B105A:
    Type: String
    Description: S3 key for asset version "15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538"
  AssetParameters15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538ArtifactHash154EE95B:
    Type: String
    Description: Artifact hash for asset "15684a15d07860e99d2a8079150ad33dd2cb743677fcd7016dd07345e1b69538"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

