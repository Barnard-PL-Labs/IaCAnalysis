Resources:
  CalculateTargetShardCountLambdaServiceRole59834CA5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: KinesisScalingWorkflow/CalculateTargetShardCountLambda/ServiceRole/Resource
  CalculateTargetShardCountLambda8D13F44D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 80530e99355d6d7ca92d44a9697ba62d0fc4a9e2482b549cf023b2f4bde46c28.zip
      Role:
        Fn::GetAtt:
          - CalculateTargetShardCountLambdaServiceRole59834CA5
          - Arn
      FunctionName: CalculateTargetShardCountLambda
      Handler: kinesis_target_shard_calculator_lambda.lambda_handler
      Runtime: python3.9
    DependsOn:
      - CalculateTargetShardCountLambdaServiceRole59834CA5
    Metadata:
      aws:cdk:path: KinesisScalingWorkflow/CalculateTargetShardCountLambda/Resource
      aws:asset:path: asset.80530e99355d6d7ca92d44a9697ba62d0fc4a9e2482b549cf023b2f4bde46c28
      aws:asset:is-bundled: false
      aws:asset:property: Code
  KinesisScalingWorkflowRole77C54B7D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
      Description: Role for KinesisScalingWorkflow
    Metadata:
      aws:cdk:path: KinesisScalingWorkflow/KinesisScalingWorkflowRole/Resource
  KinesisScalingWorkflowRoleDefaultPolicy336BBB53:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - kinesis:DescribeStreamSummary
              - kinesis:UpdateShardCount
            Effect: Allow
            Resource: "*"
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CalculateTargetShardCountLambda8D13F44D
                - Arn
        Version: "2012-10-17"
      PolicyName: KinesisScalingWorkflowRoleDefaultPolicy336BBB53
      Roles:
        - Ref: KinesisScalingWorkflowRole77C54B7D
    Metadata:
      aws:cdk:path: KinesisScalingWorkflow/KinesisScalingWorkflowRole/DefaultPolicy/Resource
  KinesisScalingWorkflow:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - KinesisScalingWorkflowRole77C54B7D
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - |-
              {
                  "StartAt": "DescribeStreamSummary",
                  "States": {
                    "DescribeStreamSummary": {
                      "Type": "Task",
                      "Parameters": {
                        "StreamName.$": "$.stream_name"
                      },
                      "Resource": "arn:aws:states:::aws-sdk:kinesis:describeStreamSummary",
                      "Next": "CalculateTargetShardCount",
                      "ResultPath": "$.describe_stream_output"
                    },
                    "CalculateTargetShardCount": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "OutputPath": "$.Payload",
                      "Parameters": {
                        "Payload.$": "$",
                        "FunctionName": "
            - Fn::GetAtt:
                - CalculateTargetShardCountLambda8D13F44D
                - Arn
            - |-
              "
                      },
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "Lambda.ServiceException",
                            "Lambda.AWSLambdaException",
                            "Lambda.SdkClientException"
                          ],
                          "IntervalSeconds": 2,
                          "MaxAttempts": 6,
                          "BackoffRate": 2
                        }
                      ],
                      "Next": "UpdateShardCount"
                    },
                    "UpdateShardCount": {
                      "Type": "Task",
                      "Parameters": {
                        "ScalingType": "UNIFORM_SCALING",
                        "StreamName.$": "$.stream_name",
                        "TargetShardCount.$": "$.target_shard_count"
                      },
                      "Resource": "arn:aws:states:::aws-sdk:kinesis:updateShardCount",
                      "ResultPath": null,
                      "Next": "DoesStreamhaveDesiredShardNumber"
                    },
                    "DoesStreamhaveDesiredShardNumber": {
                      "Type": "Choice",
                      "Choices": [
                        {
                          "Variable": "$.target_shard_count",
                          "NumericEqualsPath": "$.desired_shard_count",
                          "Next": "Success"
                        }
                      ],
                      "Default": "DescribeStreamSummary2"
                    },
                    "DescribeStreamSummary2": {
                      "Type": "Task",
                      "Parameters": {
                        "StreamName.$": "$.stream_name"
                      },
                      "Resource": "arn:aws:states:::aws-sdk:kinesis:describeStreamSummary",
                      "ResultPath": "$.describe_stream_output",
                      "Next": "IsStreamActive"
                    },
                    "IsStreamActive": {
                      "Type": "Choice",
                      "Choices": [
                        {
                          "Variable": "$.describe_stream_output.StreamDescriptionSummary.StreamStatus",
                          "StringEquals": "ACTIVE",
                          "Next": "CalculateTargetShardCount"
                        }
                      ],
                      "Default": "Wait"
                    },
                    "Wait": {
                      "Type": "Wait",
                      "Seconds": 30,
                      "Next": "DescribeStreamSummary2"
                    },
                    "Success": {
                      "Type": "Succeed"
                    }
                  },
                  "TimeoutSeconds": 900,
                  "Comment": "Workflow to Scale up/Scale Down to the desired number of Kinesis Data Stream Shards"
                }
      StateMachineName: KinesisScalingWorkflow
    Metadata:
      aws:cdk:path: KinesisScalingWorkflow/KinesisScalingWorkflow
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/zWOyw6CMBBFv4V9GQU3uhQSdyYGP4CUMuDwaA1TNKbh3y1FV/eR3DmTQnKCfSTfHKu6jweqwN2tVL3wVekGOVa1BHeZtbJktMgb/feLIDmCK8yAax30ZgZSnzVubhF8KCUzWobzKj5DNqsebSYZBVt8Nr97DH7m2RavUj1I4yLCxFct6TYwkM08qcDLja5p+0ObGqHj3Ss5QpJCEnVMFE+ztjQiFJt+AeZbWvjqAAAA
    Metadata:
      aws:cdk:path: KinesisScalingWorkflow/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

