Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: DbDefinerStack/Vpc
    Metadata:
      aws:cdk:path: DbDefinerStack/Vpc/Resource
  VpcdbSubnet1Subnet1B82B149:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: DbDefinerStack/Vpc/dbSubnet1
    Metadata:
      aws:cdk:path: DbDefinerStack/Vpc/dbSubnet1/Subnet
  VpcdbSubnet1RouteTable04184FDD:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: DbDefinerStack/Vpc/dbSubnet1
    Metadata:
      aws:cdk:path: DbDefinerStack/Vpc/dbSubnet1/RouteTable
  VpcdbSubnet1RouteTableAssociation3FF66701:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbSubnet1RouteTable04184FDD
      SubnetId:
        Ref: VpcdbSubnet1Subnet1B82B149
    Metadata:
      aws:cdk:path: DbDefinerStack/Vpc/dbSubnet1/RouteTableAssociation
  VpcdbSubnet2Subnet01192A3B:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: db
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: DbDefinerStack/Vpc/dbSubnet2
    Metadata:
      aws:cdk:path: DbDefinerStack/Vpc/dbSubnet2/Subnet
  VpcdbSubnet2RouteTable7BBEF14D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: DbDefinerStack/Vpc/dbSubnet2
    Metadata:
      aws:cdk:path: DbDefinerStack/Vpc/dbSubnet2/RouteTable
  VpcdbSubnet2RouteTableAssociation3D000840:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcdbSubnet2RouteTable7BBEF14D
      SubnetId:
        Ref: VpcdbSubnet2Subnet01192A3B
    Metadata:
      aws:cdk:path: DbDefinerStack/Vpc/dbSubnet2/RouteTableAssociation
  DBAuroraClusterSubnets6F7FAD49:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for AuroraCluster database
      SubnetIds:
        - Ref: VpcdbSubnet1Subnet1B82B149
        - Ref: VpcdbSubnet2Subnet01192A3B
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/AuroraCluster/Subnets/Default
  DBAuroraClusterSecurityGroup0B50A54B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/AuroraCluster/SecurityGroup/Resource
  DBAuroraClusterSecurityGroupfromIndirectPeerIndirectPortFF42F222:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      CidrIp:
        Fn::GetAtt:
          - Vpc8378EB38
          - CidrBlock
      Description:
        Fn::Join:
          - ""
          - - "from "
            - Fn::GetAtt:
                - Vpc8378EB38
                - CidrBlock
            - :{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DBAuroraCluster6C1914EB
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DBAuroraClusterSecurityGroup0B50A54B
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DBAuroraCluster6C1914EB
          - Endpoint.Port
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/AuroraCluster/SecurityGroup/from {IndirectPeer}:{IndirectPort}
  DBAuroraClusterSecret7FC04250:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/AuroraCluster/Secret/Resource
  DBAuroraClusterSecretAttachment0EBC6996:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: DBAuroraClusterSecret7FC04250
      TargetId:
        Ref: DBAuroraCluster6C1914EB
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/AuroraCluster/Secret/Attachment/Resource
  DBAuroraCluster6C1914EB:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      CopyTagsToSnapshot: true
      DatabaseName: prototype
      DBClusterParameterGroupName: default.aurora-mysql5.7
      DBSubnetGroupName:
        Ref: DBAuroraClusterSubnets6F7FAD49
      EngineVersion: 5.7.12
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBAuroraClusterSecret7FC04250
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBAuroraClusterSecret7FC04250
            - :SecretString:password::}}
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - DBAuroraClusterSecurityGroup0B50A54B
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/AuroraCluster/Resource
  DBAuroraClusterInstance137198F02:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier:
        Ref: DBAuroraCluster6C1914EB
      DBSubnetGroupName:
        Ref: DBAuroraClusterSubnets6F7FAD49
      Engine: aurora-mysql
      EngineVersion: 5.7.12
      PubliclyAccessible: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/AuroraCluster/Instance1
  DBVpcEndpointSecurityGroupFF7ED50F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DbDefinerStack/DB/VpcEndpoint/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - Vpc8378EB38
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - Vpc8378EB38
                    - CidrBlock
                - :443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/VpcEndpoint/SecurityGroup/Resource
  DBVpcEndpointC4B3F5A0:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .secretsmanager
      VpcId:
        Ref: Vpc8378EB38
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - DBVpcEndpointSecurityGroupFF7ED50F
            - GroupId
      SubnetIds:
        - Ref: VpcdbSubnet1Subnet1B82B149
        - Ref: VpcdbSubnet2Subnet01192A3B
      VpcEndpointType: Interface
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/VpcEndpoint/Resource
  DBDbDefinerServiceRole0A183E3A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/DbDefiner/ServiceRole/Resource
  DBDbDefinerServiceRoleDefaultPolicyD749A5B1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBAuroraClusterSecretAttachment0EBC6996
        Version: "2012-10-17"
      PolicyName: DBDbDefinerServiceRoleDefaultPolicyD749A5B1
      Roles:
        - Ref: DBDbDefinerServiceRole0A183E3A
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/DbDefiner/ServiceRole/DefaultPolicy/Resource
  DBDbDefinerSecurityGroupB9883C5F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function DbDefinerStackDBDbDefiner4092DED7
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/DbDefiner/SecurityGroup/Resource
  DBDbDefiner53C1CCFA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:8cbde30dea054cd5fe37eb23dadfa6378296d3e63172b23122ceeb2aa6868f59
      Role:
        Fn::GetAtt:
          - DBDbDefinerServiceRole0A183E3A
          - Arn
      Environment:
        Variables:
          DB_SECRET_NAME:
            Fn::Join:
              - "-"
              - - Fn::Select:
                    - 0
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: DBAuroraClusterSecret7FC04250
                - Fn::Select:
                    - 1
                    - Fn::Split:
                        - "-"
                        - Fn::Select:
                            - 6
                            - Fn::Split:
                                - ":"
                                - Ref: DBAuroraClusterSecret7FC04250
          DB_ENGINE_FAMILY: MYSQL
          DB_NAME: prototype
      MemorySize: 256
      PackageType: Image
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - DBDbDefinerSecurityGroupB9883C5F
              - GroupId
        SubnetIds:
          - Ref: VpcdbSubnet1Subnet1B82B149
          - Ref: VpcdbSubnet2Subnet01192A3B
    DependsOn:
      - DBDbDefinerServiceRoleDefaultPolicyD749A5B1
      - DBDbDefinerServiceRole0A183E3A
    Metadata:
      aws:cdk:path: DbDefinerStack/DB/DbDefiner/Resource
      aws:asset:path: asset.8cbde30dea054cd5fe37eb23dadfa6378296d3e63172b23122ceeb2aa6868f59
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31RwW7CMAz9Fu4hW7lsVyjb1NNQQVyRm5oSaJMqdphQ1X9f2qyDw7ST7edn+9leyORFPs/gi+aqvMxrXchuy6AuIkCHDtVCdvtWifRo9ptUbJy+AuPWFwZ5AO9ebj3jDooa7/gdWxJZpYG1NWKLyjvNtw9nfTuS/wUyUzkkEplhdEdQGPS8mbK12vCPrinshStJdmtgKIAwrT2FGhHF/HZfrx6BiRxmurjJejUVjkFmiMEo7AWNFGrAQIVOdlHpUBXNDlyFvORwv1ODUd3fmV7U0BQlBK1WXdBlTej47o0aDxTKJr8XGhrZ5TaedbQbW2t1G8Lo9SLMOABR0CYf+i0HZMjJHFtLmq27rcKmvciRrHcKxUgJ/660qYaGn55bH985UYKfWlPqqMbYEuWZnq7Jq0wWMpmdSeu584Z1gzKP9hsjJvdnVQIAAA==
    Metadata:
      aws:cdk:path: DbDefinerStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  DBDBLambdaName9BE615E1:
    Value:
      Ref: DBDbDefiner53C1CCFA
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

