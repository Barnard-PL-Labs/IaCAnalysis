Resources:
  AKeyPairEC2KeyPaircdkec2instagram2508C19C:
    Type: Custom::EC2-Key-Pair
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - EC2KeyNameManagerLambdaBE629145
          - Arn
      Name: cdk-ec2-instagram
      Description: This is a Key Pair for EC2 instance
      KmsPrivate: alias/aws/secretsmanager
      KmsPublic: alias/aws/secretsmanager
      PublicKey: ""
      StorePublicKey: true
      ExposePublicKey: false
      PublicKeyFormat: OPENSSH
      RemoveKeySecretsAfterDays: 0
      SecretPrefix: ec2-ssh-key/
      StackName: CdkEc2InstagramStack
      Tags:
        CreatedByCfnCustomResource: CFN::Resource::Custom::EC2-Key-Pair
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/A-Key-Pair/EC2-Key-Pair-cdk-ec2-instagram/Default
  EC2KeyPairManagerPolicyEBBC1576:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ec2:DescribeKeyPairs
            Effect: Allow
            Resource: "*"
          - Action:
              - ec2:CreateKeyPair
              - ec2:CreateTags
              - ec2:ImportKeyPair
            Condition:
              StringLike:
                aws:RequestTag/CreatedByCfnCustomResource: CFN::Resource::Custom::EC2-Key-Pair
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :ec2:*:*:key-pair/*
          - Action:
              - ec2:CreateTags
              - ec2:DeleteKeyPair
              - ec2:DeleteTags
            Condition:
              StringLike:
                ec2:ResourceTag/CreatedByCfnCustomResource: CFN::Resource::Custom::EC2-Key-Pair
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :ec2:*:*:key-pair/*
          - Action: secretsmanager:ListSecrets
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:CreateSecret
              - secretsmanager:TagResource
            Condition:
              StringLike:
                aws:RequestTag/CreatedByCfnCustomResource: CFN::Resource::Custom::EC2-Key-Pair
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:DeleteResourcePolicy
              - secretsmanager:DeleteSecret
              - secretsmanager:DescribeSecret
              - secretsmanager:GetResourcePolicy
              - secretsmanager:GetSecretValue
              - secretsmanager:ListSecretVersionIds
              - secretsmanager:PutResourcePolicy
              - secretsmanager:PutSecretValue
              - secretsmanager:RestoreSecret
              - secretsmanager:UntagResource
              - secretsmanager:UpdateSecret
              - secretsmanager:UpdateSecretVersionStage
            Condition:
              StringLike:
                secretsmanager:ResourceTag/CreatedByCfnCustomResource: CFN::Resource::Custom::EC2-Key-Pair
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: Used by Lambda CFN-Resource-Custom-EC2-Key-Pair, which is a custom CFN resource, managing EC2 Key Pairs
      ManagedPolicyName: CdkEc2InstagramStack-CFN-Resource-Custom-EC2-Key-Pair
      Path: /
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/EC2-Key-Pair-Manager-Policy/Resource
  EC2KeyPairManagerRoleB243C519:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: Used by Lambda CFN-Resource-Custom-EC2-Key-Pair, which is a custom CFN resource, managing EC2 Key Pairs
      ManagedPolicyArns:
        - Ref: EC2KeyPairManagerPolicyEBBC1576
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: CdkEc2InstagramStack-CFN-Resource-Custom-EC2-Key-Pair
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/EC2-Key-Pair-Manager-Role/Resource
  EC2KeyNameManagerLambdaBE629145:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 05a1993b06bfce5c4452d1e976f29d82e356fba5ba793b48bd2a60fd54443029.zip
      Role:
        Fn::GetAtt:
          - EC2KeyPairManagerRoleB243C519
          - Arn
      Description: "Custom CFN resource: Manage EC2 Key Pairs"
      FunctionName: CdkEc2InstagramStack-CFN-Resource-Custom-EC2-Key-Pair
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 180
    DependsOn:
      - EC2KeyPairManagerRoleB243C519
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/EC2-Key-Name-Manager-Lambda/Resource
      aws:asset:path: asset.05a1993b06bfce5c4452d1e976f29d82e356fba5ba793b48bd2a60fd54443029.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkEc2InstagramStack/VPC
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/Resource
  VPCinstasubnetSubnet1SubnetABA885DB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: insta_subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkEc2InstagramStack/VPC/insta_subnetSubnet1
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet1/Subnet
  VPCinstasubnetSubnet1RouteTable19E3386A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkEc2InstagramStack/VPC/insta_subnetSubnet1
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet1/RouteTable
  VPCinstasubnetSubnet1RouteTableAssociationDB4A708B:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCinstasubnetSubnet1RouteTable19E3386A
      SubnetId:
        Ref: VPCinstasubnetSubnet1SubnetABA885DB
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet1/RouteTableAssociation
  VPCinstasubnetSubnet1DefaultRoute9AD93E94:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCinstasubnetSubnet1RouteTable19E3386A
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet1/DefaultRoute
  VPCinstasubnetSubnet2Subnet7A4A2011:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: insta_subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkEc2InstagramStack/VPC/insta_subnetSubnet2
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet2/Subnet
  VPCinstasubnetSubnet2RouteTableD6AB9410:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: CdkEc2InstagramStack/VPC/insta_subnetSubnet2
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet2/RouteTable
  VPCinstasubnetSubnet2RouteTableAssociationAEDF8CBC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCinstasubnetSubnet2RouteTableD6AB9410
      SubnetId:
        Ref: VPCinstasubnetSubnet2Subnet7A4A2011
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet2/RouteTableAssociation
  VPCinstasubnetSubnet2DefaultRoute53117A6E:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCinstasubnetSubnet2RouteTableD6AB9410
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/insta_subnetSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkEc2InstagramStack/VPC
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/VPC/VPCGW
  SecurityGroupDD263621:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH (TCP port 22) in
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow SSH Access
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: Allow HTTP Access
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/SecurityGroup/Resource
  ec2Role38AB65C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMManagedInstanceCore
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/ec2Role/Resource
  ec2RoleDefaultPolicyC400AE24:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetResourcePolicy
              - secretsmanager:GetSecretValue
              - secretsmanager:ListSecretVersionIds
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AKeyPairEC2KeyPaircdkec2instagram2508C19C
                - PrivateKeyARN
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
                    - /*
        Version: "2012-10-17"
      PolicyName: ec2RoleDefaultPolicyC400AE24
      Roles:
        - Ref: ec2Role38AB65C0
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/ec2Role/DefaultPolicy/Resource
  InstanceInstanceProfileAB5AEF02:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2Role38AB65C0
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/Instance/InstanceProfile
  InstanceC1063A87:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: InstanceInstanceProfileAB5AEF02
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      KeyName:
        Fn::GetAtt:
          - AKeyPairEC2KeyPaircdkec2instagram2508C19C
          - KeyPairName
      SecurityGroupIds:
        - Fn::GetAtt:
            - SecurityGroupDD263621
            - GroupId
      SubnetId:
        Ref: VPCinstasubnetSubnet1SubnetABA885DB
      Tags:
        - Key: Name
          Value: CdkEc2InstagramStack/Instance
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash
                mkdir -p $(dirname '/tmp/f01fda7901d100362339558df15ea9297ecd0af5b2d452cc7135ad6e72622065.sh')
                aws s3 cp 's3://
              - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
              - |-
                /f01fda7901d100362339558df15ea9297ecd0af5b2d452cc7135ad6e72622065.sh' '/tmp/f01fda7901d100362339558df15ea9297ecd0af5b2d452cc7135ad6e72622065.sh'
                set -e
                chmod +x '/tmp/f01fda7901d100362339558df15ea9297ecd0af5b2d452cc7135ad6e72622065.sh'
                '/tmp/f01fda7901d100362339558df15ea9297ecd0af5b2d452cc7135ad6e72622065.sh' --verbose -y
    DependsOn:
      - ec2RoleDefaultPolicyC400AE24
      - ec2Role38AB65C0
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/Instance/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VQwW6DMAz9lt7TbLDDdm2RVu0wDcHUa2WCy1JIghJnFUL8+wKU0Z5svzzn+b2YR6/8eQNXtxVlvW1kwfucQNQs8Y6MytAZbwWy5Kz/+8A+9RIU7z9BQ4VlahopupHzCGSmmTfHupLW7kM7Ai0wteYsGxxYA6oogffvXguSRo+kpR+YezmBc0iO78YSZr73okbag0OGIub9sRXjzjFNWOqLoJP7QgdqwNYuM57wG4r5uhlfsfC3ERIW+elhPpbQBuYBCK/Q3WRu045Caj8KNbEchbeSuoM1vp0EHoDF873/YWCToxB9JXXF7mNPwYLCID0OX55aP3lIjC7lHIs2JfKLe/qN3ngU82hzcVJurdckFfJsrn8CWGIk6gEAAA==
    Metadata:
      aws:cdk:path: CdkEc2InstagramStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Outputs:
  IPAddress:
    Value:
      Fn::GetAtt:
        - InstanceC1063A87
        - PublicIp
  sshcommand:
    Value:
      Fn::Join:
        - ""
        - - "ssh -i "
          - Fn::GetAtt:
              - AKeyPairEC2KeyPaircdkec2instagram2508C19C
              - KeyPairName
          - " -o IdentitiesOnly=yes ec2-user@ "
          - Fn::GetAtt:
              - InstanceC1063A87
              - PublicIp
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

