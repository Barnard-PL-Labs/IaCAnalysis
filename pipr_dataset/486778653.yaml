Resources:
  TimeToLiveDeleteStackServiceRole5597A6E0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: docker-lambda-esm/TimeToLive/DeleteStack/ServiceRole/Resource
  TimeToLiveDeleteStackServiceRoleDefaultPolicy08F3148E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: "*"
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: TimeToLiveDeleteStackServiceRoleDefaultPolicy08F3148E
      Roles:
        - Ref: TimeToLiveDeleteStackServiceRole5597A6E0
    Metadata:
      aws:cdk:path: docker-lambda-esm/TimeToLive/DeleteStack/ServiceRole/DefaultPolicy/Resource
  TimeToLiveDeleteStack08274E9B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: ece017a7d7cfba4a1602f6d267cf5a02781708db95bbf4ff8c2394796f26b7a2.zip
      Role:
        Fn::GetAtt:
          - TimeToLiveDeleteStackServiceRole5597A6E0
          - Arn
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - TimeToLiveDeleteStackServiceRoleDefaultPolicy08F3148E
      - TimeToLiveDeleteStackServiceRole5597A6E0
    Metadata:
      aws:cdk:path: docker-lambda-esm/TimeToLive/DeleteStack/Resource
      aws:asset:path: asset.ece017a7d7cfba4a1602f6d267cf5a02781708db95bbf4ff8c2394796f26b7a2
      aws:asset:is-bundled: false
      aws:asset:property: Code
  TimeToLive7895C003:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - TimeToLiveDeleteStack08274E9B
              - Arn
          Id: Target0
          Input:
            Fn::Join:
              - ""
              - - '{"stackId":"'
                - Ref: AWS::StackId
                - '"}'
    Metadata:
      aws:cdk:path: docker-lambda-esm/TimeToLive/TimeToLive/Resource
  TimeToLiveAllowEventRuledockerlambdaesmTimeToLiveDeleteStackB658C13E79ABB95A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TimeToLiveDeleteStack08274E9B
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - TimeToLive7895C003
          - Arn
    Metadata:
      aws:cdk:path: docker-lambda-esm/TimeToLive/TimeToLive/AllowEventRuledockerlambdaesmTimeToLiveDeleteStackB658C13E
  servicearm64lambdafuncServiceRole37C54076:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64/lambda-func/ServiceRole/Resource
  servicearm64lambdafuncServiceRoleDefaultPolicy3DC557F2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: servicearm64lambdafuncServiceRoleDefaultPolicy3DC557F2
      Roles:
        - Ref: servicearm64lambdafuncServiceRole37C54076
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64/lambda-func/ServiceRole/DefaultPolicy/Resource
  servicearm64lambdafunc19BDD28F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:d25b65077ee1636e188200ca91c0d04f83e02dc583114d0bdd83f8f4e3b6c124
      Role:
        Fn::GetAtt:
          - servicearm64lambdafuncServiceRole37C54076
          - Arn
      Architectures:
        - arm64
      Environment:
        Variables:
          NODE_ENV: production
      MemorySize: 512
      PackageType: Image
      Timeout: 20
      TracingConfig:
        Mode: Active
    DependsOn:
      - servicearm64lambdafuncServiceRoleDefaultPolicy3DC557F2
      - servicearm64lambdafuncServiceRole37C54076
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64/lambda-func/Resource
      aws:asset:path: asset.d25b65077ee1636e188200ca91c0d04f83e02dc583114d0bdd83f8f4e3b6c124
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:docker-build-args:
        arch: arm64
        archImage: arm64
      aws:asset:property: Code.ImageUri
  servicearm64lambdafuncLogRetention37673F95:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: servicearm64lambdafunc19BDD28F
      RetentionInDays: 30
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64/lambda-func/LogRetention/Resource
  servicearm64lambdafuncFunctionUrl558938AD:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Fn::GetAtt:
          - servicearm64lambdafunc19BDD28F
          - Arn
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64/lambda-func/FunctionUrl/Resource
  servicearm64lambdafuncinvokefunctionurlD8380509:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName:
        Fn::GetAtt:
          - servicearm64lambdafunc19BDD28F
          - Arn
      Principal: "*"
      FunctionUrlAuthType: NONE
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64/lambda-func/invoke-function-url
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: docker-lambda-esm/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: docker-lambda-esm/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: docker-lambda-esm/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  servicearm64ziplambdafuncServiceRoleD211D429:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64-zip/lambda-func/ServiceRole/Resource
  servicearm64ziplambdafuncA78703A7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 4b0538291e903ec1812cdf892e293039bd85820c89a3f14f4ae76fa33ddec670.zip
      Role:
        Fn::GetAtt:
          - servicearm64ziplambdafuncServiceRoleD211D429
          - Arn
      Environment:
        Variables:
          NODE_ENV: production
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      MemorySize: 512
      Runtime: nodejs14.x
      Timeout: 20
    DependsOn:
      - servicearm64ziplambdafuncServiceRoleD211D429
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64-zip/lambda-func/Resource
      aws:asset:path: asset.4b0538291e903ec1812cdf892e293039bd85820c89a3f14f4ae76fa33ddec670
      aws:asset:is-bundled: true
      aws:asset:property: Code
  servicearm64ziplambdafuncLogRetention2EC780ED:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: servicearm64ziplambdafuncA78703A7
      RetentionInDays: 30
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64-zip/lambda-func/LogRetention/Resource
  servicearm64ziplambdafuncFunctionUrlC6DF6C7D:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Fn::GetAtt:
          - servicearm64ziplambdafuncA78703A7
          - Arn
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64-zip/lambda-func/FunctionUrl/Resource
  servicearm64ziplambdafuncinvokefunctionurl3170F2F7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName:
        Fn::GetAtt:
          - servicearm64ziplambdafuncA78703A7
          - Arn
      Principal: "*"
      FunctionUrlAuthType: NONE
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-arm64-zip/lambda-func/invoke-function-url
  serviceamd64lambdafuncServiceRoleA39E2F40:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-amd64/lambda-func/ServiceRole/Resource
  serviceamd64lambdafuncServiceRoleDefaultPolicy46E1335C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: serviceamd64lambdafuncServiceRoleDefaultPolicy46E1335C
      Roles:
        - Ref: serviceamd64lambdafuncServiceRoleA39E2F40
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-amd64/lambda-func/ServiceRole/DefaultPolicy/Resource
  serviceamd64lambdafunc5393F5F8:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:d13605096197d394322135aff7c9f4734701adad23ba0d499eae01aed25ec247
      Role:
        Fn::GetAtt:
          - serviceamd64lambdafuncServiceRoleA39E2F40
          - Arn
      Architectures:
        - x86_64
      Environment:
        Variables:
          NODE_ENV: production
      MemorySize: 512
      PackageType: Image
      Timeout: 20
      TracingConfig:
        Mode: Active
    DependsOn:
      - serviceamd64lambdafuncServiceRoleDefaultPolicy46E1335C
      - serviceamd64lambdafuncServiceRoleA39E2F40
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-amd64/lambda-func/Resource
      aws:asset:path: asset.d13605096197d394322135aff7c9f4734701adad23ba0d499eae01aed25ec247
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:docker-build-args:
        arch: amd64
        archImage: x86_64
      aws:asset:property: Code.ImageUri
  serviceamd64lambdafuncLogRetentionA1C99AFA:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: serviceamd64lambdafunc5393F5F8
      RetentionInDays: 30
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-amd64/lambda-func/LogRetention/Resource
  serviceamd64lambdafuncFunctionUrlE8D2A9D8:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Fn::GetAtt:
          - serviceamd64lambdafunc5393F5F8
          - Arn
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-amd64/lambda-func/FunctionUrl/Resource
  serviceamd64lambdafuncinvokefunctionurlFAB54FF0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName:
        Fn::GetAtt:
          - serviceamd64lambdafunc5393F5F8
          - Arn
      Principal: "*"
      FunctionUrlAuthType: NONE
    Metadata:
      aws:cdk:path: docker-lambda-esm/service-amd64/lambda-func/invoke-function-url
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QTWvDMAyGf0vvjrakl13XjkFhrCVj5+A6WnDi2MWyO0rIf5/sLKWn97U+HkmuoKrgeSN/qVDtUBh9hukrSDUIDjWTkeO5lTC9R6uCdlbsf+yjP6EfNVF6vTk1oD+MssN7xWq+vUnVLLPQcoSpdgZTJOvJGa1uGZfdLGjbSCIMBK9J+A27yPiwk4QCr2g5NdXxH8I6C1R+bXpYZennHNR4caSD87cMMa4j+HBdjYFpadnl1sa6FnuCzyzrAbPIIP6ZTtsuD0Vy0SsUd8PBYwyXGJLbO9vqpTMBoaena/kCZQXlpietCx956ohQL/oHmYnTOYgBAAA=
    Metadata:
      aws:cdk:path: docker-lambda-esm/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  serviceurlarm:
    Value:
      Fn::GetAtt:
        - servicearm64lambdafuncFunctionUrl558938AD
        - FunctionUrl
    Export:
      Name: docker-lambda-esm-service-url-arm
  serviceurlarmzip:
    Value:
      Fn::GetAtt:
        - servicearm64ziplambdafuncFunctionUrlC6DF6C7D
        - FunctionUrl
    Export:
      Name: docker-lambda-esm-service-url-arm-zip
  serviceurlamd:
    Value:
      Fn::GetAtt:
        - serviceamd64lambdafuncFunctionUrlE8D2A9D8
        - FunctionUrl
    Export:
      Name: docker-lambda-esm-service-url-amd
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

