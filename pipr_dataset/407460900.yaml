Resources:
  MysqlRdsCredentials1A291113:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
      Name: /rdsinitexample/rds/creds/mysql-01
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: RdsInitExample/MysqlRdsCredentials/Resource
  MysqlRdsCredentialsAttachment355BBE11:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: MysqlRdsCredentials1A291113
      TargetId:
        Ref: MysqlRdsInstance6F997E54
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: RdsInitExample/MysqlRdsCredentials/Attachment/Resource
  MyVPCAFB07A31:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/Resource
  MyVPCingressSubnet1Subnet826B3239:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: ingress
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet1/Subnet
  MyVPCingressSubnet1RouteTableB42CFE20:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet1/RouteTable
  MyVPCingressSubnet1RouteTableAssociationC24F338C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCingressSubnet1RouteTableB42CFE20
      SubnetId:
        Ref: MyVPCingressSubnet1Subnet826B3239
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet1/RouteTableAssociation
  MyVPCingressSubnet1DefaultRoute284CEB77:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVPCingressSubnet1RouteTableB42CFE20
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVPCIGW30AB6DD6
    DependsOn:
      - MyVPCVPCGWE6F260E1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet1/DefaultRoute
  MyVPCingressSubnet1EIPEFD3F682:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet1/EIP
  MyVPCingressSubnet1NATGateway33681E44:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVPCingressSubnet1Subnet826B3239
      AllocationId:
        Fn::GetAtt:
          - MyVPCingressSubnet1EIPEFD3F682
          - AllocationId
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet1/NATGateway
  MyVPCingressSubnet2Subnet1C4FF535:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: ingress
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet2/Subnet
  MyVPCingressSubnet2RouteTable9F8D47F4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet2/RouteTable
  MyVPCingressSubnet2RouteTableAssociation89A79312:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCingressSubnet2RouteTable9F8D47F4
      SubnetId:
        Ref: MyVPCingressSubnet2Subnet1C4FF535
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet2/RouteTableAssociation
  MyVPCingressSubnet2DefaultRoute6FDE9456:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVPCingressSubnet2RouteTable9F8D47F4
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVPCIGW30AB6DD6
    DependsOn:
      - MyVPCVPCGWE6F260E1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet2/DefaultRoute
  MyVPCingressSubnet2EIP7F8C559A:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet2/EIP
  MyVPCingressSubnet2NATGateway0DA97D15:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVPCingressSubnet2Subnet1C4FF535
      AllocationId:
        Fn::GetAtt:
          - MyVPCingressSubnet2EIP7F8C559A
          - AllocationId
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/ingressSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/ingressSubnet2/NATGateway
  MyVPCcomputeSubnet1Subnet13EB6C6D:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: compute
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: RdsInitExample/MyVPC/computeSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet1/Subnet
  MyVPCcomputeSubnet1RouteTableE444B407:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/computeSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet1/RouteTable
  MyVPCcomputeSubnet1RouteTableAssociation545714D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCcomputeSubnet1RouteTableE444B407
      SubnetId:
        Ref: MyVPCcomputeSubnet1Subnet13EB6C6D
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet1/RouteTableAssociation
  MyVPCcomputeSubnet1DefaultRoute3E741F04:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVPCcomputeSubnet1RouteTableE444B407
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVPCingressSubnet1NATGateway33681E44
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet1/DefaultRoute
  MyVPCcomputeSubnet2SubnetC720E999:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: compute
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: RdsInitExample/MyVPC/computeSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet2/Subnet
  MyVPCcomputeSubnet2RouteTable7F9BBD0C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/computeSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet2/RouteTable
  MyVPCcomputeSubnet2RouteTableAssociationAA4AF9CA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCcomputeSubnet2RouteTable7F9BBD0C
      SubnetId:
        Ref: MyVPCcomputeSubnet2SubnetC720E999
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet2/RouteTableAssociation
  MyVPCcomputeSubnet2DefaultRouteF6E72A84:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVPCcomputeSubnet2RouteTable7F9BBD0C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVPCingressSubnet2NATGateway0DA97D15
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/computeSubnet2/DefaultRoute
  MyVPCrdsSubnet1Subnet923AFB93:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.4.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: rds
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: RdsInitExample/MyVPC/rdsSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/rdsSubnet1/Subnet
  MyVPCrdsSubnet1RouteTable63F43E5F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/rdsSubnet1
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/rdsSubnet1/RouteTable
  MyVPCrdsSubnet1RouteTableAssociation30DA2878:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCrdsSubnet1RouteTable63F43E5F
      SubnetId:
        Ref: MyVPCrdsSubnet1Subnet923AFB93
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/rdsSubnet1/RouteTableAssociation
  MyVPCrdsSubnet2Subnet12A42E21:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.4.16/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: rds
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: RdsInitExample/MyVPC/rdsSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/rdsSubnet2/Subnet
  MyVPCrdsSubnet2RouteTable78F32F5A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC/rdsSubnet2
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/rdsSubnet2/RouteTable
  MyVPCrdsSubnet2RouteTableAssociationB51FD5B4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCrdsSubnet2RouteTable78F32F5A
      SubnetId:
        Ref: MyVPCrdsSubnet2Subnet12A42E21
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/rdsSubnet2/RouteTableAssociation
  MyVPCIGW30AB6DD6:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: RdsInitExample/MyVPC
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/IGW
  MyVPCVPCGWE6F260E1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MyVPCAFB07A31
      InternetGatewayId:
        Ref: MyVPCIGW30AB6DD6
    Metadata:
      aws:cdk:path: RdsInitExample/MyVPC/VPCGW
  MysqlRdsInstanceSubnetGroupB34A67DD:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for MysqlRdsInstance database
      SubnetIds:
        - Ref: MyVPCrdsSubnet1Subnet923AFB93
        - Ref: MyVPCrdsSubnet2Subnet12A42E21
    Metadata:
      aws:cdk:path: RdsInitExample/MysqlRdsInstance/SubnetGroup/Default
  MysqlRdsInstanceSecurityGroup2F2213A4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for MysqlRdsInstance database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: RdsInitExample/MysqlRdsInstance/SecurityGroup/Resource
  MysqlRdsInstanceSecurityGroupfromRdsInitExampleMyRdsInitResourceInitializerFnSg1788894C330684266C7D:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from RdsInitExampleMyRdsInitResourceInitializerFnSg1788894C:3306
      FromPort: 3306
      GroupId:
        Fn::GetAtt:
          - MysqlRdsInstanceSecurityGroup2F2213A4
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - MyRdsInitResourceInitializerFnSg9210FDCF
          - GroupId
      ToPort: 3306
    Metadata:
      aws:cdk:path: RdsInitExample/MysqlRdsInstance/SecurityGroup/from RdsInitExampleMyRdsInitResourceInitializerFnSg1788894C:3306
  MysqlRdsInstance6F997E54:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "20"
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t2.large
      DBInstanceIdentifier: mysql-01
      DBName: main
      DBSubnetGroupName:
        Ref: MysqlRdsInstanceSubnetGroupB34A67DD
      Engine: mysql
      EngineVersion: "8.0"
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: MysqlRdsCredentials1A291113
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: MysqlRdsCredentials1A291113
            - :SecretString:password::}}
      Port: "3306"
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - MysqlRdsInstanceSecurityGroup2F2213A4
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: RdsInitExample/MysqlRdsInstance/Resource
  MyRdsInitResourceInitializerFnSg9210FDCF:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RdsInitExample/MyRdsInit/ResourceInitializerFnSg
      GroupName: MyRdsInitResourceInitializerFnSg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/ResourceInitializerFnSg/Resource
  MyRdsInitResourceInitializerFnServiceRole2273A9C4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/ResourceInitializerFn/ServiceRole/Resource
  MyRdsInitResourceInitializerFnServiceRoleDefaultPolicy248788AB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: MysqlRdsCredentials1A291113
        Version: "2012-10-17"
      PolicyName: MyRdsInitResourceInitializerFnServiceRoleDefaultPolicy248788AB
      Roles:
        - Ref: MyRdsInitResourceInitializerFnServiceRole2273A9C4
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/ResourceInitializerFn/ServiceRole/DefaultPolicy/Resource
  MyRdsInitResourceInitializerFnC58CC542:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Join:
            - ""
            - - Ref: AWS::AccountId
              - .dkr.ecr.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /aws-cdk/assets:0255e7d81213301ace467ab91bf802062ced8ce8e56c8d46e034bd75e6a44e08
      Role:
        Fn::GetAtt:
          - MyRdsInitResourceInitializerFnServiceRole2273A9C4
          - Arn
      FunctionName: MyRdsInit-ResInitRdsInitExample
      MemorySize: 128
      PackageType: Image
      Timeout: 120
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - MyRdsInitResourceInitializerFnSg9210FDCF
              - GroupId
        SubnetIds:
          - Ref: MyVPCcomputeSubnet1Subnet13EB6C6D
          - Ref: MyVPCcomputeSubnet2SubnetC720E999
    DependsOn:
      - MyRdsInitResourceInitializerFnServiceRoleDefaultPolicy248788AB
      - MyRdsInitResourceInitializerFnServiceRole2273A9C4
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/ResourceInitializerFn/Resource
      aws:asset:path: asset.0255e7d81213301ace467ab91bf802062ced8ce8e56c8d46e034bd75e6a44e08
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  MyRdsInitResourceInitializerFnLogRetention0E7C942E:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: MyRdsInitResourceInitializerFnC58CC542
      RetentionInDays: 150
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/ResourceInitializerFn/LogRetention/Resource
  MyRdsInitResourceInitializerFnCurrentVersionFE404927a9df81fe866c7f958ee571916f55ab6b:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: MyRdsInitResourceInitializerFnC58CC542
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/ResourceInitializerFn/CurrentVersion/Resource
  MyRdsInitAwsCustomResourceRole4C0EDED5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/AwsCustomResourceRole/Resource
  MyRdsInitAwsCustomResourceRoleDefaultPolicy5B158C64:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:lambda:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :function:*-ResInitRdsInitExample
        Version: "2012-10-17"
      PolicyName: MyRdsInitAwsCustomResourceRoleDefaultPolicy5B158C64
      Roles:
        - Ref: MyRdsInitAwsCustomResourceRole4C0EDED5
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/AwsCustomResourceRole/DefaultPolicy/Resource
  MyRdsInitAwsCustomResourceCustomResourcePolicy365391A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:Invoke
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MyRdsInitAwsCustomResourceCustomResourcePolicy365391A7
      Roles:
        - Ref: MyRdsInitAwsCustomResourceRole4C0EDED5
    DependsOn:
      - MysqlRdsInstance6F997E54
      - MysqlRdsInstanceSecurityGroupfromRdsInitExampleMyRdsInitResourceInitializerFnSg1788894C330684266C7D
      - MysqlRdsInstanceSecurityGroup2F2213A4
      - MysqlRdsInstanceSubnetGroupB34A67DD
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/AwsCustomResource/CustomResourcePolicy/Resource
  MyRdsInitAwsCustomResource9A91B634:
    Type: Custom::AWS
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        Fn::Join:
          - ""
          - - '{"service":"Lambda","action":"invoke","parameters":{"FunctionName":"'
            - Ref: MyRdsInitResourceInitializerFnC58CC542
            - '","Payload":"{\"params\":{\"config\":{\"credsSecretName\":\"/rdsinitexample/rds/creds/mysql-01\"}}}"},"physicalResourceId":{"id":"MyRdsInit-AwsSdkCall-'
            - Fn::GetAtt:
                - MyRdsInitResourceInitializerFnCurrentVersionFE404927a9df81fe866c7f958ee571916f55ab6b
                - Version
            - c15adf"}}
      Update:
        Fn::Join:
          - ""
          - - '{"service":"Lambda","action":"invoke","parameters":{"FunctionName":"'
            - Ref: MyRdsInitResourceInitializerFnC58CC542
            - '","Payload":"{\"params\":{\"config\":{\"credsSecretName\":\"/rdsinitexample/rds/creds/mysql-01\"}}}"},"physicalResourceId":{"id":"MyRdsInit-AwsSdkCall-'
            - Fn::GetAtt:
                - MyRdsInitResourceInitializerFnCurrentVersionFE404927a9df81fe866c7f958ee571916f55ab6b
                - Version
            - c15adf"}}
      InstallLatestAwsSdk: true
    DependsOn:
      - MyRdsInitAwsCustomResourceCustomResourcePolicy365391A7
      - MysqlRdsInstance6F997E54
      - MysqlRdsInstanceSecurityGroupfromRdsInitExampleMyRdsInitResourceInitializerFnSg1788894C330684266C7D
      - MysqlRdsInstanceSecurityGroup2F2213A4
      - MysqlRdsInstanceSubnetGroupB34A67DD
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: RdsInitExample/MyRdsInit/AwsCustomResource/Resource/Default
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RdsInitExample/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: RdsInitExample/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Ref: AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3Bucket821B928E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: RdsInitExample/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686
      aws:asset:is-bundled: false
      aws:asset:property: Code
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286S3BucketC526447A
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286S3VersionKey237620B5
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286S3VersionKey237620B5
      Role:
        Fn::GetAtt:
          - MyRdsInitAwsCustomResourceRole4C0EDED5
          - Arn
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 600
    DependsOn:
      - MyRdsInitAwsCustomResourceRoleDefaultPolicy5B158C64
      - MyRdsInitAwsCustomResourceRole4C0EDED5
    Metadata:
      aws:cdk:path: RdsInitExample/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STW/bMAz9Lb0rapPusOOadCsMFJvhFLnTMuupsaWApBoEhv/7JH/ELTbsxEfyiV96a725+6Lvbr7BmVemOt52xhPqbi9gjqpA9oEMqp13LBSMqAdmlJitravV7tUtlMDi28V9dTkQtChIyfkV5BQkoVirsmK961Vq2lHFunsEgRIY92gIRc1uFtuCi+X2oXQoT+TDKdV43P4VmKm94qEGt+CgRtJdTE9lR/MCVKM8SFzxd4tuGOrfmV6h2ejucDKJc8h3Kg9lY83YfHh3RYUPgi9QNrjEl1g8mzcW0tpXcgLfszyZnyBPIHiGi8rJvke4FM5cPGHadSKMk0zehy3iCoGsXK43+X8gczUhc68aaMsK4hd4c0TK2ni0H8GZedQrPiDxFJvhPoqgQfELaQa9stDqrvDjOQab+3i6Yf4RpevSCpKgWH/oPkgs5XSBJ89WPF22UQyq8TXrZ18XUVRuaMf38/vxEd/rbYiFJPF7ZQZNrmgSZWSd+bNOe+V8hfqNb9/XX/V6o9c3b2ztikJs0KIuRvsH2eUM8ScDAAA=
    Metadata:
      aws:cdk:path: RdsInitExample/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3Bucket821B928E:
    Type: String
    Description: S3 bucket for asset "c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686"
  AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A:
    Type: String
    Description: S3 key for asset version "c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686"
  AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686ArtifactHashB7ECE5F1:
    Type: String
    Description: Artifact hash for asset "c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686"
  AssetParameters105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286S3BucketC526447A:
    Type: String
    Description: S3 bucket for asset "105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286"
  AssetParameters105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286S3VersionKey237620B5:
    Type: String
    Description: S3 key for asset version "105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286"
  AssetParameters105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286ArtifactHashC17A8FEC:
    Type: String
    Description: Artifact hash for asset "105b4f39ae68785e705640aa91919e412fcba2dd454aca53412747be8d955286"
Outputs:
  RdsInitFnResponse:
    Value:
      Fn::GetAtt:
        - MyRdsInitAwsCustomResource9A91B634
        - Payload
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

